// Generated by dart2js (full emitter, strong), the Dart to JavaScript compiler version: 2.1.0.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
//
// defaultPackagesBase:
//    Override the location where `package:` uris are resolved from. By default
//    they are resolved under "packages/" from the current window location.
(function() {
  // /* ::norenaming:: */
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function map(x) {
    x = Object.create(null);
    x.x = 0;
    delete x.x;
    return x;
  }
  // The global objects start as so-called "slow objects". For V8, this
  // means that it won't try to make map transitions as we add properties
  // to these objects. Later on, we attempt to turn these objects into
  // fast objects by calling "convertToFastObject" (see
  // [emitConvertToFastObjectFunction]).
  var A = map();
  var B = map();
  var C = map();
  var D = map();
  var E = map();
  var F = map();
  var G = map();
  var H = map();
  var J = map();
  var K = map();
  var L = map();
  var M = map();
  var N = map();
  var O = map();
  var P = map();
  var Q = map();
  var R = map();
  var S = map();
  var T = map();
  var U = map();
  var V = map();
  var W = map();
  var X = map();
  var Y = map();
  var Z = map();
  function Isolate() {
  }
  init();
  // Constructors are generated at runtime.
  function setupProgram(programData, metadataOffset, typesOffset) {
    "use strict";
    function generateAccessor(fieldDescriptor, accessors, cls) {
      var fieldInformation = fieldDescriptor.split("-");
      var field = fieldInformation[0];
      var len = field.length;
      var code = field.charCodeAt(len - 1);
      var reflectable;
      if (fieldInformation.length > 1)
        reflectable = true;
      else
        reflectable = false;
      code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
      if (code) {
        var getterCode = code & 3;
        var setterCode = code >> 2;
        var accessorName = field = field.substring(0, len - 1);
        var divider = field.indexOf(":");
        if (divider > 0) {
          accessorName = field.substring(0, divider);
          field = field.substring(divider + 1);
        }
        if (getterCode) {
          var args = getterCode & 2 ? "receiver" : "";
          var receiver = getterCode & 1 ? "this" : "receiver";
          var body = "return " + receiver + "." + field;
          var property = cls + ".prototype.get$" + accessorName + "=";
          var fn = "function(" + args + "){" + body + "}";
          if (reflectable)
            accessors.push(property + "$reflectable(" + fn + ");\n");
          else
            accessors.push(property + fn + ";\n");
        }
        if (setterCode) {
          var args = setterCode & 2 ? "receiver, value" : "value";
          var receiver = setterCode & 1 ? "this" : "receiver";
          var body = receiver + "." + field + " = value";
          var property = cls + ".prototype.set$" + accessorName + "=";
          var fn = "function(" + args + "){" + body + "}";
          if (reflectable)
            accessors.push(property + "$reflectable(" + fn + ");\n");
          else
            accessors.push(property + fn + ";\n");
        }
      }
      return field;
    }
    function defineClass(name, fields) {
      var accessors = [];
      var str = "function " + name + "(";
      var comma = "", body = "";
      for (var i = 0; i < fields.length; i++) {
        var fieldDescriptor = fields[i];
        if (fieldDescriptor.charCodeAt(0) == 48) {
          fieldDescriptor = fieldDescriptor.substring(1);
          var field = generateAccessor(fieldDescriptor, accessors, name);
          body += "this." + field + " = null;\n";
        } else {
          var field = generateAccessor(fieldDescriptor, accessors, name);
          var parameter = "p_" + field;
          str += comma;
          comma = ", ";
          str += parameter;
          body += "this." + field + " = " + parameter + ";\n";
        }
      }
      if (supportsDirectProtoAccess)
        body += "this." + "$deferredAction" + "();";
      str += ") {\n" + body + "}\n";
      str += name + ".builtin$cls=\"" + name + "\";\n";
      str += "$desc=$collectedClasses." + name + "[1];\n";
      str += name + ".prototype = $desc;\n";
      if (typeof defineClass.name != "string")
        str += name + ".name=\"" + name + "\";\n";
      str += accessors.join("");
      return str;
    }
    var inheritFrom = supportsDirectProtoAccess ? function(constructor, superConstructor) {
      var prototype = constructor.prototype;
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
      prototype["$is" + constructor.name] = constructor;
      return convertToFastObject(prototype);
    } : function() {
      function tmp() {
      }
      return function(constructor, superConstructor) {
        tmp.prototype = superConstructor.prototype;
        var object = new tmp();
        convertToSlowObject(object);
        var properties = constructor.prototype;
        var members = Object.keys(properties);
        for (var i = 0; i < members.length; i++) {
          var member = members[i];
          object[member] = properties[member];
        }
        object["$is" + constructor.name] = constructor;
        object.constructor = constructor;
        constructor.prototype = object;
        return object;
      };
    }();
    function finishClasses(processedClasses) {
      var allClasses = init.allClasses;
      processedClasses.combinedConstructorFunction += "return [\n" + processedClasses.constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", processedClasses.combinedConstructorFunction)(processedClasses.collected);
      processedClasses.combinedConstructorFunction = null;
      for (var i = 0; i < constructors.length; i++) {
        var constructor = constructors[i];
        var cls = constructor.name;
        var desc = processedClasses.collected[cls];
        var globalObject = desc[0];
        desc = desc[1];
        allClasses[cls] = constructor;
        globalObject[cls] = constructor;
      }
      constructors = null;
      var finishedClasses = init.finishedClasses;
      function finishClass(cls) {
        if (finishedClasses[cls])
          return;
        finishedClasses[cls] = true;
        var superclass = processedClasses.pending[cls];
        if (superclass && superclass.indexOf("+") > 0) {
          var s = superclass.split("+");
          superclass = s[0];
          var mixinClass = s[1];
          finishClass(mixinClass);
          var mixin = allClasses[mixinClass];
          var mixinPrototype = mixin.prototype;
          var clsPrototype = allClasses[cls].prototype;
          var properties = Object.keys(mixinPrototype);
          for (var i = 0; i < properties.length; i++) {
            var d = properties[i];
            if (!hasOwnProperty.call(clsPrototype, d))
              clsPrototype[d] = mixinPrototype[d];
          }
        }
        if (!superclass || typeof superclass != "string") {
          var constructor = allClasses[cls];
          var prototype = constructor.prototype;
          prototype.constructor = constructor;
          prototype.$isObject = constructor;
          prototype.$deferredAction = function() {
          };
          return;
        }
        finishClass(superclass);
        var superConstructor = allClasses[superclass];
        if (!superConstructor)
          superConstructor = existingIsolateProperties[superclass];
        var constructor = allClasses[cls];
        var prototype = inheritFrom(constructor, superConstructor);
        if (mixinPrototype)
          prototype.$deferredAction = mixinDeferredActionHelper(mixinPrototype, prototype);
        if (Object.prototype.hasOwnProperty.call(prototype, "%")) {
          var nativeSpec = prototype["%"].split(";");
          if (nativeSpec[0]) {
            var tags = nativeSpec[0].split("|");
            for (var i = 0; i < tags.length; i++) {
              init.interceptorsByTag[tags[i]] = constructor;
              init.leafTags[tags[i]] = true;
            }
          }
          if (nativeSpec[1]) {
            tags = nativeSpec[1].split("|");
            if (nativeSpec[2]) {
              var subclasses = nativeSpec[2].split("|");
              for (var i = 0; i < subclasses.length; i++) {
                var subclass = allClasses[subclasses[i]];
                subclass.$nativeSuperclassTag = tags[0];
              }
            }
            for (i = 0; i < tags.length; i++) {
              init.interceptorsByTag[tags[i]] = constructor;
              init.leafTags[tags[i]] = false;
            }
          }
          prototype.$deferredAction();
        }
        if (prototype.$isInterceptor)
          prototype.$deferredAction();
      }
      var properties = Object.keys(processedClasses.pending);
      for (var i = 0; i < properties.length; i++)
        finishClass(properties[i]);
    }
    function finishAddStubsHelper() {
      var prototype = this;
      while (!prototype.hasOwnProperty("$deferredAction"))
        prototype = prototype.__proto__;
      delete prototype.$deferredAction;
      var properties = Object.keys(prototype);
      for (var index = 0; index < properties.length; index++) {
        var property = properties[index];
        var firstChar = property.charCodeAt(0);
        var elem;
        if (property !== "^" && property !== "$reflectable" && firstChar !== 43 && firstChar !== 42 && (elem = prototype[property]) != null && elem.constructor === Array && property !== "<>")
          addStubs(prototype, elem, property, false, []);
      }
      convertToFastObject(prototype);
      prototype = prototype.__proto__;
      prototype.$deferredAction();
    }
    function mixinDeferredActionHelper(mixinPrototype, targetPrototype) {
      var chain;
      if (targetPrototype.hasOwnProperty("$deferredAction"))
        chain = targetPrototype.$deferredAction;
      return function foo() {
        if (!supportsDirectProtoAccess)
          return;
        var prototype = this;
        while (!prototype.hasOwnProperty("$deferredAction"))
          prototype = prototype.__proto__;
        if (chain)
          prototype.$deferredAction = chain;
        else {
          delete prototype.$deferredAction;
          convertToFastObject(prototype);
        }
        mixinPrototype.$deferredAction();
        prototype.$deferredAction();
      };
    }
    function processClassData(cls, descriptor, processedClasses) {
      descriptor = convertToSlowObject(descriptor);
      var previousProperty;
      var properties = Object.keys(descriptor);
      var hasDeferredWork = false;
      var shouldDeferWork = supportsDirectProtoAccess && cls != "Object";
      for (var i = 0; i < properties.length; i++) {
        var property = properties[i];
        var firstChar = property.charCodeAt(0);
        if (property === "static") {
          processStatics(init.statics[cls] = descriptor.static, processedClasses);
          delete descriptor.static;
        } else if (firstChar === 43) {
          mangledNames[previousProperty] = property.substring(1);
          var flag = descriptor[property];
          if (flag > 0)
            descriptor[previousProperty].$reflectable = flag;
        } else if (firstChar === 42) {
          descriptor[previousProperty].$defaultValues = descriptor[property];
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods)
            descriptor.$methodsWithOptionalArguments = optionalMethods = {};
          optionalMethods[property] = previousProperty;
        } else {
          var elem = descriptor[property];
          if (property !== "^" && elem != null && elem.constructor === Array && property !== "<>")
            if (shouldDeferWork)
              hasDeferredWork = true;
            else
              addStubs(descriptor, elem, property, false, []);
          else
            previousProperty = property;
        }
      }
      if (hasDeferredWork)
        descriptor.$deferredAction = finishAddStubsHelper;
      var classData = descriptor["^"],
        split, supr,
        fields = classData;
      var s = fields.split(";");
      fields = s[1] ? s[1].split(",") : [];
      supr = s[0];
      split = supr.split(":");
      if (split.length == 2) {
        supr = split[0];
        var functionSignature = split[1];
        if (functionSignature)
          descriptor.$signature = function(s) {
            return function() {
              return init.types[s];
            };
          }(functionSignature);
      }
      if (supr)
        processedClasses.pending[cls] = supr;
      processedClasses.combinedConstructorFunction += defineClass(cls, fields);
      processedClasses.constructorsList.push(cls);
      processedClasses.collected[cls] = [globalObject, descriptor];
      classes.push(cls);
    }
    function processStatics(descriptor, processedClasses) {
      var properties = Object.keys(descriptor);
      for (var i = 0; i < properties.length; i++) {
        var property = properties[i];
        if (property === "^")
          continue;
        var element = descriptor[property];
        var firstChar = property.charCodeAt(0);
        var previousProperty;
        if (firstChar === 43) {
          mangledGlobalNames[previousProperty] = property.substring(1);
          var flag = descriptor[property];
          if (flag > 0)
            descriptor[previousProperty].$reflectable = flag;
          if (element && element.length)
            init.typeInformation[previousProperty] = element;
        } else if (firstChar === 42) {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods)
            descriptor.$methodsWithOptionalArguments = optionalMethods = {};
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
        } else if (element.constructor === Array)
          addStubs(globalObject, element, property, true, functions);
        else {
          previousProperty = property;
          processClassData(property, element, processedClasses);
        }
      }
    }
    function addStubs(prototype, array, name, isStatic, functions) {
      var index = 0,
        applyTrampolineIndex = index,
        alias = array[index],
        f;
      if (typeof alias == "string")
        f = array[++index];
      else {
        f = alias;
        alias = name;
      }
      if (typeof f == "number") {
        applyTrampolineIndex = f;
        f = array[++index];
      }
      prototype[name] = prototype[alias] = f;
      var funcs = [f];
      f.$stubName = name;
      functions.push(name);
      for (index++; index < array.length; index++) {
        f = array[index];
        if (typeof f != "function")
          break;
        if (!isStatic)
          f.$stubName = array[++index];
        funcs.push(f);
        if (f.$stubName) {
          prototype[f.$stubName] = f;
          functions.push(f.$stubName);
        }
      }
      for (var i = 0; i < funcs.length; index++, i++)
        funcs[i].$callName = array[index];
      var getterStubName = array[index];
      array = array.slice(++index);
      var requiredParameterInfo = array[0];
      var isIntercepted = (requiredParameterInfo & 1) === 1;
      requiredParameterInfo = requiredParameterInfo >> 1;
      var requiredParameterCount = requiredParameterInfo >> 1;
      var isAccessor = (requiredParameterInfo & 1) === 1;
      var isSetter = requiredParameterInfo === 3;
      var isGetter = requiredParameterInfo === 1;
      var optionalParameterInfo = array[1];
      var optionalParameterCount = optionalParameterInfo >> 1;
      var optionalParametersAreNamed = (optionalParameterInfo & 1) === 1;
      var totalParameterCount = requiredParameterCount + optionalParameterCount;
      var functionTypeIndex = array[2];
      if (typeof functionTypeIndex == "number")
        array[2] = functionTypeIndex + typesOffset;
      if (metadataOffset > 0) {
        var position = 3;
        for (var i = 0; i < optionalParameterCount; i++) {
          if (typeof array[position] == "number")
            array[position] = array[position] + metadataOffset;
          position++;
        }
        for (var i = 0; i < totalParameterCount; i++) {
          array[position] = array[position] + metadataOffset;
          position++;
        }
      }
      var unmangledNameIndex = 2 * optionalParameterCount + requiredParameterCount + 3;
      if (getterStubName) {
        f = tearOff(funcs, applyTrampolineIndex, array, isStatic, name, isIntercepted);
        prototype[name].$getter = f;
        f.$getterStub = true;
        if (isStatic)
          functions.push(getterStubName);
        prototype[getterStubName] = f;
        funcs.push(f);
        f.$stubName = getterStubName;
        f.$callName = null;
      }
      var isReflectable = array.length > unmangledNameIndex;
      if (isReflectable) {
        funcs[0].$reflectable = 1;
        funcs[0].$reflectionInfo = array;
        for (var i = 1; i < funcs.length; i++) {
          funcs[i].$reflectable = 2;
          funcs[i].$reflectionInfo = array;
        }
        var mangledNames = isStatic ? init.mangledGlobalNames : init.mangledNames;
        var unmangledName = array[unmangledNameIndex];
        var reflectionName = unmangledName;
        if (getterStubName)
          mangledNames[getterStubName] = reflectionName;
        if (isSetter)
          reflectionName += "=";
        else if (!isGetter)
          reflectionName += ":" + (requiredParameterCount + optionalParameterCount);
        mangledNames[name] = reflectionName;
        funcs[0].$reflectionName = reflectionName;
        for (var i = unmangledNameIndex + 1; i < array.length; i++)
          array[i] = array[i] + metadataOffset;
        funcs[0].$metadataIndex = unmangledNameIndex + 1;
        if (optionalParameterCount)
          prototype[unmangledName + "*"] = funcs[applyTrampolineIndex];
      }
    }
    Function.prototype.call$1 = function(a) {
      return this(a);
    };
    Function.prototype.call$2 = function(a, b) {
      return this(a, b);
    };
    Function.prototype.call$0 = function() {
      return this();
    };
    Function.prototype.call$3 = function(a, b, c) {
      return this(a, b, c);
    };
    Function.prototype.call$3$3 = function(a, b, c) {
      return this(a, b, c);
    };
    Function.prototype.call$2$2 = function(a, b) {
      return this(a, b);
    };
    Function.prototype.call$1$1 = function(a) {
      return this(a);
    };
    Function.prototype.call$4 = function(a, b, c, d) {
      return this(a, b, c, d);
    };
    Function.prototype.call$1$2 = function(a, b) {
      return this(a, b);
    };
    Function.prototype.call$1$4 = function(a, b, c, d) {
      return this(a, b, c, d);
    };
    Function.prototype.call$3$6 = function(a, b, c, d, e, f) {
      return this(a, b, c, d, e, f);
    };
    Function.prototype.call$2$5 = function(a, b, c, d, e) {
      return this(a, b, c, d, e);
    };
    Function.prototype.call$5 = function(a, b, c, d, e) {
      return this(a, b, c, d, e);
    };
    Function.prototype.call$2$4 = function(a, b, c, d) {
      return this(a, b, c, d);
    };
    Function.prototype.call$2$1 = function(a) {
      return this(a);
    };
    Function.prototype.call$3$1 = function(a) {
      return this(a);
    };
    Function.prototype.call$3$4 = function(a, b, c, d) {
      return this(a, b, c, d);
    };
    Function.prototype.call$2$3 = function(a, b, c) {
      return this(a, b, c);
    };
    function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {
      return isIntercepted ? new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "(receiver) {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);" + "return new c(this, funcs[0], receiver, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null) : new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "() {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);" + "return new c(this, funcs[0], null, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null);
    }
    function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {
      var cache = null;
      return isStatic ? function() {
        if (cache === null)
          cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;
        return cache;
      } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);
    }
    var functionCounter = 0;
    if (!init.libraries)
      init.libraries = [];
    if (!init.mangledNames)
      init.mangledNames = map();
    if (!init.mangledGlobalNames)
      init.mangledGlobalNames = map();
    if (!init.statics)
      init.statics = map();
    if (!init.typeInformation)
      init.typeInformation = map();
    var libraries = init.libraries;
    var mangledNames = init.mangledNames;
    var mangledGlobalNames = init.mangledGlobalNames;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var length = programData.length;
    var processedClasses = map();
    processedClasses.collected = map();
    processedClasses.pending = map();
    processedClasses.constructorsList = [];
    processedClasses.combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
    for (var i = 0; i < length; i++) {
      var data = programData[i];
      var name = data[0];
      var uri = data[1];
      var metadata = data[2];
      var globalObject = data[3];
      var descriptor = data[4];
      var isRoot = !!data[5];
      var fields = descriptor && descriptor["^"];
      if (fields instanceof Array)
        fields = fields[0];
      var classes = [];
      var functions = [];
      processStatics(descriptor, processedClasses);
      libraries.push([name, uri, classes, functions, metadata, fields, isRoot, globalObject]);
    }
    finishClasses(processedClasses);
  }
  Isolate.functionThatReturnsNull = function() {
  };
  var dart = [["_foreign_helper", "dart:_foreign_helper",, H, {
    "^": "",
    JS_CONST: {
      "^": "Object;code"
    }
  }], ["_interceptors", "dart:_interceptors",, J, {
    "^": "",
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var record, proto, objectProto, $constructor, interceptor;
      record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
      }
      $constructor = object.constructor;
      interceptor = $constructor == null ? null : $constructor[$.$get$JS_INTEROP_INTERCEPTOR_TAG()];
      if (interceptor != null)
        return interceptor;
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return C.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return C.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        Object.defineProperty($constructor, $.$get$JS_INTEROP_INTERCEPTOR_TAG(), {value: C.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return C.UnknownJavaScriptObject_methods;
      }
      return C.UnknownJavaScriptObject_methods;
    },
    Interceptor: {
      "^": "Object;",
      $eq: function(receiver, other) {
        return receiver === other;
      },
      get$hashCode: function(receiver) {
        return H.Primitives_objectHashCode(receiver);
      },
      toString$0: ["super$Interceptor$toString", function(receiver) {
        return "Instance of '" + H.Primitives_objectTypeName(receiver) + "'";
      }],
      noSuchMethod$1: ["super$Interceptor$noSuchMethod", function(receiver, invocation) {
        H.interceptedTypeCheck(invocation, "$isInvocation");
        throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
      }, null, "get$noSuchMethod", 5, 0, null, 21],
      "%": "ANGLEInstancedArrays|ANGLE_instanced_arrays|AnimationEffectReadOnly|AnimationEffectTiming|AnimationEffectTimingReadOnly|AnimationTimeline|AnimationWorkletGlobalScope|AudioListener|AudioParam|AudioTrack|AudioWorkletGlobalScope|AudioWorkletProcessor|AuthenticatorAssertionResponse|AuthenticatorAttestationResponse|AuthenticatorResponse|BackgroundFetchFetch|BackgroundFetchManager|BackgroundFetchSettledFetch|BarProp|BarcodeDetector|Bluetooth|BluetoothCharacteristicProperties|BluetoothRemoteGATTDescriptor|BluetoothRemoteGATTServer|BluetoothRemoteGATTService|BluetoothUUID|Body|BudgetService|BudgetState|CSS|CSSVariableReferenceValue|Cache|CacheStorage|CanvasGradient|CanvasPattern|CanvasRenderingContext2D|Client|Clients|CookieStore|Coordinates|CredentialsContainer|Crypto|CryptoKey|CustomElementRegistry|DOMFileSystemSync|DOMMatrix|DOMMatrixReadOnly|DOMParser|DOMQuad|DOMStringMap|DataTransfer|DataTransferItem|Database|DeprecatedStorageInfo|DeprecatedStorageQuota|DeprecationReport|DetectedBarcode|DetectedFace|DetectedText|DeviceRotationRate|DirectoryEntrySync|DirectoryReader|DirectoryReaderSync|DocumentOrShadowRoot|DocumentTimeline|EXTBlendMinMax|EXTColorBufferFloat|EXTColorBufferHalfFloat|EXTDisjointTimerQuery|EXTDisjointTimerQueryWebGL2|EXTFragDepth|EXTShaderTextureLOD|EXTTextureFilterAnisotropic|EXT_blend_minmax|EXT_frag_depth|EXT_sRGB|EXT_shader_texture_lod|EXT_texture_filter_anisotropic|EXTsRGB|EntrySync|External|FaceDetector|FileEntrySync|FileReaderSync|FileWriterSync|FontFaceSource|FormData|GamepadButton|GamepadPose|Geolocation|HTMLAllCollection|HTMLHyperlinkElementUtils|Headers|IDBFactory|IDBObserver|IDBObserverChanges|IdleDeadline|ImageBitmapRenderingContext|ImageCapture|InputDeviceCapabilities|IntersectionObserver|IntersectionObserverEntry|InterventionReport|Iterator|KeyframeEffect|KeyframeEffectReadOnly|MediaCapabilities|MediaCapabilitiesInfo|MediaDeviceInfo|MediaError|MediaKeyStatusMap|MediaKeySystemAccess|MediaKeys|MediaKeysPolicy|MediaMetadata|MediaSession|MediaSettingsRange|MemoryInfo|MessageChannel|Metadata|Mojo|MojoHandle|MojoWatcher|MutationObserver|MutationRecord|NFC|NavigationPreloadManager|Navigator|NavigatorAutomationInformation|NavigatorConcurrentHardware|NavigatorCookies|NodeFilter|NodeIterator|NonDocumentTypeChildNode|NonElementParentNode|NoncedElement|OESElementIndexUint|OESStandardDerivatives|OESTextureFloat|OESTextureFloatLinear|OESTextureHalfFloat|OESTextureHalfFloatLinear|OESVertexArrayObject|OES_element_index_uint|OES_standard_derivatives|OES_texture_float|OES_texture_float_linear|OES_texture_half_float|OES_texture_half_float_linear|OES_vertex_array_object|OffscreenCanvasRenderingContext2D|PagePopupController|PaintRenderingContext2D|PaintWorkletGlobalScope|Path2D|PaymentAddress|PaymentInstruments|PaymentManager|PaymentResponse|PerformanceNavigation|PerformanceObserver|PerformanceObserverEntryList|PerformanceTiming|PeriodicWave|Permissions|PhotoCapabilities|Position|PositionError|Presentation|PresentationReceiver|PushManager|PushMessageData|PushSubscription|PushSubscriptionOptions|RTCCertificate|RTCIceCandidate|RTCLegacyStatsReport|RTCRtpContributingSource|RTCRtpReceiver|RTCRtpSender|RTCSessionDescription|RTCStatsResponse|RelatedApplication|Report|ReportBody|ReportingObserver|Request|ResizeObserver|ResizeObserverEntry|Response|SQLError|SQLResultSet|SQLTransaction|SVGAngle|SVGAnimatedAngle|SVGAnimatedBoolean|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedNumberList|SVGAnimatedPreserveAspectRatio|SVGAnimatedRect|SVGAnimatedString|SVGAnimatedTransformList|SVGMatrix|SVGPreserveAspectRatio|SVGUnitTypes|ScrollState|ScrollTimeline|Selection|SharedArrayBuffer|SpeechRecognitionAlternative|StaticRange|StorageManager|StyleMedia|StylePropertyMap|StylePropertyMapReadonly|SubtleCrypto|SyncManager|TextDetector|TrackDefault|TreeWalker|TrustedHTML|TrustedScriptURL|TrustedURL|URLSearchParams|USBAlternateInterface|USBConfiguration|USBDevice|USBEndpoint|USBInTransferResult|USBInterface|USBIsochronousInTransferPacket|USBIsochronousInTransferResult|USBIsochronousOutTransferPacket|USBIsochronousOutTransferResult|USBOutTransferResult|UnderlyingSourceBase|VRCoordinateSystem|VRDisplayCapabilities|VREyeParameters|VRFrameData|VRFrameOfReference|VRPose|VRStageBounds|VRStageParameters|ValidityState|VideoPlaybackQuality|VideoTrack|WEBGL_compressed_texture_atc|WEBGL_compressed_texture_etc1|WEBGL_compressed_texture_pvrtc|WEBGL_compressed_texture_s3tc|WEBGL_debug_renderer_info|WEBGL_debug_shaders|WEBGL_depth_texture|WEBGL_draw_buffers|WEBGL_lose_context|WebGL|WebGL2RenderingContext|WebGL2RenderingContextBase|WebGLBuffer|WebGLCanvas|WebGLColorBufferFloat|WebGLCompressedTextureASTC|WebGLCompressedTextureATC|WebGLCompressedTextureETC|WebGLCompressedTextureETC1|WebGLCompressedTexturePVRTC|WebGLCompressedTextureS3TC|WebGLCompressedTextureS3TCsRGB|WebGLDebugRendererInfo|WebGLDebugShaders|WebGLDepthTexture|WebGLDrawBuffers|WebGLExtensionLoseContext|WebGLFramebuffer|WebGLGetBufferSubDataAsync|WebGLLoseContext|WebGLProgram|WebGLQuery|WebGLRenderbuffer|WebGLRenderingContext|WebGLSampler|WebGLShader|WebGLShaderPrecisionFormat|WebGLSync|WebGLTexture|WebGLTimerQueryEXT|WebGLTransformFeedback|WebGLUniformLocation|WebGLVertexArrayObject|WebGLVertexArrayObjectOES|WebKitMutationObserver|WindowClient|WorkerLocation|WorkerNavigator|Worklet|WorkletAnimation|WorkletGlobalScope|XMLSerializer|XPathEvaluator|XPathExpression|XPathNSResolver|XPathResult|XSLTProcessor|mozRTCIceCandidate|mozRTCSessionDescription"
    },
    JSBool: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $and: function(receiver, other) {
        return H.checkBool(H.boolTypeCheck(other)) && receiver;
      },
      get$hashCode: function(receiver) {
        return receiver ? 519018 : 218159;
      },
      $isbool: 1
    },
    JSNull: {
      "^": "Interceptor;",
      $eq: function(receiver, other) {
        return null == other;
      },
      toString$0: function(receiver) {
        return "null";
      },
      get$hashCode: function(receiver) {
        return 0;
      },
      noSuchMethod$1: [function(receiver, invocation) {
        return this.super$Interceptor$noSuchMethod(receiver, H.interceptedTypeCheck(invocation, "$isInvocation"));
      }, null, "get$noSuchMethod", 5, 0, null, 21],
      $isNull: 1
    },
    JavaScriptObject: {
      "^": "Interceptor;",
      get$hashCode: function(receiver) {
        return 0;
      },
      toString$0: ["super$JavaScriptObject$toString", function(receiver) {
        return String(receiver);
      }],
      get$name: function(obj) {
        return obj.name;
      },
      $isJsTestability: 1,
      $isCKEditorInstance: 1
    },
    PlainJavaScriptObject: {
      "^": "JavaScriptObject;"
    },
    UnknownJavaScriptObject: {
      "^": "JavaScriptObject;"
    },
    JavaScriptFunction: {
      "^": "JavaScriptObject;",
      toString$0: function(receiver) {
        var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
        if (dartClosure == null)
          return this.super$JavaScriptObject$toString(receiver);
        return "JavaScript function for " + H.S(J.toString$0$(dartClosure));
      },
      $signature: function() {
        return {func: 1, opt: [,,,,,,,,,,,,,,,,]};
      },
      $isFunction: 1
    },
    JSArray: {
      "^": "Interceptor;$ti",
      add$1: function(receiver, value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("add"));
        receiver.push(value);
      },
      removeAt$1: function(receiver, index) {
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeAt"));
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.argumentErrorValue(index));
        if (index < 0 || index >= receiver.length)
          throw H.wrapException(P.RangeError$value(index, null, null));
        return receiver.splice(index, 1)[0];
      },
      insert$2: function(receiver, index, value) {
        var t1;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("insert"));
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.argumentErrorValue(index));
        t1 = receiver.length;
        if (index > t1)
          throw H.wrapException(P.RangeError$value(index, null, null));
        receiver.splice(index, 0, value);
      },
      insertAll$2: function(receiver, index, iterable) {
        var insertionLength, end;
        H.assertSubtype(iterable, "$isIterable", [H.getTypeArgumentByIndex(receiver, 0)], "$asIterable");
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("insertAll"));
        P.RangeError_checkValueInInterval(index, 0, receiver.length, "index", null);
        if (!J.getInterceptor$(iterable).$isEfficientLengthIterable) {
          iterable.toString;
          iterable = H.setRuntimeTypeInfo(iterable.slice(0), [H.getTypeArgumentByIndex(iterable, 0)]);
        }
        insertionLength = iterable.length;
        this.set$length(receiver, receiver.length + insertionLength);
        end = index + insertionLength;
        this.setRange$4(receiver, end, receiver.length, receiver, index);
        this.setRange$3(receiver, index, end, iterable);
      },
      remove$1: function(receiver, element) {
        var i;
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("remove"));
        for (i = 0; i < receiver.length; ++i)
          if (J.$eq$(receiver[i], element)) {
            receiver.splice(i, 1);
            return true;
          }
        return false;
      },
      where$1: function(receiver, f) {
        var t1 = H.getTypeArgumentByIndex(receiver, 0);
        return new H.WhereIterable(receiver, H.functionTypeCheck(f, {func: 1, ret: P.bool, args: [t1]}), [t1]);
      },
      addAll$1: function(receiver, collection) {
        var t1;
        H.assertSubtype(collection, "$isIterable", [H.getTypeArgumentByIndex(receiver, 0)], "$asIterable");
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("addAll"));
        for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
          receiver.push(t1.get$current(t1));
      },
      forEach$1: function(receiver, f) {
        var end, i;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(receiver, 0)]});
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          f.call$1(receiver[i]);
          if (receiver.length !== end)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
      },
      map$1$1: function(receiver, f, $T) {
        var t1 = H.getTypeArgumentByIndex(receiver, 0);
        return new H.MappedListIterable(receiver, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      },
      join$1: function(receiver, separator) {
        var list, i;
        list = new Array(receiver.length);
        list.fixed$length = Array;
        for (i = 0; i < receiver.length; ++i)
          this.$indexSet(list, i, H.S(receiver[i]));
        return list.join(separator);
      },
      skip$1: function(receiver, n) {
        return H.SubListIterable$(receiver, H.intTypeCheck(n), null, H.getTypeArgumentByIndex(receiver, 0));
      },
      reduce$1: function(receiver, combine) {
        var t1, $length, value, i;
        t1 = H.getTypeArgumentByIndex(receiver, 0);
        H.functionTypeCheck(combine, {func: 1, ret: t1, args: [t1, t1]});
        $length = receiver.length;
        if ($length === 0)
          throw H.wrapException(H.IterableElementError_noElement());
        if (0 >= $length)
          return H.ioore(receiver, 0);
        value = receiver[0];
        for (i = 1; i < $length; ++i) {
          value = combine.call$2(value, receiver[i]);
          if ($length !== receiver.length)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return value;
      },
      fold$1$2: function(receiver, initialValue, combine, $T) {
        var $length, value, i;
        H.assertSubtypeOfRuntimeType(initialValue, $T);
        H.functionTypeCheck(combine, {func: 1, ret: $T, args: [$T, H.getTypeArgumentByIndex(receiver, 0)]});
        $length = receiver.length;
        for (value = initialValue, i = 0; i < $length; ++i) {
          value = combine.call$2(value, receiver[i]);
          if (receiver.length !== $length)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return value;
      },
      firstWhere$2$orElse: function(receiver, test, orElse) {
        var t1, end, i, element;
        t1 = H.getTypeArgumentByIndex(receiver, 0);
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]});
        H.functionTypeCheck(orElse, {func: 1, ret: t1});
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          element = receiver[i];
          if (test.call$1(element))
            return element;
          if (receiver.length !== end)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        if (orElse != null)
          return orElse.call$0();
        throw H.wrapException(H.IterableElementError_noElement());
      },
      firstWhere$1: function($receiver, test) {
        return this.firstWhere$2$orElse($receiver, test, null);
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      sublist$2: function(receiver, start, end) {
        if (start < 0 || start > receiver.length)
          throw H.wrapException(P.RangeError$range(start, 0, receiver.length, "start", null));
        if (end == null)
          end = receiver.length;
        else if (end < start || end > receiver.length)
          throw H.wrapException(P.RangeError$range(end, start, receiver.length, "end", null));
        if (start === end)
          return H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(receiver, 0)]);
        return H.setRuntimeTypeInfo(receiver.slice(start, end), [H.getTypeArgumentByIndex(receiver, 0)]);
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      get$first: function(receiver) {
        if (receiver.length > 0)
          return receiver[0];
        throw H.wrapException(H.IterableElementError_noElement());
      },
      get$last: function(receiver) {
        var t1 = receiver.length;
        if (t1 > 0)
          return receiver[t1 - 1];
        throw H.wrapException(H.IterableElementError_noElement());
      },
      get$single: function(receiver) {
        var t1 = receiver.length;
        if (t1 === 1) {
          if (0 >= t1)
            return H.ioore(receiver, 0);
          return receiver[0];
        }
        if (t1 === 0)
          throw H.wrapException(H.IterableElementError_noElement());
        throw H.wrapException(H.IterableElementError_tooMany());
      },
      removeRange$2: function(receiver, start, end) {
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeRange"));
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        receiver.splice(start, end - start);
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        var t1, $length, t2, otherStart, otherList, i;
        t1 = H.getTypeArgumentByIndex(receiver, 0);
        H.assertSubtype(iterable, "$isIterable", [t1], "$asIterable");
        if (!!receiver.immutable$list)
          H.throwExpression(P.UnsupportedError$("setRange"));
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        if (typeof end !== "number")
          return end.$sub();
        if (typeof start !== "number")
          return H.iae(start);
        $length = end - start;
        if ($length === 0)
          return;
        if (skipCount < 0)
          H.throwExpression(P.RangeError$range(skipCount, 0, null, "skipCount", null));
        t2 = J.getInterceptor$(iterable);
        if (!!t2.$isList) {
          H.assertSubtype(iterable, "$isList", [t1], "$asList");
          otherStart = skipCount;
          otherList = iterable;
        } else {
          otherList = t2.skip$1(iterable, skipCount).toList$1$growable(0, false);
          otherStart = 0;
        }
        t1 = J.getInterceptor$asx(otherList);
        t2 = t1.get$length(otherList);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (otherStart + $length > t2)
          throw H.wrapException(H.IterableElementError_tooFew());
        if (otherStart < start)
          for (i = $length - 1; i >= 0; --i)
            receiver[start + i] = t1.$index(otherList, otherStart + i);
        else
          for (i = 0; i < $length; ++i)
            receiver[start + i] = t1.$index(otherList, otherStart + i);
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      any$1: function(receiver, test) {
        var end, i;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          if (test.call$1(receiver[i]))
            return true;
          if (receiver.length !== end)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return false;
      },
      every$1: function(receiver, test) {
        var end, i;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          if (!test.call$1(receiver[i]))
            return false;
          if (receiver.length !== end)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return true;
      },
      sort$1: [function(receiver, compare) {
        var t1 = H.getTypeArgumentByIndex(receiver, 0);
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [t1, t1]});
        if (!!receiver.immutable$list)
          H.throwExpression(P.UnsupportedError$("sort"));
        H.Sort_sort(receiver, compare == null ? J._interceptors_JSArray__compareAny$closure() : compare, t1);
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, function() {
        return H.computeSignature(function(E) {
          return {func: 1, ret: -1, opt: [{func: 1, ret: P.int, args: [E, E]}]};
        }, this.$receiver, "JSArray");
      }],
      indexOf$2: function(receiver, element, start) {
        var i;
        if (start >= receiver.length)
          return -1;
        for (i = start; i < receiver.length; ++i)
          if (J.$eq$(receiver[i], element))
            return i;
        return -1;
      },
      indexOf$1: function($receiver, element) {
        return this.indexOf$2($receiver, element, 0);
      },
      contains$1: function(receiver, other) {
        var i;
        for (i = 0; i < receiver.length; ++i)
          if (J.$eq$(receiver[i], other))
            return true;
        return false;
      },
      get$isEmpty: function(receiver) {
        return receiver.length === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.length !== 0;
      },
      toString$0: function(receiver) {
        return P.IterableBase_iterableToFullString(receiver, "[", "]");
      },
      get$iterator: function(receiver) {
        return new J.ArrayIterator(receiver, receiver.length, 0, [H.getTypeArgumentByIndex(receiver, 0)]);
      },
      get$hashCode: function(receiver) {
        return H.Primitives_objectHashCode(receiver);
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      set$length: function(receiver, newLength) {
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("set length"));
        if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
          throw H.wrapException(P.ArgumentError$value(newLength, "newLength", null));
        if (newLength < 0)
          throw H.wrapException(P.RangeError$range(newLength, 0, null, "newLength", null));
        receiver.length = newLength;
      },
      $index: function(receiver, index) {
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
        if (!!receiver.immutable$list)
          H.throwExpression(P.UnsupportedError$("indexed set"));
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        receiver[index] = value;
      },
      $add: function(receiver, other) {
        var t1, t2, t3, totalLength;
        t1 = [H.getTypeArgumentByIndex(receiver, 0)];
        H.assertSubtype(other, "$isList", t1, "$asList");
        t2 = receiver.length;
        t3 = J.get$length$asx(other);
        if (typeof t3 !== "number")
          return H.iae(t3);
        totalLength = t2 + t3;
        t1 = H.setRuntimeTypeInfo([], t1);
        this.set$length(t1, totalLength);
        this.setRange$3(t1, 0, receiver.length, receiver);
        this.setRange$3(t1, receiver.length, totalLength, other);
        return t1;
      },
      $isEfficientLengthIterable: 1,
      $isIterable: 1,
      $isList: 1,
      static: {
        JSArray_JSArray$fixed: function($length, $E) {
          if (typeof $length !== "number" || Math.floor($length) !== $length)
            throw H.wrapException(P.ArgumentError$value($length, "length", "is not an integer"));
          if ($length < 0 || $length > 4294967295)
            throw H.wrapException(P.RangeError$range($length, 0, 4294967295, "length", null));
          return J.JSArray_JSArray$markFixed(new Array($length), $E);
        },
        JSArray_JSArray$markFixed: function(allocation, $E) {
          return J.JSArray_markFixedList(H.setRuntimeTypeInfo(allocation, [$E]));
        },
        JSArray_markFixedList: function(list) {
          H.listTypeCheck(list);
          list.fixed$length = Array;
          return list;
        },
        JSArray_markUnmodifiableList: function(list) {
          list.fixed$length = Array;
          list.immutable$list = Array;
          return list;
        },
        JSArray__compareAny: [function(a, b) {
          return J.compareTo$1$ns(H.numberOrStringSuperNativeTypeCheck(a, "$isComparable"), H.numberOrStringSuperNativeTypeCheck(b, "$isComparable"));
        }, "call$2", "_interceptors_JSArray__compareAny$closure", 8, 0, 54]
      }
    },
    JSUnmodifiableArray: {
      "^": "JSArray;$ti"
    },
    ArrayIterator: {
      "^": "Object;_iterable,_length,__interceptors$_index,0__interceptors$_current,$ti",
      set$__interceptors$_current: function(_current) {
        this.__interceptors$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this.__interceptors$_current;
      },
      moveNext$0: function() {
        var t1, $length, t2;
        t1 = this._iterable;
        $length = t1.length;
        if (this._length !== $length)
          throw H.wrapException(H.throwConcurrentModificationError(t1));
        t2 = this.__interceptors$_index;
        if (t2 >= $length) {
          this.set$__interceptors$_current(null);
          return false;
        }
        this.set$__interceptors$_current(t1[t2]);
        ++this.__interceptors$_index;
        return true;
      },
      $isIterator: 1
    },
    JSNumber: {
      "^": "Interceptor;",
      compareTo$1: function(receiver, b) {
        var bIsNegative;
        H.numTypeCheck(b);
        if (typeof b !== "number")
          throw H.wrapException(H.argumentErrorValue(b));
        if (receiver < b)
          return -1;
        else if (receiver > b)
          return 1;
        else if (receiver === b) {
          if (receiver === 0) {
            bIsNegative = this.get$isNegative(b);
            if (this.get$isNegative(receiver) === bIsNegative)
              return 0;
            if (this.get$isNegative(receiver))
              return -1;
            return 1;
          }
          return 0;
        } else if (isNaN(receiver)) {
          if (isNaN(b))
            return 0;
          return 1;
        } else
          return -1;
      },
      get$isNegative: function(receiver) {
        return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
      },
      toInt$0: function(receiver) {
        var t1;
        if (receiver >= -2147483648 && receiver <= 2147483647)
          return receiver | 0;
        if (isFinite(receiver)) {
          t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
          return t1 + 0;
        }
        throw H.wrapException(P.UnsupportedError$("" + receiver + ".toInt()"));
      },
      round$0: function(receiver) {
        if (receiver > 0) {
          if (receiver !== 1 / 0)
            return Math.round(receiver);
        } else if (receiver > -1 / 0)
          return 0 - Math.round(0 - receiver);
        throw H.wrapException(P.UnsupportedError$("" + receiver + ".round()"));
      },
      clamp$2: function(receiver, lowerLimit, upperLimit) {
        if (C.JSInt_methods.compareTo$1(lowerLimit, upperLimit) > 0)
          throw H.wrapException(H.argumentErrorValue(lowerLimit));
        if (this.compareTo$1(receiver, lowerLimit) < 0)
          return lowerLimit;
        if (this.compareTo$1(receiver, upperLimit) > 0)
          return upperLimit;
        return receiver;
      },
      toStringAsFixed$1: function(receiver, fractionDigits) {
        var result;
        if (fractionDigits > 20)
          throw H.wrapException(P.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
        result = receiver.toFixed(fractionDigits);
        if (receiver === 0 && this.get$isNegative(receiver))
          return "-" + result;
        return result;
      },
      toRadixString$1: function(receiver, radix) {
        var result, match, t1, exponent;
        if (radix < 2 || radix > 36)
          throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
        result = receiver.toString(radix);
        if (C.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
          return result;
        match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
        if (match == null)
          H.throwExpression(P.UnsupportedError$("Unexpected toString result: " + result));
        t1 = match.length;
        if (1 >= t1)
          return H.ioore(match, 1);
        result = match[1];
        if (3 >= t1)
          return H.ioore(match, 3);
        exponent = +match[3];
        t1 = match[2];
        if (t1 != null) {
          result += t1;
          exponent -= t1.length;
        }
        return result + C.JSString_methods.$mul("0", exponent);
      },
      toString$0: function(receiver) {
        if (receiver === 0 && 1 / receiver < 0)
          return "-0.0";
        else
          return "" + receiver;
      },
      get$hashCode: function(receiver) {
        return receiver & 0x1FFFFFFF;
      },
      $add: function(receiver, other) {
        H.numTypeCheck(other);
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver + other;
      },
      $sub: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver - other;
      },
      $mod: function(receiver, other) {
        var result = receiver % other;
        if (result === 0)
          return 0;
        if (result > 0)
          return result;
        if (other < 0)
          return result - other;
        else
          return result + other;
      },
      $tdiv: function(receiver, other) {
        if ((receiver | 0) === receiver)
          if (other >= 1 || other < -1)
            return receiver / other | 0;
        return this._tdivSlow$1(receiver, other);
      },
      _tdivFast$1: function(receiver, other) {
        return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
      },
      _tdivSlow$1: function(receiver, other) {
        var quotient = receiver / other;
        if (quotient >= -2147483648 && quotient <= 2147483647)
          return quotient | 0;
        if (quotient > 0) {
          if (quotient !== 1 / 0)
            return Math.floor(quotient);
        } else if (quotient > -1 / 0)
          return Math.ceil(quotient);
        throw H.wrapException(P.UnsupportedError$("Result of truncating division is " + H.S(quotient) + ": " + H.S(receiver) + " ~/ " + other));
      },
      _shrOtherPositive$1: function(receiver, other) {
        var t1;
        if (receiver > 0)
          t1 = this._shrBothPositive$1(receiver, other);
        else {
          t1 = other > 31 ? 31 : other;
          t1 = receiver >> t1 >>> 0;
        }
        return t1;
      },
      _shrBothPositive$1: function(receiver, other) {
        return other > 31 ? 0 : receiver >>> other;
      },
      $and: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return (receiver & other) >>> 0;
      },
      $or: function(receiver, other) {
        H.numTypeCheck(other);
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return (receiver | other) >>> 0;
      },
      $lt: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver < other;
      },
      $gt: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver > other;
      },
      $isComparable: 1,
      $asComparable: function() {
        return [P.num];
      },
      $isdouble: 1,
      $isnum: 1
    },
    JSInt: {
      "^": "JSNumber;",
      $isint: 1
    },
    JSDouble: {
      "^": "JSNumber;"
    },
    JSString: {
      "^": "Interceptor;",
      codeUnitAt$1: function(receiver, index) {
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver.charCodeAt(index);
      },
      _codeUnitAt$1: function(receiver, index) {
        if (index >= receiver.length)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        return receiver.charCodeAt(index);
      },
      allMatches$2: function(receiver, string, start) {
        var t1;
        if (typeof string !== "string")
          H.throwExpression(H.argumentErrorValue(string));
        t1 = string.length;
        if (start > t1)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return new H._StringAllMatchesIterable(string, receiver, start);
      },
      allMatches$1: function($receiver, string) {
        return this.allMatches$2($receiver, string, 0);
      },
      matchAsPrefix$2: function(receiver, string, start) {
        var t1, i;
        if (typeof start !== "number")
          return start.$lt();
        if (start < 0 || start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        t1 = receiver.length;
        if (start + t1 > string.length)
          return;
        for (i = 0; i < t1; ++i)
          if (this.codeUnitAt$1(string, start + i) !== this._codeUnitAt$1(receiver, i))
            return;
        return new H.StringMatch(start, string, receiver);
      },
      $add: function(receiver, other) {
        H.stringTypeCheck(other);
        if (typeof other !== "string")
          throw H.wrapException(P.ArgumentError$value(other, null, null));
        return receiver + other;
      },
      split$1: function(receiver, pattern) {
        if (pattern == null)
          H.throwExpression(H.argumentErrorValue(pattern));
        if (typeof pattern === "string")
          return H.setRuntimeTypeInfo(receiver.split(pattern), [P.String]);
        else if (pattern instanceof H.JSSyntaxRegExp && pattern.get$_nativeAnchoredVersion().exec("").length - 2 === 0)
          return H.setRuntimeTypeInfo(receiver.split(pattern._nativeRegExp), [P.String]);
        else
          return this._defaultSplit$1(receiver, pattern);
      },
      replaceRange$3: function(receiver, start, end, replacement) {
        if (typeof start !== "number" || Math.floor(start) !== start)
          H.throwExpression(H.argumentErrorValue(start));
        end = P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        if (typeof end !== "number" || Math.floor(end) !== end)
          H.throwExpression(H.argumentErrorValue(end));
        return H.stringReplaceRangeUnchecked(receiver, start, end, replacement);
      },
      _defaultSplit$1: function(receiver, pattern) {
        var result, t1, start, $length, match, matchStart, matchEnd;
        result = H.setRuntimeTypeInfo([], [P.String]);
        for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), start = 0, $length = 1; t1.moveNext$0();) {
          match = t1.get$current(t1);
          matchStart = match.get$start(match);
          matchEnd = match.get$end(match);
          if (typeof matchStart !== "number")
            return H.iae(matchStart);
          $length = matchEnd - matchStart;
          if ($length === 0 && start === matchStart)
            continue;
          C.JSArray_methods.add$1(result, this.substring$2(receiver, start, matchStart));
          start = matchEnd;
        }
        if (start < receiver.length || $length > 0)
          C.JSArray_methods.add$1(result, this.substring$1(receiver, start));
        return result;
      },
      startsWith$2: function(receiver, pattern, index) {
        var endIndex;
        if (typeof index !== "number" || Math.floor(index) !== index)
          H.throwExpression(H.argumentErrorValue(index));
        if (typeof index !== "number")
          return index.$lt();
        if (index < 0 || index > receiver.length)
          throw H.wrapException(P.RangeError$range(index, 0, receiver.length, null, null));
        if (typeof pattern === "string") {
          endIndex = index + pattern.length;
          if (endIndex > receiver.length)
            return false;
          return pattern === receiver.substring(index, endIndex);
        }
        return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
      },
      startsWith$1: function($receiver, pattern) {
        return this.startsWith$2($receiver, pattern, 0);
      },
      substring$2: function(receiver, startIndex, endIndex) {
        if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
          H.throwExpression(H.argumentErrorValue(startIndex));
        if (endIndex == null)
          endIndex = receiver.length;
        if (typeof startIndex !== "number")
          return startIndex.$lt();
        if (startIndex < 0)
          throw H.wrapException(P.RangeError$value(startIndex, null, null));
        if (startIndex > endIndex)
          throw H.wrapException(P.RangeError$value(startIndex, null, null));
        if (endIndex > receiver.length)
          throw H.wrapException(P.RangeError$value(endIndex, null, null));
        return receiver.substring(startIndex, endIndex);
      },
      substring$1: function($receiver, startIndex) {
        return this.substring$2($receiver, startIndex, null);
      },
      toLowerCase$0: function(receiver) {
        return receiver.toLowerCase();
      },
      trim$0: function(receiver) {
        var result, endIndex, startIndex, t1, endIndex0;
        result = receiver.trim();
        endIndex = result.length;
        if (endIndex === 0)
          return result;
        if (this._codeUnitAt$1(result, 0) === 133) {
          startIndex = J.JSString__skipLeadingWhitespace(result, 1);
          if (startIndex === endIndex)
            return "";
        } else
          startIndex = 0;
        t1 = endIndex - 1;
        endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
        if (startIndex === 0 && endIndex0 === endIndex)
          return result;
        return result.substring(startIndex, endIndex0);
      },
      $mul: function(receiver, times) {
        var s, result;
        if (0 >= times)
          return "";
        if (times === 1 || receiver.length === 0)
          return receiver;
        if (times !== times >>> 0)
          throw H.wrapException(C.C_OutOfMemoryError);
        for (s = receiver, result = ""; true;) {
          if ((times & 1) === 1)
            result = s + result;
          times = times >>> 1;
          if (times === 0)
            break;
          s += s;
        }
        return result;
      },
      padLeft$2: function(receiver, width, padding) {
        var delta = width - receiver.length;
        if (delta <= 0)
          return receiver;
        return this.$mul(padding, delta) + receiver;
      },
      contains$2: function(receiver, other, startIndex) {
        if (other == null)
          H.throwExpression(H.argumentErrorValue(other));
        if (startIndex > receiver.length)
          throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length, null, null));
        return H.stringContainsUnchecked(receiver, other, startIndex);
      },
      contains$1: function($receiver, other) {
        return this.contains$2($receiver, other, 0);
      },
      compareTo$1: function(receiver, other) {
        var t1;
        H.stringTypeCheck(other);
        if (typeof other !== "string")
          throw H.wrapException(H.argumentErrorValue(other));
        if (receiver === other)
          t1 = 0;
        else
          t1 = receiver < other ? -1 : 1;
        return t1;
      },
      toString$0: function(receiver) {
        return receiver;
      },
      get$hashCode: function(receiver) {
        var t1, hash, i;
        for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
          hash = 536870911 & hash + receiver.charCodeAt(i);
          hash = 536870911 & hash + ((524287 & hash) << 10);
          hash ^= hash >> 6;
        }
        hash = 536870911 & hash + ((67108863 & hash) << 3);
        hash ^= hash >> 11;
        return 536870911 & hash + ((16383 & hash) << 15);
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      $isComparable: 1,
      $asComparable: function() {
        return [P.String];
      },
      $isPattern: 1,
      $isString: 1,
      static: {
        JSString__isWhitespace: function(codeUnit) {
          if (codeUnit < 256)
            switch (codeUnit) {
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 32:
              case 133:
              case 160:
                return true;
              default:
                return false;
            }
          switch (codeUnit) {
            case 5760:
            case 8192:
            case 8193:
            case 8194:
            case 8195:
            case 8196:
            case 8197:
            case 8198:
            case 8199:
            case 8200:
            case 8201:
            case 8202:
            case 8232:
            case 8233:
            case 8239:
            case 8287:
            case 12288:
            case 65279:
              return true;
            default:
              return false;
          }
        },
        JSString__skipLeadingWhitespace: function(string, index) {
          var t1, codeUnit;
          for (t1 = string.length; index < t1;) {
            codeUnit = C.JSString_methods._codeUnitAt$1(string, index);
            if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
              break;
            ++index;
          }
          return index;
        },
        JSString__skipTrailingWhitespace: function(string, index) {
          var index0, codeUnit;
          for (; index > 0; index = index0) {
            index0 = index - 1;
            codeUnit = C.JSString_methods.codeUnitAt$1(string, index0);
            if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
              break;
          }
          return index;
        }
      }
    }
  }], ["dart._internal", "dart:_internal",, H, {
    "^": "",
    _checkCount: function(count) {
      if (count < 0)
        H.throwExpression(P.RangeError$range(count, 0, null, "count", null));
      return count;
    },
    IterableElementError_noElement: function() {
      return new P.StateError("No element");
    },
    IterableElementError_tooMany: function() {
      return new P.StateError("Too many elements");
    },
    IterableElementError_tooFew: function() {
      return new P.StateError("Too few elements");
    },
    Sort_sort: function(a, compare, $E) {
      var t1;
      H.assertSubtype(a, "$isList", [$E], "$asList");
      H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [$E, $E]});
      t1 = J.get$length$asx(a);
      if (typeof t1 !== "number")
        return t1.$sub();
      H.Sort__doSort(a, 0, t1 - 1, compare, $E);
    },
    Sort__doSort: function(a, left, right, compare, $E) {
      H.assertSubtype(a, "$isList", [$E], "$asList");
      H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [$E, $E]});
      if (right - left <= 32)
        H.Sort__insertionSort(a, left, right, compare, $E);
      else
        H.Sort__dualPivotQuicksort(a, left, right, compare, $E);
    },
    Sort__insertionSort: function(a, left, right, compare, $E) {
      var i, t1, el, j, j0;
      H.assertSubtype(a, "$isList", [$E], "$asList");
      H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [$E, $E]});
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (!(j > left && J.$gt$n(compare.call$2(t1.$index(a, j - 1), el), 0)))
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort: function(a, left, right, compare, $E) {
      var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, great0, less0, pivots_are_equal, comp_pivot1, comp_pivot2, t2;
      H.assertSubtype(a, "$isList", [$E], "$asList");
      H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [$E, $E]});
      sixth = C.JSInt_methods._tdivFast$1(right - left + 1, 6);
      index1 = left + sixth;
      index5 = right - sixth;
      index3 = C.JSInt_methods._tdivFast$1(left + right, 2);
      index2 = index3 - sixth;
      index4 = index3 + sixth;
      t1 = J.getInterceptor$asx(a);
      el1 = t1.$index(a, index1);
      el2 = t1.$index(a, index2);
      el3 = t1.$index(a, index3);
      el4 = t1.$index(a, index4);
      el5 = t1.$index(a, index5);
      if (J.$gt$n(compare.call$2(el1, el2), 0)) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      if (J.$gt$n(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if (J.$gt$n(compare.call$2(el1, el3), 0)) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if (J.$gt$n(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (J.$gt$n(compare.call$2(el1, el4), 0)) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      if (J.$gt$n(compare.call$2(el3, el4), 0)) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      if (J.$gt$n(compare.call$2(el2, el5), 0)) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      if (J.$gt$n(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (J.$gt$n(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      if (J.$eq$(compare.call$2(el2, el4), 0)) {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          if (comp === 0)
            continue;
          if (typeof comp !== "number")
            return comp.$lt();
          if (comp < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              if (typeof comp !== "number")
                return comp.$gt();
              if (comp > 0) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp_pivot1 = compare.call$2(ak, el2);
          if (typeof comp_pivot1 !== "number")
            return comp_pivot1.$lt();
          if (comp_pivot1 < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else {
            comp_pivot2 = compare.call$2(ak, el4);
            if (typeof comp_pivot2 !== "number")
              return comp_pivot2.$gt();
            if (comp_pivot2 > 0)
              for (; true;) {
                comp = compare.call$2(t1.$index(a, great), el4);
                if (typeof comp !== "number")
                  return comp.$gt();
                if (comp > 0) {
                  --great;
                  if (great < k)
                    break;
                  continue;
                } else {
                  comp = compare.call$2(t1.$index(a, great), el2);
                  if (typeof comp !== "number")
                    return comp.$lt();
                  great0 = great - 1;
                  if (comp < 0) {
                    t1.$indexSet(a, k, t1.$index(a, less));
                    less0 = less + 1;
                    t1.$indexSet(a, less, t1.$index(a, great));
                    t1.$indexSet(a, great, ak);
                    less = less0;
                  } else {
                    t1.$indexSet(a, k, t1.$index(a, great));
                    t1.$indexSet(a, great, ak);
                  }
                  great = great0;
                  break;
                }
              }
          }
        }
        pivots_are_equal = false;
      }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      H.Sort__doSort(a, left, less - 2, compare, $E);
      H.Sort__doSort(a, great + 2, right, compare, $E);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) === 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) === 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) === 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                comp = compare.call$2(t1.$index(a, great), el2);
                if (typeof comp !== "number")
                  return comp.$lt();
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        H.Sort__doSort(a, less, great, compare, $E);
      } else
        H.Sort__doSort(a, less, great, compare, $E);
    },
    CodeUnits: {
      "^": "UnmodifiableListBase;__internal$_string",
      get$length: function(_) {
        return this.__internal$_string.length;
      },
      $index: function(_, i) {
        return C.JSString_methods.codeUnitAt$1(this.__internal$_string, i);
      },
      $asEfficientLengthIterable: function() {
        return [P.int];
      },
      $asUnmodifiableListMixin: function() {
        return [P.int];
      },
      $asListMixin: function() {
        return [P.int];
      },
      $asIterable: function() {
        return [P.int];
      },
      $asList: function() {
        return [P.int];
      }
    },
    EfficientLengthIterable: {
      "^": "Iterable;"
    },
    ListIterable: {
      "^": "EfficientLengthIterable;$ti",
      get$iterator: function(_) {
        return new H.ListIterator(this, this.get$length(this), 0, [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
      },
      forEach$1: function(_, action) {
        var $length, i;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "ListIterable", 0)]});
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          action.call$1(this.elementAt$1(0, i));
          if ($length !== this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
      },
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      contains$1: function(_, element) {
        var $length, i;
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          if (J.$eq$(this.elementAt$1(0, i), element))
            return true;
          if ($length !== this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return false;
      },
      any$1: function(_, test) {
        var $length, i;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgument(this, "ListIterable", 0)]});
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          if (test.call$1(this.elementAt$1(0, i)))
            return true;
          if ($length !== this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return false;
      },
      join$1: function(_, separator) {
        var $length, first, t1, i;
        $length = this.get$length(this);
        if (separator.length !== 0) {
          if ($length === 0)
            return "";
          first = H.S(this.elementAt$1(0, 0));
          if ($length != this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = first;
          i = 1;
          for (; i < $length; ++i) {
            t1 = t1 + separator + H.S(this.elementAt$1(0, i));
            if ($length !== this.get$length(this))
              throw H.wrapException(P.ConcurrentModificationError$(this));
          }
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        } else {
          if (typeof $length !== "number")
            return H.iae($length);
          i = 0;
          t1 = "";
          for (; i < $length; ++i) {
            t1 += H.S(this.elementAt$1(0, i));
            if ($length !== this.get$length(this))
              throw H.wrapException(P.ConcurrentModificationError$(this));
          }
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }
      },
      join$0: function($receiver) {
        return this.join$1($receiver, "");
      },
      where$1: function(_, test) {
        return this.super$Iterable$where(0, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgument(this, "ListIterable", 0)]}));
      },
      map$1$1: function(_, f, $T) {
        var t1 = H.getRuntimeTypeArgument(this, "ListIterable", 0);
        return new H.MappedListIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      },
      toList$1$growable: function(_, growable) {
        var t1, result, t2, i;
        t1 = H.getRuntimeTypeArgument(this, "ListIterable", 0);
        if (growable) {
          result = H.setRuntimeTypeInfo([], [t1]);
          C.JSArray_methods.set$length(result, this.get$length(this));
        } else {
          t2 = this.get$length(this);
          if (typeof t2 !== "number")
            return H.iae(t2);
          t2 = new Array(t2);
          t2.fixed$length = Array;
          result = H.setRuntimeTypeInfo(t2, [t1]);
        }
        i = 0;
        while (true) {
          t1 = this.get$length(this);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          C.JSArray_methods.$indexSet(result, i, this.elementAt$1(0, i));
          ++i;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      }
    },
    SubListIterable: {
      "^": "ListIterable;__internal$_iterable,__internal$_start,_endOrLength,$ti",
      get$_endIndex: function() {
        var $length, t1, t2;
        $length = J.get$length$asx(this.__internal$_iterable);
        t1 = this._endOrLength;
        if (t1 != null) {
          if (typeof $length !== "number")
            return H.iae($length);
          t2 = t1 > $length;
        } else
          t2 = true;
        if (t2)
          return $length;
        return t1;
      },
      get$_startIndex: function() {
        var $length, t1;
        $length = J.get$length$asx(this.__internal$_iterable);
        t1 = this.__internal$_start;
        if (typeof $length !== "number")
          return H.iae($length);
        if (t1 > $length)
          return $length;
        return t1;
      },
      get$length: function(_) {
        var $length, t1, t2;
        $length = J.get$length$asx(this.__internal$_iterable);
        t1 = this.__internal$_start;
        if (typeof $length !== "number")
          return H.iae($length);
        if (t1 >= $length)
          return 0;
        t2 = this._endOrLength;
        if (t2 == null || t2 >= $length)
          return $length - t1;
        if (typeof t2 !== "number")
          return t2.$sub();
        return t2 - t1;
      },
      elementAt$1: function(_, index) {
        var t1, realIndex;
        t1 = this.get$_startIndex();
        if (typeof t1 !== "number")
          return t1.$add();
        if (typeof index !== "number")
          return H.iae(index);
        realIndex = t1 + index;
        if (index >= 0) {
          t1 = this.get$_endIndex();
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = realIndex >= t1;
        } else
          t1 = true;
        if (t1)
          throw H.wrapException(P.IndexError$(index, this, "index", null, null));
        return J.elementAt$1$ax(this.__internal$_iterable, realIndex);
      },
      take$1: function(_, count) {
        var t1, t2, newEnd;
        t1 = this._endOrLength;
        t2 = this.__internal$_start;
        newEnd = t2 + count;
        if (t1 == null)
          return H.SubListIterable$(this.__internal$_iterable, t2, newEnd, H.getTypeArgumentByIndex(this, 0));
        else {
          if (t1 < newEnd)
            return this;
          return H.SubListIterable$(this.__internal$_iterable, t2, newEnd, H.getTypeArgumentByIndex(this, 0));
        }
      },
      toList$1$growable: function(_, growable) {
        var start, t1, t2, end, end0, t3, $length, result, i;
        start = this.__internal$_start;
        t1 = this.__internal$_iterable;
        t2 = J.getInterceptor$asx(t1);
        end = t2.get$length(t1);
        end0 = this._endOrLength;
        if (end0 != null) {
          if (typeof end !== "number")
            return H.iae(end);
          t3 = end0 < end;
        } else
          t3 = false;
        if (t3)
          end = end0;
        if (typeof end !== "number")
          return end.$sub();
        $length = end - start;
        if ($length < 0)
          $length = 0;
        t3 = new Array($length);
        t3.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t3, this.$ti);
        for (i = 0; i < $length; ++i) {
          C.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
          t3 = t2.get$length(t1);
          if (typeof t3 !== "number")
            return t3.$lt();
          if (t3 < end)
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return result;
      },
      static: {
        SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
          if (_start < 0)
            H.throwExpression(P.RangeError$range(_start, 0, null, "start", null));
          if (_endOrLength != null) {
            if (_endOrLength < 0)
              H.throwExpression(P.RangeError$range(_endOrLength, 0, null, "end", null));
            if (_start > _endOrLength)
              H.throwExpression(P.RangeError$range(_start, 0, _endOrLength, "start", null));
          }
          return new H.SubListIterable(_iterable, _start, _endOrLength, [$E]);
        }
      }
    },
    ListIterator: {
      "^": "Object;__internal$_iterable,__internal$_length,__internal$_index,0__internal$_current,$ti",
      set$__internal$_current: function(_current) {
        this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this.__internal$_current;
      },
      moveNext$0: function() {
        var t1, t2, $length, t3;
        t1 = this.__internal$_iterable;
        t2 = J.getInterceptor$asx(t1);
        $length = t2.get$length(t1);
        if (this.__internal$_length != $length)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        t3 = this.__internal$_index;
        if (typeof $length !== "number")
          return H.iae($length);
        if (t3 >= $length) {
          this.set$__internal$_current(null);
          return false;
        }
        this.set$__internal$_current(t2.elementAt$1(t1, t3));
        ++this.__internal$_index;
        return true;
      },
      $isIterator: 1
    },
    MappedIterable: {
      "^": "Iterable;__internal$_iterable,_f,$ti",
      get$iterator: function(_) {
        return new H.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti);
      },
      get$length: function(_) {
        return J.get$length$asx(this.__internal$_iterable);
      },
      get$isEmpty: function(_) {
        return J.get$isEmpty$asx(this.__internal$_iterable);
      },
      elementAt$1: function(_, index) {
        return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
      },
      $asIterable: function($S, $T) {
        return [$T];
      },
      static: {
        MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
          H.assertSubtype(iterable, "$isIterable", [$S], "$asIterable");
          H.functionTypeCheck($function, {func: 1, ret: $T, args: [$S]});
          if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
            return new H.EfficientLengthMappedIterable(iterable, $function, [$S, $T]);
          return new H.MappedIterable(iterable, $function, [$S, $T]);
        }
      }
    },
    EfficientLengthMappedIterable: {
      "^": "MappedIterable;__internal$_iterable,_f,$ti",
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function($S, $T) {
        return [$T];
      }
    },
    MappedIterator: {
      "^": "Iterator;0__internal$_current,_iterator,_f,$ti",
      set$__internal$_current: function(_current) {
        this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 1));
      },
      moveNext$0: function() {
        var t1 = this._iterator;
        if (t1.moveNext$0()) {
          this.set$__internal$_current(this._f.call$1(t1.get$current(t1)));
          return true;
        }
        this.set$__internal$_current(null);
        return false;
      },
      get$current: function(_) {
        return this.__internal$_current;
      },
      $asIterator: function($S, $T) {
        return [$T];
      }
    },
    MappedListIterable: {
      "^": "ListIterable;_source,_f,$ti",
      get$length: function(_) {
        return J.get$length$asx(this._source);
      },
      elementAt$1: function(_, index) {
        return this._f.call$1(J.elementAt$1$ax(this._source, index));
      },
      $asEfficientLengthIterable: function($S, $T) {
        return [$T];
      },
      $asListIterable: function($S, $T) {
        return [$T];
      },
      $asIterable: function($S, $T) {
        return [$T];
      }
    },
    WhereIterable: {
      "^": "Iterable;__internal$_iterable,_f,$ti",
      get$iterator: function(_) {
        return new H.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti);
      },
      map$1$1: function(_, f, $T) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        return new H.MappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      }
    },
    WhereIterator: {
      "^": "Iterator;_iterator,_f,$ti",
      moveNext$0: function() {
        var t1, t2;
        for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
          if (t2.call$1(t1.get$current(t1)))
            return true;
        return false;
      },
      get$current: function(_) {
        var t1 = this._iterator;
        return t1.get$current(t1);
      }
    },
    ExpandIterable: {
      "^": "Iterable;__internal$_iterable,_f,$ti",
      get$iterator: function(_) {
        return new H.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, C.C_EmptyIterator, this.$ti);
      },
      $asIterable: function($S, $T) {
        return [$T];
      }
    },
    ExpandIterator: {
      "^": "Object;_iterator,_f,_currentExpansion,0__internal$_current,$ti",
      set$_currentExpansion: function(_currentExpansion) {
        this._currentExpansion = H.assertSubtype(_currentExpansion, "$isIterator", [H.getTypeArgumentByIndex(this, 1)], "$asIterator");
      },
      set$__internal$_current: function(_current) {
        this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 1));
      },
      get$current: function(_) {
        return this.__internal$_current;
      },
      moveNext$0: function() {
        var t1, t2;
        if (this._currentExpansion == null)
          return false;
        for (t1 = this._iterator, t2 = this._f; !this._currentExpansion.moveNext$0();) {
          this.set$__internal$_current(null);
          if (t1.moveNext$0()) {
            this.set$_currentExpansion(null);
            this.set$_currentExpansion(J.get$iterator$ax(t2.call$1(t1.get$current(t1))));
          } else
            return false;
        }
        t1 = this._currentExpansion;
        this.set$__internal$_current(t1.get$current(t1));
        return true;
      },
      $isIterator: 1,
      $asIterator: function($S, $T) {
        return [$T];
      }
    },
    TakeIterable: {
      "^": "Iterable;__internal$_iterable,_takeCount,$ti",
      get$iterator: function(_) {
        return new H.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, this.$ti);
      },
      static: {
        TakeIterable_TakeIterable: function(iterable, takeCount, $E) {
          H.assertSubtype(iterable, "$isIterable", [$E], "$asIterable");
          if (takeCount < 0)
            throw H.wrapException(P.ArgumentError$(takeCount));
          if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
            return new H.EfficientLengthTakeIterable(iterable, takeCount, [$E]);
          return new H.TakeIterable(iterable, takeCount, [$E]);
        }
      }
    },
    EfficientLengthTakeIterable: {
      "^": "TakeIterable;__internal$_iterable,_takeCount,$ti",
      get$length: function(_) {
        var iterableLength, t1;
        iterableLength = J.get$length$asx(this.__internal$_iterable);
        t1 = this._takeCount;
        if (typeof iterableLength !== "number")
          return iterableLength.$gt();
        if (iterableLength > t1)
          return t1;
        return iterableLength;
      },
      $isEfficientLengthIterable: 1
    },
    TakeIterator: {
      "^": "Iterator;_iterator,_remaining,$ti",
      moveNext$0: function() {
        if (--this._remaining >= 0)
          return this._iterator.moveNext$0();
        this._remaining = -1;
        return false;
      },
      get$current: function(_) {
        var t1;
        if (this._remaining < 0)
          return;
        t1 = this._iterator;
        return t1.get$current(t1);
      }
    },
    SkipIterable: {
      "^": "Iterable;__internal$_iterable,_skipCount,$ti",
      get$iterator: function(_) {
        return new H.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, this.$ti);
      },
      static: {
        SkipIterable_SkipIterable: function(iterable, count, $E) {
          H.assertSubtype(iterable, "$isIterable", [$E], "$asIterable");
          if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
            return new H.EfficientLengthSkipIterable(iterable, H._checkCount(count), [$E]);
          return new H.SkipIterable(iterable, H._checkCount(count), [$E]);
        }
      }
    },
    EfficientLengthSkipIterable: {
      "^": "SkipIterable;__internal$_iterable,_skipCount,$ti",
      get$length: function(_) {
        var t1, $length;
        t1 = J.get$length$asx(this.__internal$_iterable);
        if (typeof t1 !== "number")
          return t1.$sub();
        $length = t1 - this._skipCount;
        if ($length >= 0)
          return $length;
        return 0;
      },
      $isEfficientLengthIterable: 1
    },
    SkipIterator: {
      "^": "Iterator;_iterator,_skipCount,$ti",
      moveNext$0: function() {
        var t1, i;
        for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
          t1.moveNext$0();
        this._skipCount = 0;
        return t1.moveNext$0();
      },
      get$current: function(_) {
        var t1 = this._iterator;
        return t1.get$current(t1);
      }
    },
    EmptyIterator: {
      "^": "Object;$ti",
      moveNext$0: function() {
        return false;
      },
      get$current: function(_) {
        return;
      },
      $isIterator: 1
    },
    FixedLengthListMixin: {
      "^": "Object;$ti",
      set$length: function(receiver, newLength) {
        throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
      },
      add$1: function(receiver, value) {
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgumentIntercepted(this, receiver, "FixedLengthListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
      }
    },
    UnmodifiableListMixin: {
      "^": "Object;$ti",
      $indexSet: function(_, index, value) {
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
      },
      set$length: function(_, newLength) {
        throw H.wrapException(P.UnsupportedError$("Cannot change the length of an unmodifiable list"));
      },
      add$1: function(_, value) {
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
      },
      sort$1: [function(_, compare) {
        var t1 = H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0);
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [t1, t1]});
        throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, function() {
        return H.computeSignature(function(E) {
          return {func: 1, ret: -1, opt: [{func: 1, ret: P.int, args: [E, E]}]};
        }, this.$receiver, "UnmodifiableListMixin");
      }]
    },
    UnmodifiableListBase: {
      "^": "ListBase+UnmodifiableListMixin;"
    },
    ReversedListIterable: {
      "^": "ListIterable;_source,$ti",
      get$length: function(_) {
        return J.get$length$asx(this._source);
      },
      elementAt$1: function(_, index) {
        var t1, t2, t3;
        t1 = this._source;
        t2 = J.getInterceptor$asx(t1);
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof index !== "number")
          return H.iae(index);
        return t2.elementAt$1(t1, t3 - 1 - index);
      }
    },
    Symbol: {
      "^": "Object;__internal$_name",
      get$hashCode: function(_) {
        var hash = this._hashCode;
        if (hash != null)
          return hash;
        hash = 536870911 & 664597 * J.get$hashCode$(this.__internal$_name);
        this._hashCode = hash;
        return hash;
      },
      toString$0: function(_) {
        return 'Symbol("' + H.S(this.__internal$_name) + '")';
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H.Symbol && this.__internal$_name == other.__internal$_name;
      },
      $isSymbol0: 1
    }
  }], ["dart._js", "dart:_js",, H, {
    "^": "",
    isBrowserObject: function(o) {
      var t1 = J.getInterceptor$(o);
      return !!t1.$isBlob || !!t1.$isEvent || !!t1.$isKeyRange || !!t1.$isImageData || !!t1.$isNode || !!t1.$isWindow || !!t1.$isWorkerGlobalScope;
    }
  }], ["_js_helper", "dart:_js_helper",, H, {
    "^": "",
    unminifyOrTag: function(rawClassName) {
      var preserved = H.stringTypeCheck(init.mangledGlobalNames[rawClassName]);
      if (typeof preserved === "string")
        return preserved;
      return rawClassName;
    },
    getType: [function(index) {
      return init.types[H.intTypeCheck(index)];
    }, null, null, 4, 0, null, 23],
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return !!J.getInterceptor$(object).$isJavaScriptIndexingBehavior;
    },
    S: function(value) {
      var res;
      if (typeof value === "string")
        return value;
      if (typeof value === "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      if (typeof res !== "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return res;
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives_parseInt: function(source, radix) {
      var match, decimalMatch, maxCharCode, digitsPart, t1, i;
      if (typeof source !== "string")
        H.throwExpression(H.argumentErrorValue(source));
      match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return;
      if (3 >= match.length)
        return H.ioore(match, 3);
      decimalMatch = H.stringTypeCheck(match[3]);
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return;
      }
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((C.JSString_methods._codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return;
      }
      return parseInt(source, radix);
    },
    Primitives_objectTypeName: function(object) {
      return H.Primitives__objectClassName(object) + H._joinArguments(H.getRuntimeTypeInfo(object), 0, null);
    },
    Primitives__objectClassName: function(object) {
      var interceptor, interceptorConstructor, interceptorConstructorName, $name, t1, dispatchName, objectConstructor, match, decompiledName;
      interceptor = J.getInterceptor$(object);
      interceptorConstructor = interceptor.constructor;
      if (typeof interceptorConstructor == "function") {
        interceptorConstructorName = interceptorConstructor.name;
        $name = typeof interceptorConstructorName === "string" ? interceptorConstructorName : null;
      } else
        $name = null;
      t1 = $name == null;
      if (t1 || interceptor === C.Interceptor_methods || !!interceptor.$isUnknownJavaScriptObject) {
        dispatchName = C.JS_CONST_u2C(object);
        if (t1)
          $name = dispatchName;
        if (dispatchName === "Object") {
          objectConstructor = object.constructor;
          if (typeof objectConstructor == "function") {
            match = String(objectConstructor).match(/^\s*function\s*([\w$]*)\s*\(/);
            decompiledName = match == null ? null : match[1];
            if (typeof decompiledName === "string" && /^\w+$/.test(decompiledName))
              $name = decompiledName;
          }
        }
        return $name;
      }
      $name = $name;
      return H.unminifyOrTag($name.length > 1 && C.JSString_methods._codeUnitAt$1($name, 0) === 36 ? C.JSString_methods.substring$1($name, 1) : $name);
    },
    Primitives_stringFromCharCode: function(charCode) {
      var bits;
      if (typeof charCode !== "number")
        return H.iae(charCode);
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((55296 | C.JSInt_methods._shrOtherPositive$1(bits, 10)) >>> 0, 56320 | bits & 1023);
        }
      }
      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate: function(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._value);
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_getProperty: function(object, key) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H.argumentErrorValue(object));
      return object[key];
    },
    Primitives_setProperty: function(object, key, value) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H.argumentErrorValue(object));
      object[key] = value;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, namedArgumentList, t2;
      t1 = {};
      H.assertSubtype(namedArguments, "$isMap", [P.String, null], "$asMap");
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      if (positionalArguments != null) {
        t2 = J.get$length$asx(positionalArguments);
        if (typeof t2 !== "number")
          return H.iae(t2);
        t1.argumentCount = t2;
        C.JSArray_methods.addAll$1($arguments, positionalArguments);
      }
      t1.names = "";
      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      return J.noSuchMethod$1$($function, new H.JSInvocationMirror(C.Symbol_call, "call" + "$" + t1.argumentCount + t1.names, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunctionWithPositionalArguments: function($function, positionalArguments) {
      var $arguments, t1;
      if (positionalArguments != null)
        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, null);
      else
        $arguments = [];
      t1 = $arguments.length;
      if (t1 === 0) {
        if (!!$function.call$0)
          return $function.call$0();
      } else if (t1 === 1) {
        if (!!$function.call$1)
          return $function.call$1($arguments[0]);
      } else if (t1 === 2) {
        if (!!$function.call$2)
          return $function.call$2($arguments[0], $arguments[1]);
      } else if (t1 === 3) {
        if (!!$function.call$3)
          return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
      } else if (t1 === 4) {
        if (!!$function.call$4)
          return $function.call$4($arguments[0], $arguments[1], $arguments[2], $arguments[3]);
      } else if (t1 === 5)
        if (!!$function.call$5)
          return $function.call$5($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4]);
      return H.Primitives__genericApplyFunctionWithPositionalArguments($function, $arguments);
    },
    Primitives__genericApplyFunctionWithPositionalArguments: function($function, $arguments) {
      var argumentCount, jsFunction, info, requiredArgumentCount, maxArgumentCount, pos;
      argumentCount = $arguments.length;
      jsFunction = $function["call" + "$" + argumentCount];
      if (jsFunction == null) {
        jsFunction = J.getInterceptor$($function)["call*"];
        if (jsFunction == null)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        info = H.ReflectionInfo_ReflectionInfo(jsFunction);
        requiredArgumentCount = info.requiredParameterCount;
        maxArgumentCount = requiredArgumentCount + info.optionalParameterCount;
        if (info.areOptionalParametersNamed || requiredArgumentCount > argumentCount || maxArgumentCount < argumentCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        $arguments = P.List_List$from($arguments, true, null);
        for (pos = argumentCount; pos < maxArgumentCount; ++pos)
          C.JSArray_methods.add$1($arguments, init.metadata[info.defaultValue$1(0, pos)]);
      }
      return jsFunction.apply($function, $arguments);
    },
    iae: function(argument) {
      throw H.wrapException(H.argumentErrorValue(argument));
    },
    ioore: function(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw H.wrapException(H.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, t1;
      if (typeof index !== "number" || Math.floor(index) !== index)
        return new P.ArgumentError(true, index, "index", null);
      $length = H.intTypeCheck(J.get$length$asx(indexable));
      if (!(index < 0)) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = index >= $length;
      } else
        t1 = true;
      if (t1)
        return P.IndexError$(index, indexable, "index", null, $length);
      return P.RangeError$value(index, "index", null);
    },
    diagnoseRangeError: function(start, end, $length) {
      if (start > $length)
        return new P.RangeError(0, $length, true, start, "start", "Invalid value");
      if (end != null)
        if (end < start || end > $length)
          return new P.RangeError(start, $length, true, end, "end", "Invalid value");
      return new P.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    checkNum: function(value) {
      if (typeof value !== "number")
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    checkBool: function(value) {
      return value;
    },
    wrapException: function(ex) {
      var wrapper;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: H.toStringWrapper});
        wrapper.name = "";
      } else
        wrapper.toString = H.toStringWrapper;
      return wrapper;
    },
    toStringWrapper: [function() {
      return J.toString$0$(this.dartException);
    }, null, null, 0, 0, null],
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(P.ConcurrentModificationError$(collection));
    },
    unwrapException: function(ex) {
      var t1, message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, t2;
      t1 = new H.unwrapException_saveStackTrace(ex);
      if (ex == null)
        return;
      if (ex instanceof H.ExceptionAndStackTrace)
        return t1.call$1(ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return t1.call$1(ex.dartException);
      else if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              return t1.call$1(H.NullError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return t1.call$1(H.JsNoSuchMethodError$(H.stringTypeCheck(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return t1.call$1(H.JsNoSuchMethodError$(H.stringTypeCheck(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t2 = match != null;
                        } else
                          t2 = true;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
            if (t2)
              return t1.call$1(H.NullError$(H.stringTypeCheck(message), match));
          }
        }
        return t1.call$1(new H.UnknownJsTypeError(typeof message === "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message === "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return t1.call$1(new P.ArgumentError(false, null, null, typeof message === "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message === "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    getTraceFromException: function(exception) {
      var trace;
      if (exception instanceof H.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new H._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new H._StackTrace(exception);
    },
    objectHashCode: function(object) {
      if (object == null || typeof object != 'object')
        return J.get$hashCode$(object);
      else
        return H.Primitives_objectHashCode(object);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var $length, index, index0, index1;
      $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure: [function(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      H.interceptedTypeCheck(closure, "$isFunction");
      switch (H.intTypeCheck(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    }, null, null, 24, 0, null, 47, 36, 19, 22, 41, 43],
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      H.intTypeCheck(arity);
      if (closure == null)
        return;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {
      var $function, callName, functionType, $prototype, $constructor, t1, trampoline, signatureFunction, getReceiver, applyTrampoline, i, stub, stubCallName;
      $function = functions[0];
      callName = $function.$callName;
      if (!!J.getInterceptor$(reflectionInfo).$isList) {
        $function.$reflectionInfo = reflectionInfo;
        functionType = H.ReflectionInfo_ReflectionInfo($function).functionType;
      } else
        functionType = reflectionInfo;
      $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        t1 = new Function("a,b,c,d" + t1, "this.$initialize(a,b,c,d" + t1 + ")");
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      if (!isStatic) {
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
      }
      if (typeof functionType == "number")
        signatureFunction = function(getType, t) {
          return function() {
            return getType(t);
          };
        }(H.getType, functionType);
      else if (typeof functionType == "function")
        if (isStatic)
          signatureFunction = functionType;
        else {
          getReceiver = isIntercepted ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
          signatureFunction = function(f, r) {
            return function() {
              return f.apply({$receiver: r(this)}, arguments);
            };
          }(functionType, getReceiver);
        }
      else
        throw H.wrapException("Error in reflectionInfo.");
      $prototype.$signature = signatureFunction;
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < functions.length; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex) {
          stub.$reflectionInfo = reflectionInfo;
          applyTrampoline = stub;
        }
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, t2, selfName, $arguments;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 27;
      if (t2)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        selfName = "self" + t1;
        t1 = "return function(){var " + selfName + " = this.";
        t2 = $.BoundClosure_selfFieldNameCache;
        if (t2 == null) {
          t2 = H.BoundClosure_computeFieldNamed("self");
          $.BoundClosure_selfFieldNameCache = t2;
        }
        return new Function(t1 + H.S(t2) + ";return " + selfName + "." + H.S(stubName) + "();}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = $.Closure_functionCounter;
      if (typeof t1 !== "number")
        return t1.$add();
      $.Closure_functionCounter = t1 + 1;
      $arguments += t1;
      t1 = "return function(" + $arguments + "){return this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      if (t2 == null) {
        t2 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t2;
      }
      return new Function(t1 + H.S(t2) + "." + H.S(stubName) + "(" + $arguments + ");}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf, getReceiver;
      getSelf = H.BoundClosure_selfOf;
      getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var t1, t2, stubName, arity, lookedUpFunction, t3, t4, $arguments;
      t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null) {
        t1 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t1;
      }
      t2 = $.BoundClosure_receiverFieldNameCache;
      if (t2 == null) {
        t2 = H.BoundClosure_computeFieldNamed("receiver");
        $.BoundClosure_receiverFieldNameCache = t2;
      }
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t3 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t4 = !t3 || arity >= 28;
      if (t4)
        return H.Closure_cspForwardInterceptedCall(arity, !t3, stubName, $function);
      if (arity === 1) {
        t1 = "return function(){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ");";
        t2 = $.Closure_functionCounter;
        if (typeof t2 !== "number")
          return t2.$add();
        $.Closure_functionCounter = t2 + 1;
        return new Function(t1 + t2 + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ", " + $arguments + ");";
      t2 = $.Closure_functionCounter;
      if (typeof t2 !== "number")
        return t2.$add();
      $.Closure_functionCounter = t2 + 1;
      return new Function(t1 + t2 + "}")();
    },
    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {
      return H.Closure_fromTearOff(receiver, functions, H.intTypeCheck(applyTrampolineIndex), reflectionInfo, !!isStatic, !!isIntercepted, $name);
    },
    instantiate1: function(f, T1) {
      var t1;
      H.interceptedTypeCheck(f, "$isClosure");
      t1 = new H.Instantiation1(f, [T1]);
      t1.Instantiation$1(f);
      return t1;
    },
    stringTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "string")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "String"));
    },
    doubleTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "double"));
    },
    numTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "num"));
    },
    boolTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "boolean")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "bool"));
    },
    intTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number" && Math.floor(value) === value)
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "int"));
    },
    propertyTypeError: function(value, property) {
      throw H.wrapException(H.TypeErrorImplementation$(value, H.unminifyOrTag(H.stringTypeCheck(property).substring(3))));
    },
    propertyTypeCastError: function(value, property) {
      throw H.wrapException(H.CastErrorImplementation$(value, H.unminifyOrTag(H.stringTypeCheck(property).substring(3))));
    },
    interceptedTypeCheck: function(value, property) {
      if (value == null)
        return value;
      if ((typeof value === "object" || typeof value === "function") && J.getInterceptor$(value)[property])
        return value;
      H.propertyTypeError(value, property);
    },
    interceptedTypeCast: function(value, property) {
      var t1;
      if (value != null)
        t1 = (typeof value === "object" || typeof value === "function") && J.getInterceptor$(value)[property];
      else
        t1 = true;
      if (t1)
        return value;
      H.propertyTypeCastError(value, property);
    },
    numberOrStringSuperNativeTypeCheck: function(value, property) {
      if (value == null)
        return value;
      if (typeof value === "string")
        return value;
      if (typeof value === "number")
        return value;
      if (J.getInterceptor$(value)[property])
        return value;
      H.propertyTypeError(value, property);
    },
    stringSuperNativeTypeCheck: function(value, property) {
      if (value == null)
        return value;
      if (typeof value === "string")
        return value;
      if (J.getInterceptor$(value)[property])
        return value;
      H.propertyTypeError(value, property);
    },
    listTypeCheck: function(value) {
      if (value == null)
        return value;
      if (!!J.getInterceptor$(value).$isList)
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "List<dynamic>"));
    },
    listSuperNativeTypeCheck: function(value, property) {
      var t1;
      if (value == null)
        return value;
      t1 = J.getInterceptor$(value);
      if (!!t1.$isList)
        return value;
      if (t1[property])
        return value;
      H.propertyTypeError(value, property);
    },
    extractFunctionTypeObjectFromInternal: function(o) {
      var signature;
      if ("$signature" in o) {
        signature = o.$signature;
        if (typeof signature == "number")
          return init.types[H.intTypeCheck(signature)];
        else
          return o.$signature();
      }
      return;
    },
    functionTypeTest: function(value, functionTypeRti) {
      var functionTypeObject;
      if (value == null)
        return false;
      if (typeof value == "function")
        return true;
      functionTypeObject = H.extractFunctionTypeObjectFromInternal(J.getInterceptor$(value));
      if (functionTypeObject == null)
        return false;
      return H._isFunctionSubtype(functionTypeObject, null, functionTypeRti, null);
    },
    functionTypeCheck: function(value, functionTypeRti) {
      var $self, t1;
      if (value == null)
        return value;
      if ($._inTypeAssertion)
        return value;
      $._inTypeAssertion = true;
      try {
        if (H.functionTypeTest(value, functionTypeRti))
          return value;
        $self = H.runtimeTypeToString(functionTypeRti);
        t1 = H.TypeErrorImplementation$(value, $self);
        throw H.wrapException(t1);
      } finally {
        $._inTypeAssertion = false;
      }
    },
    futureOrCheck: function(o, futureOrRti) {
      if (o != null && !H.checkSubtypeOfRuntimeType(o, futureOrRti))
        H.throwExpression(H.TypeErrorImplementation$(o, H.runtimeTypeToString(futureOrRti)));
      return o;
    },
    _typeDescription: function(value) {
      var t1, functionTypeObject;
      t1 = J.getInterceptor$(value);
      if (!!t1.$isClosure) {
        functionTypeObject = H.extractFunctionTypeObjectFromInternal(t1);
        if (functionTypeObject != null)
          return H.runtimeTypeToString(functionTypeObject);
        return "Closure";
      }
      return H.Primitives_objectTypeName(value);
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError(H.stringTypeCheck(staticName)));
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    createRuntimeType: function(rti) {
      return new H.TypeImpl(rti);
    },
    setRuntimeTypeInfo: function(target, rti) {
      target.$ti = rti;
      return target;
    },
    getRuntimeTypeInfo: function(target) {
      if (target == null)
        return;
      return target.$ti;
    },
    getRuntimeTypeArguments: function(interceptor, object, substitutionName) {
      return H.substitute(interceptor["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(object));
    },
    getRuntimeTypeArgumentIntercepted: function(interceptor, target, substitutionName, index) {
      var $arguments;
      H.stringTypeCheck(substitutionName);
      H.intTypeCheck(index);
      $arguments = H.substitute(interceptor["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
      return $arguments == null ? null : $arguments[index];
    },
    getRuntimeTypeArgument: function(target, substitutionName, index) {
      var $arguments;
      H.stringTypeCheck(substitutionName);
      H.intTypeCheck(index);
      $arguments = H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
      return $arguments == null ? null : $arguments[index];
    },
    getTypeArgumentByIndex: function(target, index) {
      var rti;
      H.intTypeCheck(index);
      rti = H.getRuntimeTypeInfo(target);
      return rti == null ? null : rti[index];
    },
    runtimeTypeToString: function(rti) {
      return H._runtimeTypeToString(rti, null);
    },
    _runtimeTypeToString: function(rti, genericContext) {
      var t1, t2;
      H.assertSubtype(genericContext, "$isList", [P.String], "$asList");
      if (rti == null)
        return "dynamic";
      if (rti === -1)
        return "void";
      if (typeof rti === "object" && rti !== null && rti.constructor === Array)
        return H.unminifyOrTag(rti[0].builtin$cls) + H._joinArguments(rti, 1, genericContext);
      if (typeof rti == "function")
        return H.unminifyOrTag(rti.builtin$cls);
      if (rti === -2)
        return "dynamic";
      if (typeof rti === "number") {
        H.intTypeCheck(rti);
        if (genericContext == null || rti < 0 || rti >= genericContext.length)
          return "unexpected-generic-index:" + rti;
        t1 = genericContext.length;
        t2 = t1 - rti - 1;
        if (t2 < 0 || t2 >= t1)
          return H.ioore(genericContext, t2);
        return H.S(genericContext[t2]);
      }
      if ('func' in rti)
        return H._functionRtiToString(rti, genericContext);
      if ('futureOr' in rti)
        return "FutureOr<" + H._runtimeTypeToString("type" in rti ? rti.type : null, genericContext) + ">";
      return "unknown-reified-type";
    },
    _functionRtiToString: function(rti, genericContext) {
      var t1, boundsRti, outerContextLength, offset, i, i0, typeParameters, typeSep, t2, boundRti, returnTypeText, $arguments, argumentsText, sep, _i, argument, optionalArguments, namedArguments, t3;
      t1 = [P.String];
      H.assertSubtype(genericContext, "$isList", t1, "$asList");
      if ("bounds" in rti) {
        boundsRti = rti.bounds;
        if (genericContext == null) {
          genericContext = H.setRuntimeTypeInfo([], t1);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsRti.length, i0 = i; i0 > 0; --i0)
          C.JSArray_methods.add$1(genericContext, "T" + (offset + i0));
        for (typeParameters = "<", typeSep = "", i0 = 0; i0 < i; ++i0, typeSep = ", ") {
          typeParameters += typeSep;
          t1 = genericContext.length;
          t2 = t1 - i0 - 1;
          if (t2 < 0)
            return H.ioore(genericContext, t2);
          typeParameters = C.JSString_methods.$add(typeParameters, genericContext[t2]);
          boundRti = boundsRti[i0];
          if (boundRti != null && boundRti !== P.Object)
            typeParameters += " extends " + H._runtimeTypeToString(boundRti, genericContext);
        }
        typeParameters += ">";
      } else {
        typeParameters = "";
        outerContextLength = null;
      }
      returnTypeText = !!rti.v ? "void" : H._runtimeTypeToString(rti.ret, genericContext);
      if ("args" in rti) {
        $arguments = rti.args;
        for (t1 = $arguments.length, argumentsText = "", sep = "", _i = 0; _i < t1; ++_i, sep = ", ") {
          argument = $arguments[_i];
          argumentsText = argumentsText + sep + H._runtimeTypeToString(argument, genericContext);
        }
      } else {
        argumentsText = "";
        sep = "";
      }
      if ("opt" in rti) {
        optionalArguments = rti.opt;
        argumentsText += sep + "[";
        for (t1 = optionalArguments.length, sep = "", _i = 0; _i < t1; ++_i, sep = ", ") {
          argument = optionalArguments[_i];
          argumentsText = argumentsText + sep + H._runtimeTypeToString(argument, genericContext);
        }
        argumentsText += "]";
      }
      if ("named" in rti) {
        namedArguments = rti.named;
        argumentsText += sep + "{";
        for (t1 = H.extractKeys(namedArguments), t2 = t1.length, sep = "", _i = 0; _i < t2; ++_i, sep = ", ") {
          t3 = H.stringTypeCheck(t1[_i]);
          argumentsText = argumentsText + sep + H._runtimeTypeToString(namedArguments[t3], genericContext) + (" " + H.S(t3));
        }
        argumentsText += "}";
      }
      if (outerContextLength != null)
        genericContext.length = outerContextLength;
      return typeParameters + "(" + argumentsText + ") => " + returnTypeText;
    },
    _joinArguments: function(types, startIndex, genericContext) {
      var buffer, index, separator, allDynamic, t1, argument;
      H.assertSubtype(genericContext, "$isList", [P.String], "$asList");
      if (types == null)
        return "";
      buffer = new P.StringBuffer("");
      for (index = startIndex, separator = "", allDynamic = true, t1 = ""; index < types.length; ++index, separator = ", ") {
        buffer._contents = t1 + separator;
        argument = types[index];
        if (argument != null)
          allDynamic = false;
        t1 = buffer._contents += H._runtimeTypeToString(argument, genericContext);
      }
      return "<" + buffer.toString$0(0) + ">";
    },
    getRti: function(o) {
      var t1, functionRti, type, rti;
      t1 = J.getInterceptor$(o);
      if (!!t1.$isClosure) {
        functionRti = H.extractFunctionTypeObjectFromInternal(t1);
        if (functionRti != null)
          return functionRti;
      }
      type = t1.constructor;
      if (o == null)
        return type;
      if (typeof o != "object")
        return type;
      rti = H.getRuntimeTypeInfo(o);
      if (rti != null) {
        rti = rti.slice();
        rti.splice(0, 0, type);
        type = rti;
      }
      return type;
    },
    getRuntimeType: function(object) {
      return new H.TypeImpl(H.getRti(object));
    },
    substitute: function(substitution, $arguments) {
      if (substitution == null)
        return $arguments;
      substitution = substitution.apply(null, $arguments);
      if (substitution == null)
        return;
      if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
        return substitution;
      if (typeof substitution == "function")
        return substitution.apply(null, $arguments);
      return $arguments;
    },
    checkSubtype: function(object, isField, checks, asField) {
      var $arguments, interceptor;
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return false;
      $arguments = H.getRuntimeTypeInfo(object);
      interceptor = J.getInterceptor$(object);
      if (interceptor[isField] == null)
        return false;
      return H.areSubtypes(H.substitute(interceptor[asField], $arguments), null, checks, null);
    },
    subtypeCast: function(object, isField, checks, asField) {
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return object;
      if (H.checkSubtype(object, isField, checks, asField))
        return object;
      throw H.wrapException(H.CastErrorImplementation$(object, function(str, names) {
        return str.replace(/[^<,> ]+/g, function(m) {
          return names[m] || m;
        });
      }(H.unminifyOrTag(isField.substring(3)) + H._joinArguments(checks, 0, null), init.mangledGlobalNames)));
    },
    assertSubtype: function(object, isField, checks, asField) {
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return object;
      if (H.checkSubtype(object, isField, checks, asField))
        return object;
      throw H.wrapException(H.TypeErrorImplementation$(object, function(str, names) {
        return str.replace(/[^<,> ]+/g, function(m) {
          return names[m] || m;
        });
      }(H.unminifyOrTag(isField.substring(3)) + H._joinArguments(checks, 0, null), init.mangledGlobalNames)));
    },
    assertIsSubtype: function(subtype, supertype, prefix, infix, suffix) {
      H.stringTypeCheck(prefix);
      H.stringTypeCheck(infix);
      H.stringTypeCheck(suffix);
      if (!H._isSubtype(subtype, null, supertype, null))
        H.throwTypeError("TypeError: " + H.S(prefix) + H.runtimeTypeToString(subtype) + H.S(infix) + H.runtimeTypeToString(supertype) + H.S(suffix));
    },
    throwTypeError: function(message) {
      throw H.wrapException(new H.TypeErrorImplementation(H.stringTypeCheck(message)));
    },
    areSubtypes: function(s, sEnv, t, tEnv) {
      var len, i;
      if (t == null)
        return true;
      if (s == null) {
        len = t.length;
        for (i = 0; i < len; ++i)
          if (!H._isSubtype(null, null, t[i], tEnv))
            return false;
        return true;
      }
      len = s.length;
      for (i = 0; i < len; ++i)
        if (!H._isSubtype(s[i], sEnv, t[i], tEnv))
          return false;
      return true;
    },
    computeSignature: function(signature, context, contextName) {
      return signature.apply(context, H.substitute(J.getInterceptor$(context)["$as" + H.S(contextName)], H.getRuntimeTypeInfo(context)));
    },
    isSupertypeOfNullRecursive: function(type) {
      var typeArgument;
      if (typeof type === "number")
        return false;
      if ('futureOr' in type) {
        typeArgument = "type" in type ? type.type : null;
        return type == null || type.builtin$cls === "Object" || type.builtin$cls === "Null" || type === -1 || type === -2 || H.isSupertypeOfNullRecursive(typeArgument);
      }
      return false;
    },
    checkSubtypeOfRuntimeType: function(o, t) {
      var type, rti;
      if (o == null)
        return t == null || t.builtin$cls === "Object" || t.builtin$cls === "Null" || t === -1 || t === -2 || H.isSupertypeOfNullRecursive(t);
      if (t == null || t === -1 || t.builtin$cls === "Object" || t === -2)
        return true;
      if (typeof t == "object") {
        if ('futureOr' in t)
          if (H.checkSubtypeOfRuntimeType(o, "type" in t ? t.type : null))
            return true;
        if ('func' in t)
          return H.functionTypeTest(o, t);
      }
      type = J.getInterceptor$(o).constructor;
      rti = H.getRuntimeTypeInfo(o);
      if (rti != null) {
        rti = rti.slice();
        rti.splice(0, 0, type);
        type = rti;
      }
      return H._isSubtype(type, null, t, null);
    },
    subtypeOfRuntimeTypeCast: function(object, type) {
      if (object != null && !H.checkSubtypeOfRuntimeType(object, type))
        throw H.wrapException(H.CastErrorImplementation$(object, H.runtimeTypeToString(type)));
      return object;
    },
    assertSubtypeOfRuntimeType: function(object, type) {
      if (object != null && !H.checkSubtypeOfRuntimeType(object, type))
        throw H.wrapException(H.TypeErrorImplementation$(object, H.runtimeTypeToString(type)));
      return object;
    },
    _isSubtype: function(s, sEnv, t, tEnv) {
      var t1, typeOfS, tTypeArgument, futureSubstitution, futureArguments, t2, typeOfT, typeOfTString, substitution;
      if (s === t)
        return true;
      if (t == null || t === -1 || t.builtin$cls === "Object" || t === -2)
        return true;
      if (s === -2)
        return true;
      if (s == null || s === -1 || s.builtin$cls === "Object" || s === -2) {
        if (typeof t === "number")
          return false;
        if ('futureOr' in t)
          return H._isSubtype(s, sEnv, "type" in t ? t.type : null, tEnv);
        return false;
      }
      if (typeof s === "number")
        return false;
      if (typeof t === "number")
        return false;
      if (s.builtin$cls === "Null")
        return true;
      if ('func' in t)
        return H._isFunctionSubtype(s, sEnv, t, tEnv);
      if ('func' in s)
        return t.builtin$cls === "Function";
      t1 = typeof s === "object" && s !== null && s.constructor === Array;
      typeOfS = t1 ? s[0] : s;
      if ('futureOr' in t) {
        tTypeArgument = "type" in t ? t.type : null;
        if ('futureOr' in s)
          return H._isSubtype("type" in s ? s.type : null, sEnv, tTypeArgument, tEnv);
        else if (H._isSubtype(s, sEnv, tTypeArgument, tEnv))
          return true;
        else {
          if (!('$is' + "Future" in typeOfS.prototype))
            return false;
          futureSubstitution = typeOfS.prototype["$as" + "Future"];
          futureArguments = H.substitute(futureSubstitution, t1 ? s.slice(1) : null);
          return H._isSubtype(typeof futureArguments === "object" && futureArguments !== null && futureArguments.constructor === Array ? futureArguments[0] : null, sEnv, tTypeArgument, tEnv);
        }
      }
      t2 = typeof t === "object" && t !== null && t.constructor === Array;
      typeOfT = t2 ? t[0] : t;
      if (typeOfT !== typeOfS) {
        typeOfTString = typeOfT.builtin$cls;
        if (!('$is' + typeOfTString in typeOfS.prototype))
          return false;
        substitution = typeOfS.prototype["$as" + typeOfTString];
      } else
        substitution = null;
      if (!t2)
        return true;
      t1 = t1 ? s.slice(1) : null;
      t2 = t.slice(1);
      return H.areSubtypes(H.substitute(substitution, t1), sEnv, t2, tEnv);
    },
    _isFunctionSubtype: function(s, sEnv, t, tEnv) {
      var sBounds, tBounds, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, tPos, sPos, sNamedParameters, tNamedParameters;
      if (!('func' in s))
        return false;
      if ("bounds" in s) {
        if (!("bounds" in t))
          return false;
        sBounds = s.bounds;
        tBounds = t.bounds;
        if (sBounds.length !== tBounds.length)
          return false;
      } else if ("bounds" in t)
        return false;
      if (!H._isSubtype(s.ret, sEnv, t.ret, tEnv))
        return false;
      sParameterTypes = s.args;
      tParameterTypes = t.args;
      sOptionalParameterTypes = s.opt;
      tOptionalParameterTypes = t.opt;
      sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
      tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
      sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
      tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
      if (sParametersLen > tParametersLen)
        return false;
      if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
        return false;
      for (pos = 0; pos < sParametersLen; ++pos)
        if (!H._isSubtype(tParameterTypes[pos], tEnv, sParameterTypes[pos], sEnv))
          return false;
      for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos)
        if (!H._isSubtype(tParameterTypes[tPos], tEnv, sOptionalParameterTypes[sPos], sEnv))
          return false;
      for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos)
        if (!H._isSubtype(tOptionalParameterTypes[tPos], tEnv, sOptionalParameterTypes[sPos], sEnv))
          return false;
      sNamedParameters = s.named;
      tNamedParameters = t.named;
      if (tNamedParameters == null)
        return true;
      if (sNamedParameters == null)
        return false;
      return H.namedParametersSubtypeCheck(sNamedParameters, sEnv, tNamedParameters, tEnv);
    },
    namedParametersSubtypeCheck: function(s, sEnv, t, tEnv) {
      var names, t1, i, $name;
      names = Object.getOwnPropertyNames(t);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (!Object.hasOwnProperty.call(s, $name))
          return false;
        if (!H._isSubtype(t[$name], tEnv, s[$name], sEnv))
          return false;
      }
      return true;
    },
    instantiatedGenericFunctionType: function(genericFunctionRti, parameters) {
      if (genericFunctionRti == null)
        return;
      return H.finishBindInstantiatedFunctionType(genericFunctionRti, {func: 1}, parameters, 0);
    },
    finishBindInstantiatedFunctionType: function(rti, result, parameters, depth) {
      var namedParameters, boundNamed, names, t1, _i, $name;
      if ("v" in rti)
        result.v = rti.v;
      else if ("ret" in rti)
        result.ret = H.bindInstantiatedType(rti.ret, parameters, depth);
      if ("args" in rti)
        result.args = H.bindInstantiatedTypes(rti.args, parameters, depth);
      if ("opt" in rti)
        result.opt = H.bindInstantiatedTypes(rti.opt, parameters, depth);
      if ("named" in rti) {
        namedParameters = rti.named;
        boundNamed = {};
        names = Object.keys(namedParameters);
        for (t1 = names.length, _i = 0; _i < t1; ++_i) {
          $name = H.stringTypeCheck(names[_i]);
          boundNamed[$name] = H.bindInstantiatedType(namedParameters[$name], parameters, depth);
        }
        result.named = boundNamed;
      }
      return result;
    },
    bindInstantiatedType: function(rti, parameters, depth) {
      var result, bounds;
      if (rti == null)
        return rti;
      if (rti === -1)
        return rti;
      if (typeof rti == "function")
        return rti;
      if (typeof rti === "number") {
        if (rti < depth)
          return rti;
        return parameters[rti - depth];
      }
      if (typeof rti === "object" && rti !== null && rti.constructor === Array)
        return H.bindInstantiatedTypes(rti, parameters, depth);
      if ('func' in rti) {
        result = {func: 1};
        if ("bounds" in rti) {
          bounds = rti.bounds;
          depth += bounds.length;
          result.bounds = H.bindInstantiatedTypes(bounds, parameters, depth);
        }
        return H.finishBindInstantiatedFunctionType(rti, result, parameters, depth);
      }
      throw H.wrapException(P.ArgumentError$("Unknown RTI format in bindInstantiatedType."));
    },
    bindInstantiatedTypes: function(rti, parameters, depth) {
      var array, t1, i;
      array = rti.slice();
      for (t1 = array.length, i = 0; i < t1; ++i)
        C.JSArray_methods.$indexSet(array, i, H.bindInstantiatedType(array[i], parameters, depth));
      return array;
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, H.stringTypeCheck(property), {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor: function(obj) {
      var tag, record, interceptor, interceptorClass, mark, t1;
      tag = H.stringTypeCheck($.getTagFunction.call$1(obj));
      record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        tag = H.stringTypeCheck($.alternateTagFunction.call$2(obj, tag));
        if (tag != null) {
          record = $.dispatchRecordsForInstanceTags[tag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[tag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[tag];
        }
      }
      if (interceptorClass == null)
        return;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(P.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return H.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
      hooks = C.JS_CONST_bDt();
      hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_rr7, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_gkc, H.applyHooksTransformer(C.JS_CONST_4hp, H.applyHooksTransformer(C.JS_CONST_QJm(C.JS_CONST_u2C), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    stringContainsUnchecked: function(receiver, other, startIndex) {
      var t1, t2;
      if (typeof other === "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else {
        t1 = J.getInterceptor$(other);
        if (!!t1.$isJSSyntaxRegExp) {
          t1 = C.JSString_methods.substring$1(receiver, startIndex);
          t2 = other._nativeRegExp;
          return t2.test(t1);
        } else {
          t1 = t1.allMatches$1(other, C.JSString_methods.substring$1(receiver, startIndex));
          return !t1.get$isEmpty(t1);
        }
      }
    },
    stringReplaceFirstRE: function(receiver, regexp, replacement, startIndex) {
      var match = regexp._execGlobal$2(receiver, startIndex);
      if (match == null)
        return receiver;
      return H.stringReplaceRangeUnchecked(receiver, match._match.index, match.get$end(match), replacement);
    },
    stringReplaceAllUnchecked: function(receiver, pattern, replacement) {
      var $length, t1, i, nativeRegexp;
      if (typeof pattern === "string")
        if (pattern === "")
          if (receiver === "")
            return replacement;
          else {
            $length = receiver.length;
            for (t1 = replacement, i = 0; i < $length; ++i)
              t1 = t1 + receiver[i] + replacement;
            return t1.charCodeAt(0) == 0 ? t1 : t1;
          }
        else
          return receiver.replace(new RegExp(pattern.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&"), 'g'), replacement.replace(/\$/g, "$$$$"));
      else if (pattern instanceof H.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, replacement.replace(/\$/g, "$$$$"));
      } else {
        if (pattern == null)
          H.throwExpression(H.argumentErrorValue(pattern));
        throw H.wrapException("String.replaceAll(Pattern) UNIMPLEMENTED");
      }
    },
    stringReplaceFirstUnchecked: function(receiver, pattern, replacement, startIndex) {
      var index, t1, matches, match;
      if (typeof pattern === "string") {
        index = receiver.indexOf(pattern, startIndex);
        if (index < 0)
          return receiver;
        return H.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
      }
      t1 = J.getInterceptor$(pattern);
      if (!!t1.$isJSSyntaxRegExp)
        return startIndex === 0 ? receiver.replace(pattern._nativeRegExp, replacement.replace(/\$/g, "$$$$")) : H.stringReplaceFirstRE(receiver, pattern, replacement, startIndex);
      if (pattern == null)
        H.throwExpression(H.argumentErrorValue(pattern));
      t1 = t1.allMatches$2(pattern, receiver, startIndex);
      matches = H.assertSubtype(t1.get$iterator(t1), "$isIterator", [P.Match], "$asIterator");
      if (!matches.moveNext$0())
        return receiver;
      match = matches.get$current(matches);
      return C.JSString_methods.replaceRange$3(receiver, match.get$start(match), match.get$end(match), replacement);
    },
    stringReplaceRangeUnchecked: function(receiver, start, end, replacement) {
      var prefix, suffix;
      prefix = receiver.substring(0, start);
      suffix = receiver.substring(end);
      return prefix + replacement + suffix;
    },
    ConstantMapView: {
      "^": "UnmodifiableMapView;_collection$_map,$ti"
    },
    ConstantMap: {
      "^": "Object;$ti",
      toString$0: function(_) {
        return P.MapBase_mapToString(this);
      },
      $isMap: 1
    },
    ConstantStringMap: {
      "^": "ConstantMap;__js_helper$_length,__js_helper$_jsObject,__js_helper$_keys,$ti",
      get$length: function(_) {
        return this.__js_helper$_length;
      },
      containsKey$1: function(_, key) {
        if (typeof key !== "string")
          return false;
        if ("__proto__" === key)
          return false;
        return this.__js_helper$_jsObject.hasOwnProperty(key);
      },
      $index: function(_, key) {
        if (!this.containsKey$1(0, key))
          return;
        return this._fetch$1(key);
      },
      _fetch$1: function(key) {
        return this.__js_helper$_jsObject[H.stringTypeCheck(key)];
      },
      forEach$1: function(_, f) {
        var t1, keys, t2, i, key;
        t1 = H.getTypeArgumentByIndex(this, 1);
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), t1]});
        keys = this.__js_helper$_keys;
        for (t2 = keys.length, i = 0; i < t2; ++i) {
          key = keys[i];
          f.call$2(key, H.assertSubtypeOfRuntimeType(this._fetch$1(key), t1));
        }
      },
      get$keys: function(_) {
        return new H._ConstantMapKeyIterable(this, [H.getTypeArgumentByIndex(this, 0)]);
      }
    },
    _ConstantMapKeyIterable: {
      "^": "Iterable;_map,$ti",
      get$iterator: function(_) {
        var t1 = this._map.__js_helper$_keys;
        return new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      get$length: function(_) {
        return this._map.__js_helper$_keys.length;
      }
    },
    JSInvocationMirror: {
      "^": "Object;_memberName,_internalName,_kind,_arguments,_namedArgumentNames,_typeArgumentCount",
      get$memberName: function() {
        var t1 = this._memberName;
        return t1;
      },
      get$positionalArguments: function() {
        var t1, argumentCount, list, index;
        if (this._kind === 1)
          return C.List_empty;
        t1 = this._arguments;
        argumentCount = t1.length - this._namedArgumentNames.length - this._typeArgumentCount;
        if (argumentCount === 0)
          return C.List_empty;
        list = [];
        for (index = 0; index < argumentCount; ++index) {
          if (index >= t1.length)
            return H.ioore(t1, index);
          list.push(t1[index]);
        }
        return J.JSArray_markUnmodifiableList(list);
      },
      get$namedArguments: function() {
        var t1, namedArgumentCount, t2, namedArgumentsStartIndex, t3, map, i, t4, t5;
        if (this._kind !== 0)
          return C.Map_empty;
        t1 = this._namedArgumentNames;
        namedArgumentCount = t1.length;
        t2 = this._arguments;
        namedArgumentsStartIndex = t2.length - namedArgumentCount - this._typeArgumentCount;
        if (namedArgumentCount === 0)
          return C.Map_empty;
        t3 = P.Symbol0;
        map = new H.JsLinkedHashMap(0, 0, [t3, null]);
        for (i = 0; i < namedArgumentCount; ++i) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          t4 = t1[i];
          t5 = namedArgumentsStartIndex + i;
          if (t5 < 0 || t5 >= t2.length)
            return H.ioore(t2, t5);
          map.$indexSet(0, new H.Symbol(t4), t2[t5]);
        }
        return new H.ConstantMapView(map, [t3, null]);
      },
      $isInvocation: 1
    },
    ReflectionInfo: {
      "^": "Object;jsFunction,data,isAccessor,requiredParameterCount,optionalParameterCount,areOptionalParametersNamed,functionType,0cachedSortedIndices",
      defaultValue$1: function(_, parameter) {
        var t1 = this.requiredParameterCount;
        if (typeof parameter !== "number")
          return parameter.$lt();
        if (parameter < t1)
          return;
        return this.data[3 + parameter - t1];
      },
      static: {
        ReflectionInfo_ReflectionInfo: function(jsFunction) {
          var data, requiredParametersInfo, optionalParametersInfo;
          data = jsFunction.$reflectionInfo;
          if (data == null)
            return;
          data = J.JSArray_markFixedList(data);
          requiredParametersInfo = data[0];
          optionalParametersInfo = data[1];
          return new H.ReflectionInfo(jsFunction, data, (requiredParametersInfo & 2) === 2, requiredParametersInfo >> 2, optionalParametersInfo >> 1, (optionalParametersInfo & 1) === 1, data[2]);
        }
      }
    },
    Primitives_functionNoSuchMethod_closure: {
      "^": "Closure:34;_box_0,namedArgumentList,$arguments",
      call$2: function($name, argument) {
        var t1;
        H.stringTypeCheck($name);
        t1 = this._box_0;
        t1.names = t1.names + "$" + H.S($name);
        C.JSArray_methods.add$1(this.namedArgumentList, $name);
        C.JSArray_methods.add$1(this.$arguments, argument);
        ++t1.argumentCount;
      }
    },
    TypeErrorDecoder: {
      "^": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver",
      matchTypeError$1: function(message) {
        var match, result, t1;
        match = new RegExp(this._pattern).exec(message);
        if (match == null)
          return;
        result = Object.create(null);
        t1 = this._arguments;
        if (t1 !== -1)
          result.arguments = match[t1 + 1];
        t1 = this._argumentsExpr;
        if (t1 !== -1)
          result.argumentsExpr = match[t1 + 1];
        t1 = this._expr;
        if (t1 !== -1)
          result.expr = match[t1 + 1];
        t1 = this._method;
        if (t1 !== -1)
          result.method = match[t1 + 1];
        t1 = this._receiver;
        if (t1 !== -1)
          result.receiver = match[t1 + 1];
        return result;
      },
      static: {
        TypeErrorDecoder_extractPattern: function(message) {
          var match, $arguments, argumentsExpr, expr, method, receiver;
          message = message.replace(String({}), '$receiver$').replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
          match = message.match(/\\\$[a-zA-Z]+\\\$/g);
          if (match == null)
            match = H.setRuntimeTypeInfo([], [P.String]);
          $arguments = match.indexOf("\\$arguments\\$");
          argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
          expr = match.indexOf("\\$expr\\$");
          method = match.indexOf("\\$method\\$");
          receiver = match.indexOf("\\$receiver\\$");
          return new H.TypeErrorDecoder(message.replace(new RegExp('\\\\\\$arguments\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$argumentsExpr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$expr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$method\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$receiver\\\\\\$', 'g'), '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
        },
        TypeErrorDecoder_provokeCallErrorOn: function(expression) {
          return function($expr$) {
            var $argumentsExpr$ = '$arguments$';
            try {
              $expr$.$method$($argumentsExpr$);
            } catch (e) {
              return e.message;
            }
          }(expression);
        },
        TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
          return function($expr$) {
            try {
              $expr$.$method$;
            } catch (e) {
              return e.message;
            }
          }(expression);
        }
      }
    },
    NullError: {
      "^": "Error;_message,_method",
      toString$0: function(_) {
        var t1 = this._method;
        if (t1 == null)
          return "NoSuchMethodError: " + H.S(this._message);
        return "NoSuchMethodError: method not found: '" + t1 + "' on null";
      },
      static: {
        NullError$: function(_message, match) {
          return new H.NullError(_message, match == null ? null : match.method);
        }
      }
    },
    JsNoSuchMethodError: {
      "^": "Error;_message,_method,_receiver",
      toString$0: function(_) {
        var t1, t2;
        t1 = this._method;
        if (t1 == null)
          return "NoSuchMethodError: " + H.S(this._message);
        t2 = this._receiver;
        if (t2 == null)
          return "NoSuchMethodError: method not found: '" + t1 + "' (" + H.S(this._message) + ")";
        return "NoSuchMethodError: method not found: '" + t1 + "' on '" + t2 + "' (" + H.S(this._message) + ")";
      },
      static: {
        JsNoSuchMethodError$: function(_message, match) {
          var t1, t2;
          t1 = match == null;
          t2 = t1 ? null : match.method;
          return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
        }
      }
    },
    UnknownJsTypeError: {
      "^": "Error;_message",
      toString$0: function(_) {
        var t1 = this._message;
        return t1.length === 0 ? "Error" : "Error: " + t1;
      }
    },
    ExceptionAndStackTrace: {
      "^": "Object;dartException,stackTrace"
    },
    unwrapException_saveStackTrace: {
      "^": "Closure:7;ex",
      call$1: function(error) {
        if (!!J.getInterceptor$(error).$isError)
          if (error.$thrownJsError == null)
            error.$thrownJsError = this.ex;
        return error;
      }
    },
    _StackTrace: {
      "^": "Object;_exception,0_trace",
      toString$0: function(_) {
        var t1, trace;
        t1 = this._trace;
        if (t1 != null)
          return t1;
        t1 = this._exception;
        trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
        t1 = trace == null ? "" : trace;
        this._trace = t1;
        return t1;
      },
      $isStackTrace: 1
    },
    Closure: {
      "^": "Object;",
      toString$0: function(_) {
        return "Closure '" + H.Primitives_objectTypeName(this).trim() + "'";
      },
      get$$call: function() {
        return this;
      },
      $isFunction: 1,
      get$$call: function() {
        return this;
      }
    },
    TearOffClosure: {
      "^": "Closure;"
    },
    StaticClosure: {
      "^": "TearOffClosure;",
      toString$0: function(_) {
        var $name = this.$static_name;
        if ($name == null)
          return "Closure of unknown static method";
        return "Closure '" + H.unminifyOrTag($name) + "'";
      }
    },
    BoundClosure: {
      "^": "TearOffClosure;_self,_target,_receiver,__js_helper$_name",
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!(other instanceof H.BoundClosure))
          return false;
        return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
      },
      get$hashCode: function(_) {
        var t1, receiverHashCode;
        t1 = this._receiver;
        if (t1 == null)
          receiverHashCode = H.Primitives_objectHashCode(this._self);
        else
          receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
        return (receiverHashCode ^ H.Primitives_objectHashCode(this._target)) >>> 0;
      },
      toString$0: function(_) {
        var receiver = this._receiver;
        if (receiver == null)
          receiver = this._self;
        return "Closure '" + H.S(this.__js_helper$_name) + "' of " + ("Instance of '" + H.Primitives_objectTypeName(receiver) + "'");
      },
      static: {
        BoundClosure_selfOf: function(closure) {
          return closure._self;
        },
        BoundClosure_receiverOf: function(closure) {
          return closure._receiver;
        },
        BoundClosure_computeFieldNamed: function(fieldName) {
          var template, names, t1, i, $name;
          template = new H.BoundClosure("self", "target", "receiver", "name");
          names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
          for (t1 = names.length, i = 0; i < t1; ++i) {
            $name = names[i];
            if (template[$name] === fieldName)
              return $name;
          }
        }
      }
    },
    Instantiation: {
      "^": "Closure;",
      Instantiation$1: function(_genericClosure) {
        if (false)
          H.instantiatedGenericFunctionType(0, 0);
      },
      toString$0: function(_) {
        var types = "<" + C.JSArray_methods.join$1([new H.TypeImpl(H.getTypeArgumentByIndex(this, 0))], ", ") + ">";
        return H.S(this._genericClosure) + " with " + types;
      }
    },
    Instantiation1: {
      "^": "Instantiation;_genericClosure,$ti",
      call$1: function(a0) {
        return this._genericClosure.call$1$1(a0, this.$ti[0]);
      },
      call$2: function(a0, a1) {
        return this._genericClosure.call$1$2(a0, a1, this.$ti[0]);
      },
      call$4: function(a0, a1, a2, a3) {
        return this._genericClosure.call$1$4(a0, a1, a2, a3, this.$ti[0]);
      },
      $signature: function() {
        return H.instantiatedGenericFunctionType(H.extractFunctionTypeObjectFromInternal(this._genericClosure), this.$ti);
      }
    },
    TypeErrorImplementation: {
      "^": "Error;message>",
      toString$0: function(_) {
        return this.message;
      },
      static: {
        TypeErrorImplementation$: function(value, type) {
          return new H.TypeErrorImplementation("TypeError: " + H.S(P.Error_safeToString(value)) + ": type '" + H._typeDescription(value) + "' is not a subtype of type '" + type + "'");
        }
      }
    },
    CastErrorImplementation: {
      "^": "Error;message>",
      toString$0: function(_) {
        return this.message;
      },
      static: {
        CastErrorImplementation$: function(value, type) {
          return new H.CastErrorImplementation("CastError: " + H.S(P.Error_safeToString(value)) + ": type '" + H._typeDescription(value) + "' is not a subtype of type '" + type + "'");
        }
      }
    },
    RuntimeError: {
      "^": "Error;message>",
      toString$0: function(_) {
        return "RuntimeError: " + H.S(this.message);
      },
      static: {
        RuntimeError$: function(message) {
          return new H.RuntimeError(message);
        }
      }
    },
    TypeImpl: {
      "^": "Object;_rti,0__typeName,0_unmangledName,0_hashCode",
      get$_typeName: function() {
        var t1 = this.__typeName;
        if (t1 == null) {
          t1 = H.runtimeTypeToString(this._rti);
          this.__typeName = t1;
        }
        return t1;
      },
      toString$0: function(_) {
        return this.get$_typeName();
      },
      get$hashCode: function(_) {
        var t1 = this._hashCode;
        if (t1 == null) {
          t1 = C.JSString_methods.get$hashCode(this.get$_typeName());
          this._hashCode = t1;
        }
        return t1;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H.TypeImpl && this.get$_typeName() === other.get$_typeName();
      },
      $isType: 1,
      static: {
        TypeImpl$: function(_rti) {
          return new H.TypeImpl(_rti);
        }
      }
    },
    JsLinkedHashMap: {
      "^": "MapBase;__js_helper$_length,0_strings,0_nums,0_rest,0_first,0_last,_modifications,$ti",
      get$length: function(_) {
        return this.__js_helper$_length;
      },
      get$isEmpty: function(_) {
        return this.__js_helper$_length === 0;
      },
      get$keys: function(_) {
        return new H.LinkedHashMapKeyIterable(this, [H.getTypeArgumentByIndex(this, 0)]);
      },
      get$values: function(_) {
        return H.MappedIterable_MappedIterable(this.get$keys(this), new H.JsLinkedHashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
      },
      containsKey$1: function(_, key) {
        var strings, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null)
            return false;
          return this._containsTableEntry$2(strings, key);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null)
            return false;
          return this._containsTableEntry$2(nums, key);
        } else
          return this.internalContainsKey$1(key);
      },
      internalContainsKey$1: function(key) {
        var rest = this._rest;
        if (rest == null)
          return false;
        return this.internalFindBucketIndex$2(this._getTableBucket$2(rest, this.internalComputeHashCode$1(key)), key) >= 0;
      },
      $index: function(_, key) {
        var strings, cell, t1, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null)
            return;
          cell = this._getTableCell$2(strings, key);
          t1 = cell == null ? null : cell.hashMapCellValue;
          return t1;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null)
            return;
          cell = this._getTableCell$2(nums, key);
          t1 = cell == null ? null : cell.hashMapCellValue;
          return t1;
        } else
          return this.internalGet$1(key);
      },
      internalGet$1: function(key) {
        var rest, bucket, index;
        rest = this._rest;
        if (rest == null)
          return;
        bucket = this._getTableBucket$2(rest, this.internalComputeHashCode$1(key));
        index = this.internalFindBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        return bucket[index].hashMapCellValue;
      },
      $indexSet: function(_, key, value) {
        var strings, nums;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null) {
            strings = this._newHashTable$0();
            this._strings = strings;
          }
          this._addHashTableEntry$3(strings, key, value);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null) {
            nums = this._newHashTable$0();
            this._nums = nums;
          }
          this._addHashTableEntry$3(nums, key, value);
        } else
          this.internalSet$2(key, value);
      },
      internalSet$2: function(key, value) {
        var rest, hash, bucket, index;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        rest = this._rest;
        if (rest == null) {
          rest = this._newHashTable$0();
          this._rest = rest;
        }
        hash = this.internalComputeHashCode$1(key);
        bucket = this._getTableBucket$2(rest, hash);
        if (bucket == null)
          this._setTableEntry$3(rest, hash, [this._newLinkedCell$2(key, value)]);
        else {
          index = this.internalFindBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].hashMapCellValue = value;
          else
            bucket.push(this._newLinkedCell$2(key, value));
        }
      },
      putIfAbsent$2: function(_, key, ifAbsent) {
        var value;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.functionTypeCheck(ifAbsent, {func: 1, ret: H.getTypeArgumentByIndex(this, 1)});
        if (this.containsKey$1(0, key))
          return this.$index(0, key);
        value = ifAbsent.call$0();
        this.$indexSet(0, key, value);
        return value;
      },
      remove$1: function(_, key) {
        if (typeof key === "string")
          return this.__js_helper$_removeHashTableEntry$2(this._strings, key);
        else if (typeof key === "number" && (key & 0x3ffffff) === key)
          return this.__js_helper$_removeHashTableEntry$2(this._nums, key);
        else
          return this.internalRemove$1(key);
      },
      internalRemove$1: function(key) {
        var rest, bucket, index, cell;
        rest = this._rest;
        if (rest == null)
          return;
        bucket = this._getTableBucket$2(rest, this.internalComputeHashCode$1(key));
        index = this.internalFindBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        cell = bucket.splice(index, 1)[0];
        this.__js_helper$_unlinkCell$1(cell);
        return cell.hashMapCellValue;
      },
      clear$0: function(_) {
        if (this.__js_helper$_length > 0) {
          this._last = null;
          this._first = null;
          this._rest = null;
          this._nums = null;
          this._strings = null;
          this.__js_helper$_length = 0;
          this._modified$0();
        }
      },
      forEach$1: function(_, action) {
        var cell, modifications;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]});
        cell = this._first;
        modifications = this._modifications;
        for (; cell != null;) {
          action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
          if (modifications !== this._modifications)
            throw H.wrapException(P.ConcurrentModificationError$(this));
          cell = cell._next;
        }
      },
      _addHashTableEntry$3: function(table, key, value) {
        var cell;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        cell = this._getTableCell$2(table, key);
        if (cell == null)
          this._setTableEntry$3(table, key, this._newLinkedCell$2(key, value));
        else
          cell.hashMapCellValue = value;
      },
      __js_helper$_removeHashTableEntry$2: function(table, key) {
        var cell;
        if (table == null)
          return;
        cell = this._getTableCell$2(table, key);
        if (cell == null)
          return;
        this.__js_helper$_unlinkCell$1(cell);
        this._deleteTableEntry$2(table, key);
        return cell.hashMapCellValue;
      },
      _modified$0: function() {
        this._modifications = this._modifications + 1 & 67108863;
      },
      _newLinkedCell$2: function(key, value) {
        var cell, last;
        cell = new H.LinkedHashMapCell(H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1)));
        if (this._first == null) {
          this._last = cell;
          this._first = cell;
        } else {
          last = this._last;
          cell._previous = last;
          last._next = cell;
          this._last = cell;
        }
        ++this.__js_helper$_length;
        this._modified$0();
        return cell;
      },
      __js_helper$_unlinkCell$1: function(cell) {
        var previous, next;
        previous = cell._previous;
        next = cell._next;
        if (previous == null)
          this._first = next;
        else
          previous._next = next;
        if (next == null)
          this._last = previous;
        else
          next._previous = previous;
        --this.__js_helper$_length;
        this._modified$0();
      },
      internalComputeHashCode$1: function(key) {
        return J.get$hashCode$(key) & 0x3ffffff;
      },
      internalFindBucketIndex$2: function(bucket, key) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i)
          if (J.$eq$(bucket[i].hashMapCellKey, key))
            return i;
        return -1;
      },
      toString$0: function(_) {
        return P.MapBase_mapToString(this);
      },
      _getTableCell$2: function(table, key) {
        return table[key];
      },
      _getTableBucket$2: function(table, key) {
        return table[key];
      },
      _setTableEntry$3: function(table, key, value) {
        table[key] = value;
      },
      _deleteTableEntry$2: function(table, key) {
        delete table[key];
      },
      _containsTableEntry$2: function(table, key) {
        return this._getTableCell$2(table, key) != null;
      },
      _newHashTable$0: function() {
        var table = Object.create(null);
        this._setTableEntry$3(table, "<non-identifier-key>", table);
        this._deleteTableEntry$2(table, "<non-identifier-key>");
        return table;
      },
      $isLinkedHashMap: 1
    },
    JsLinkedHashMap_values_closure: {
      "^": "Closure;$this",
      call$1: [function(each) {
        var t1 = this.$this;
        return t1.$index(0, H.assertSubtypeOfRuntimeType(each, H.getTypeArgumentByIndex(t1, 0)));
      }, null, null, 4, 0, null, 46, "call"],
      $signature: function() {
        var t1 = this.$this;
        return {func: 1, ret: H.getTypeArgumentByIndex(t1, 1), args: [H.getTypeArgumentByIndex(t1, 0)]};
      }
    },
    LinkedHashMapCell: {
      "^": "Object;hashMapCellKey,hashMapCellValue,0_next,0_previous"
    },
    LinkedHashMapKeyIterable: {
      "^": "EfficientLengthIterable;_map,$ti",
      get$length: function(_) {
        return this._map.__js_helper$_length;
      },
      get$isEmpty: function(_) {
        return this._map.__js_helper$_length === 0;
      },
      get$iterator: function(_) {
        var t1, t2;
        t1 = this._map;
        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti);
        t2._cell = t1._first;
        return t2;
      },
      contains$1: function(_, element) {
        return this._map.containsKey$1(0, element);
      },
      forEach$1: function(_, f) {
        var t1, cell, modifications;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = this._map;
        cell = t1._first;
        modifications = t1._modifications;
        for (; cell != null;) {
          f.call$1(cell.hashMapCellKey);
          if (modifications !== t1._modifications)
            throw H.wrapException(P.ConcurrentModificationError$(t1));
          cell = cell._next;
        }
      }
    },
    LinkedHashMapKeyIterator: {
      "^": "Object;_map,_modifications,0_cell,0_current,$ti",
      set$_current: function(_current) {
        this._current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this._current;
      },
      moveNext$0: function() {
        var t1 = this._map;
        if (this._modifications !== t1._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        else {
          t1 = this._cell;
          if (t1 == null) {
            this.set$_current(null);
            return false;
          } else {
            this.set$_current(t1.hashMapCellKey);
            this._cell = this._cell._next;
            return true;
          }
        }
      },
      $isIterator: 1
    },
    initHooks_closure: {
      "^": "Closure:7;getTag",
      call$1: function(o) {
        return this.getTag(o);
      }
    },
    initHooks_closure0: {
      "^": "Closure:64;getUnknownTag",
      call$2: function(o, tag) {
        return this.getUnknownTag(o, tag);
      }
    },
    initHooks_closure1: {
      "^": "Closure:172;prototypeForTag",
      call$1: function(tag) {
        return this.prototypeForTag(H.stringTypeCheck(tag));
      }
    },
    JSSyntaxRegExp: {
      "^": "Object;pattern,_nativeRegExp,0_nativeGlobalRegExp,0_nativeAnchoredRegExp",
      toString$0: function(_) {
        return "RegExp/" + this.pattern + "/";
      },
      get$_nativeGlobalVersion: function() {
        var t1 = this._nativeGlobalRegExp;
        if (t1 != null)
          return t1;
        t1 = this._nativeRegExp;
        t1 = H.JSSyntaxRegExp_makeNative(this.pattern, t1.multiline, !t1.ignoreCase, true);
        this._nativeGlobalRegExp = t1;
        return t1;
      },
      get$_nativeAnchoredVersion: function() {
        var t1 = this._nativeAnchoredRegExp;
        if (t1 != null)
          return t1;
        t1 = this._nativeRegExp;
        t1 = H.JSSyntaxRegExp_makeNative(this.pattern + "|()", t1.multiline, !t1.ignoreCase, true);
        this._nativeAnchoredRegExp = t1;
        return t1;
      },
      firstMatch$1: function(string) {
        var m;
        if (typeof string !== "string")
          H.throwExpression(H.argumentErrorValue(string));
        m = this._nativeRegExp.exec(string);
        if (m == null)
          return;
        return new H._MatchImplementation(this, m);
      },
      allMatches$2: function(_, string, start) {
        if (start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return new H._AllMatchesIterable(this, string, start);
      },
      allMatches$1: function($receiver, string) {
        return this.allMatches$2($receiver, string, 0);
      },
      _execGlobal$2: function(string, start) {
        var regexp, match;
        regexp = this.get$_nativeGlobalVersion();
        regexp.lastIndex = start;
        match = regexp.exec(string);
        if (match == null)
          return;
        return new H._MatchImplementation(this, match);
      },
      _execAnchored$2: function(string, start) {
        var regexp, match;
        regexp = this.get$_nativeAnchoredVersion();
        regexp.lastIndex = start;
        match = regexp.exec(string);
        if (match == null)
          return;
        if (0 >= match.length)
          return H.ioore(match, -1);
        if (match.pop() != null)
          return;
        return new H._MatchImplementation(this, match);
      },
      matchAsPrefix$2: function(_, string, start) {
        if (typeof start !== "number")
          return start.$lt();
        if (start < 0 || start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return this._execAnchored$2(string, start);
      },
      $isPattern: 1,
      $isRegExp: 1,
      static: {
        JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, global) {
          var m, i, g, regexp;
          m = multiLine ? "m" : "";
          i = caseSensitive ? "" : "i";
          g = global ? "g" : "";
          regexp = function(source, modifiers) {
            try {
              return new RegExp(source, modifiers);
            } catch (e) {
              return e;
            }
          }(source, m + i + g);
          if (regexp instanceof RegExp)
            return regexp;
          throw H.wrapException(P.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
        }
      }
    },
    _MatchImplementation: {
      "^": "Object;pattern,_match",
      get$start: function(_) {
        return this._match.index;
      },
      get$end: function(_) {
        var t1 = this._match;
        return t1.index + t1[0].length;
      },
      $isMatch: 1
    },
    _AllMatchesIterable: {
      "^": "IterableBase;_re,_string,_start",
      get$iterator: function(_) {
        return new H._AllMatchesIterator(this._re, this._string, this._start);
      },
      $asIterable: function() {
        return [P.Match];
      }
    },
    _AllMatchesIterator: {
      "^": "Object;_regExp,_string,_nextIndex,0_current",
      get$current: function(_) {
        return this._current;
      },
      moveNext$0: function() {
        var t1, t2, match, nextIndex;
        t1 = this._string;
        if (t1 == null)
          return false;
        t2 = this._nextIndex;
        if (t2 <= t1.length) {
          match = this._regExp._execGlobal$2(t1, t2);
          if (match != null) {
            this._current = match;
            nextIndex = match.get$end(match);
            this._nextIndex = match._match.index === nextIndex ? nextIndex + 1 : nextIndex;
            return true;
          }
        }
        this._current = null;
        this._string = null;
        return false;
      },
      $isIterator: 1,
      $asIterator: function() {
        return [P.Match];
      }
    },
    StringMatch: {
      "^": "Object;start>,input,pattern",
      get$end: function(_) {
        var t1 = this.start;
        if (typeof t1 !== "number")
          return t1.$add();
        return t1 + this.pattern.length;
      },
      $isMatch: 1
    },
    _StringAllMatchesIterable: {
      "^": "Iterable;_input,_pattern,_index",
      get$iterator: function(_) {
        return new H._StringAllMatchesIterator(this._input, this._pattern, this._index);
      },
      $asIterable: function() {
        return [P.Match];
      }
    },
    _StringAllMatchesIterator: {
      "^": "Object;_input,_pattern,_index,0_current",
      moveNext$0: function() {
        var t1, t2, t3, t4, t5, index, end;
        t1 = this._index;
        t2 = this._pattern;
        t3 = t2.length;
        t4 = this._input;
        t5 = t4.length;
        if (t1 + t3 > t5) {
          this._current = null;
          return false;
        }
        index = t4.indexOf(t2, t1);
        if (index < 0) {
          this._index = t5 + 1;
          this._current = null;
          return false;
        }
        end = index + t3;
        this._current = new H.StringMatch(index, t4, t2);
        this._index = end === this._index ? end + 1 : end;
        return true;
      },
      get$current: function(_) {
        return this._current;
      },
      $isIterator: 1,
      $asIterator: function() {
        return [P.Match];
      }
    }
  }], ["dart._js_names", "dart:_js_names",, H, {
    "^": "",
    extractKeys: function(victim) {
      return J.JSArray_JSArray$markFixed(victim ? Object.keys(victim) : [], null);
    }
  }], ["dart2js._js_primitives", "dart:_js_primitives",, H, {
    "^": "",
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  }], ["dart.typed_data.implementation", "dart:_native_typed_data",, H, {
    "^": "",
    _checkValidIndex: function(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw H.wrapException(H.diagnoseIndexError(list, index));
    },
    _checkValidRange: function(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw H.wrapException(H.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: {
      "^": "Interceptor;",
      $isNativeByteBuffer: 1,
      "%": "ArrayBuffer"
    },
    NativeTypedData: {
      "^": "Interceptor;",
      $isNativeTypedData: 1,
      $isTypedData: 1,
      "%": "DataView;ArrayBufferView;NativeTypedArray|_NativeTypedArrayOfDouble_NativeTypedArray_ListMixin|_NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin|NativeTypedArrayOfDouble|_NativeTypedArrayOfInt_NativeTypedArray_ListMixin|_NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin|NativeTypedArrayOfInt"
    },
    NativeTypedArray: {
      "^": "NativeTypedData;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: Isolate.functionThatReturnsNull
    },
    NativeTypedArrayOfDouble: {
      "^": "_NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin;",
      $index: function(receiver, index) {
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.doubleTypeCheck(value);
        H._checkValidIndex(index, receiver, receiver.length);
        receiver[index] = value;
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.double];
      },
      $asFixedLengthListMixin: function() {
        return [P.double];
      },
      $asListMixin: function() {
        return [P.double];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.double];
      },
      $isList: 1,
      $asList: function() {
        return [P.double];
      },
      "%": "Float32Array|Float64Array"
    },
    NativeTypedArrayOfInt: {
      "^": "_NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin;",
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.intTypeCheck(value);
        H._checkValidIndex(index, receiver, receiver.length);
        receiver[index] = value;
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.int];
      },
      $asFixedLengthListMixin: function() {
        return [P.int];
      },
      $asListMixin: function() {
        return [P.int];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.int];
      },
      $isList: 1,
      $asList: function() {
        return [P.int];
      }
    },
    NativeInt16List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "Int16Array"
    },
    NativeInt32List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "Int32Array"
    },
    NativeInt8List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "Int8Array"
    },
    NativeUint16List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "Uint16Array"
    },
    NativeUint32List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "Uint32Array"
    },
    NativeUint8ClampedList: {
      "^": "NativeTypedArrayOfInt;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "CanvasPixelArray|Uint8ClampedArray"
    },
    NativeUint8List: {
      "^": "NativeTypedArrayOfInt;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint8Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      "%": ";Uint8Array"
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: {
      "^": "NativeTypedArray+ListMixin;"
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: {
      "^": "_NativeTypedArrayOfDouble_NativeTypedArray_ListMixin+FixedLengthListMixin;"
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: {
      "^": "NativeTypedArray+ListMixin;"
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: {
      "^": "_NativeTypedArrayOfInt_NativeTypedArray_ListMixin+FixedLengthListMixin;"
    }
  }], ["dart.async", "dart:async",, P, {
    "^": "",
    _AsyncRun__initializeScheduleImmediate: function() {
      var t1, div, span;
      t1 = {};
      if (self.scheduleImmediate != null)
        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: [function(callback) {
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(H.functionTypeCheck(callback, {func: 1, ret: -1})), 0));
    }, "call$1", "async__AsyncRun__scheduleImmediateJsOverride$closure", 4, 0, 29],
    _AsyncRun__scheduleImmediateWithSetImmediate: [function(callback) {
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(H.functionTypeCheck(callback, {func: 1, ret: -1})), 0));
    }, "call$1", "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", 4, 0, 29],
    _AsyncRun__scheduleImmediateWithTimer: [function(callback) {
      P.Timer__createTimer(C.Duration_0, H.functionTypeCheck(callback, {func: 1, ret: -1}));
    }, "call$1", "async__AsyncRun__scheduleImmediateWithTimer$closure", 4, 0, 29],
    Timer__createTimer: function(duration, callback) {
      var milliseconds;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _makeAsyncAwaitCompleter: function($T) {
      return new P._AsyncAwaitCompleter(new P._SyncCompleter(new P._Future(0, $.Zone__current, [$T]), [$T]), false, [$T]);
    },
    _asyncStartSync: function(bodyFunction, completer) {
      H.functionTypeCheck(bodyFunction, {func: 1, ret: -1, args: [P.int,,]});
      H.interceptedTypeCheck(completer, "$is_AsyncAwaitCompleter");
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._completer.future;
    },
    _asyncAwait: function(object, bodyFunction) {
      P._awaitOnObject(object, H.functionTypeCheck(bodyFunction, {func: 1, ret: -1, args: [P.int,,]}));
    },
    _asyncReturn: function(object, completer) {
      H.interceptedTypeCheck(completer, "$isCompleter").complete$1(0, object);
    },
    _asyncRethrow: function(object, completer) {
      H.interceptedTypeCheck(completer, "$isCompleter").completeError$2(H.unwrapException(object), H.getTraceFromException(object));
    },
    _awaitOnObject: function(object, bodyFunction) {
      var thenCallback, errorCallback, t1, t2, future;
      H.functionTypeCheck(bodyFunction, {func: 1, ret: -1, args: [P.int,,]});
      thenCallback = new P._awaitOnObject_closure(bodyFunction);
      errorCallback = new P._awaitOnObject_closure0(bodyFunction);
      t1 = J.getInterceptor$(object);
      if (!!t1.$is_Future)
        object._thenNoZoneRegistration$1$2(H.functionTypeCheck(thenCallback, {func: 1, ret: {futureOr: 1}, args: [,]}), errorCallback, null);
      else {
        t2 = {func: 1, ret: {futureOr: 1}, args: [,]};
        if (!!t1.$isFuture)
          object.then$1$2$onError(H.functionTypeCheck(thenCallback, t2), errorCallback, null);
        else {
          future = new P._Future(0, $.Zone__current, [null]);
          H.assertSubtypeOfRuntimeType(object, null);
          future._state = 4;
          future._resultOrListeners = object;
          future._thenNoZoneRegistration$1$2(H.functionTypeCheck(thenCallback, t2), null, null);
        }
      }
    },
    _wrapJsFunctionForAsync: function($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new P._wrapJsFunctionForAsync_closure($protected), P.Null, P.int, null);
    },
    _asyncStarHelper: function(object, bodyFunctionOrErrorCode, controller) {
      var t1, t2, stream;
      H.interceptedTypeCheck(controller, "$is_AsyncStarStreamController");
      if (bodyFunctionOrErrorCode === 0) {
        t1 = controller.cancelationCompleter;
        if (t1 != null)
          t1.complete$0(0);
        else
          controller.controller.close$0(0);
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        t1 = controller.cancelationCompleter;
        if (t1 != null)
          t1.completeError$2(H.unwrapException(object), H.getTraceFromException(object));
        else {
          t1 = H.unwrapException(object);
          t2 = H.getTraceFromException(object);
          controller.controller.addError$2(t1, t2);
          controller.controller.close$0(0);
        }
        return;
      }
      if (object instanceof P._IterationMarker) {
        if (controller.cancelationCompleter != null) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          t1 = object.value;
          controller.controller.add$1(0, H.assertSubtypeOfRuntimeType(t1, H.getTypeArgumentByIndex(controller, 0)));
          P.scheduleMicrotask(new P._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));
          return;
        } else if (t1 === 1) {
          stream = H.interceptedTypeCheck(object.value, "$isStream");
          controller.toString;
          H.assertSubtype(stream, "$isStream", [H.getTypeArgumentByIndex(controller, 0)], "$asStream");
          controller.controller.addStream$2$cancelOnError(0, stream, false).then$1(new P._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode));
          return;
        }
      }
      P._awaitOnObject(object, H.functionTypeCheck(bodyFunctionOrErrorCode, {func: 1, ret: -1, args: [P.int,,]}));
    },
    _streamOfController: function(controller) {
      var t1 = H.interceptedTypeCheck(controller, "$is_AsyncStarStreamController").controller;
      t1.toString;
      return new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
    },
    _makeAsyncStarStreamController: function(body, $T) {
      return P._AsyncStarStreamController$(H.functionTypeCheck(body, {func: 1, ret: -1, args: [P.int,,]}), $T);
    },
    _makeSyncStarIterable: function(body, $T) {
      return new P._SyncStarIterable(body, [$T]);
    },
    Future_Future: function(computation, $T) {
      var result;
      H.functionTypeCheck(computation, {func: 1, ret: {futureOr: 1, type: $T}});
      result = new P._Future(0, $.Zone__current, [$T]);
      P.Timer_Timer(C.Duration_0, new P.Future_Future_closure(result, computation));
      return result;
    },
    _registerErrorHandler: function(errorHandler, zone) {
      if (H.functionTypeTest(errorHandler, {func: 1, args: [P.Object, P.StackTrace]}))
        return zone.registerBinaryCallback$3$1(errorHandler, null, P.Object, P.StackTrace);
      if (H.functionTypeTest(errorHandler, {func: 1, args: [P.Object]}))
        return zone.registerUnaryCallback$2$1(errorHandler, null, P.Object);
      throw H.wrapException(P.ArgumentError$value(errorHandler, "onError", "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a a valid result"));
    },
    _microtaskLoop: function() {
      var t1, t2;
      for (; t1 = $._nextCallback, t1 != null;) {
        $._lastPriorityCallback = null;
        t2 = t1.next;
        $._nextCallback = t2;
        if (t2 == null)
          $._lastCallback = null;
        t1.callback.call$0();
      }
    },
    _startMicrotaskLoop: [function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      }
    }, "call$0", "async___startMicrotaskLoop$closure", 0, 0, 1],
    _scheduleAsyncCallback: function(callback) {
      var newEntry = new P._AsyncCallbackEntry(H.functionTypeCheck(callback, {func: 1, ret: -1}));
      if ($._nextCallback == null) {
        $._lastCallback = newEntry;
        $._nextCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      } else {
        $._lastCallback.next = newEntry;
        $._lastCallback = newEntry;
      }
    },
    _schedulePriorityAsyncCallback: function(callback) {
      var t1, entry, t2;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      t1 = $._nextCallback;
      if (t1 == null) {
        P._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new P._AsyncCallbackEntry(callback);
      t2 = $._lastPriorityCallback;
      if (t2 == null) {
        entry.next = t1;
        $._lastPriorityCallback = entry;
        $._nextCallback = entry;
      } else {
        entry.next = t2.next;
        t2.next = entry;
        $._lastPriorityCallback = entry;
        if (entry.next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask: function(callback) {
      var currentZone, t1;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      currentZone = $.Zone__current;
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(null, null, C.C__RootZone, callback);
        return;
      }
      if (C.C__RootZone === currentZone.get$_scheduleMicrotask().zone)
        t1 = C.C__RootZone.get$errorZone() === currentZone.get$errorZone();
      else
        t1 = false;
      if (t1) {
        P._rootScheduleMicrotask(null, null, currentZone, currentZone.registerCallback$1$1(callback, -1));
        return;
      }
      t1 = $.Zone__current;
      t1.scheduleMicrotask$1(t1.bindCallbackGuarded$1(callback));
    },
    Stream_Stream$fromFuture: function(future, $T) {
      var controller;
      H.assertSubtype(future, "$isFuture", [$T], "$asFuture");
      controller = H.assertSubtype(P.StreamController_StreamController(null, null, null, null, true, $T), "$is_StreamController", [$T], "$as_StreamController");
      future.then$1$2$onError(new P.Stream_Stream$fromFuture_closure(controller, $T), new P.Stream_Stream$fromFuture_closure0(controller), null);
      return new P._ControllerStream(controller, [H.getTypeArgumentByIndex(controller, 0)]);
    },
    Stream_Stream$fromIterable: function(elements, $T) {
      return new P._GeneratedStreamImpl(new P.Stream_Stream$fromIterable_closure(H.assertSubtype(elements, "$isIterable", [$T], "$asIterable"), $T), false, [$T]);
    },
    StreamIterator_StreamIterator: function(stream, $T) {
      return new P._StreamIterator(H.assertSubtype(stream, "$isStream", [$T], "$asStream"), false, [$T]);
    },
    StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
      var t1 = {func: 1, ret: -1};
      H.functionTypeCheck(onListen, t1);
      H.functionTypeCheck(onResume, t1);
      H.functionTypeCheck(onCancel, {func: 1});
      return sync ? new P._SyncStreamController(0, onListen, onPause, onResume, onCancel, [$T]) : new P._AsyncStreamController(0, onListen, onPause, onResume, onCancel, [$T]);
    },
    _runGuarded: function(notificationHandler) {
      var e, s, exception;
      H.functionTypeCheck(notificationHandler, {func: 1});
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        $.Zone__current.handleUncaughtError$2(e, s);
      }
    },
    _nullDataHandler: [function(value) {
    }, "call$1", "async___nullDataHandler$closure", 4, 0, 8, 1],
    _nullErrorHandler: [function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      $.Zone__current.handleUncaughtError$2(error, stackTrace);
    }, function(error) {
      return P._nullErrorHandler(error, null);
    }, "call$2", "call$1", "async___nullErrorHandler$closure", 4, 2, 15, 3, 4, 5],
    _nullDoneHandler: [function() {
    }, "call$0", "async___nullDoneHandler$closure", 0, 0, 1],
    Timer_Timer: function(duration, callback) {
      var t1;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return t1.createTimer$2(duration, callback);
      return t1.createTimer$2(duration, t1.bindCallbackGuarded$1(callback));
    },
    _parentDelegate: function(zone) {
      if (zone.get$parent(zone) == null)
        return;
      return zone.get$parent(zone).get$_delegate();
    },
    _rootHandleUncaughtError: [function($self, $parent, zone, error, stackTrace) {
      var t1 = {};
      t1.error = error;
      P._schedulePriorityAsyncCallback(new P._rootHandleUncaughtError_closure(t1, H.interceptedTypeCheck(stackTrace, "$isStackTrace")));
    }, "call$5", "async___rootHandleUncaughtError$closure", 20, 0, 61],
    _rootRun: [1, function($self, $parent, zone, f, $R) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R});
      t1 = $.Zone__current;
      if (t1 == null ? zone == null : t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    }, function($self, $parent, zone, f) {
      return P._rootRun($self, $parent, zone, f, null);
    }, "call$1$4", "call$4", "async___rootRun$closure", 16, 0, 43, 11, 14, 16, 20],
    _rootRunUnary: [1, function($self, $parent, zone, f, arg, $R, $T) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      t1 = $.Zone__current;
      if (t1 == null ? zone == null : t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    }, function($self, $parent, zone, f, arg) {
      return P._rootRunUnary($self, $parent, zone, f, arg, null, null);
    }, "call$2$5", "call$5", "async___rootRunUnary$closure", 20, 0, 50, 11, 14, 16, 20, 18],
    _rootRunBinary: [1, function($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      t1 = $.Zone__current;
      if (t1 == null ? zone == null : t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    }, function($self, $parent, zone, f, arg1, arg2) {
      return P._rootRunBinary($self, $parent, zone, f, arg1, arg2, null, null, null);
    }, "call$3$6", "call$6", "async___rootRunBinary$closure", 24, 0, 55, 11, 14, 16, 20, 19, 22],
    _rootRegisterCallback: [function($self, $parent, zone, f, $R) {
      return H.functionTypeCheck(f, {func: 1, ret: $R});
    }, function($self, $parent, zone, f) {
      return P._rootRegisterCallback($self, $parent, zone, f, null);
    }, "call$1$4", "call$4", "async___rootRegisterCallback$closure", 16, 0, 142],
    _rootRegisterUnaryCallback: [function($self, $parent, zone, f, $R, $T) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
    }, function($self, $parent, zone, f) {
      return P._rootRegisterUnaryCallback($self, $parent, zone, f, null, null);
    }, "call$2$4", "call$4", "async___rootRegisterUnaryCallback$closure", 16, 0, 143],
    _rootRegisterBinaryCallback: [function($self, $parent, zone, f, $R, T1, T2) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
    }, function($self, $parent, zone, f) {
      return P._rootRegisterBinaryCallback($self, $parent, zone, f, null, null, null);
    }, "call$3$4", "call$4", "async___rootRegisterBinaryCallback$closure", 16, 0, 144],
    _rootErrorCallback: [function($self, $parent, zone, error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      return;
    }, "call$5", "async___rootErrorCallback$closure", 20, 0, 145],
    _rootScheduleMicrotask: [function($self, $parent, zone, f) {
      var t1;
      H.functionTypeCheck(f, {func: 1, ret: -1});
      t1 = C.C__RootZone !== zone;
      if (t1)
        f = !(!t1 || C.C__RootZone.get$errorZone() === zone.get$errorZone()) ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, -1);
      P._scheduleAsyncCallback(f);
    }, "call$4", "async___rootScheduleMicrotask$closure", 16, 0, 36],
    _rootCreateTimer: [function($self, $parent, zone, duration, callback) {
      H.interceptedTypeCheck(duration, "$isDuration");
      callback = zone.bindCallback$1$1(H.functionTypeCheck(callback, {func: 1, ret: -1}), -1);
      return P.Timer__createTimer(duration, callback);
    }, "call$5", "async___rootCreateTimer$closure", 20, 0, 31],
    _rootCreatePeriodicTimer: [function($self, $parent, zone, duration, callback) {
      var milliseconds;
      H.interceptedTypeCheck(duration, "$isDuration");
      callback = zone.bindUnaryCallback$2$1(H.functionTypeCheck(callback, {func: 1, ret: -1, args: [P.Timer]}), null, P.Timer);
      milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
    }, "call$5", "async___rootCreatePeriodicTimer$closure", 20, 0, 146],
    _rootPrint: [function($self, $parent, zone, line) {
      H.printString(H.S(H.stringTypeCheck(line)));
    }, "call$4", "async___rootPrint$closure", 16, 0, 147],
    _printToZone: [function(line) {
      $.Zone__current.print$1(0, line);
    }, "call$1", "async___printToZone$closure", 4, 0, 148],
    _rootFork: [function($self, $parent, zone, specification, zoneValues) {
      var valueMap, t1, t2;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.interceptedTypeCheck(specification, "$isZoneSpecification");
      H.interceptedTypeCheck(zoneValues, "$isMap");
      $.printToZone = P.async___printToZone$closure();
      if (specification == null)
        specification = C._ZoneSpecification_ALf;
      if (zoneValues == null)
        valueMap = zone instanceof P._Zone ? zone.get$_async$_map() : P.HashMap_HashMap(null, null, null, null, null);
      else
        valueMap = P.HashMap_HashMap$from(zoneValues, null, null);
      t1 = new P._CustomZone(zone, valueMap);
      t2 = specification.run;
      t1.set$_async$_run(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_async$_run());
      t2 = specification.runUnary;
      t1.set$_async$_runUnary(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_async$_runUnary());
      t2 = specification.runBinary;
      t1.set$_async$_runBinary(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_async$_runBinary());
      t2 = specification.registerCallback;
      t1.set$_registerCallback(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_registerCallback());
      t2 = specification.registerUnaryCallback;
      t1.set$_registerUnaryCallback(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_registerUnaryCallback());
      t2 = specification.registerBinaryCallback;
      t1.set$_registerBinaryCallback(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_registerBinaryCallback());
      t2 = specification.errorCallback;
      t1.set$_errorCallback(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]) : zone.get$_errorCallback());
      t2 = specification.scheduleMicrotask;
      t1.set$_scheduleMicrotask(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}]) : zone.get$_scheduleMicrotask());
      t2 = specification.createTimer;
      t1.set$_async$_createTimer(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}]) : zone.get$_async$_createTimer());
      t2 = zone.get$_createPeriodicTimer();
      t1.set$_createPeriodicTimer(t2);
      t2 = zone.get$_print();
      t1.set$_print(t2);
      t2 = zone.get$_fork();
      t1.set$_fork(t2);
      t2 = specification.handleUncaughtError;
      t1.set$_handleUncaughtError(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]) : zone.get$_handleUncaughtError());
      return t1;
    }, "call$5", "async___rootFork$closure", 20, 0, 149, 11, 14, 16, 44, 45],
    _AsyncRun__initializeScheduleImmediate_internalCallback: {
      "^": "Closure:3;_box_0",
      call$1: [function(_) {
        var t1, f;
        t1 = this._box_0;
        f = t1.storedCallback;
        t1.storedCallback = null;
        f.call$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    _AsyncRun__initializeScheduleImmediate_closure: {
      "^": "Closure:66;_box_0,div,span",
      call$1: function(callback) {
        var t1, t2;
        this._box_0.storedCallback = H.functionTypeCheck(callback, {func: 1, ret: -1});
        t1 = this.div;
        t2 = this.span;
        t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
      }
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: {
      "^": "Closure:0;callback",
      call$0: [function() {
        this.callback.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: {
      "^": "Closure:0;callback",
      call$0: [function() {
        this.callback.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _TimerImpl: {
      "^": "Object;_once,0_handle,_tick",
      _TimerImpl$2: function(milliseconds, callback) {
        if (self.setTimeout != null)
          this._handle = self.setTimeout(H.convertDartClosureToJS(new P._TimerImpl_internalCallback(this, callback), 0), milliseconds);
        else
          throw H.wrapException(P.UnsupportedError$("`setTimeout()` not found."));
      },
      _TimerImpl$periodic$2: function(milliseconds, callback) {
        if (self.setTimeout != null)
          this._handle = self.setInterval(H.convertDartClosureToJS(new P._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);
        else
          throw H.wrapException(P.UnsupportedError$("Periodic timer."));
      },
      cancel$0: function(_) {
        var t1;
        if (self.setTimeout != null) {
          t1 = this._handle;
          if (t1 == null)
            return;
          if (this._once)
            self.clearTimeout(t1);
          else
            self.clearInterval(t1);
          this._handle = null;
        } else
          throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
      },
      $isTimer: 1,
      static: {
        _TimerImpl$: function(milliseconds, callback) {
          var t1 = new P._TimerImpl(true, 0);
          t1._TimerImpl$2(milliseconds, callback);
          return t1;
        },
        _TimerImpl$periodic: function(milliseconds, callback) {
          var t1 = new P._TimerImpl(false, 0);
          t1._TimerImpl$periodic$2(milliseconds, callback);
          return t1;
        }
      }
    },
    _TimerImpl_internalCallback: {
      "^": "Closure:1;$this,callback",
      call$0: [function() {
        var t1 = this.$this;
        t1._handle = null;
        t1._tick = 1;
        this.callback.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _TimerImpl$periodic_closure: {
      "^": "Closure:0;$this,milliseconds,start,callback",
      call$0: [function() {
        var t1, tick, t2, duration;
        t1 = this.$this;
        tick = t1._tick + 1;
        t2 = this.milliseconds;
        if (t2 > 0) {
          duration = Date.now() - this.start;
          if (duration > (tick + 1) * t2)
            tick = C.JSInt_methods.$tdiv(duration, t2);
        }
        t1._tick = tick;
        this.callback.call$1(t1);
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncAwaitCompleter: {
      "^": "Object;_completer,isSync,$ti",
      complete$1: function(_, value) {
        var t1;
        H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
        if (this.isSync)
          this._completer.complete$1(0, value);
        else if (H.checkSubtype(value, "$isFuture", this.$ti, "$asFuture")) {
          t1 = this._completer;
          value.then$1$2$onError(t1.get$complete(t1), t1.get$completeError(), -1);
        } else
          P.scheduleMicrotask(new P._AsyncAwaitCompleter_complete_closure(this, value));
      },
      completeError$2: function(e, st) {
        if (this.isSync)
          this._completer.completeError$2(e, st);
        else
          P.scheduleMicrotask(new P._AsyncAwaitCompleter_completeError_closure(this, e, st));
      },
      $isCompleter: 1
    },
    _AsyncAwaitCompleter_complete_closure: {
      "^": "Closure:0;$this,value",
      call$0: [function() {
        this.$this._completer.complete$1(0, this.value);
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncAwaitCompleter_completeError_closure: {
      "^": "Closure:0;$this,e,st",
      call$0: [function() {
        this.$this._completer.completeError$2(this.e, this.st);
      }, null, null, 0, 0, null, "call"]
    },
    _awaitOnObject_closure: {
      "^": "Closure:2;bodyFunction",
      call$1: [function(result) {
        return this.bodyFunction.call$2(0, result);
      }, null, null, 4, 0, null, 8, "call"]
    },
    _awaitOnObject_closure0: {
      "^": "Closure:106;bodyFunction",
      call$2: [function(error, stackTrace) {
        this.bodyFunction.call$2(1, new H.ExceptionAndStackTrace(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace")));
      }, null, null, 8, 0, null, 4, 5, "call"]
    },
    _wrapJsFunctionForAsync_closure: {
      "^": "Closure:170;$protected",
      call$2: [function(errorCode, result) {
        this.$protected(H.intTypeCheck(errorCode), result);
      }, null, null, 8, 0, null, 48, 8, "call"]
    },
    _asyncStarHelper_closure: {
      "^": "Closure:0;controller,bodyFunctionOrErrorCode",
      call$0: [function() {
        var t1, t2;
        t1 = this.controller;
        t2 = t1.controller;
        if ((t2.get$_state() & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t2.get$_state() & 2) === 0) {
          t1.isSuspended = true;
          return;
        }
        this.bodyFunctionOrErrorCode.call$2(null, 0);
      }, null, null, 0, 0, null, "call"]
    },
    _asyncStarHelper_closure0: {
      "^": "Closure:3;controller,bodyFunctionOrErrorCode",
      call$1: [function(_) {
        var errorCode = this.controller.cancelationCompleter != null ? 2 : 0;
        this.bodyFunctionOrErrorCode.call$2(errorCode, null);
      }, null, null, 4, 0, null, 0, "call"]
    },
    _AsyncStarStreamController: {
      "^": "Object;0controller,isSuspended,0cancelationCompleter,$ti",
      set$controller: function(_, controller) {
        this.controller = H.assertSubtype(controller, "$isStreamController", this.$ti, "$asStreamController");
      },
      add$1: function(_, $event) {
        return this.controller.add$1(0, H.assertSubtypeOfRuntimeType($event, H.getTypeArgumentByIndex(this, 0)));
      },
      _AsyncStarStreamController$1: function(body, $T) {
        var t1 = new P._AsyncStarStreamController__resumeBody(body);
        this.set$controller(0, P.StreamController_StreamController(new P._AsyncStarStreamController_closure(this, body), new P._AsyncStarStreamController_closure0(t1), null, new P._AsyncStarStreamController_closure1(this, t1), false, $T));
      },
      static: {
        _AsyncStarStreamController$: function(body, $T) {
          var t1 = new P._AsyncStarStreamController(false, [$T]);
          t1._AsyncStarStreamController$1(body, $T);
          return t1;
        }
      }
    },
    _AsyncStarStreamController__resumeBody: {
      "^": "Closure:0;body",
      call$0: function() {
        P.scheduleMicrotask(new P._AsyncStarStreamController__resumeBody_closure(this.body));
      }
    },
    _AsyncStarStreamController__resumeBody_closure: {
      "^": "Closure:0;body",
      call$0: [function() {
        this.body.call$2(0, null);
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncStarStreamController_closure0: {
      "^": "Closure:0;_resumeBody",
      call$0: function() {
        this._resumeBody.call$0();
      }
    },
    _AsyncStarStreamController_closure1: {
      "^": "Closure:0;$this,_resumeBody",
      call$0: function() {
        var t1 = this.$this;
        if (t1.isSuspended) {
          t1.isSuspended = false;
          this._resumeBody.call$0();
        }
      }
    },
    _AsyncStarStreamController_closure: {
      "^": "Closure:14;$this,body",
      call$0: [function() {
        var t1 = this.$this;
        if ((t1.controller.get$_state() & 4) === 0) {
          t1.cancelationCompleter = new P._AsyncCompleter(new P._Future(0, $.Zone__current, [null]), [null]);
          if (t1.isSuspended) {
            t1.isSuspended = false;
            P.scheduleMicrotask(new P._AsyncStarStreamController__closure(this.body));
          }
          return t1.cancelationCompleter.future;
        }
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncStarStreamController__closure: {
      "^": "Closure:0;body",
      call$0: [function() {
        this.body.call$2(2, null);
      }, null, null, 0, 0, null, "call"]
    },
    _IterationMarker: {
      "^": "Object;value,state",
      toString$0: function(_) {
        return "IterationMarker(" + this.state + ", " + H.S(this.value) + ")";
      },
      static: {
        _IterationMarker_yieldStar: function(values) {
          return new P._IterationMarker(values, 1);
        },
        _IterationMarker_endOfIteration: function() {
          return C._IterationMarker_null_2;
        },
        _IterationMarker_yieldSingle: function(value) {
          return new P._IterationMarker(value, 0);
        },
        _IterationMarker_uncaughtError: function(error) {
          return new P._IterationMarker(error, 3);
        }
      }
    },
    _SyncStarIterator: {
      "^": "Object;_body,0_async$_current,0_nestedIterator,0_suspendedBodies,$ti",
      set$_async$_current: function(_current) {
        this._async$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        var t1 = this._nestedIterator;
        if (t1 == null)
          return this._async$_current;
        return H.assertSubtypeOfRuntimeType(t1.get$current(t1), H.getTypeArgumentByIndex(this, 0));
      },
      moveNext$0: function() {
        var t1, value, state, inner;
        for (; true;) {
          t1 = this._nestedIterator;
          if (t1 != null)
            if (t1.moveNext$0())
              return true;
            else
              this._nestedIterator = null;
          value = function(body, SUCCESS, ERROR) {
            var errorValue,
              errorCode = SUCCESS;
            while (true)
              try {
                return body(errorCode, errorValue);
              } catch (error) {
                errorValue = error;
                errorCode = ERROR;
              }
          }(this._body, 0, 1);
          if (value instanceof P._IterationMarker) {
            state = value.state;
            if (state === 2) {
              t1 = this._suspendedBodies;
              if (t1 == null || t1.length === 0) {
                this.set$_async$_current(null);
                return false;
              }
              if (0 >= t1.length)
                return H.ioore(t1, -1);
              this._body = t1.pop();
              continue;
            } else {
              t1 = value.value;
              if (state === 3)
                throw t1;
              else {
                inner = J.get$iterator$ax(t1);
                if (!!inner.$is_SyncStarIterator) {
                  t1 = this._suspendedBodies;
                  if (t1 == null) {
                    t1 = [];
                    this._suspendedBodies = t1;
                  }
                  C.JSArray_methods.add$1(t1, this._body);
                  this._body = inner._body;
                  continue;
                } else {
                  this._nestedIterator = inner;
                  continue;
                }
              }
            }
          } else {
            this.set$_async$_current(value);
            return true;
          }
        }
        return false;
      },
      $isIterator: 1
    },
    _SyncStarIterable: {
      "^": "IterableBase;_outerHelper,$ti",
      get$iterator: function(_) {
        return new P._SyncStarIterator(this._outerHelper(), this.$ti);
      }
    },
    _BroadcastStream: {
      "^": "_ControllerStream;_controller,$ti"
    },
    _BroadcastSubscription: {
      "^": "_ControllerSubscription;_eventState,0_async$_next,0_async$_previous,_controller,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      set$_async$_next: function(_next) {
        this._async$_next = H.assertSubtype(_next, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      },
      set$_async$_previous: function(_previous) {
        this._async$_previous = H.assertSubtype(_previous, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      },
      _onPause$0: [function() {
      }, "call$0", "get$_onPause", 0, 0, 1],
      _onResume$0: [function() {
      }, "call$0", "get$_onResume", 0, 0, 1]
    },
    _BroadcastStreamController: {
      "^": "Object;_state<,0_firstSubscription,0_lastSubscription,$ti",
      set$_firstSubscription: function(_firstSubscription) {
        this._firstSubscription = H.assertSubtype(_firstSubscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      },
      set$_lastSubscription: function(_lastSubscription) {
        this._lastSubscription = H.assertSubtype(_lastSubscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      },
      get$_mayAddEvent: function() {
        return this._state < 4;
      },
      _ensureDoneFuture$0: function() {
        var t1 = this._doneFuture;
        if (t1 != null)
          return t1;
        t1 = new P._Future(0, $.Zone__current, [null]);
        this._doneFuture = t1;
        return t1;
      },
      _removeListener$1: function(subscription) {
        var previous, next;
        H.assertSubtype(subscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
        previous = subscription._async$_previous;
        next = subscription._async$_next;
        if (previous == null)
          this.set$_firstSubscription(next);
        else
          previous.set$_async$_next(next);
        if (next == null)
          this.set$_lastSubscription(previous);
        else
          next.set$_async$_previous(previous);
        subscription.set$_async$_previous(subscription);
        subscription.set$_async$_next(subscription);
      },
      _subscribe$4: function(onData, onError, onDone, cancelOnError) {
        var t1, t2, t3, t4, subscription, oldLast;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        if ((this._state & 4) !== 0) {
          if (onDone == null)
            onDone = P.async___nullDoneHandler$closure();
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone, this.$ti);
          t1._schedule$0();
          return t1;
        }
        t2 = $.Zone__current;
        t3 = cancelOnError ? 1 : 0;
        t4 = this.$ti;
        subscription = new P._BroadcastSubscription(0, this, t2, t3, t4);
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        subscription.set$_async$_previous(subscription);
        subscription.set$_async$_next(subscription);
        H.assertSubtype(subscription, "$is_BroadcastSubscription", t4, "$as_BroadcastSubscription");
        subscription._eventState = this._state & 1;
        oldLast = this._lastSubscription;
        this.set$_lastSubscription(subscription);
        subscription.set$_async$_next(null);
        subscription.set$_async$_previous(oldLast);
        if (oldLast == null)
          this.set$_firstSubscription(subscription);
        else
          oldLast.set$_async$_next(subscription);
        t1 = this._firstSubscription;
        t2 = this._lastSubscription;
        if (t1 == null ? t2 == null : t1 === t2)
          P._runGuarded(this.onListen);
        return subscription;
      },
      _recordCancel$1: function(sub) {
        var t1 = this.$ti;
        sub = H.assertSubtype(H.assertSubtype(sub, "$isStreamSubscription", t1, "$asStreamSubscription"), "$is_BroadcastSubscription", t1, "$as_BroadcastSubscription");
        if (sub._async$_next === sub)
          return;
        t1 = sub._eventState;
        if ((t1 & 2) !== 0)
          sub._eventState = t1 | 4;
        else {
          this._removeListener$1(sub);
          if ((this._state & 2) === 0 && this._firstSubscription == null)
            this._callOnCancel$0();
        }
        return;
      },
      _recordPause$1: function(subscription) {
        H.assertSubtype(subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
      },
      _recordResume$1: function(subscription) {
        H.assertSubtype(subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
      },
      _addEventError$0: ["super$_BroadcastStreamController$_addEventError", function() {
        if ((this._state & 4) !== 0)
          return new P.StateError("Cannot add new events after calling close");
        return new P.StateError("Cannot add new events while doing an addStream");
      }],
      add$1: ["super$_BroadcastStreamController$add", function(_, data) {
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        this._sendData$1(data);
      }, null, "get$add", 5, 0, null, 9],
      addError$2: function(error, stackTrace) {
        var replacement;
        if (error == null)
          error = new P.NullThrownError();
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = replacement.error;
          if (error == null)
            error = new P.NullThrownError();
          stackTrace = replacement.stackTrace;
        }
        this._sendError$2(error, stackTrace);
      },
      close$0: ["super$_BroadcastStreamController$close", function(_) {
        var doneFuture;
        if ((this._state & 4) !== 0)
          return this._doneFuture;
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        this._state |= 4;
        doneFuture = this._ensureDoneFuture$0();
        this._sendDone$0();
        return doneFuture;
      }],
      get$done: function() {
        return this._ensureDoneFuture$0();
      },
      _add$1: [function(_, data) {
        this._sendData$1(H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0)));
      }, null, "get$_add", 5, 0, null, 9],
      _addError$2: [function(error, stackTrace) {
        this._sendError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
      }, null, "get$_addError", 8, 0, null, 4, 5],
      _forEachListener$1: function(action) {
        var t1, subscription, id, next;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this, 0)]]});
        t1 = this._state;
        if ((t1 & 2) !== 0)
          throw H.wrapException(P.StateError$("Cannot fire new event. Controller is already firing an event"));
        subscription = this._firstSubscription;
        if (subscription == null)
          return;
        id = t1 & 1;
        this._state = t1 ^ 3;
        for (; subscription != null;) {
          t1 = subscription._eventState;
          if ((t1 & 1) === id) {
            subscription._eventState = t1 | 2;
            action.call$1(subscription);
            t1 = subscription._eventState ^= 1;
            next = subscription._async$_next;
            if ((t1 & 4) !== 0)
              this._removeListener$1(subscription);
            subscription._eventState &= 4294967293;
            subscription = next;
          } else
            subscription = subscription._async$_next;
        }
        this._state &= 4294967293;
        if (this._firstSubscription == null)
          this._callOnCancel$0();
      },
      _callOnCancel$0: ["super$_BroadcastStreamController$_callOnCancel", function() {
        if ((this._state & 4) !== 0 && this._doneFuture._state === 0)
          this._doneFuture._asyncComplete$1(null);
        P._runGuarded(this.onCancel);
      }],
      $isEventSink: 1,
      $isStreamController: 1,
      $is_StreamControllerLifecycle: 1,
      $is_EventSink: 1,
      $is_EventDispatch: 1
    },
    _SyncBroadcastStreamController: {
      "^": "_BroadcastStreamController;onListen,onCancel,_state,0_firstSubscription,0_lastSubscription,0_addStreamState,0_doneFuture,$ti",
      get$_mayAddEvent: function() {
        return P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
      },
      _addEventError$0: function() {
        if ((this._state & 2) !== 0)
          return new P.StateError("Cannot fire new event. Controller is already firing an event");
        return this.super$_BroadcastStreamController$_addEventError();
      },
      _sendData$1: function(data) {
        var t1;
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        t1 = this._firstSubscription;
        if (t1 == null)
          return;
        if (t1 === this._lastSubscription) {
          this._state |= 2;
          t1._add$1(0, data);
          this._state &= 4294967293;
          if (this._firstSubscription == null)
            this._callOnCancel$0();
          return;
        }
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(this, data));
      },
      _sendError$2: function(error, stackTrace) {
        if (this._firstSubscription == null)
          return;
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
      },
      _sendDone$0: function() {
        if (this._firstSubscription != null)
          this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(this));
        else
          this._doneFuture._asyncComplete$1(null);
      }
    },
    _SyncBroadcastStreamController__sendData_closure: {
      "^": "Closure;$this,data",
      call$1: function(subscription) {
        H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._add$1(0, this.data);
      },
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
      }
    },
    _SyncBroadcastStreamController__sendError_closure: {
      "^": "Closure;$this,error,stackTrace",
      call$1: function(subscription) {
        H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._addError$2(this.error, this.stackTrace);
      },
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
      }
    },
    _SyncBroadcastStreamController__sendDone_closure: {
      "^": "Closure;$this",
      call$1: function(subscription) {
        H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._async$_close$0();
      },
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
      }
    },
    _AsyncBroadcastStreamController: {
      "^": "_BroadcastStreamController;onListen,onCancel,_state,0_firstSubscription,0_lastSubscription,0_addStreamState,0_doneFuture,$ti",
      _sendData$1: function(data) {
        var subscription, t1;
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        for (subscription = this._firstSubscription, t1 = this.$ti; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(new P._DelayedData(data, t1));
      },
      _sendError$2: function(error, stackTrace) {
        var subscription;
        for (subscription = this._firstSubscription; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(new P._DelayedError(error, stackTrace));
      },
      _sendDone$0: function() {
        var subscription = this._firstSubscription;
        if (subscription != null)
          for (; subscription != null; subscription = subscription._async$_next)
            subscription._addPending$1(C.C__DelayedDone);
        else
          this._doneFuture._asyncComplete$1(null);
      }
    },
    _AsBroadcastStreamController: {
      "^": "_SyncBroadcastStreamController;0_pending,onListen,onCancel,_state,0_firstSubscription,0_lastSubscription,0_addStreamState,0_doneFuture,$ti",
      set$_pending: function(_pending) {
        this._pending = H.assertSubtype(_pending, "$is_StreamImplEvents", this.$ti, "$as_StreamImplEvents");
      },
      get$_hasPending: function() {
        var t1 = this._pending;
        return t1 != null && t1.lastPendingEvent != null;
      },
      _addPendingEvent$1: function($event) {
        if (this._pending == null)
          this.set$_pending(new P._StreamImplEvents(0, this.$ti));
        this._pending.add$1(0, $event);
      },
      add$1: [function(_, data) {
        var t1, $event, t2;
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(new P._DelayedData(data, this.$ti));
          return;
        }
        this.super$_BroadcastStreamController$add(0, data);
        while (true) {
          t1 = this._pending;
          if (!(t1 != null && t1.lastPendingEvent != null))
            break;
          t1.toString;
          H.assertSubtype(this, "$is_EventDispatch", [H.getTypeArgumentByIndex(t1, 0)], "$as_EventDispatch");
          $event = t1.firstPendingEvent;
          t2 = $event.get$next($event);
          t1.firstPendingEvent = t2;
          if (t2 == null)
            t1.lastPendingEvent = null;
          $event.perform$1(this);
        }
      }, "call$1", "get$add", 5, 0, 8, 9],
      addError$2: [function(error, stackTrace) {
        var t1, $event, t2;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(new P._DelayedError(error, stackTrace));
          return;
        }
        if (!(P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0))
          throw H.wrapException(this._addEventError$0());
        this._sendError$2(error, stackTrace);
        while (true) {
          t1 = this._pending;
          if (!(t1 != null && t1.lastPendingEvent != null))
            break;
          t1.toString;
          H.assertSubtype(this, "$is_EventDispatch", [H.getTypeArgumentByIndex(t1, 0)], "$as_EventDispatch");
          $event = t1.firstPendingEvent;
          t2 = $event.get$next($event);
          t1.firstPendingEvent = t2;
          if (t2 == null)
            t1.lastPendingEvent = null;
          $event.perform$1(this);
        }
      }, function(error) {
        return this.addError$2(error, null);
      }, "addError$1", "call$2", "call$1", "get$addError", 4, 2, 15, 3, 4, 5],
      close$0: [function(_) {
        var t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(C.C__DelayedDone);
          this._state |= 4;
          return P._BroadcastStreamController.prototype.get$done.call(this);
        }
        return this.super$_BroadcastStreamController$close(0);
      }, "call$0", "get$close", 1, 0, 14],
      _callOnCancel$0: function() {
        if (this.get$_hasPending()) {
          var t1 = this._pending;
          if (t1._state === 1)
            t1._state = 3;
          t1.lastPendingEvent = null;
          t1.firstPendingEvent = null;
          this.set$_pending(null);
        }
        this.super$_BroadcastStreamController$_callOnCancel();
      }
    },
    Future: {
      "^": "Object;$ti"
    },
    Future_Future_closure: {
      "^": "Closure:0;result,computation",
      call$0: [function() {
        var e, s, exception, error, t1, stackTrace, replacement;
        try {
          this.result._complete$1(this.computation.call$0());
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          error = e;
          t1 = $.Zone__current;
          stackTrace = H.interceptedTypeCheck(s, "$isStackTrace");
          replacement = t1.errorCallback$2(error, stackTrace);
          if (replacement != null) {
            error = replacement.error;
            if (error == null)
              error = new P.NullThrownError();
            stackTrace = replacement.stackTrace;
          }
          this.result._completeError$2(error, stackTrace);
        }
      }, null, null, 0, 0, null, "call"]
    },
    _Completer: {
      "^": "Object;$ti",
      completeError$2: [function(error, stackTrace) {
        var replacement;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        if (error == null)
          error = new P.NullThrownError();
        if (this.future._state !== 0)
          throw H.wrapException(P.StateError$("Future already completed"));
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = replacement.error;
          if (error == null)
            error = new P.NullThrownError();
          stackTrace = replacement.stackTrace;
        }
        this._completeError$2(error, stackTrace);
      }, function(error) {
        return this.completeError$2(error, null);
      }, "completeError$1", "call$2", "call$1", "get$completeError", 4, 2, 15, 3, 4, 5],
      $isCompleter: 1
    },
    _AsyncCompleter: {
      "^": "_Completer;future,$ti",
      complete$1: function(_, value) {
        var t1;
        H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
        t1 = this.future;
        if (t1._state !== 0)
          throw H.wrapException(P.StateError$("Future already completed"));
        t1._asyncComplete$1(value);
      },
      complete$0: function($receiver) {
        return this.complete$1($receiver, null);
      },
      _completeError$2: function(error, stackTrace) {
        this.future._asyncCompleteError$2(error, stackTrace);
      }
    },
    _SyncCompleter: {
      "^": "_Completer;future,$ti",
      complete$1: [function(_, value) {
        var t1;
        H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
        t1 = this.future;
        if (t1._state !== 0)
          throw H.wrapException(P.StateError$("Future already completed"));
        t1._complete$1(value);
      }, function($receiver) {
        return this.complete$1($receiver, null);
      }, "complete$0", "call$1", "call$0", "get$complete", 1, 2, 82, 3, 1],
      _completeError$2: function(error, stackTrace) {
        this.future._completeError$2(error, stackTrace);
      }
    },
    _FutureListener: {
      "^": "Object;0_nextListener,result,state,callback,errorCallback,$ti",
      matchesErrorTest$1: function(asyncError) {
        if (this.state !== 6)
          return true;
        return this.result._zone.runUnary$2$2(H.functionTypeCheck(this.callback, {func: 1, ret: P.bool, args: [P.Object]}), asyncError.error, P.bool, P.Object);
      },
      handleError$1: function(asyncError) {
        var errorCallback, t1, t2, t3;
        errorCallback = this.errorCallback;
        t1 = P.Object;
        t2 = {futureOr: 1, type: H.getTypeArgumentByIndex(this, 1)};
        t3 = this.result._zone;
        if (H.functionTypeTest(errorCallback, {func: 1, args: [P.Object, P.StackTrace]}))
          return H.futureOrCheck(t3.runBinary$3$3(errorCallback, asyncError.error, asyncError.stackTrace, null, t1, P.StackTrace), t2);
        else
          return H.futureOrCheck(t3.runUnary$2$2(H.functionTypeCheck(errorCallback, {func: 1, args: [P.Object]}), asyncError.error, null, t1), t2);
      }
    },
    _Future: {
      "^": "Object;_state<,_zone,0_resultOrListeners<,$ti",
      then$1$2$onError: function(f, onError, $R) {
        var t1, currentZone;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(f, {func: 1, ret: {futureOr: 1, type: $R}, args: [t1]});
        currentZone = $.Zone__current;
        if (currentZone !== C.C__RootZone) {
          f = currentZone.registerUnaryCallback$2$1(f, {futureOr: 1, type: $R}, t1);
          if (onError != null)
            onError = P._registerErrorHandler(onError, currentZone);
        }
        return this._thenNoZoneRegistration$1$2(f, onError, $R);
      },
      then$1$1: function(f, $R) {
        return this.then$1$2$onError(f, null, $R);
      },
      then$1: function(f) {
        return this.then$1$2$onError(f, null, null);
      },
      _thenNoZoneRegistration$1$2: function(f, onError, $E) {
        var t1, result, t2;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(f, {func: 1, ret: {futureOr: 1, type: $E}, args: [t1]});
        result = new P._Future(0, $.Zone__current, [$E]);
        t2 = onError == null ? 1 : 3;
        this._addListener$1(new P._FutureListener(result, t2, f, onError, [t1, $E]));
        return result;
      },
      whenComplete$1: function(action) {
        var t1, result;
        H.functionTypeCheck(action, {func: 1});
        t1 = $.Zone__current;
        result = new P._Future(0, t1, this.$ti);
        if (t1 !== C.C__RootZone)
          action = t1.registerCallback$1$1(action, null);
        t1 = H.getTypeArgumentByIndex(this, 0);
        this._addListener$1(new P._FutureListener(result, 8, action, null, [t1, t1]));
        return result;
      },
      asStream$0: function() {
        return P.Stream_Stream$fromFuture(this, H.getTypeArgumentByIndex(this, 0));
      },
      _addListener$1: function(listener) {
        var t1, source;
        t1 = this._state;
        if (t1 <= 1) {
          listener._nextListener = H.interceptedTypeCheck(this._resultOrListeners, "$is_FutureListener");
          this._resultOrListeners = listener;
        } else {
          if (t1 === 2) {
            source = H.interceptedTypeCheck(this._resultOrListeners, "$is_Future");
            t1 = source._state;
            if (t1 < 4) {
              source._addListener$1(listener);
              return;
            }
            this._state = t1;
            this._resultOrListeners = source._resultOrListeners;
          }
          this._zone.scheduleMicrotask$1(new P._Future__addListener_closure(this, listener));
        }
      },
      _prependListeners$1: function(listeners) {
        var _box_0, t1, existingListeners, cursor, cursor0, source;
        _box_0 = {};
        _box_0.listeners = listeners;
        if (listeners == null)
          return;
        t1 = this._state;
        if (t1 <= 1) {
          existingListeners = H.interceptedTypeCheck(this._resultOrListeners, "$is_FutureListener");
          this._resultOrListeners = listeners;
          if (existingListeners != null) {
            for (cursor = listeners; cursor0 = cursor._nextListener, cursor0 != null; cursor = cursor0)
              ;
            cursor._nextListener = existingListeners;
          }
        } else {
          if (t1 === 2) {
            source = H.interceptedTypeCheck(this._resultOrListeners, "$is_Future");
            t1 = source._state;
            if (t1 < 4) {
              source._prependListeners$1(listeners);
              return;
            }
            this._state = t1;
            this._resultOrListeners = source._resultOrListeners;
          }
          _box_0.listeners = this._reverseListeners$1(listeners);
          this._zone.scheduleMicrotask$1(new P._Future__prependListeners_closure(_box_0, this));
        }
      },
      _removeListeners$0: function() {
        var current = H.interceptedTypeCheck(this._resultOrListeners, "$is_FutureListener");
        this._resultOrListeners = null;
        return this._reverseListeners$1(current);
      },
      _reverseListeners$1: function(listeners) {
        var current, prev, next;
        for (current = listeners, prev = null; current != null; prev = current, current = next) {
          next = current._nextListener;
          current._nextListener = prev;
        }
        return prev;
      },
      _complete$1: function(value) {
        var t1, t2, listeners;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.futureOrCheck(value, {futureOr: 1, type: t1});
        t2 = this.$ti;
        if (H.checkSubtype(value, "$isFuture", t2, "$asFuture"))
          if (H.checkSubtype(value, "$is_Future", t2, null))
            P._Future__chainCoreFuture(value, this);
          else
            P._Future__chainForeignFuture(value, this);
        else {
          listeners = this._removeListeners$0();
          H.assertSubtypeOfRuntimeType(value, t1);
          this._state = 4;
          this._resultOrListeners = value;
          P._Future__propagateToListeners(this, listeners);
        }
      },
      _completeError$2: [function(error, stackTrace) {
        var listeners;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        listeners = this._removeListeners$0();
        this._state = 8;
        this._resultOrListeners = new P.AsyncError(error, stackTrace);
        P._Future__propagateToListeners(this, listeners);
      }, function(error) {
        return this._completeError$2(error, null);
      }, "_completeError$1", "call$2", "call$1", "get$_completeError", 4, 2, 15, 3, 4, 5],
      _asyncComplete$1: function(value) {
        H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
        if (H.checkSubtype(value, "$isFuture", this.$ti, "$asFuture")) {
          this._chainFuture$1(value);
          return;
        }
        this._state = 1;
        this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure(this, value));
      },
      _chainFuture$1: function(value) {
        var t1 = this.$ti;
        H.assertSubtype(value, "$isFuture", t1, "$asFuture");
        if (H.checkSubtype(value, "$is_Future", t1, null)) {
          if (value.get$_state() === 8) {
            this._state = 1;
            this._zone.scheduleMicrotask$1(new P._Future__chainFuture_closure(this, value));
          } else
            P._Future__chainCoreFuture(value, this);
          return;
        }
        P._Future__chainForeignFuture(value, this);
      },
      _asyncCompleteError$2: function(error, stackTrace) {
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        this._state = 1;
        this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
      },
      $isFuture: 1,
      static: {
        _Future$zoneValue: function(value, _zone, $T) {
          var t1 = new P._Future(0, _zone, [$T]);
          H.assertSubtypeOfRuntimeType(value, $T);
          t1._state = 4;
          t1._resultOrListeners = value;
          return t1;
        },
        _Future__chainForeignFuture: function(source, target) {
          var e, s, exception;
          target._state = 1;
          try {
            source.then$1$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target), null);
          } catch (exception) {
            e = H.unwrapException(exception);
            s = H.getTraceFromException(exception);
            P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));
          }
        },
        _Future__chainCoreFuture: function(source, target) {
          var t1, listeners;
          for (; t1 = source._state, t1 === 2;)
            source = H.interceptedTypeCheck(source._resultOrListeners, "$is_Future");
          if (t1 >= 4) {
            listeners = target._removeListeners$0();
            target._state = source._state;
            target._resultOrListeners = source._resultOrListeners;
            P._Future__propagateToListeners(target, listeners);
          } else {
            listeners = H.interceptedTypeCheck(target._resultOrListeners, "$is_FutureListener");
            target._state = 2;
            target._resultOrListeners = source;
            source._prependListeners$1(listeners);
          }
        },
        _Future__propagateToListeners: function(source, listeners) {
          var _box_1, t1, _box_0, hasError, asyncError, listeners0, sourceResult, t2, t3, zone, oldZone, current, result;
          _box_1 = {};
          _box_1.source = source;
          for (t1 = source; true;) {
            _box_0 = {};
            hasError = t1._state === 8;
            if (listeners == null) {
              if (hasError) {
                asyncError = H.interceptedTypeCheck(t1._resultOrListeners, "$isAsyncError");
                t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
              }
              return;
            }
            for (; listeners0 = listeners._nextListener, listeners0 != null; listeners = listeners0) {
              listeners._nextListener = null;
              P._Future__propagateToListeners(_box_1.source, listeners);
            }
            t1 = _box_1.source;
            sourceResult = t1._resultOrListeners;
            _box_0.listenerHasError = hasError;
            _box_0.listenerValueOrError = sourceResult;
            t2 = !hasError;
            if (t2) {
              t3 = listeners.state;
              t3 = (t3 & 1) !== 0 || t3 === 8;
            } else
              t3 = true;
            if (t3) {
              t3 = listeners.result;
              zone = t3._zone;
              if (hasError) {
                t1 = t1._zone;
                t1.toString;
                t1 = !((t1 == null ? zone == null : t1 === zone) || t1.get$errorZone() === zone.get$errorZone());
              } else
                t1 = false;
              if (t1) {
                t1 = _box_1.source;
                asyncError = H.interceptedTypeCheck(t1._resultOrListeners, "$isAsyncError");
                t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
                return;
              }
              oldZone = $.Zone__current;
              if (oldZone == null ? zone != null : oldZone !== zone)
                $.Zone__current = zone;
              else
                oldZone = null;
              t1 = listeners.state;
              if (t1 === 8)
                new P._Future__propagateToListeners_handleWhenCompleteCallback(_box_1, _box_0, listeners, hasError).call$0();
              else if (t2) {
                if ((t1 & 1) !== 0)
                  new P._Future__propagateToListeners_handleValueCallback(_box_0, listeners, sourceResult).call$0();
              } else if ((t1 & 2) !== 0)
                new P._Future__propagateToListeners_handleError(_box_1, _box_0, listeners).call$0();
              if (oldZone != null)
                $.Zone__current = oldZone;
              t1 = _box_0.listenerValueOrError;
              if (!!J.getInterceptor$(t1).$isFuture) {
                if (!!t1.$is_Future)
                  if (t1._state >= 4) {
                    current = H.interceptedTypeCheck(t3._resultOrListeners, "$is_FutureListener");
                    t3._resultOrListeners = null;
                    listeners = t3._reverseListeners$1(current);
                    t3._state = t1._state;
                    t3._resultOrListeners = t1._resultOrListeners;
                    _box_1.source = t1;
                    continue;
                  } else
                    P._Future__chainCoreFuture(t1, t3);
                else
                  P._Future__chainForeignFuture(t1, t3);
                return;
              }
            }
            result = listeners.result;
            current = H.interceptedTypeCheck(result._resultOrListeners, "$is_FutureListener");
            result._resultOrListeners = null;
            listeners = result._reverseListeners$1(current);
            t1 = _box_0.listenerHasError;
            t2 = _box_0.listenerValueOrError;
            if (!t1) {
              H.assertSubtypeOfRuntimeType(t2, H.getTypeArgumentByIndex(result, 0));
              result._state = 4;
              result._resultOrListeners = t2;
            } else {
              H.interceptedTypeCheck(t2, "$isAsyncError");
              result._state = 8;
              result._resultOrListeners = t2;
            }
            _box_1.source = result;
            t1 = result;
          }
        }
      }
    },
    _Future__addListener_closure: {
      "^": "Closure:0;$this,listener",
      call$0: [function() {
        P._Future__propagateToListeners(this.$this, this.listener);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__prependListeners_closure: {
      "^": "Closure:0;_box_0,$this",
      call$0: [function() {
        P._Future__propagateToListeners(this.$this, this._box_0.listeners);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__chainForeignFuture_closure: {
      "^": "Closure:3;target",
      call$1: [function(value) {
        var t1 = this.target;
        t1._state = 0;
        t1._complete$1(value);
      }, null, null, 4, 0, null, 1, "call"]
    },
    _Future__chainForeignFuture_closure0: {
      "^": "Closure:89;target",
      call$2: [function(error, stackTrace) {
        this.target._completeError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
      }, function(error) {
        return this.call$2(error, null);
      }, "call$1", null, null, null, 4, 2, null, 3, 4, 5, "call"]
    },
    _Future__chainForeignFuture_closure1: {
      "^": "Closure:0;target,e,s",
      call$0: [function() {
        this.target._completeError$2(this.e, this.s);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncComplete_closure: {
      "^": "Closure:0;$this,value",
      call$0: [function() {
        var t1, t2, listeners;
        t1 = this.$this;
        t2 = H.assertSubtypeOfRuntimeType(this.value, H.getTypeArgumentByIndex(t1, 0));
        listeners = t1._removeListeners$0();
        t1._state = 4;
        t1._resultOrListeners = t2;
        P._Future__propagateToListeners(t1, listeners);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__chainFuture_closure: {
      "^": "Closure:0;$this,value",
      call$0: [function() {
        P._Future__chainCoreFuture(this.value, this.$this);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncCompleteError_closure: {
      "^": "Closure:0;$this,error,stackTrace",
      call$0: [function() {
        this.$this._completeError$2(this.error, this.stackTrace);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: {
      "^": "Closure:1;_box_1,_box_0,listener,hasError",
      call$0: function() {
        var completeResult, e, s, t1, exception, t2, originalSource;
        completeResult = null;
        try {
          t1 = this.listener;
          completeResult = t1.result._zone.run$1$1(H.functionTypeCheck(t1.callback, {func: 1}), null);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          if (this.hasError) {
            t1 = H.interceptedTypeCheck(this._box_1.source._resultOrListeners, "$isAsyncError").error;
            t2 = e;
            t2 = t1 == null ? t2 == null : t1 === t2;
            t1 = t2;
          } else
            t1 = false;
          t2 = this._box_0;
          if (t1)
            t2.listenerValueOrError = H.interceptedTypeCheck(this._box_1.source._resultOrListeners, "$isAsyncError");
          else
            t2.listenerValueOrError = new P.AsyncError(e, s);
          t2.listenerHasError = true;
          return;
        }
        if (!!J.getInterceptor$(completeResult).$isFuture) {
          if (completeResult instanceof P._Future && completeResult.get$_state() >= 4) {
            if (completeResult.get$_state() === 8) {
              t1 = this._box_0;
              t1.listenerValueOrError = H.interceptedTypeCheck(completeResult.get$_resultOrListeners(), "$isAsyncError");
              t1.listenerHasError = true;
            }
            return;
          }
          originalSource = this._box_1.source;
          t1 = this._box_0;
          t1.listenerValueOrError = completeResult.then$1$1(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), null);
          t1.listenerHasError = false;
        }
      }
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: {
      "^": "Closure:90;originalSource",
      call$1: [function(_) {
        return this.originalSource;
      }, null, null, 4, 0, null, 0, "call"]
    },
    _Future__propagateToListeners_handleValueCallback: {
      "^": "Closure:1;_box_0,listener,sourceResult",
      call$0: function() {
        var e, s, t1, t2, t3, t4, exception;
        try {
          t1 = this.listener;
          t1.toString;
          t2 = H.getTypeArgumentByIndex(t1, 0);
          t3 = H.assertSubtypeOfRuntimeType(this.sourceResult, t2);
          t4 = H.getTypeArgumentByIndex(t1, 1);
          this._box_0.listenerValueOrError = t1.result._zone.runUnary$2$2(H.functionTypeCheck(t1.callback, {func: 1, ret: {futureOr: 1, type: t4}, args: [t2]}), t3, {futureOr: 1, type: t4}, t2);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = this._box_0;
          t1.listenerValueOrError = new P.AsyncError(e, s);
          t1.listenerHasError = true;
        }
      }
    },
    _Future__propagateToListeners_handleError: {
      "^": "Closure:1;_box_1,_box_0,listener",
      call$0: function() {
        var asyncError, e, s, t1, t2, exception, t3, t4;
        try {
          asyncError = H.interceptedTypeCheck(this._box_1.source._resultOrListeners, "$isAsyncError");
          t1 = this.listener;
          if (t1.matchesErrorTest$1(asyncError) && t1.errorCallback != null) {
            t2 = this._box_0;
            t2.listenerValueOrError = t1.handleError$1(asyncError);
            t2.listenerHasError = false;
          }
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = H.interceptedTypeCheck(this._box_1.source._resultOrListeners, "$isAsyncError");
          t2 = t1.error;
          t3 = e;
          t4 = this._box_0;
          if (t2 == null ? t3 == null : t2 === t3)
            t4.listenerValueOrError = t1;
          else
            t4.listenerValueOrError = new P.AsyncError(e, s);
          t4.listenerHasError = true;
        }
      }
    },
    _AsyncCallbackEntry: {
      "^": "Object;callback,0next"
    },
    Stream: {
      "^": "Object;$ti",
      get$length: function(_) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, [P.int]);
        t1.count = 0;
        this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1, this), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
        return future;
      },
      distinct$1: function(equals) {
        var t1 = H.getRuntimeTypeArgument(this, "Stream", 0);
        return new P._DistinctStream(H.functionTypeCheck(equals, {func: 1, ret: P.bool, args: [t1, t1]}), this, [t1]);
      }
    },
    Stream_Stream$fromFuture_closure: {
      "^": "Closure;controller,T",
      call$1: [function(value) {
        var t1 = this.controller;
        t1._add$1(0, H.assertSubtypeOfRuntimeType(value, this.T));
        t1._closeUnchecked$0();
      }, null, null, 4, 0, null, 1, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.T]};
      }
    },
    Stream_Stream$fromFuture_closure0: {
      "^": "Closure:4;controller",
      call$2: [function(error, stackTrace) {
        var t1 = this.controller;
        t1._addError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
        t1._closeUnchecked$0();
      }, null, null, 8, 0, null, 4, 5, "call"]
    },
    Stream_Stream$fromIterable_closure: {
      "^": "Closure;elements,T",
      call$0: function() {
        var t1 = this.elements;
        return new P._IterablePendingEvents(new J.ArrayIterator(t1, 1, 0, [H.getTypeArgumentByIndex(t1, 0)]), 0, [this.T]);
      },
      $signature: function() {
        return {func: 1, ret: [P._IterablePendingEvents, this.T]};
      }
    },
    Stream_length_closure: {
      "^": "Closure;_box_0,$this",
      call$1: [function(_) {
        H.assertSubtypeOfRuntimeType(_, H.getRuntimeTypeArgument(this.$this, "Stream", 0));
        ++this._box_0.count;
      }, null, null, 4, 0, null, 0, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [H.getRuntimeTypeArgument(this.$this, "Stream", 0)]};
      }
    },
    Stream_length_closure0: {
      "^": "Closure:0;_box_0,future",
      call$0: [function() {
        this.future._complete$1(this._box_0.count);
      }, null, null, 0, 0, null, "call"]
    },
    StreamSubscription: {
      "^": "Object;$ti"
    },
    EventSink: {
      "^": "Object;$ti"
    },
    StreamTransformerBase: {
      "^": "Object;",
      $isStreamTransformer: 1
    },
    _StreamController: {
      "^": "Object;_state<,$ti",
      get$_pendingEvents: function() {
        if ((this._state & 8) === 0)
          return H.assertSubtype(this._varData, "$is_PendingEvents", this.$ti, "$as_PendingEvents");
        var t1 = this.$ti;
        return H.assertSubtype(H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").varData, "$is_PendingEvents", t1, "$as_PendingEvents");
      },
      _ensurePendingEvents$0: function() {
        var t1, state, t2;
        if ((this._state & 8) === 0) {
          t1 = this._varData;
          if (t1 == null) {
            t1 = new P._StreamImplEvents(0, this.$ti);
            this._varData = t1;
          }
          return H.assertSubtype(t1, "$is_StreamImplEvents", this.$ti, "$as_StreamImplEvents");
        }
        t1 = this.$ti;
        state = H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState");
        t2 = state.varData;
        if (t2 == null) {
          t2 = new P._StreamImplEvents(0, t1);
          state.varData = t2;
        }
        return H.assertSubtype(t2, "$is_StreamImplEvents", t1, "$as_StreamImplEvents");
      },
      get$_subscription: function() {
        if ((this._state & 8) !== 0) {
          var t1 = this.$ti;
          return H.assertSubtype(H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").varData, "$is_ControllerSubscription", t1, "$as_ControllerSubscription");
        }
        return H.assertSubtype(this._varData, "$is_ControllerSubscription", this.$ti, "$as_ControllerSubscription");
      },
      _badEventState$0: function() {
        if ((this._state & 4) !== 0)
          return new P.StateError("Cannot add event after closing");
        return new P.StateError("Cannot add event while adding a stream");
      },
      addStream$2$cancelOnError: function(_, source, cancelOnError) {
        var t1, t2, t3, t4, t5;
        t1 = this.$ti;
        H.assertSubtype(source, "$isStream", t1, "$asStream");
        t2 = this._state;
        if (t2 >= 4)
          throw H.wrapException(this._badEventState$0());
        if ((t2 & 2) !== 0) {
          t1 = new P._Future(0, $.Zone__current, [null]);
          t1._asyncComplete$1(null);
          return t1;
        }
        t2 = this._varData;
        H.assertSubtype(source, "$isStream", t1, "$asStream");
        t3 = new P._Future(0, $.Zone__current, [null]);
        t4 = source.listen$4$cancelOnError$onDone$onError(this.get$_add(this), false, this.get$_async$_close(), this.get$_addError());
        t5 = this._state;
        if ((t5 & 1) !== 0 ? (this.get$_subscription()._state & 4) !== 0 : (t5 & 2) === 0)
          t4.pause$0(0);
        this._varData = new P._StreamControllerAddStreamState(t2, t3, t4, t1);
        this._state |= 8;
        return t3;
      },
      _ensureDoneFuture$0: function() {
        var t1 = this._doneFuture;
        if (t1 == null) {
          t1 = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new P._Future(0, $.Zone__current, [null]);
          this._doneFuture = t1;
        }
        return t1;
      },
      add$1: [function(_, value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (this._state >= 4)
          throw H.wrapException(this._badEventState$0());
        this._add$1(0, value);
      }, "call$1", "get$add", 5, 0, 8, 1],
      addError$2: function(error, stackTrace) {
        var replacement;
        if (this._state >= 4)
          throw H.wrapException(this._badEventState$0());
        if (error == null)
          error = new P.NullThrownError();
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = replacement.error;
          if (error == null)
            error = new P.NullThrownError();
          stackTrace = replacement.stackTrace;
        }
        this._addError$2(error, stackTrace);
      },
      close$0: function(_) {
        var t1 = this._state;
        if ((t1 & 4) !== 0)
          return this._ensureDoneFuture$0();
        if (t1 >= 4)
          throw H.wrapException(this._badEventState$0());
        this._closeUnchecked$0();
        return this._ensureDoneFuture$0();
      },
      _closeUnchecked$0: function() {
        var t1 = this._state |= 4;
        if ((t1 & 1) !== 0)
          this._sendDone$0();
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, C.C__DelayedDone);
      },
      _add$1: [function(_, value) {
        var t1;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = this._state;
        if ((t1 & 1) !== 0)
          this._sendData$1(value);
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, new P._DelayedData(value, this.$ti));
      }, "call$1", "get$_add", 5, 0, 8, 1],
      _addError$2: [function(error, stackTrace) {
        var t1;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        t1 = this._state;
        if ((t1 & 1) !== 0)
          this._sendError$2(error, stackTrace);
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, new P._DelayedError(error, stackTrace));
      }, "call$2", "get$_addError", 8, 0, 108, 4, 5],
      _async$_close$0: [function() {
        var addState = H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", this.$ti, "$as_StreamControllerAddStreamState");
        this._varData = addState.varData;
        this._state &= 4294967287;
        addState.addStreamFuture._asyncComplete$1(null);
      }, "call$0", "get$_async$_close", 0, 0, 1],
      _subscribe$4: function(onData, onError, onDone, cancelOnError) {
        var t1, t2, t3, t4, subscription, pendingEvents, addState;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        if ((this._state & 3) !== 0)
          throw H.wrapException(P.StateError$("Stream has already been listened to."));
        t2 = $.Zone__current;
        t3 = cancelOnError ? 1 : 0;
        t4 = this.$ti;
        subscription = new P._ControllerSubscription(this, t2, t3, t4);
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        pendingEvents = this.get$_pendingEvents();
        t1 = this._state |= 1;
        if ((t1 & 8) !== 0) {
          addState = H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t4, "$as_StreamControllerAddStreamState");
          addState.varData = subscription;
          addState.addSubscription.resume$0(0);
        } else
          this._varData = subscription;
        subscription._setPendingEvents$1(pendingEvents);
        subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
        return subscription;
      },
      _recordCancel$1: function(subscription) {
        var result, e, s, t1, exception, result0;
        t1 = this.$ti;
        H.assertSubtype(subscription, "$isStreamSubscription", t1, "$asStreamSubscription");
        result = null;
        if ((this._state & 8) !== 0)
          result = H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").cancel$0(0);
        this._varData = null;
        this._state = this._state & 4294967286 | 2;
        t1 = this.onCancel;
        if (t1 != null)
          if (result == null)
            try {
              result = H.interceptedTypeCheck(this.onCancel.call$0(), "$isFuture");
            } catch (exception) {
              e = H.unwrapException(exception);
              s = H.getTraceFromException(exception);
              result0 = new P._Future(0, $.Zone__current, [null]);
              result0._asyncCompleteError$2(e, s);
              result = result0;
            }
          else
            result = result.whenComplete$1(t1);
        t1 = new P._StreamController__recordCancel_complete(this);
        if (result != null)
          result = result.whenComplete$1(t1);
        else
          t1.call$0();
        return result;
      },
      _recordPause$1: function(subscription) {
        var t1 = this.$ti;
        H.assertSubtype(subscription, "$isStreamSubscription", t1, "$asStreamSubscription");
        if ((this._state & 8) !== 0)
          H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").addSubscription.pause$0(0);
        P._runGuarded(this.onPause);
      },
      _recordResume$1: function(subscription) {
        var t1 = this.$ti;
        H.assertSubtype(subscription, "$isStreamSubscription", t1, "$asStreamSubscription");
        if ((this._state & 8) !== 0)
          H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").addSubscription.resume$0(0);
        P._runGuarded(this.onResume);
      },
      $isEventSink: 1,
      $isStreamController: 1,
      $is_StreamControllerLifecycle: 1,
      $is_EventSink: 1,
      $is_EventDispatch: 1
    },
    _StreamController__subscribe_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        P._runGuarded(this.$this.onListen);
      }
    },
    _StreamController__recordCancel_complete: {
      "^": "Closure:1;$this",
      call$0: [function() {
        var t1 = this.$this._doneFuture;
        if (t1 != null && t1._state === 0)
          t1._asyncComplete$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    _SyncStreamControllerDispatch: {
      "^": "Object;$ti",
      _sendData$1: function(data) {
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        this.get$_subscription()._add$1(0, data);
      },
      _sendError$2: function(error, stackTrace) {
        this.get$_subscription()._addError$2(error, stackTrace);
      },
      _sendDone$0: function() {
        this.get$_subscription()._async$_close$0();
      }
    },
    _AsyncStreamControllerDispatch: {
      "^": "Object;$ti",
      _sendData$1: function(data) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.assertSubtypeOfRuntimeType(data, t1);
        this.get$_subscription()._addPending$1(new P._DelayedData(data, [t1]));
      },
      _sendError$2: function(error, stackTrace) {
        this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace));
      },
      _sendDone$0: function() {
        this.get$_subscription()._addPending$1(C.C__DelayedDone);
      }
    },
    _AsyncStreamController: {
      "^": "_StreamController+_AsyncStreamControllerDispatch;0_varData,_state,0_doneFuture,onListen,onPause,onResume,onCancel,$ti"
    },
    _SyncStreamController: {
      "^": "_StreamController+_SyncStreamControllerDispatch;0_varData,_state,0_doneFuture,onListen,onPause,onResume,onCancel,$ti"
    },
    _ControllerStream: {
      "^": "_StreamImpl;_controller,$ti",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        return this._controller._subscribe$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError);
      },
      get$hashCode: function(_) {
        return (H.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!(other instanceof P._ControllerStream))
          return false;
        return other._controller === this._controller;
      }
    },
    _ControllerSubscription: {
      "^": "_BufferingStreamSubscription;_controller,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      _async$_onCancel$0: function() {
        return this._controller._recordCancel$1(this);
      },
      _onPause$0: [function() {
        this._controller._recordPause$1(this);
      }, "call$0", "get$_onPause", 0, 0, 1],
      _onResume$0: [function() {
        this._controller._recordResume$1(this);
      }, "call$0", "get$_onResume", 0, 0, 1]
    },
    _AddStreamState: {
      "^": "Object;$ti",
      cancel$0: function(_) {
        var cancel = this.addSubscription.cancel$0(0);
        if (cancel == null) {
          this.addStreamFuture._asyncComplete$1(null);
          return;
        }
        return cancel.whenComplete$1(new P._AddStreamState_cancel_closure(this));
      }
    },
    _AddStreamState_cancel_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        this.$this.addStreamFuture._asyncComplete$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    _StreamControllerAddStreamState: {
      "^": "_AddStreamState;varData,addStreamFuture,addSubscription,$ti"
    },
    _BufferingStreamSubscription: {
      "^": "Object;0_onData,0_async$_onError,0_onDone,_zone,_state<,0_cancelFuture,0_pending,$ti",
      set$_onData: function(_onData) {
        this._onData = H.functionTypeCheck(_onData, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)]});
      },
      set$_onDone: function(_onDone) {
        this._onDone = H.functionTypeCheck(_onDone, {func: 1, ret: -1});
      },
      set$_pending: function(_pending) {
        this._pending = H.assertSubtype(_pending, "$is_PendingEvents", [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)], "$as_PendingEvents");
      },
      _BufferingStreamSubscription$4: function(onData, onError, onDone, cancelOnError, $T) {
        var t1, handleData, t2, handleError, handleDone;
        t1 = H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        handleData = onData == null ? P.async___nullDataHandler$closure() : onData;
        t2 = this._zone;
        this.set$_onData(t2.registerUnaryCallback$2$1(handleData, null, t1));
        handleError = onError == null ? P.async___nullErrorHandler$closure() : onError;
        if (H.functionTypeTest(handleError, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}))
          this._async$_onError = t2.registerBinaryCallback$3$1(handleError, null, P.Object, P.StackTrace);
        else if (H.functionTypeTest(handleError, {func: 1, ret: -1, args: [P.Object]}))
          this._async$_onError = t2.registerUnaryCallback$2$1(handleError, null, P.Object);
        else
          H.throwExpression(P.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace."));
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        handleDone = onDone == null ? P.async___nullDoneHandler$closure() : onDone;
        this.set$_onDone(t2.registerCallback$1$1(handleDone, -1));
      },
      _setPendingEvents$1: function(pendingEvents) {
        H.assertSubtype(pendingEvents, "$is_PendingEvents", [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)], "$as_PendingEvents");
        if (pendingEvents == null)
          return;
        this.set$_pending(pendingEvents);
        if (!pendingEvents.get$isEmpty(pendingEvents)) {
          this._state = (this._state | 64) >>> 0;
          this._pending.schedule$1(this);
        }
      },
      pause$1: function(_, resumeSignal) {
        var t1, t2, t3;
        t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        t2 = (t1 + 128 | 4) >>> 0;
        this._state = t2;
        if (t1 < 128 && this._pending != null) {
          t3 = this._pending;
          if (t3._state === 1)
            t3._state = 3;
        }
        if ((t1 & 4) === 0 && (t2 & 32) === 0)
          this._guardCallback$1(this.get$_onPause());
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 >= 128) {
          t1 -= 128;
          this._state = t1;
          if (t1 < 128) {
            if ((t1 & 64) !== 0) {
              t1 = this._pending;
              t1 = !t1.get$isEmpty(t1);
            } else
              t1 = false;
            if (t1)
              this._pending.schedule$1(this);
            else {
              t1 = (this._state & 4294967291) >>> 0;
              this._state = t1;
              if ((t1 & 32) === 0)
                this._guardCallback$1(this.get$_onResume());
            }
          }
        }
      },
      cancel$0: function(_) {
        var t1 = (this._state & 4294967279) >>> 0;
        this._state = t1;
        if ((t1 & 8) === 0)
          this._cancel$0();
        t1 = this._cancelFuture;
        return t1 == null ? $.$get$Future__nullFuture() : t1;
      },
      _cancel$0: function() {
        var t1, t2;
        t1 = (this._state | 8) >>> 0;
        this._state = t1;
        if ((t1 & 64) !== 0) {
          t2 = this._pending;
          if (t2._state === 1)
            t2._state = 3;
        }
        if ((t1 & 32) === 0)
          this.set$_pending(null);
        this._cancelFuture = this._async$_onCancel$0();
      },
      _add$1: ["super$_BufferingStreamSubscription$_add", function(_, data) {
        var t1, t2;
        t1 = H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0);
        H.assertSubtypeOfRuntimeType(data, t1);
        t2 = this._state;
        if ((t2 & 8) !== 0)
          return;
        if (t2 < 32)
          this._sendData$1(data);
        else
          this._addPending$1(new P._DelayedData(data, [t1]));
      }],
      _addError$2: ["super$_BufferingStreamSubscription$_addError", function(error, stackTrace) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 < 32)
          this._sendError$2(error, stackTrace);
        else
          this._addPending$1(new P._DelayedError(error, stackTrace));
      }],
      _async$_close$0: ["super$_BufferingStreamSubscription$_close", function() {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        t1 = (t1 | 2) >>> 0;
        this._state = t1;
        if (t1 < 32)
          this._sendDone$0();
        else
          this._addPending$1(C.C__DelayedDone);
      }],
      _onPause$0: [function() {
      }, "call$0", "get$_onPause", 0, 0, 1],
      _onResume$0: [function() {
      }, "call$0", "get$_onResume", 0, 0, 1],
      _async$_onCancel$0: function() {
        return;
      },
      _addPending$1: function($event) {
        var t1, pending;
        t1 = [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)];
        pending = H.assertSubtype(this._pending, "$is_StreamImplEvents", t1, "$as_StreamImplEvents");
        if (pending == null) {
          pending = new P._StreamImplEvents(0, t1);
          this.set$_pending(pending);
        }
        pending.add$1(0, $event);
        t1 = this._state;
        if ((t1 & 64) === 0) {
          t1 = (t1 | 64) >>> 0;
          this._state = t1;
          if (t1 < 128)
            this._pending.schedule$1(this);
        }
      },
      _sendData$1: function(data) {
        var t1, t2;
        t1 = H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0);
        H.assertSubtypeOfRuntimeType(data, t1);
        t2 = this._state;
        this._state = (t2 | 32) >>> 0;
        this._zone.runUnaryGuarded$1$2(this._onData, data, t1);
        this._state = (this._state & 4294967263) >>> 0;
        this._checkState$1((t2 & 4) !== 0);
      },
      _sendError$2: function(error, stackTrace) {
        var t1, t2;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        t1 = this._state;
        t2 = new P._BufferingStreamSubscription__sendError_sendError(this, error, stackTrace);
        if ((t1 & 1) !== 0) {
          this._state = (t1 | 16) >>> 0;
          this._cancel$0();
          t1 = this._cancelFuture;
          if (!!J.getInterceptor$(t1).$isFuture && t1 !== $.$get$Future__nullFuture())
            t1.whenComplete$1(t2);
          else
            t2.call$0();
        } else {
          t2.call$0();
          this._checkState$1((t1 & 4) !== 0);
        }
      },
      _sendDone$0: function() {
        var t1, t2;
        t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
        this._cancel$0();
        this._state = (this._state | 16) >>> 0;
        t2 = this._cancelFuture;
        if (!!J.getInterceptor$(t2).$isFuture && t2 !== $.$get$Future__nullFuture())
          t2.whenComplete$1(t1);
        else
          t1.call$0();
      },
      _guardCallback$1: function(callback) {
        var t1;
        H.functionTypeCheck(callback, {func: 1, ret: -1});
        t1 = this._state;
        this._state = (t1 | 32) >>> 0;
        callback.call$0();
        this._state = (this._state & 4294967263) >>> 0;
        this._checkState$1((t1 & 4) !== 0);
      },
      _checkState$1: function(wasInputPaused) {
        var t1, isInputPaused;
        if ((this._state & 64) !== 0) {
          t1 = this._pending;
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
        if (t1) {
          t1 = (this._state & 4294967231) >>> 0;
          this._state = t1;
          if ((t1 & 4) !== 0)
            if (t1 < 128) {
              t1 = this._pending;
              t1 = t1 == null || t1.get$isEmpty(t1);
            } else
              t1 = false;
          else
            t1 = false;
          if (t1)
            this._state = (this._state & 4294967291) >>> 0;
        }
        for (; true; wasInputPaused = isInputPaused) {
          t1 = this._state;
          if ((t1 & 8) !== 0) {
            this.set$_pending(null);
            return;
          }
          isInputPaused = (t1 & 4) !== 0;
          if (wasInputPaused === isInputPaused)
            break;
          this._state = (t1 ^ 32) >>> 0;
          if (isInputPaused)
            this._onPause$0();
          else
            this._onResume$0();
          this._state = (this._state & 4294967263) >>> 0;
        }
        t1 = this._state;
        if ((t1 & 64) !== 0 && t1 < 128)
          this._pending.schedule$1(this);
      },
      $isStreamSubscription: 1,
      $is_EventSink: 1,
      $is_EventDispatch: 1,
      static: {
        _BufferingStreamSubscription$: function(onData, onError, onDone, cancelOnError, $T) {
          var t1, t2;
          t1 = $.Zone__current;
          t2 = cancelOnError ? 1 : 0;
          t2 = new P._BufferingStreamSubscription(t1, t2, [$T]);
          t2._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
          return t2;
        }
      }
    },
    _BufferingStreamSubscription__sendError_sendError: {
      "^": "Closure:1;$this,error,stackTrace",
      call$0: [function() {
        var t1, t2, onError, t3, t4;
        t1 = this.$this;
        t2 = t1._state;
        if ((t2 & 8) !== 0 && (t2 & 16) === 0)
          return;
        t1._state = (t2 | 32) >>> 0;
        onError = t1._async$_onError;
        t2 = this.error;
        t3 = P.Object;
        t4 = t1._zone;
        if (H.functionTypeTest(onError, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}))
          t4.runBinaryGuarded$2$3(onError, t2, this.stackTrace, t3, P.StackTrace);
        else
          t4.runUnaryGuarded$1$2(H.functionTypeCheck(t1._async$_onError, {func: 1, ret: -1, args: [P.Object]}), t2, t3);
        t1._state = (t1._state & 4294967263) >>> 0;
      }, null, null, 0, 0, null, "call"]
    },
    _BufferingStreamSubscription__sendDone_sendDone: {
      "^": "Closure:1;$this",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._state;
        if ((t2 & 16) === 0)
          return;
        t1._state = (t2 | 42) >>> 0;
        t1._zone.runGuarded$1(t1._onDone);
        t1._state = (t1._state & 4294967263) >>> 0;
      }, null, null, 0, 0, null, "call"]
    },
    _StreamImpl: {
      "^": "Stream;$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._createSubscription$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), true === cancelOnError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        return P._BufferingStreamSubscription$(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError, t1);
      }
    },
    _GeneratedStreamImpl: {
      "^": "_StreamImpl;_pending,_isUsed,$ti",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        if (this._isUsed)
          throw H.wrapException(P.StateError$("Stream has already been listened to."));
        this._isUsed = true;
        t1 = P._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError, t1);
        t1._setPendingEvents$1(this._pending.call$0());
        return t1;
      }
    },
    _IterablePendingEvents: {
      "^": "_PendingEvents;_async$_iterator,_state,$ti",
      set$_async$_iterator: function(_iterator) {
        this._async$_iterator = H.assertSubtype(_iterator, "$isIterator", this.$ti, "$asIterator");
      },
      get$isEmpty: function(_) {
        return this._async$_iterator == null;
      },
      handleNext$1: function(dispatch) {
        var hasMore, e, s, t1, exception;
        H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch");
        t1 = this._async$_iterator;
        if (t1 == null)
          throw H.wrapException(P.StateError$("No events pending."));
        hasMore = null;
        try {
          hasMore = t1.moveNext$0();
          if (hasMore) {
            t1 = this._async$_iterator;
            dispatch._sendData$1(t1.get$current(t1));
          } else {
            this.set$_async$_iterator(null);
            dispatch._sendDone$0();
          }
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          if (hasMore == null) {
            this.set$_async$_iterator(C.C_EmptyIterator);
            dispatch._sendError$2(e, s);
          } else
            dispatch._sendError$2(e, s);
        }
      }
    },
    _DelayedEvent: {
      "^": "Object;0next>,$ti",
      set$next: function(_, next) {
        this.next = H.interceptedTypeCheck(next, "$is_DelayedEvent");
      }
    },
    _DelayedData: {
      "^": "_DelayedEvent;value,0next,$ti",
      perform$1: function(dispatch) {
        H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch")._sendData$1(this.value);
      }
    },
    _DelayedError: {
      "^": "_DelayedEvent;error,stackTrace,0next",
      perform$1: function(dispatch) {
        dispatch._sendError$2(this.error, this.stackTrace);
      },
      $as_DelayedEvent: Isolate.functionThatReturnsNull
    },
    _DelayedDone: {
      "^": "Object;",
      perform$1: function(dispatch) {
        dispatch._sendDone$0();
      },
      get$next: function(_) {
        return;
      },
      set$next: function(_, _0) {
        throw H.wrapException(P.StateError$("No events after a done."));
      },
      $is_DelayedEvent: 1,
      $as_DelayedEvent: Isolate.functionThatReturnsNull
    },
    _PendingEvents: {
      "^": "Object;_state<,$ti",
      schedule$1: function(dispatch) {
        var t1;
        H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch");
        t1 = this._state;
        if (t1 === 1)
          return;
        if (t1 >= 1) {
          this._state = 1;
          return;
        }
        P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
        this._state = 1;
      }
    },
    _PendingEvents_schedule_closure: {
      "^": "Closure:0;$this,dispatch",
      call$0: [function() {
        var t1, oldState;
        t1 = this.$this;
        oldState = t1._state;
        t1._state = 0;
        if (oldState === 3)
          return;
        t1.handleNext$1(this.dispatch);
      }, null, null, 0, 0, null, "call"]
    },
    _StreamImplEvents: {
      "^": "_PendingEvents;0firstPendingEvent,0lastPendingEvent,_state,$ti",
      get$isEmpty: function(_) {
        return this.lastPendingEvent == null;
      },
      add$1: function(_, $event) {
        var t1;
        H.interceptedTypeCheck($event, "$is_DelayedEvent");
        t1 = this.lastPendingEvent;
        if (t1 == null) {
          this.lastPendingEvent = $event;
          this.firstPendingEvent = $event;
        } else {
          t1.set$next(0, $event);
          this.lastPendingEvent = $event;
        }
      },
      handleNext$1: function(dispatch) {
        var $event, t1;
        H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch");
        $event = this.firstPendingEvent;
        t1 = $event.get$next($event);
        this.firstPendingEvent = t1;
        if (t1 == null)
          this.lastPendingEvent = null;
        $event.perform$1(dispatch);
      }
    },
    _DoneStreamSubscription: {
      "^": "Object;_zone,_state<,_onDone,$ti",
      _schedule$0: function() {
        if ((this._state & 2) !== 0)
          return;
        this._zone.scheduleMicrotask$1(this.get$_sendDone());
        this._state = (this._state | 2) >>> 0;
      },
      pause$1: function(_, resumeSignal) {
        this._state += 4;
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        var t1 = this._state;
        if (t1 >= 4) {
          t1 -= 4;
          this._state = t1;
          if (t1 < 4 && (t1 & 1) === 0)
            this._schedule$0();
        }
      },
      cancel$0: function(_) {
        return $.$get$Future__nullFuture();
      },
      _sendDone$0: [function() {
        var t1 = (this._state & 4294967293) >>> 0;
        this._state = t1;
        if (t1 >= 4)
          return;
        this._state = (t1 | 1) >>> 0;
        t1 = this._onDone;
        if (t1 != null)
          this._zone.runGuarded$1(t1);
      }, "call$0", "get$_sendDone", 0, 0, 1],
      $isStreamSubscription: 1
    },
    _AsBroadcastStream: {
      "^": "Stream;_async$_source,_onListenHandler,_onCancelHandler,_zone,0_controller,0_subscription,$ti",
      set$_controller: function(_controller) {
        this._controller = H.assertSubtype(_controller, "$is_AsBroadcastStreamController", this.$ti, "$as_AsBroadcastStreamController");
      },
      set$_subscription: function(_subscription) {
        this._subscription = H.assertSubtype(_subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
      },
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1, t2, t3;
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        t1 = this._controller;
        if (t1 == null || (t1._state & 4) !== 0) {
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone, this.$ti);
          t1._schedule$0();
          return t1;
        }
        if (this._subscription == null) {
          t2 = t1.get$add(t1);
          t3 = t1.get$addError();
          this.set$_subscription(this._async$_source.listen$3$onDone$onError(t2, t1.get$close(t1), t3));
        }
        return this._controller._subscribe$4(onData, onError, onDone, true === cancelOnError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      _async$_onCancel$0: [function() {
        var t1, shutdown;
        t1 = this._controller;
        shutdown = t1 == null || (t1._state & 4) !== 0;
        t1 = this._onCancelHandler;
        if (t1 != null)
          this._zone.runUnary$2$2(t1, new P._BroadcastSubscriptionWrapper(this, this.$ti), -1, [P._BroadcastSubscriptionWrapper, H.getTypeArgumentByIndex(this, 0)]);
        if (shutdown) {
          t1 = this._subscription;
          if (t1 != null) {
            t1.cancel$0(0);
            this.set$_subscription(null);
          }
        }
      }, "call$0", "get$_async$_onCancel", 0, 0, 1],
      _onListen$0: [function() {
        var t1 = this._onListenHandler;
        if (t1 != null)
          this._zone.runUnary$2$2(t1, new P._BroadcastSubscriptionWrapper(this, this.$ti), -1, [P._BroadcastSubscriptionWrapper, H.getTypeArgumentByIndex(this, 0)]);
      }, "call$0", "get$_onListen", 0, 0, 1],
      _cancelSubscription$0: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        this.set$_subscription(null);
        this.set$_controller(null);
        t1.cancel$0(0);
      },
      _pauseSubscription$1: function(resumeSignal) {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.pause$1(0, resumeSignal);
      },
      _resumeSubscription$0: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.resume$0(0);
      }
    },
    _BroadcastSubscriptionWrapper: {
      "^": "Object;_stream,$ti",
      pause$1: function(_, resumeSignal) {
        this._stream._pauseSubscription$1(resumeSignal);
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        this._stream._resumeSubscription$0();
      },
      cancel$0: function(_) {
        this._stream._cancelSubscription$0();
        return $.$get$Future__nullFuture();
      },
      $isStreamSubscription: 1
    },
    _StreamIterator: {
      "^": "Object;0_subscription,_stateData,_isPaused,$ti"
    },
    _ForwardingStream: {
      "^": "Stream;$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._createSubscription$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "_ForwardingStream", 1)]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), true === cancelOnError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
        return P._ForwardingStreamSubscription$(this, H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError, H.getRuntimeTypeArgument(this, "_ForwardingStream", 0), t1);
      },
      _handleData$2: function(data, sink) {
        var t1;
        H.assertSubtypeOfRuntimeType(data, H.getRuntimeTypeArgument(this, "_ForwardingStream", 0));
        t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
        H.assertSubtype(sink, "$is_EventSink", [t1], "$as_EventSink")._add$1(0, H.assertSubtypeOfRuntimeType(data, t1));
      },
      $asStream: function($S, $T) {
        return [$T];
      }
    },
    _ForwardingStreamSubscription: {
      "^": "_BufferingStreamSubscription;_stream,0_subscription,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      set$_subscription: function(_subscription) {
        this._subscription = H.assertSubtype(_subscription, "$isStreamSubscription", [H.getRuntimeTypeArgument(this, "_ForwardingStreamSubscription", 0)], "$asStreamSubscription");
      },
      _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
        this.set$_subscription(this._stream._async$_source.listen$3$onDone$onError(this.get$_handleData(), this.get$_handleDone(), this.get$_handleError()));
      },
      _add$1: function(_, data) {
        H.assertSubtypeOfRuntimeType(data, H.getRuntimeTypeArgument(this, "_ForwardingStreamSubscription", 1));
        if ((this._state & 2) !== 0)
          return;
        this.super$_BufferingStreamSubscription$_add(0, data);
      },
      _addError$2: function(error, stackTrace) {
        if ((this._state & 2) !== 0)
          return;
        this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
      },
      _onPause$0: [function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.pause$0(0);
      }, "call$0", "get$_onPause", 0, 0, 1],
      _onResume$0: [function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.resume$0(0);
      }, "call$0", "get$_onResume", 0, 0, 1],
      _async$_onCancel$0: function() {
        var t1 = this._subscription;
        if (t1 != null) {
          this.set$_subscription(null);
          return t1.cancel$0(0);
        }
        return;
      },
      _handleData$1: [function(data) {
        this._stream._handleData$2(H.assertSubtypeOfRuntimeType(data, H.getRuntimeTypeArgument(this, "_ForwardingStreamSubscription", 0)), this);
      }, "call$1", "get$_handleData", 4, 0, 8, 9],
      _handleError$2: [function(error, stackTrace) {
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        H.assertSubtype(this, "$is_EventSink", [H.getRuntimeTypeArgument(this._stream, "_ForwardingStream", 1)], "$as_EventSink")._addError$2(error, stackTrace);
      }, "call$2", "get$_handleError", 8, 0, 110, 4, 5],
      _handleDone$0: [function() {
        H.assertSubtype(this, "$is_EventSink", [H.getRuntimeTypeArgument(this._stream, "_ForwardingStream", 1)], "$as_EventSink")._async$_close$0();
      }, "call$0", "get$_handleDone", 0, 0, 1],
      $asStreamSubscription: function($S, $T) {
        return [$T];
      },
      $as_EventSink: function($S, $T) {
        return [$T];
      },
      $as_EventDispatch: function($S, $T) {
        return [$T];
      },
      $as_BufferingStreamSubscription: function($S, $T) {
        return [$T];
      },
      static: {
        _ForwardingStreamSubscription$: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
          var t1, t2;
          t1 = $.Zone__current;
          t2 = cancelOnError ? 1 : 0;
          t2 = new P._ForwardingStreamSubscription(_stream, t1, t2, [$S, $T]);
          t2._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
          t2._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, cancelOnError, $S, $T);
          return t2;
        }
      }
    },
    _TakeStream: {
      "^": "_ForwardingStream;_count,_async$_source,$ti",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1, t2, t3, t4;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        t2 = this._count;
        if (t2 === 0) {
          this._async$_source.listen$1(null).cancel$0(0);
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone, this.$ti);
          t1._schedule$0();
          return t1;
        }
        t3 = $.Zone__current;
        t4 = cancelOnError ? 1 : 0;
        t4 = new P._StateStreamSubscription(t2, this, t3, t4, this.$ti);
        t4._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        t4._ForwardingStreamSubscription$5(this, onData, onError, onDone, cancelOnError, t1, t1);
        return t4;
      },
      _handleData$2: function(inputEvent, sink) {
        var t1, count;
        H.assertSubtypeOfRuntimeType(inputEvent, H.getTypeArgumentByIndex(this, 0));
        t1 = this.$ti;
        sink = H.assertSubtype(H.assertSubtype(sink, "$is_EventSink", t1, "$as_EventSink"), "$is_StateStreamSubscription", t1, "$as_StateStreamSubscription");
        count = H.intTypeCheck(sink._sharedState);
        if (typeof count !== "number")
          return count.$gt();
        if (count > 0) {
          sink._add$1(0, inputEvent);
          --count;
          sink._sharedState = count;
          if (count === 0)
            sink._async$_close$0();
        }
      },
      $asStream: null,
      $as_ForwardingStream: function($T) {
        return [$T, $T];
      }
    },
    _StateStreamSubscription: {
      "^": "_ForwardingStreamSubscription;_sharedState,_stream,0_subscription,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      $asStreamSubscription: null,
      $as_EventSink: null,
      $as_EventDispatch: null,
      $as_BufferingStreamSubscription: null,
      $as_ForwardingStreamSubscription: function($T) {
        return [$T, $T];
      }
    },
    _DistinctStream: {
      "^": "_ForwardingStream;_equals,_async$_source,$ti",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1, t2, t3, t4;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        t2 = $.$get$_DistinctStream__SENTINEL();
        t3 = $.Zone__current;
        t4 = cancelOnError ? 1 : 0;
        t4 = new P._StateStreamSubscription(t2, this, t3, t4, this.$ti);
        t4._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        t4._ForwardingStreamSubscription$5(this, onData, onError, onDone, cancelOnError, t1, t1);
        return t4;
      },
      _handleData$2: function(inputEvent, sink) {
        var previousEvent, isEqual, e, s, t1, t2, subscription, previous, exception, error, stackTrace, replacement;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.assertSubtypeOfRuntimeType(inputEvent, t1);
        t2 = this.$ti;
        H.assertSubtype(sink, "$is_EventSink", t2, "$as_EventSink");
        subscription = H.assertSubtype(sink, "$is_StateStreamSubscription", t2, "$as_StateStreamSubscription");
        previous = subscription._sharedState;
        t2 = $.$get$_DistinctStream__SENTINEL();
        if (previous == null ? t2 == null : previous === t2) {
          subscription._sharedState = inputEvent;
          J._add$1$x(sink, inputEvent);
        } else {
          previousEvent = H.assertSubtypeOfRuntimeType(previous, t1);
          isEqual = null;
          try {
            t1 = this._equals;
            if (t1 == null)
              isEqual = J.$eq$(previousEvent, inputEvent);
            else
              isEqual = t1.call$2(previousEvent, inputEvent);
          } catch (exception) {
            e = H.unwrapException(exception);
            s = H.getTraceFromException(exception);
            error = e;
            t1 = $.Zone__current;
            stackTrace = H.interceptedTypeCheck(s, "$isStackTrace");
            replacement = t1.errorCallback$2(error, stackTrace);
            if (replacement != null) {
              error = replacement.error;
              if (error == null)
                error = new P.NullThrownError();
              stackTrace = replacement.stackTrace;
            }
            sink._addError$2(error, stackTrace);
            return;
          }
          if (!isEqual) {
            J._add$1$x(sink, inputEvent);
            subscription._sharedState = inputEvent;
          }
        }
      },
      $asStream: null,
      $as_ForwardingStream: function($T) {
        return [$T, $T];
      }
    },
    _EventSinkWrapper: {
      "^": "Object;_sink,$ti",
      add$1: [function(_, data) {
        var t1 = this._sink;
        data = H.assertSubtypeOfRuntimeType(H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0)), H.getTypeArgumentByIndex(t1, 1));
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_add(0, data);
      }, "call$1", "get$add", 5, 0, 8, 9],
      addError$2: function(error, stackTrace) {
        var t1 = this._sink;
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_addError(error, stackTrace);
      },
      close$0: function(_) {
        var t1 = this._sink;
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_close();
      },
      $isEventSink: 1
    },
    _SinkTransformerStreamSubscription: {
      "^": "_BufferingStreamSubscription;0_transformerSink,0_subscription,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      set$_transformerSink: function(_transformerSink) {
        this._transformerSink = H.assertSubtype(_transformerSink, "$isEventSink", [H.getTypeArgumentByIndex(this, 0)], "$asEventSink");
      },
      set$_subscription: function(_subscription) {
        this._subscription = H.assertSubtype(_subscription, "$isStreamSubscription", [H.getTypeArgumentByIndex(this, 0)], "$asStreamSubscription");
      },
      _add$1: function(_, data) {
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 1));
        if ((this._state & 2) !== 0)
          throw H.wrapException(P.StateError$("Stream is already closed"));
        this.super$_BufferingStreamSubscription$_add(0, data);
      },
      _addError$2: function(error, stackTrace) {
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        if ((this._state & 2) !== 0)
          throw H.wrapException(P.StateError$("Stream is already closed"));
        this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
      },
      _onPause$0: [function() {
        var t1 = this._subscription;
        if (t1 != null)
          t1.pause$0(0);
      }, "call$0", "get$_onPause", 0, 0, 1],
      _onResume$0: [function() {
        var t1 = this._subscription;
        if (t1 != null)
          t1.resume$0(0);
      }, "call$0", "get$_onResume", 0, 0, 1],
      _async$_onCancel$0: function() {
        var t1 = this._subscription;
        if (t1 != null) {
          this.set$_subscription(null);
          return t1.cancel$0(0);
        }
        return;
      },
      _handleData$1: [function(data) {
        var e, s, exception, t1;
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        try {
          this._transformerSink.add$1(0, data);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = H.interceptedTypeCheck(s, "$isStackTrace");
          if ((this._state & 2) !== 0)
            H.throwExpression(P.StateError$("Stream is already closed"));
          this.super$_BufferingStreamSubscription$_addError(e, t1);
        }
      }, "call$1", "get$_handleData", 4, 0, 8, 9],
      _handleError$2: [function(error, stackTrace) {
        var e, s, exception, t1;
        try {
          this._transformerSink.addError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = e;
          if (t1 == null ? error == null : t1 === error) {
            H.interceptedTypeCheck(stackTrace, "$isStackTrace");
            if ((this._state & 2) !== 0)
              H.throwExpression(P.StateError$("Stream is already closed"));
            this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
          } else {
            t1 = H.interceptedTypeCheck(s, "$isStackTrace");
            if ((this._state & 2) !== 0)
              H.throwExpression(P.StateError$("Stream is already closed"));
            this.super$_BufferingStreamSubscription$_addError(e, t1);
          }
        }
      }, function(error) {
        return this._handleError$2(error, null);
      }, "_handleError$1", "call$2", "call$1", "get$_handleError", 4, 2, 128, 3, 4, 5],
      _handleDone$0: [function() {
        var e, s, exception, t1;
        try {
          this.set$_subscription(null);
          this._transformerSink.close$0(0);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = H.interceptedTypeCheck(s, "$isStackTrace");
          if ((this._state & 2) !== 0)
            H.throwExpression(P.StateError$("Stream is already closed"));
          this.super$_BufferingStreamSubscription$_addError(e, t1);
        }
      }, "call$0", "get$_handleDone", 0, 0, 1],
      $asStreamSubscription: function($S, $T) {
        return [$T];
      },
      $as_EventSink: function($S, $T) {
        return [$T];
      },
      $as_EventDispatch: function($S, $T) {
        return [$T];
      },
      $as_BufferingStreamSubscription: function($S, $T) {
        return [$T];
      }
    },
    _BoundSinkStream: {
      "^": "Stream;_sinkMapper,_stream,$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1, t2, t3, subscription;
        t1 = H.getTypeArgumentByIndex(this, 1);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        cancelOnError = true === cancelOnError;
        t2 = $.Zone__current;
        t3 = cancelOnError ? 1 : 0;
        subscription = new P._SinkTransformerStreamSubscription(t2, t3, this.$ti);
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        subscription.set$_transformerSink(this._sinkMapper.call$1(new P._EventSinkWrapper(subscription, [t1])));
        subscription.set$_subscription(this._stream.listen$3$onDone$onError(subscription.get$_handleData(), subscription.get$_handleDone(), subscription.get$_handleError()));
        return subscription;
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      $asStream: function($S, $T) {
        return [$T];
      }
    },
    Timer: {
      "^": "Object;"
    },
    AsyncError: {
      "^": "Object;error,stackTrace",
      toString$0: function(_) {
        return H.S(this.error);
      },
      $isError: 1
    },
    _ZoneFunction: {
      "^": "Object;zone,$function,$ti"
    },
    ZoneSpecification: {
      "^": "Object;"
    },
    _ZoneSpecification: {
      "^": "Object;handleUncaughtError,run,runUnary,runBinary,registerCallback,registerUnaryCallback,registerBinaryCallback,errorCallback,scheduleMicrotask,createTimer,createPeriodicTimer,print,fork",
      $isZoneSpecification: 1,
      static: {
        _ZoneSpecification$: function(createPeriodicTimer, createTimer, errorCallback, fork, handleUncaughtError, $print, registerBinaryCallback, registerCallback, registerUnaryCallback, run, runBinary, runUnary, scheduleMicrotask) {
          return new P._ZoneSpecification(handleUncaughtError, run, runUnary, runBinary, registerCallback, registerUnaryCallback, registerBinaryCallback, errorCallback, scheduleMicrotask, createTimer, createPeriodicTimer, $print, fork);
        }
      }
    },
    ZoneDelegate: {
      "^": "Object;"
    },
    Zone: {
      "^": "Object;"
    },
    _ZoneDelegate: {
      "^": "Object;_delegationTarget",
      $isZoneDelegate: 1
    },
    _Zone: {
      "^": "Object;",
      $isZone: 1
    },
    _CustomZone: {
      "^": "_Zone;0_async$_run<,0_async$_runUnary<,0_async$_runBinary<,0_registerCallback<,0_registerUnaryCallback<,0_registerBinaryCallback<,0_errorCallback<,0_scheduleMicrotask<,0_async$_createTimer<,0_createPeriodicTimer<,0_print<,0_fork<,0_handleUncaughtError<,0_delegateCache,parent>,_async$_map<",
      set$_async$_run: function(_run) {
        this._async$_run = H.assertSubtype(_run, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_async$_runUnary: function(_runUnary) {
        this._async$_runUnary = H.assertSubtype(_runUnary, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_async$_runBinary: function(_runBinary) {
        this._async$_runBinary = H.assertSubtype(_runBinary, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_registerCallback: function(_registerCallback) {
        this._registerCallback = H.assertSubtype(_registerCallback, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_registerUnaryCallback: function(_registerUnaryCallback) {
        this._registerUnaryCallback = H.assertSubtype(_registerUnaryCallback, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_registerBinaryCallback: function(_registerBinaryCallback) {
        this._registerBinaryCallback = H.assertSubtype(_registerBinaryCallback, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_errorCallback: function(_errorCallback) {
        this._errorCallback = H.assertSubtype(_errorCallback, "$is_ZoneFunction", [{func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}], "$as_ZoneFunction");
      },
      set$_scheduleMicrotask: function(_scheduleMicrotask) {
        this._scheduleMicrotask = H.assertSubtype(_scheduleMicrotask, "$is_ZoneFunction", [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}], "$as_ZoneFunction");
      },
      set$_async$_createTimer: function(_createTimer) {
        this._async$_createTimer = H.assertSubtype(_createTimer, "$is_ZoneFunction", [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}], "$as_ZoneFunction");
      },
      set$_createPeriodicTimer: function(_createPeriodicTimer) {
        this._createPeriodicTimer = H.assertSubtype(_createPeriodicTimer, "$is_ZoneFunction", [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1, args: [P.Timer]}]}], "$as_ZoneFunction");
      },
      set$_print: function(_print) {
        this._print = H.assertSubtype(_print, "$is_ZoneFunction", [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}], "$as_ZoneFunction");
      },
      set$_fork: function(_fork) {
        this._fork = H.assertSubtype(_fork, "$is_ZoneFunction", [{func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map,,,]]}], "$as_ZoneFunction");
      },
      set$_handleUncaughtError: function(_handleUncaughtError) {
        this._handleUncaughtError = H.assertSubtype(_handleUncaughtError, "$is_ZoneFunction", [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}], "$as_ZoneFunction");
      },
      get$_delegate: function() {
        var t1 = this._delegateCache;
        if (t1 != null)
          return t1;
        t1 = new P._ZoneDelegate(this);
        this._delegateCache = t1;
        return t1;
      },
      get$errorZone: function() {
        return this._handleUncaughtError.zone;
      },
      runGuarded$1: function(f) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1});
        try {
          this.run$1$1(f, -1);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          this.handleUncaughtError$2(e, s);
        }
      },
      runUnaryGuarded$1$2: function(f, arg, $T) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        try {
          this.runUnary$2$2(f, arg, -1, $T);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          this.handleUncaughtError$2(e, s);
        }
      },
      runBinaryGuarded$2$3: function(f, arg1, arg2, T1, T2) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        try {
          this.runBinary$3$3(f, arg1, arg2, -1, T1, T2);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          this.handleUncaughtError$2(e, s);
        }
      },
      bindCallback$1$1: function(f, $R) {
        return new P._CustomZone_bindCallback_closure(this, this.registerCallback$1$1(H.functionTypeCheck(f, {func: 1, ret: $R}), $R), $R);
      },
      bindUnaryCallback$2$1: function(f, $R, $T) {
        return new P._CustomZone_bindUnaryCallback_closure(this, this.registerUnaryCallback$2$1(H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]}), $R, $T), $T, $R);
      },
      bindCallbackGuarded$1: function(f) {
        return new P._CustomZone_bindCallbackGuarded_closure(this, this.registerCallback$1$1(H.functionTypeCheck(f, {func: 1, ret: -1}), -1));
      },
      bindUnaryCallbackGuarded$1$1: function(f, $T) {
        return new P._CustomZone_bindUnaryCallbackGuarded_closure(this, this.registerUnaryCallback$2$1(H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]}), -1, $T), $T);
      },
      $index: function(_, key) {
        var t1, result, t2, value;
        t1 = this._async$_map;
        result = t1.$index(0, key);
        if (result != null || t1.containsKey$1(0, key))
          return result;
        t2 = this.parent;
        if (t2 != null) {
          value = t2.$index(0, key);
          if (value != null)
            t1.$indexSet(0, key, value);
          return value;
        }
        return;
      },
      handleUncaughtError$2: function(error, stackTrace) {
        var implementation, t1, parentDelegate;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        implementation = this._handleUncaughtError;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, error, stackTrace);
      },
      fork$2$specification$zoneValues: function(specification, zoneValues) {
        var implementation, t1, parentDelegate;
        implementation = this._fork;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, specification, zoneValues);
      },
      run$1$1: function(f, $R) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: $R});
        implementation = this._async$_run;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}).call$1$4(t1, parentDelegate, this, f, $R);
      },
      runUnary$2$2: function(f, arg, $R, $T) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        implementation = this._async$_runUnary;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}, 1]}).call$2$5(t1, parentDelegate, this, f, arg, $R, $T);
      },
      runBinary$3$3: function(f, arg1, arg2, $R, T1, T2) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        implementation = this._async$_runBinary;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}, 1, 2]}).call$3$6(t1, parentDelegate, this, f, arg1, arg2, $R, T1, T2);
      },
      registerCallback$1$1: function(callback, $R) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(callback, {func: 1, ret: $R});
        implementation = this._registerCallback;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object], ret: {func: 1, ret: 0}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}).call$1$4(t1, parentDelegate, this, callback, $R);
      },
      registerUnaryCallback$2$1: function(callback, $R, $T) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(callback, {func: 1, ret: $R, args: [$T]});
        implementation = this._registerUnaryCallback;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object], ret: {func: 1, ret: 0, args: [1]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}]}).call$2$4(t1, parentDelegate, this, callback, $R, $T);
      },
      registerBinaryCallback$3$1: function(callback, $R, T1, T2) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(callback, {func: 1, ret: $R, args: [T1, T2]});
        implementation = this._registerBinaryCallback;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: {func: 1, ret: 0, args: [1, 2]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}]}).call$3$4(t1, parentDelegate, this, callback, $R, T1, T2);
      },
      errorCallback$2: function(error, stackTrace) {
        var implementation, implementationZone, parentDelegate;
        implementation = this._errorCallback;
        implementationZone = implementation.zone;
        if (implementationZone === C.C__RootZone)
          return;
        parentDelegate = P._parentDelegate(implementationZone);
        return implementation.$function.call$5(implementationZone, parentDelegate, this, error, stackTrace);
      },
      scheduleMicrotask$1: function(f) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: -1});
        implementation = this._scheduleMicrotask;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, f);
      },
      createTimer$2: function(duration, f) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: -1});
        implementation = this._async$_createTimer;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, duration, f);
      },
      print$1: function(_, line) {
        var implementation, t1, parentDelegate;
        implementation = this._print;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, line);
      }
    },
    _CustomZone_bindCallback_closure: {
      "^": "Closure;$this,registered,R",
      call$0: [function() {
        return this.$this.run$1$1(this.registered, this.R);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: this.R};
      }
    },
    _CustomZone_bindUnaryCallback_closure: {
      "^": "Closure;$this,registered,T,R",
      call$1: function(arg) {
        var t1 = this.T;
        return this.$this.runUnary$2$2(this.registered, H.assertSubtypeOfRuntimeType(arg, t1), this.R, t1);
      },
      $signature: function() {
        return {func: 1, ret: this.R, args: [this.T]};
      }
    },
    _CustomZone_bindCallbackGuarded_closure: {
      "^": "Closure:1;$this,registered",
      call$0: [function() {
        return this.$this.runGuarded$1(this.registered);
      }, null, null, 0, 0, null, "call"]
    },
    _CustomZone_bindUnaryCallbackGuarded_closure: {
      "^": "Closure;$this,registered,T",
      call$1: [function(arg) {
        var t1 = this.T;
        return this.$this.runUnaryGuarded$1$2(this.registered, H.assertSubtypeOfRuntimeType(arg, t1), t1);
      }, null, null, 4, 0, null, 18, "call"],
      $signature: function() {
        return {func: 1, ret: -1, args: [this.T]};
      }
    },
    _rootHandleUncaughtError_closure: {
      "^": "Closure:0;_box_0,stackTrace",
      call$0: function() {
        var t1, t2, error;
        t1 = this._box_0;
        t2 = t1.error;
        if (t2 == null) {
          error = new P.NullThrownError();
          t1.error = error;
          t1 = error;
        } else
          t1 = t2;
        t2 = this.stackTrace;
        if (t2 == null)
          throw H.wrapException(t1);
        error = H.wrapException(t1);
        error.stack = t2.toString$0(0);
        throw error;
      }
    },
    _RootZone: {
      "^": "_Zone;",
      get$_async$_run: function() {
        return C._ZoneFunction__RootZone__rootRun;
      },
      get$_async$_runUnary: function() {
        return C._ZoneFunction__RootZone__rootRunUnary;
      },
      get$_async$_runBinary: function() {
        return C._ZoneFunction__RootZone__rootRunBinary;
      },
      get$_registerCallback: function() {
        return C._ZoneFunction__RootZone__rootRegisterCallback;
      },
      get$_registerUnaryCallback: function() {
        return C._ZoneFunction_Eeh;
      },
      get$_registerBinaryCallback: function() {
        return C._ZoneFunction_7G2;
      },
      get$_errorCallback: function() {
        return C._ZoneFunction__RootZone__rootErrorCallback;
      },
      get$_scheduleMicrotask: function() {
        return C._ZoneFunction__RootZone__rootScheduleMicrotask;
      },
      get$_async$_createTimer: function() {
        return C._ZoneFunction__RootZone__rootCreateTimer;
      },
      get$_createPeriodicTimer: function() {
        return C._ZoneFunction_3bB;
      },
      get$_print: function() {
        return C._ZoneFunction__RootZone__rootPrint;
      },
      get$_fork: function() {
        return C._ZoneFunction__RootZone__rootFork;
      },
      get$_handleUncaughtError: function() {
        return C._ZoneFunction_NMc;
      },
      get$parent: function(_) {
        return;
      },
      get$_async$_map: function() {
        return $.$get$_RootZone__rootMap();
      },
      get$_delegate: function() {
        var t1 = $._RootZone__rootDelegate;
        if (t1 != null)
          return t1;
        t1 = new P._ZoneDelegate(this);
        $._RootZone__rootDelegate = t1;
        return t1;
      },
      get$errorZone: function() {
        return this;
      },
      runGuarded$1: function(f) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1});
        try {
          if (C.C__RootZone === $.Zone__current) {
            f.call$0();
            return;
          }
          P._rootRun(null, null, this, f, -1);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._rootHandleUncaughtError(null, null, this, e, H.interceptedTypeCheck(s, "$isStackTrace"));
        }
      },
      runUnaryGuarded$1$2: function(f, arg, $T) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        try {
          if (C.C__RootZone === $.Zone__current) {
            f.call$1(arg);
            return;
          }
          P._rootRunUnary(null, null, this, f, arg, -1, $T);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._rootHandleUncaughtError(null, null, this, e, H.interceptedTypeCheck(s, "$isStackTrace"));
        }
      },
      runBinaryGuarded$2$3: function(f, arg1, arg2, T1, T2) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        try {
          if (C.C__RootZone === $.Zone__current) {
            f.call$2(arg1, arg2);
            return;
          }
          P._rootRunBinary(null, null, this, f, arg1, arg2, -1, T1, T2);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._rootHandleUncaughtError(null, null, this, e, H.interceptedTypeCheck(s, "$isStackTrace"));
        }
      },
      bindCallback$1$1: function(f, $R) {
        return new P._RootZone_bindCallback_closure(this, H.functionTypeCheck(f, {func: 1, ret: $R}), $R);
      },
      bindCallbackGuarded$1: function(f) {
        return new P._RootZone_bindCallbackGuarded_closure(this, H.functionTypeCheck(f, {func: 1, ret: -1}));
      },
      bindUnaryCallbackGuarded$1$1: function(f, $T) {
        return new P._RootZone_bindUnaryCallbackGuarded_closure(this, H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]}), $T);
      },
      $index: function(_, key) {
        return;
      },
      handleUncaughtError$2: function(error, stackTrace) {
        P._rootHandleUncaughtError(null, null, this, error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
      },
      fork$2$specification$zoneValues: function(specification, zoneValues) {
        return P._rootFork(null, null, this, specification, zoneValues);
      },
      run$1$1: function(f, $R) {
        H.functionTypeCheck(f, {func: 1, ret: $R});
        if ($.Zone__current === C.C__RootZone)
          return f.call$0();
        return P._rootRun(null, null, this, f, $R);
      },
      runUnary$2$2: function(f, arg, $R, $T) {
        H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        if ($.Zone__current === C.C__RootZone)
          return f.call$1(arg);
        return P._rootRunUnary(null, null, this, f, arg, $R, $T);
      },
      runBinary$3$3: function(f, arg1, arg2, $R, T1, T2) {
        H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        if ($.Zone__current === C.C__RootZone)
          return f.call$2(arg1, arg2);
        return P._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
      },
      registerCallback$1$1: function(f, $R) {
        return H.functionTypeCheck(f, {func: 1, ret: $R});
      },
      registerUnaryCallback$2$1: function(f, $R, $T) {
        return H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
      },
      registerBinaryCallback$3$1: function(f, $R, T1, T2) {
        return H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
      },
      errorCallback$2: function(error, stackTrace) {
        return;
      },
      scheduleMicrotask$1: function(f) {
        P._rootScheduleMicrotask(null, null, this, H.functionTypeCheck(f, {func: 1, ret: -1}));
      },
      createTimer$2: function(duration, f) {
        return P.Timer__createTimer(duration, H.functionTypeCheck(f, {func: 1, ret: -1}));
      },
      print$1: function(_, line) {
        H.printString(H.S(line));
      }
    },
    _RootZone_bindCallback_closure: {
      "^": "Closure;$this,f,R",
      call$0: [function() {
        return this.$this.run$1$1(this.f, this.R);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: this.R};
      }
    },
    _RootZone_bindCallbackGuarded_closure: {
      "^": "Closure:1;$this,f",
      call$0: [function() {
        return this.$this.runGuarded$1(this.f);
      }, null, null, 0, 0, null, "call"]
    },
    _RootZone_bindUnaryCallbackGuarded_closure: {
      "^": "Closure;$this,f,T",
      call$1: [function(arg) {
        var t1 = this.T;
        return this.$this.runUnaryGuarded$1$2(this.f, H.assertSubtypeOfRuntimeType(arg, t1), t1);
      }, null, null, 4, 0, null, 18, "call"],
      $signature: function() {
        return {func: 1, ret: -1, args: [this.T]};
      }
    }
  }], ["dart.collection", "dart:collection",, P, {
    "^": "",
    HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
      return new P._HashMap(0, [$K, $V]);
    },
    LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
      return new H.JsLinkedHashMap(0, 0, [$K, $V]);
    },
    LinkedHashMap_LinkedHashMap$_literal: function(keyValuePairs, $K, $V) {
      H.listTypeCheck(keyValuePairs);
      return H.assertSubtype(H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap(0, 0, [$K, $V])), "$isLinkedHashMap", [$K, $V], "$asLinkedHashMap");
    },
    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {
      return new H.JsLinkedHashMap(0, 0, [$K, $V]);
    },
    LinkedHashMap__makeEmpty: function() {
      return new H.JsLinkedHashMap(0, 0, [null, null]);
    },
    LinkedHashMap__makeLiteral: function(keyValuePairs) {
      return H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap(0, 0, [null, null]));
    },
    LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
      H.functionTypeCheck(equals, {func: 1, ret: P.bool, args: [$E, $E]});
      H.functionTypeCheck(hashCode, {func: 1, ret: P.int, args: [$E]});
      if (hashCode == null) {
        if (equals == null)
          return new P._LinkedHashSet(0, 0, [$E]);
        hashCode = P.collection___defaultHashCode$closure();
      } else {
        if (P.core__identityHashCode$closure() === hashCode && P.core__identical$closure() === equals)
          return new P._LinkedIdentityHashSet(0, 0, [$E]);
        if (equals == null)
          equals = P.collection___defaultEquals$closure();
      }
      return P._LinkedCustomHashSet$(equals, hashCode, isValidKey, $E);
    },
    _defaultEquals: [function(a, b) {
      return J.$eq$(a, b);
    }, "call$2", "collection___defaultEquals$closure", 8, 0, 150],
    _defaultHashCode: [function(a) {
      return J.get$hashCode$(a);
    }, "call$1", "collection___defaultHashCode$closure", 4, 0, 151, 13],
    HashMap_HashMap$from: function(other, $K, $V) {
      var result = P.HashMap_HashMap(null, null, null, $K, $V);
      J.forEach$1$ax(other, new P.HashMap_HashMap$from_closure(result, $K, $V));
      return H.assertSubtype(result, "$isHashMap", [$K, $V], "$asHashMap");
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = [];
      t1 = $.$get$_toStringVisiting();
      C.JSArray_methods.add$1(t1, iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, H.listSuperNativeTypeCheck(parts, "$isIterable"), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1, t2;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      t1 = $.$get$_toStringVisiting();
      C.JSArray_methods.add$1(t1, iterable);
      try {
        t2 = buffer;
        t2.set$_contents(P.StringBuffer__writeAll(t2.get$_contents(), iterable, ", "));
      } finally {
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      }
      t1 = buffer;
      t1.set$_contents(t1.get$_contents() + rightDelimiter);
      t1 = buffer.get$_contents();
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var i, t1;
      for (i = 0; t1 = $.$get$_toStringVisiting(), i < t1.length; ++i)
        if (o === t1[i])
          return true;
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
      it = iterable.get$iterator(iterable);
      $length = 0;
      count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = H.S(it.get$current(it));
        C.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current(it);
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            C.JSArray_methods.add$1(parts, H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          if (0 >= parts.length)
            return H.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current(it);
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current(it);
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return H.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              C.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        C.JSArray_methods.add$1(parts, elision);
      C.JSArray_methods.add$1(parts, penultimateString);
      C.JSArray_methods.add$1(parts, ultimateString);
    },
    LinkedHashSet_LinkedHashSet$from: function(elements, $E) {
      var result, t1, _i;
      result = P.LinkedHashSet_LinkedHashSet(null, null, null, $E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, H.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, H.assertSubtypeOfRuntimeType(elements[_i], $E));
      return result;
    },
    ListMixin__compareAny: [function(a, b) {
      return J.compareTo$1$ns(H.numberOrStringSuperNativeTypeCheck(a, "$isComparable"), H.numberOrStringSuperNativeTypeCheck(b, "$isComparable"));
    }, "call$2", "collection_ListMixin__compareAny$closure", 8, 0, 54],
    MapBase_mapToString: function(m) {
      var t1, result, t2;
      t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        C.JSArray_methods.add$1($.$get$_toStringVisiting(), m);
        t2 = result;
        t2.set$_contents(t2.get$_contents() + "{");
        t1.first = true;
        J.forEach$1$ax(m, new P.MapBase_mapToString_closure(t1, result));
        t1 = result;
        t1.set$_contents(t1.get$_contents() + "}");
      } finally {
        t1 = $.$get$_toStringVisiting();
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      }
      t1 = result.get$_contents();
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _HashMap: {
      "^": "MapBase;_collection$_length,0_collection$_strings,0_collection$_nums,0_collection$_rest,0_keys,$ti",
      get$length: function(_) {
        return this._collection$_length;
      },
      get$keys: function(_) {
        return new P._HashMapKeyIterable(this, [H.getTypeArgumentByIndex(this, 0)]);
      },
      containsKey$1: function(_, key) {
        var strings, nums;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          return strings == null ? false : strings[key] != null;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          return nums == null ? false : nums[key] != null;
        } else
          return this._containsKey$1(key);
      },
      _containsKey$1: function(key) {
        var rest = this._collection$_rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
      },
      $index: function(_, key) {
        var strings, t1, nums;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          t1 = strings == null ? null : P._HashMap__getTableEntry(strings, key);
          return t1;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          t1 = nums == null ? null : P._HashMap__getTableEntry(nums, key);
          return t1;
        } else
          return this._get$1(0, key);
      },
      _get$1: function(_, key) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return;
        bucket = this._getBucket$2(rest, key);
        index = this._findBucketIndex$2(bucket, key);
        return index < 0 ? null : bucket[index + 1];
      },
      $indexSet: function(_, key, value) {
        var strings, nums;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null) {
            strings = P._HashMap__newHashTable();
            this._collection$_strings = strings;
          }
          this._collection$_addHashTableEntry$3(strings, key, value);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          if (nums == null) {
            nums = P._HashMap__newHashTable();
            this._collection$_nums = nums;
          }
          this._collection$_addHashTableEntry$3(nums, key, value);
        } else
          this._set$2(key, value);
      },
      _set$2: function(key, value) {
        var rest, hash, bucket, index;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        rest = this._collection$_rest;
        if (rest == null) {
          rest = P._HashMap__newHashTable();
          this._collection$_rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null) {
          P._HashMap__setTableEntry(rest, hash, [key, value]);
          ++this._collection$_length;
          this._keys = null;
        } else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            ++this._collection$_length;
            this._keys = null;
          }
        }
      },
      clear$0: function(_) {
        if (this._collection$_length > 0) {
          this._keys = null;
          this._collection$_rest = null;
          this._collection$_nums = null;
          this._collection$_strings = null;
          this._collection$_length = 0;
        }
      },
      forEach$1: function(_, action) {
        var t1, keys, $length, i, key;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [t1, H.getTypeArgumentByIndex(this, 1)]});
        keys = this._computeKeys$0();
        for ($length = keys.length, i = 0; i < $length; ++i) {
          key = keys[i];
          action.call$2(H.assertSubtypeOfRuntimeType(key, t1), this.$index(0, key));
          if (keys !== this._keys)
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
      },
      _computeKeys$0: function() {
        var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
        t1 = this._keys;
        if (t1 != null)
          return t1;
        result = new Array(this._collection$_length);
        result.fixed$length = Array;
        strings = this._collection$_strings;
        if (strings != null) {
          names = Object.getOwnPropertyNames(strings);
          entries = names.length;
          for (index = 0, i = 0; i < entries; ++i) {
            result[index] = names[i];
            ++index;
          }
        } else
          index = 0;
        nums = this._collection$_nums;
        if (nums != null) {
          names = Object.getOwnPropertyNames(nums);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            result[index] = +names[i];
            ++index;
          }
        }
        rest = this._collection$_rest;
        if (rest != null) {
          names = Object.getOwnPropertyNames(rest);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            bucket = rest[names[i]];
            $length = bucket.length;
            for (i0 = 0; i0 < $length; i0 += 2) {
              result[index] = bucket[i0];
              ++index;
            }
          }
        }
        this._keys = result;
        return result;
      },
      _collection$_addHashTableEntry$3: function(table, key, value) {
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        if (table[key] == null) {
          ++this._collection$_length;
          this._keys = null;
        }
        P._HashMap__setTableEntry(table, key, value);
      },
      _computeHashCode$1: function(key) {
        return J.get$hashCode$(key) & 0x3ffffff;
      },
      _getBucket$2: function(table, key) {
        return table[this._computeHashCode$1(key)];
      },
      _findBucketIndex$2: function(bucket, key) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; i += 2)
          if (J.$eq$(bucket[i], key))
            return i;
        return -1;
      },
      $isHashMap: 1,
      static: {
        _HashMap__getTableEntry: function(table, key) {
          var entry = table[key];
          return entry === table ? null : entry;
        },
        _HashMap__setTableEntry: function(table, key, value) {
          if (value == null)
            table[key] = table;
          else
            table[key] = value;
        },
        _HashMap__newHashTable: function() {
          var table = Object.create(null);
          P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
          delete table["<non-identifier-key>"];
          return table;
        }
      }
    },
    _IdentityHashMap: {
      "^": "_HashMap;_collection$_length,0_collection$_strings,0_collection$_nums,0_collection$_rest,0_keys,$ti",
      _computeHashCode$1: function(key) {
        return H.objectHashCode(key) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, key) {
        var $length, i, t1;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; i += 2) {
          t1 = bucket[i];
          if (t1 == null ? key == null : t1 === key)
            return i;
        }
        return -1;
      }
    },
    _HashMapKeyIterable: {
      "^": "EfficientLengthIterable;_collection$_map,$ti",
      get$length: function(_) {
        return this._collection$_map._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_map._collection$_length === 0;
      },
      get$iterator: function(_) {
        var t1 = this._collection$_map;
        return new P._HashMapKeyIterator(t1, t1._computeKeys$0(), 0, this.$ti);
      },
      contains$1: function(_, element) {
        return this._collection$_map.containsKey$1(0, element);
      },
      forEach$1: function(_, f) {
        var t1, keys, $length, i;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = this._collection$_map;
        keys = t1._computeKeys$0();
        for ($length = keys.length, i = 0; i < $length; ++i) {
          f.call$1(keys[i]);
          if (keys !== t1._keys)
            throw H.wrapException(P.ConcurrentModificationError$(t1));
        }
      }
    },
    _HashMapKeyIterator: {
      "^": "Object;_collection$_map,_keys,_offset,0_collection$_current,$ti",
      set$_collection$_current: function(_current) {
        this._collection$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var keys, offset, t1;
        keys = this._keys;
        offset = this._offset;
        t1 = this._collection$_map;
        if (keys !== t1._keys)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        else if (offset >= keys.length) {
          this.set$_collection$_current(null);
          return false;
        } else {
          this.set$_collection$_current(keys[offset]);
          this._offset = offset + 1;
          return true;
        }
      },
      $isIterator: 1
    },
    _LinkedIdentityHashMap: {
      "^": "JsLinkedHashMap;__js_helper$_length,0_strings,0_nums,0_rest,0_first,0_last,_modifications,$ti",
      internalComputeHashCode$1: function(key) {
        return H.objectHashCode(key) & 0x3ffffff;
      },
      internalFindBucketIndex$2: function(bucket, key) {
        var $length, i, t1;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i) {
          t1 = bucket[i].hashMapCellKey;
          if (t1 == null ? key == null : t1 === key)
            return i;
        }
        return -1;
      },
      static: {
        _LinkedIdentityHashMap__LinkedIdentityHashMap$es6: function($K, $V) {
          return new P._LinkedIdentityHashMap(0, 0, [$K, $V]);
        }
      }
    },
    _LinkedHashSet: {
      "^": "_HashSetBase;_collection$_length,0_collection$_strings,0_collection$_nums,0_collection$_rest,0_collection$_first,0_collection$_last,_collection$_modifications,$ti",
      get$iterator: function(_) {
        var t1 = new P._LinkedHashSetIterator(this, this._collection$_modifications, this.$ti);
        t1._collection$_cell = this._collection$_first;
        return t1;
      },
      get$length: function(_) {
        return this._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_length === 0;
      },
      contains$1: function(_, object) {
        var strings, nums;
        if (typeof object === "string" && object !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null)
            return false;
          return H.interceptedTypeCheck(strings[object], "$is_LinkedHashSetCell") != null;
        } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
          nums = this._collection$_nums;
          if (nums == null)
            return false;
          return H.interceptedTypeCheck(nums[object], "$is_LinkedHashSetCell") != null;
        } else
          return this._contains$1(object);
      },
      _contains$1: ["super$_LinkedHashSet$_contains", function(object) {
        var rest = this._collection$_rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(this._getBucket$2(rest, object), object) >= 0;
      }],
      forEach$1: function(_, action) {
        var t1, cell, modifications;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [t1]});
        cell = this._collection$_first;
        modifications = this._collection$_modifications;
        for (; cell != null;) {
          action.call$1(H.assertSubtypeOfRuntimeType(cell._collection$_element, t1));
          if (modifications !== this._collection$_modifications)
            throw H.wrapException(P.ConcurrentModificationError$(this));
          cell = cell._collection$_next;
        }
      },
      get$first: function(_) {
        var t1 = this._collection$_first;
        if (t1 == null)
          throw H.wrapException(P.StateError$("No elements"));
        return H.assertSubtypeOfRuntimeType(t1._collection$_element, H.getTypeArgumentByIndex(this, 0));
      },
      add$1: function(_, element) {
        var strings, nums;
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        if (typeof element === "string" && element !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null) {
            strings = P._LinkedHashSet__newHashTable();
            this._collection$_strings = strings;
          }
          return this._collection$_addHashTableEntry$2(strings, element);
        } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
          nums = this._collection$_nums;
          if (nums == null) {
            nums = P._LinkedHashSet__newHashTable();
            this._collection$_nums = nums;
          }
          return this._collection$_addHashTableEntry$2(nums, element);
        } else
          return this._collection$_add$1(0, element);
      },
      _collection$_add$1: ["super$_LinkedHashSet$_add", function(_, element) {
        var rest, hash, bucket;
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        rest = this._collection$_rest;
        if (rest == null) {
          rest = P._LinkedHashSet__newHashTable();
          this._collection$_rest = rest;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._collection$_newLinkedCell$1(element)];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(this._collection$_newLinkedCell$1(element));
        }
        return true;
      }],
      remove$1: function(_, object) {
        if (typeof object === "string" && object !== "__proto__")
          return this._removeHashTableEntry$2(this._collection$_strings, object);
        else if (typeof object === "number" && (object & 0x3ffffff) === object)
          return this._removeHashTableEntry$2(this._collection$_nums, object);
        else
          return this._remove$1(0, object);
      },
      _remove$1: ["super$_LinkedHashSet$_remove", function(_, object) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return false;
        bucket = this._getBucket$2(rest, object);
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        this._unlinkCell$1(bucket.splice(index, 1)[0]);
        return true;
      }],
      _collection$_addHashTableEntry$2: function(table, element) {
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        if (H.interceptedTypeCheck(table[element], "$is_LinkedHashSetCell") != null)
          return false;
        table[element] = this._collection$_newLinkedCell$1(element);
        return true;
      },
      _removeHashTableEntry$2: function(table, element) {
        var cell;
        if (table == null)
          return false;
        cell = H.interceptedTypeCheck(table[element], "$is_LinkedHashSetCell");
        if (cell == null)
          return false;
        this._unlinkCell$1(cell);
        delete table[element];
        return true;
      },
      _collection$_modified$0: function() {
        this._collection$_modifications = this._collection$_modifications + 1 & 67108863;
      },
      _collection$_newLinkedCell$1: function(element) {
        var cell, last;
        cell = new P._LinkedHashSetCell(H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0)));
        if (this._collection$_first == null) {
          this._collection$_last = cell;
          this._collection$_first = cell;
        } else {
          last = this._collection$_last;
          cell._collection$_previous = last;
          last._collection$_next = cell;
          this._collection$_last = cell;
        }
        ++this._collection$_length;
        this._collection$_modified$0();
        return cell;
      },
      _unlinkCell$1: function(cell) {
        var previous, next;
        previous = cell._collection$_previous;
        next = cell._collection$_next;
        if (previous == null)
          this._collection$_first = next;
        else
          previous._collection$_next = next;
        if (next == null)
          this._collection$_last = previous;
        else
          next._collection$_previous = previous;
        --this._collection$_length;
        this._collection$_modified$0();
      },
      _computeHashCode$1: function(element) {
        return J.get$hashCode$(element) & 0x3ffffff;
      },
      _getBucket$2: function(table, element) {
        return table[this._computeHashCode$1(element)];
      },
      _findBucketIndex$2: function(bucket, element) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i)
          if (J.$eq$(bucket[i]._collection$_element, element))
            return i;
        return -1;
      },
      $isLinkedHashSet: 1,
      static: {
        _LinkedHashSet__newHashTable: function() {
          var table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          return table;
        }
      }
    },
    _LinkedIdentityHashSet: {
      "^": "_LinkedHashSet;_collection$_length,0_collection$_strings,0_collection$_nums,0_collection$_rest,0_collection$_first,0_collection$_last,_collection$_modifications,$ti",
      _computeHashCode$1: function(key) {
        return H.objectHashCode(key) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, element) {
        var $length, i, t1;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i) {
          t1 = bucket[i]._collection$_element;
          if (t1 == null ? element == null : t1 === element)
            return i;
        }
        return -1;
      }
    },
    _LinkedCustomHashSet: {
      "^": "_LinkedHashSet;_equality,_hasher,_validKey,_collection$_length,0_collection$_strings,0_collection$_nums,0_collection$_rest,0_collection$_first,0_collection$_last,_collection$_modifications,$ti",
      _findBucketIndex$2: function(bucket, element) {
        var $length, t1, i, t2;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (t1 = H.getTypeArgumentByIndex(this, 0), i = 0; i < $length; ++i) {
          t2 = H.assertSubtypeOfRuntimeType(bucket[i]._collection$_element, t1);
          H.assertSubtypeOfRuntimeType(element, t1);
          if (this._equality.call$2(t2, element))
            return i;
        }
        return -1;
      },
      _computeHashCode$1: function(element) {
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        return this._hasher.call$1(element) & 0x3ffffff;
      },
      add$1: function(_, element) {
        return this.super$_LinkedHashSet$_add(0, H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0)));
      },
      contains$1: function(_, object) {
        if (!this._validKey.call$1(object))
          return false;
        return this.super$_LinkedHashSet$_contains(object);
      },
      remove$1: function(_, object) {
        if (!this._validKey.call$1(object))
          return false;
        return this.super$_LinkedHashSet$_remove(0, object);
      },
      removeAll$1: function(elements) {
        var t1, element;
        for (t1 = J.get$iterator$ax(H.assertSubtype(elements, "$isIterable", [P.Object], "$asIterable")); t1.moveNext$0();) {
          element = t1.get$current(t1);
          if (this._validKey.call$1(element))
            this.super$_LinkedHashSet$_remove(0, element);
        }
      },
      static: {
        _LinkedCustomHashSet$: function(_equality, _hasher, validKey, $E) {
          return new P._LinkedCustomHashSet(_equality, _hasher, new P._LinkedCustomHashSet_closure($E), 0, 0, [$E]);
        }
      }
    },
    _LinkedCustomHashSet_closure: {
      "^": "Closure:154;E",
      call$1: function(x) {
        return H.checkSubtypeOfRuntimeType(x, this.E);
      }
    },
    _LinkedHashSetCell: {
      "^": "Object;_collection$_element,0_collection$_next,0_collection$_previous"
    },
    _LinkedHashSetIterator: {
      "^": "Object;_set,_collection$_modifications,0_collection$_cell,0_collection$_current,$ti",
      set$_collection$_current: function(_current) {
        this._collection$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var t1 = this._set;
        if (this._collection$_modifications !== t1._collection$_modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        else {
          t1 = this._collection$_cell;
          if (t1 == null) {
            this.set$_collection$_current(null);
            return false;
          } else {
            this.set$_collection$_current(H.assertSubtypeOfRuntimeType(t1._collection$_element, H.getTypeArgumentByIndex(this, 0)));
            this._collection$_cell = this._collection$_cell._collection$_next;
            return true;
          }
        }
      },
      $isIterator: 1,
      static: {
        _LinkedHashSetIterator$: function(_set, _modifications, $E) {
          var t1 = new P._LinkedHashSetIterator(_set, _modifications, [$E]);
          t1._collection$_cell = _set._collection$_first;
          return t1;
        }
      }
    },
    UnmodifiableListView: {
      "^": "UnmodifiableListBase;_collection$_source,$ti",
      get$length: function(_) {
        return this._collection$_source.length;
      },
      $index: function(_, index) {
        var t1 = this._collection$_source;
        return (t1 && C.JSArray_methods).$index(t1, index);
      }
    },
    HashMap_HashMap$from_closure: {
      "^": "Closure:4;result,K,V",
      call$2: function(k, v) {
        this.result.$indexSet(0, H.assertSubtypeOfRuntimeType(k, this.K), H.assertSubtypeOfRuntimeType(v, this.V));
      }
    },
    _HashSetBase: {
      "^": "SetBase;"
    },
    IterableBase: {
      "^": "Iterable;"
    },
    ListBase: {
      "^": "_ListBase_Object_ListMixin;",
      $isEfficientLengthIterable: 1,
      $isIterable: 1,
      $isList: 1
    },
    ListMixin: {
      "^": "Object;$ti",
      get$iterator: function(receiver) {
        return new H.ListIterator(receiver, this.get$length(receiver), 0, [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]);
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      forEach$1: function(receiver, action) {
        var $length, i;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]});
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          action.call$1(this.$index(receiver, i));
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
      },
      get$isEmpty: function(receiver) {
        return this.get$length(receiver) === 0;
      },
      get$isNotEmpty: function(receiver) {
        return !this.get$isEmpty(receiver);
      },
      get$first: function(receiver) {
        if (this.get$length(receiver) === 0)
          throw H.wrapException(H.IterableElementError_noElement());
        return this.$index(receiver, 0);
      },
      get$last: function(receiver) {
        var t1;
        if (this.get$length(receiver) === 0)
          throw H.wrapException(H.IterableElementError_noElement());
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return t1.$sub();
        return this.$index(receiver, t1 - 1);
      },
      contains$1: function(receiver, element) {
        var $length, i;
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          if (J.$eq$(this.$index(receiver, i), element))
            return true;
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return false;
      },
      every$1: function(receiver, test) {
        var $length, i;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]});
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          if (!test.call$1(this.$index(receiver, i)))
            return false;
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return true;
      },
      join$1: function(receiver, separator) {
        var t1;
        if (this.get$length(receiver) === 0)
          return "";
        t1 = P.StringBuffer__writeAll("", receiver, separator);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      where$1: function(receiver, test) {
        var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
        return new H.WhereIterable(receiver, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), [t1]);
      },
      map$1$1: function(receiver, f, $T) {
        var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
        return new H.MappedListIterable(receiver, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      },
      skip$1: function(receiver, count) {
        return H.SubListIterable$(receiver, count, null, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
      },
      toList$1$growable: function(receiver, growable) {
        var result, i, t1;
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]);
        C.JSArray_methods.set$length(result, this.get$length(receiver));
        i = 0;
        while (true) {
          t1 = this.get$length(receiver);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          C.JSArray_methods.$indexSet(result, i, this.$index(receiver, i));
          ++i;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      add$1: function(receiver, element) {
        var t1;
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return t1.$add();
        this.set$length(receiver, t1 + 1);
        this.$indexSet(receiver, t1, element);
      },
      sort$1: [function(receiver, compare) {
        var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [t1, t1]});
        H.Sort_sort(receiver, compare == null ? P.collection_ListMixin__compareAny$closure() : compare, t1);
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, function() {
        return H.computeSignature(function(E) {
          return {func: 1, ret: -1, opt: [{func: 1, ret: P.int, args: [E, E]}]};
        }, this.$receiver, "ListMixin");
      }],
      $add: function(receiver, other) {
        var t1, result, t2;
        t1 = [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)];
        H.assertSubtype(other, "$isList", t1, "$asList");
        result = H.setRuntimeTypeInfo([], t1);
        t1 = this.get$length(receiver);
        t2 = J.get$length$asx(other);
        if (typeof t1 !== "number")
          return t1.$add();
        if (typeof t2 !== "number")
          return H.iae(t2);
        C.JSArray_methods.set$length(result, t1 + t2);
        C.JSArray_methods.setRange$3(result, 0, this.get$length(receiver), receiver);
        C.JSArray_methods.setRange$3(result, this.get$length(receiver), result.length, other);
        return result;
      },
      insertAll$2: function(receiver, index, iterable) {
        var insertionLength, t1;
        H.assertSubtype(iterable, "$isIterable", [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)], "$asIterable");
        P.RangeError_checkValueInInterval(index, 0, this.get$length(receiver), "index", null);
        insertionLength = iterable.get$length(iterable);
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return t1.$add();
        this.set$length(receiver, C.JSInt_methods.$add(t1, insertionLength));
        iterable.get$length(iterable);
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return t1.$sub();
        this.set$length(receiver, C.JSInt_methods.$sub(t1, insertionLength));
        throw H.wrapException(P.ConcurrentModificationError$(iterable));
      },
      toString$0: function(receiver) {
        return P.IterableBase_iterableToFullString(receiver, "[", "]");
      }
    },
    MapBase: {
      "^": "MapMixin;"
    },
    MapBase_mapToString_closure: {
      "^": "Closure:4;_box_0,result",
      call$2: function(k, v) {
        var t1, t2;
        t1 = this._box_0;
        if (!t1.first)
          this.result._contents += ", ";
        t1.first = false;
        t1 = this.result;
        t2 = t1._contents += H.S(k);
        t1._contents = t2 + ": ";
        t1._contents += H.S(v);
      }
    },
    MapMixin: {
      "^": "Object;$ti",
      forEach$1: function(receiver, action) {
        var t1, key;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "MapMixin", 0), H.getRuntimeTypeArgumentIntercepted(this, receiver, "MapMixin", 1)]});
        for (t1 = J.get$iterator$ax(this.get$keys(receiver)); t1.moveNext$0();) {
          key = t1.get$current(t1);
          action.call$2(key, this.$index(receiver, key));
        }
      },
      get$length: function(receiver) {
        return J.get$length$asx(this.get$keys(receiver));
      },
      toString$0: function(receiver) {
        return P.MapBase_mapToString(receiver);
      },
      $isMap: 1
    },
    _UnmodifiableMapMixin: {
      "^": "Object;$ti"
    },
    MapView: {
      "^": "Object;$ti",
      $index: function(_, key) {
        return this._collection$_map.$index(0, key);
      },
      containsKey$1: function(_, key) {
        return this._collection$_map.containsKey$1(0, key);
      },
      forEach$1: function(_, action) {
        this._collection$_map.forEach$1(0, H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]}));
      },
      get$length: function(_) {
        var t1 = this._collection$_map;
        return t1.get$length(t1);
      },
      get$keys: function(_) {
        var t1 = this._collection$_map;
        return t1.get$keys(t1);
      },
      toString$0: function(_) {
        return P.MapBase_mapToString(this._collection$_map);
      },
      $isMap: 1
    },
    UnmodifiableMapView: {
      "^": "_UnmodifiableMapView_MapView__UnmodifiableMapMixin;$ti"
    },
    SetMixin: {
      "^": "Object;$ti",
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      addAll$1: function(_, elements) {
        var t1;
        for (t1 = J.get$iterator$ax(H.assertSubtype(elements, "$isIterable", [H.getRuntimeTypeArgument(this, "SetMixin", 0)], "$asIterable")); t1.moveNext$0();)
          this.add$1(0, t1.get$current(t1));
      },
      removeAll$1: function(elements) {
        var t1;
        for (t1 = J.get$iterator$ax(H.assertSubtype(elements, "$isIterable", [P.Object], "$asIterable")); t1.moveNext$0();)
          this.remove$1(0, t1.get$current(t1));
      },
      map$1$1: function(_, f, $T) {
        var t1 = H.getRuntimeTypeArgument(this, "SetMixin", 0);
        return new H.EfficientLengthMappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      },
      get$single: function(_) {
        var it;
        if (this.get$length(this) > 1)
          throw H.wrapException(H.IterableElementError_tooMany());
        it = this.get$iterator(this);
        if (!it.moveNext$0())
          throw H.wrapException(H.IterableElementError_noElement());
        return it._collection$_current;
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToFullString(this, "{", "}");
      },
      forEach$1: function(_, f) {
        var t1;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "SetMixin", 0)]});
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          f.call$1(t1._collection$_current);
      },
      join$1: function(_, separator) {
        var iterator, t1;
        iterator = this.get$iterator(this);
        if (!iterator.moveNext$0())
          return "";
        if (separator === "") {
          t1 = "";
          do
            t1 += H.S(iterator._collection$_current);
          while (iterator.moveNext$0());
        } else {
          t1 = H.S(iterator._collection$_current);
          for (; iterator.moveNext$0();)
            t1 = t1 + separator + H.S(iterator._collection$_current);
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      any$1: function(_, test) {
        var t1;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgument(this, "SetMixin", 0)]});
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          if (test.call$1(t1._collection$_current))
            return true;
        return false;
      },
      elementAt$1: function(_, index) {
        var t1, elementIndex, element;
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$notNull("index"));
        if (index < 0)
          H.throwExpression(P.RangeError$range(index, 0, null, "index", null));
        for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
          element = t1._collection$_current;
          if (index === elementIndex)
            return element;
          ++elementIndex;
        }
        throw H.wrapException(P.IndexError$(index, this, "index", null, elementIndex));
      },
      $isEfficientLengthIterable: 1,
      $isIterable: 1,
      $isSet: 1
    },
    SetBase: {
      "^": "SetMixin;"
    },
    _ListBase_Object_ListMixin: {
      "^": "Object+ListMixin;"
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: {
      "^": "MapView+_UnmodifiableMapMixin;$ti"
    }
  }], ["dart.convert", "dart:convert",, P, {
    "^": "",
    Codec: {
      "^": "Object;$ti"
    },
    Converter: {
      "^": "StreamTransformerBase;$ti"
    },
    Encoding: {
      "^": "Codec;",
      $asCodec: function() {
        return [P.String, [P.List, P.int]];
      }
    },
    HtmlEscapeMode: {
      "^": "Object;_convert$_name,escapeLtGt,escapeQuot,escapeApos,escapeSlash",
      toString$0: function(_) {
        return this._convert$_name;
      }
    },
    HtmlEscape: {
      "^": "Converter;mode",
      convert$1: function(text) {
        var val;
        H.stringTypeCheck(text);
        val = this._convert$3(text, 0, text.length);
        return val == null ? text : val;
      },
      _convert$3: function(text, start, end) {
        var t1, t2, t3, i, result, replacement;
        for (t1 = this.mode, t2 = t1.escapeSlash, t3 = t1.escapeApos, t1 = t1.escapeQuot, i = start, result = null; i < end; ++i) {
          if (i >= text.length)
            return H.ioore(text, i);
          switch (text[i]) {
            case "&":
              replacement = "&amp;";
              break;
            case '"':
              replacement = t1 ? "&quot;" : null;
              break;
            case "'":
              replacement = t3 ? "&#39;" : null;
              break;
            case "<":
              replacement = "&lt;";
              break;
            case ">":
              replacement = "&gt;";
              break;
            case "/":
              replacement = t2 ? "&#47;" : null;
              break;
            default:
              replacement = null;
          }
          if (replacement != null) {
            if (result == null)
              result = new P.StringBuffer("");
            if (i > start)
              result._contents += C.JSString_methods.substring$2(text, start, i);
            result._contents += replacement;
            start = i + 1;
          }
        }
        if (result == null)
          return;
        if (end > start)
          result._contents += J.substring$2$s(text, start, end);
        t1 = result._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      $asStreamTransformer: function() {
        return [P.String, P.String];
      },
      $asConverter: function() {
        return [P.String, P.String];
      }
    },
    Utf8Codec: {
      "^": "Encoding;_allowMalformed",
      get$name: function(_) {
        return "utf-8";
      },
      get$encoder: function() {
        return C.C_Utf8Encoder;
      }
    },
    Utf8Encoder: {
      "^": "Converter;",
      convert$3: function(string, start, end) {
        var stringLength, $length, t1, encoder;
        H.stringTypeCheck(string);
        stringLength = string.length;
        P.RangeError_checkValidRange(start, end, stringLength, null, null, null);
        $length = stringLength - start;
        if ($length === 0)
          return new Uint8Array(0);
        t1 = new Uint8Array($length * 3);
        encoder = new P._Utf8Encoder(0, 0, t1);
        if (encoder._fillBuffer$3(string, start, stringLength) !== stringLength)
          encoder._writeSurrogate$2(J.codeUnitAt$1$s(string, stringLength - 1), 0);
        return C.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
      },
      convert$1: function(string) {
        return this.convert$3(string, 0, null);
      },
      $asStreamTransformer: function() {
        return [P.String, [P.List, P.int]];
      },
      $asConverter: function() {
        return [P.String, [P.List, P.int]];
      }
    },
    _Utf8Encoder: {
      "^": "Object;_carry,_bufferIndex,_buffer",
      _writeSurrogate$2: function(leadingSurrogate, nextCodeUnit) {
        var t1, t2, t3, t4, rune;
        t1 = this._buffer;
        t2 = this._bufferIndex;
        t3 = t2 + 1;
        t4 = t1.length;
        if ((nextCodeUnit & 64512) === 56320) {
          rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
          this._bufferIndex = t3;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 240 | rune >>> 18;
          t2 = t3 + 1;
          this._bufferIndex = t2;
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = 128 | rune >>> 12 & 63;
          t3 = t2 + 1;
          this._bufferIndex = t3;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 128 | rune >>> 6 & 63;
          this._bufferIndex = t3 + 1;
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = 128 | rune & 63;
          return true;
        } else {
          this._bufferIndex = t3;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 224 | leadingSurrogate >>> 12;
          t2 = t3 + 1;
          this._bufferIndex = t2;
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = 128 | leadingSurrogate >>> 6 & 63;
          this._bufferIndex = t2 + 1;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 128 | leadingSurrogate & 63;
          return false;
        }
      },
      _fillBuffer$3: function(str, start, end) {
        var t1, t2, t3, stringIndex, codeUnit, t4, stringIndex0, t5;
        if (start !== end && (J.codeUnitAt$1$s(str, end - 1) & 64512) === 55296)
          --end;
        for (t1 = this._buffer, t2 = t1.length, t3 = J.getInterceptor$s(str), stringIndex = start; stringIndex < end; ++stringIndex) {
          codeUnit = t3._codeUnitAt$1(str, stringIndex);
          if (codeUnit <= 127) {
            t4 = this._bufferIndex;
            if (t4 >= t2)
              break;
            this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit;
          } else if ((codeUnit & 64512) === 55296) {
            if (this._bufferIndex + 3 >= t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (this._writeSurrogate$2(codeUnit, C.JSString_methods._codeUnitAt$1(str, stringIndex0)))
              stringIndex = stringIndex0;
          } else if (codeUnit <= 2047) {
            t4 = this._bufferIndex;
            t5 = t4 + 1;
            if (t5 >= t2)
              break;
            this._bufferIndex = t5;
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = 192 | codeUnit >>> 6;
            this._bufferIndex = t5 + 1;
            t1[t5] = 128 | codeUnit & 63;
          } else {
            t4 = this._bufferIndex;
            if (t4 + 2 >= t2)
              break;
            t5 = t4 + 1;
            this._bufferIndex = t5;
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = 224 | codeUnit >>> 12;
            t4 = t5 + 1;
            this._bufferIndex = t4;
            if (t5 >= t2)
              return H.ioore(t1, t5);
            t1[t5] = 128 | codeUnit >>> 6 & 63;
            this._bufferIndex = t4 + 1;
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = 128 | codeUnit & 63;
          }
        }
        return stringIndex;
      }
    }
  }], ["dart.core", "dart:core",, P, {
    "^": "",
    identityHashCode: [function(object) {
      return H.objectHashCode(object);
    }, "call$1", "core__identityHashCode$closure", 4, 0, 152, 34],
    Function_apply: function($function, positionalArguments, namedArguments) {
      var t1 = H.Primitives_applyFunctionWithPositionalArguments($function, positionalArguments);
      return t1;
    },
    int_parse: function(source, onError, radix) {
      var value;
      H.stringTypeCheck(source);
      H.functionTypeCheck(onError, {func: 1, ret: P.int, args: [P.String]});
      value = H.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      if (onError != null)
        return onError.call$1(source);
      throw H.wrapException(P.FormatException$(source, null, null));
    },
    Error__objectToString: function(object) {
      if (object instanceof H.Closure)
        return object.toString$0(0);
      return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
    },
    List_List$filled: function($length, fill, growable, $E) {
      var result, i;
      H.assertSubtypeOfRuntimeType(fill, $E);
      result = J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && true)
        for (i = 0; i < result.length; ++i)
          C.JSArray_methods.$indexSet(result, i, fill);
      return H.assertSubtype(result, "$isList", [$E], "$asList");
    },
    List_List$from: function(elements, growable, $E) {
      var t1, list, t2;
      t1 = [$E];
      list = H.setRuntimeTypeInfo([], t1);
      for (t2 = J.get$iterator$ax(elements); t2.moveNext$0();)
        C.JSArray_methods.add$1(list, H.assertSubtypeOfRuntimeType(t2.get$current(t2), $E));
      if (growable)
        return list;
      return H.assertSubtype(J.JSArray_markFixedList(list), "$isList", t1, "$asList");
    },
    List_List$unmodifiable: function(elements, $E) {
      var t1 = [$E];
      return H.assertSubtype(J.JSArray_markUnmodifiableList(H.assertSubtype(P.List_List$from(elements, false, $E), "$isList", t1, "$asList")), "$isList", t1, "$asList");
    },
    RegExp_RegExp: function(source, caseSensitive, multiLine) {
      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, false));
    },
    identical: [function(a, b) {
      return a == null ? b == null : a === b;
    }, "call$2", "core__identical$closure", 8, 0, 153, 13, 15],
    _Uri__uriEncode: function(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte, t3;
      H.assertSubtype(canonicalTable, "$isList", [P.int], "$asList");
      if (encoding === C.Utf8Codec_false) {
        t1 = $.$get$_Uri__needsNoEncoding()._nativeRegExp;
        if (typeof text !== "string")
          H.throwExpression(H.argumentErrorValue(text));
        t1 = t1.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      H.assertSubtypeOfRuntimeType(text, H.getRuntimeTypeArgument(encoding, "Codec", 0));
      bytes = encoding.get$encoder().convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128) {
          t3 = byte >>> 4;
          if (t3 >= 8)
            return H.ioore(canonicalTable, t3);
          t3 = (canonicalTable[t3] & 1 << (byte & 15)) !== 0;
        } else
          t3 = false;
        if (t3)
          t2 += H.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + "0123456789ABCDEF"[byte >>> 4 & 15] + "0123456789ABCDEF"[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    Error_safeToString: function(object) {
      if (typeof object === "number" || typeof object === "boolean" || null == object)
        return J.toString$0$(object);
      if (typeof object === "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    Exception_Exception: function(message) {
      return new P._Exception(message);
    },
    List_List$generate: function($length, generator, growable, $E) {
      var result, t1, i;
      H.functionTypeCheck(generator, {func: 1, ret: $E, args: [P.int]});
      if (growable) {
        result = H.setRuntimeTypeInfo([], [$E]);
        C.JSArray_methods.set$length(result, $length);
      } else {
        t1 = new Array($length);
        t1.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t1, [$E]);
      }
      for (i = 0; i < $length; ++i)
        C.JSArray_methods.$indexSet(result, i, generator.call$1(i));
      return result;
    },
    NoSuchMethodError_toString_closure: {
      "^": "Closure:158;_box_0,sb",
      call$2: function(key, value) {
        var t1, t2, t3;
        H.interceptedTypeCheck(key, "$isSymbol0");
        t1 = this.sb;
        t2 = this._box_0;
        t1._contents += t2.comma;
        t3 = t1._contents += H.S(key.__internal$_name);
        t1._contents = t3 + ": ";
        t1._contents += H.S(P.Error_safeToString(value));
        t2.comma = ", ";
      }
    },
    bool: {
      "^": "Object;"
    },
    "+bool": 0,
    DateTime: {
      "^": "Object;_value,isUtc",
      add$1: function(_, duration) {
        return P.DateTime$_withValue(this._value + C.JSInt_methods._tdivFast$1(H.interceptedTypeCheck(duration, "$isDuration")._duration, 1000), this.isUtc);
      },
      DateTime$_withValue$2$isUtc: function(_value, isUtc) {
        var t1, t2;
        t1 = this._value;
        if (Math.abs(t1) <= 864e13)
          t2 = false;
        else
          t2 = true;
        if (t2)
          throw H.wrapException(P.ArgumentError$("DateTime is outside valid range: " + t1));
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof P.DateTime))
          return false;
        return this._value === other._value && this.isUtc === other.isUtc;
      },
      compareTo$1: function(_, other) {
        return C.JSInt_methods.compareTo$1(this._value, H.interceptedTypeCheck(other, "$isDateTime")._value);
      },
      get$hashCode: function(_) {
        var t1 = this._value;
        return (t1 ^ C.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
      },
      toString$0: function(_) {
        var y, m, d, h, min, sec, ms;
        y = P.DateTime__fourDigits(H.Primitives_getYear(this));
        m = P.DateTime__twoDigits(H.Primitives_getMonth(this));
        d = P.DateTime__twoDigits(H.Primitives_getDay(this));
        h = P.DateTime__twoDigits(H.Primitives_getHours(this));
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(this));
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(this));
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(this));
        if (this.isUtc)
          return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
        else
          return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
      },
      $isComparable: 1,
      $asComparable: function() {
        return [P.DateTime];
      },
      static: {
        DateTime$_withValue: function(_value, isUtc) {
          var t1 = new P.DateTime(_value, isUtc);
          t1.DateTime$_withValue$2$isUtc(_value, isUtc);
          return t1;
        },
        DateTime__fourDigits: function(n) {
          var absN, sign;
          absN = Math.abs(n);
          sign = n < 0 ? "-" : "";
          if (absN >= 1000)
            return "" + n;
          if (absN >= 100)
            return sign + "0" + absN;
          if (absN >= 10)
            return sign + "00" + absN;
          return sign + "000" + absN;
        },
        DateTime__threeDigits: function(n) {
          if (n >= 100)
            return "" + n;
          if (n >= 10)
            return "0" + n;
          return "00" + n;
        },
        DateTime__twoDigits: function(n) {
          if (n >= 10)
            return "" + n;
          return "0" + n;
        }
      }
    },
    double: {
      "^": "num;"
    },
    "+double": 0,
    Duration: {
      "^": "Object;_duration",
      $add: function(_, other) {
        return new P.Duration(this._duration + H.interceptedTypeCheck(other, "$isDuration")._duration);
      },
      $lt: function(_, other) {
        return C.JSInt_methods.$lt(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration);
      },
      $gt: function(_, other) {
        return C.JSInt_methods.$gt(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof P.Duration))
          return false;
        return this._duration === other._duration;
      },
      get$hashCode: function(_) {
        return this._duration & 0x1FFFFFFF;
      },
      compareTo$1: function(_, other) {
        return C.JSInt_methods.compareTo$1(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration);
      },
      toString$0: function(_) {
        var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
        t1 = new P.Duration_toString_twoDigits();
        t2 = this._duration;
        if (t2 < 0)
          return "-" + new P.Duration(0 - t2).toString$0(0);
        twoDigitMinutes = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 60000000) % 60);
        twoDigitSeconds = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 1000000) % 60);
        sixDigitUs = new P.Duration_toString_sixDigits().call$1(t2 % 1000000);
        return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
      },
      $isComparable: 1,
      $asComparable: function() {
        return [P.Duration];
      },
      static: {
        Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
          return new P.Duration(864e8 * days + 3600000000 * hours + 60000000 * minutes + 1000000 * seconds + 1000 * milliseconds + microseconds);
        }
      }
    },
    Duration_toString_sixDigits: {
      "^": "Closure:20;",
      call$1: function(n) {
        if (n >= 100000)
          return "" + n;
        if (n >= 10000)
          return "0" + n;
        if (n >= 1000)
          return "00" + n;
        if (n >= 100)
          return "000" + n;
        if (n >= 10)
          return "0000" + n;
        return "00000" + n;
      }
    },
    Duration_toString_twoDigits: {
      "^": "Closure:20;",
      call$1: function(n) {
        if (n >= 10)
          return "" + n;
        return "0" + n;
      }
    },
    Error: {
      "^": "Object;"
    },
    NullThrownError: {
      "^": "Error;",
      toString$0: function(_) {
        return "Throw of null.";
      }
    },
    ArgumentError: {
      "^": "Error;_hasValue,invalidValue,name>,message>",
      get$_errorName: function() {
        return "Invalid argument" + (!this._hasValue ? "(s)" : "");
      },
      get$_errorExplanation: function() {
        return "";
      },
      toString$0: function(_) {
        var t1, nameString, message, prefix, explanation, errorValue;
        t1 = this.name;
        nameString = t1 != null ? " (" + t1 + ")" : "";
        t1 = this.message;
        message = t1 == null ? "" : ": " + H.S(t1);
        prefix = this.get$_errorName() + nameString + message;
        if (!this._hasValue)
          return prefix;
        explanation = this.get$_errorExplanation();
        errorValue = P.Error_safeToString(this.invalidValue);
        return prefix + explanation + ": " + H.S(errorValue);
      },
      static: {
        ArgumentError$: function(message) {
          return new P.ArgumentError(false, null, null, message);
        },
        ArgumentError$value: function(value, $name, message) {
          return new P.ArgumentError(true, value, $name, message);
        },
        ArgumentError$notNull: function($name) {
          return new P.ArgumentError(false, null, $name, "Must not be null");
        }
      }
    },
    RangeError: {
      "^": "ArgumentError;start,end,_hasValue,invalidValue,name,message",
      get$_errorName: function() {
        return "RangeError";
      },
      get$_errorExplanation: function() {
        var t1, explanation, t2;
        t1 = this.start;
        if (t1 == null) {
          t1 = this.end;
          explanation = t1 != null ? ": Not less than or equal to " + H.S(t1) : "";
        } else {
          t2 = this.end;
          if (t2 == null)
            explanation = ": Not greater than or equal to " + H.S(t1);
          else if (t2 > t1)
            explanation = ": Not in range " + H.S(t1) + ".." + H.S(t2) + ", inclusive";
          else
            explanation = t2 < t1 ? ": Valid value range is empty" : ": Only valid value is " + H.S(t1);
        }
        return explanation;
      },
      static: {
        RangeError$: function(message) {
          return new P.RangeError(null, null, false, null, null, message);
        },
        RangeError$value: function(value, $name, message) {
          return new P.RangeError(null, null, true, value, $name, "Value not in range");
        },
        RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
          return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
        },
        RangeError_checkValueInInterval: function(value, minValue, maxValue, $name, message) {
          var t1;
          if (value >= minValue) {
            if (typeof maxValue !== "number")
              return H.iae(maxValue);
            t1 = value > maxValue;
          } else
            t1 = true;
          if (t1)
            throw H.wrapException(P.RangeError$range(value, minValue, maxValue, $name, message));
        },
        RangeError_checkValidRange: function(start, end, $length, startName, endName, message) {
          var t1;
          if (typeof start !== "number")
            return H.iae(start);
          if (0 <= start) {
            if (typeof $length !== "number")
              return H.iae($length);
            t1 = start > $length;
          } else
            t1 = true;
          if (t1)
            throw H.wrapException(P.RangeError$range(start, 0, $length, "start", message));
          if (end != null) {
            if (!(start > end)) {
              if (typeof $length !== "number")
                return H.iae($length);
              t1 = end > $length;
            } else
              t1 = true;
            if (t1)
              throw H.wrapException(P.RangeError$range(end, start, $length, "end", message));
            return end;
          }
          return $length;
        }
      }
    },
    IndexError: {
      "^": "ArgumentError;indexable,length>,_hasValue,invalidValue,name,message",
      get$_errorName: function() {
        return "RangeError";
      },
      get$_errorExplanation: function() {
        if (J.$lt$n(this.invalidValue, 0))
          return ": index must not be negative";
        var t1 = this.length;
        if (t1 === 0)
          return ": no indices are valid";
        return ": index should be less than " + H.S(t1);
      },
      static: {
        IndexError$: function(invalidValue, indexable, $name, message, $length) {
          var t1 = H.intTypeCheck($length != null ? $length : J.get$length$asx(indexable));
          return new P.IndexError(indexable, t1, true, invalidValue, $name, "Index out of range");
        }
      }
    },
    NoSuchMethodError: {
      "^": "Error;_core$_receiver,_core$_memberName,_core$_arguments,_namedArguments,_existingArgumentNames",
      toString$0: function(_) {
        var _box_0, sb, t1, t2, _i, t3, t4, argument, receiverText, actualParameters;
        _box_0 = {};
        sb = new P.StringBuffer("");
        _box_0.comma = "";
        for (t1 = this._core$_arguments, t2 = t1.length, _i = 0, t3 = "", t4 = ""; _i < t2; ++_i, t4 = ", ") {
          argument = t1[_i];
          sb._contents = t3 + t4;
          t3 = sb._contents += H.S(P.Error_safeToString(argument));
          _box_0.comma = ", ";
        }
        this._namedArguments.forEach$1(0, new P.NoSuchMethodError_toString_closure(_box_0, sb));
        receiverText = P.Error_safeToString(this._core$_receiver);
        actualParameters = sb.toString$0(0);
        t1 = "NoSuchMethodError: method not found: '" + H.S(this._core$_memberName.__internal$_name) + "'\nReceiver: " + H.S(receiverText) + "\nArguments: [" + actualParameters + "]";
        return t1;
      },
      static: {
        NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames) {
          return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames);
        }
      }
    },
    UnsupportedError: {
      "^": "Error;message>",
      toString$0: function(_) {
        return "Unsupported operation: " + this.message;
      },
      static: {
        UnsupportedError$: function(message) {
          return new P.UnsupportedError(message);
        }
      }
    },
    UnimplementedError: {
      "^": "Error;message>",
      toString$0: function(_) {
        var t1 = this.message;
        return t1 != null ? "UnimplementedError: " + t1 : "UnimplementedError";
      },
      static: {
        UnimplementedError$: function(message) {
          return new P.UnimplementedError(message);
        }
      }
    },
    StateError: {
      "^": "Error;message>",
      toString$0: function(_) {
        return "Bad state: " + this.message;
      },
      static: {
        StateError$: function(message) {
          return new P.StateError(message);
        }
      }
    },
    ConcurrentModificationError: {
      "^": "Error;modifiedObject",
      toString$0: function(_) {
        var t1 = this.modifiedObject;
        if (t1 == null)
          return "Concurrent modification during iteration.";
        return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
      },
      static: {
        ConcurrentModificationError$: function(modifiedObject) {
          return new P.ConcurrentModificationError(modifiedObject);
        }
      }
    },
    OutOfMemoryError: {
      "^": "Object;",
      toString$0: function(_) {
        return "Out of Memory";
      },
      $isError: 1
    },
    StackOverflowError: {
      "^": "Object;",
      toString$0: function(_) {
        return "Stack Overflow";
      },
      $isError: 1
    },
    CyclicInitializationError: {
      "^": "Error;variableName",
      toString$0: function(_) {
        var t1 = this.variableName;
        return t1 == null ? "Reading static variable during its initialization" : "Reading static variable '" + t1 + "' during its initialization";
      }
    },
    _Exception: {
      "^": "Object;message>",
      toString$0: function(_) {
        return "Exception: " + this.message;
      }
    },
    FormatException: {
      "^": "Object;message>,source,offset",
      toString$0: function(_) {
        var t1, report, offset, source, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix, slice;
        t1 = this.message;
        report = t1 != null && "" !== t1 ? "FormatException: " + H.S(t1) : "FormatException";
        offset = this.offset;
        source = this.source;
        if (typeof source !== "string")
          return offset != null ? report + (" (at offset " + H.S(offset) + ")") : report;
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = C.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = C.JSString_methods._codeUnitAt$1(source, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < source.length; ++i) {
          char = C.JSString_methods.codeUnitAt$1(source, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        slice = C.JSString_methods.substring$2(source, start, end);
        return report + prefix + slice + postfix + "\n" + C.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      },
      static: {
        FormatException$: function(message, source, offset) {
          return new P.FormatException(message, source, offset);
        }
      }
    },
    Expando: {
      "^": "Object;_jsWeakMapOrKey,name>,$ti",
      $index: function(_, object) {
        var t1, t2, values;
        t1 = this._jsWeakMapOrKey;
        if (typeof t1 !== "string") {
          if (object != null)
            t2 = typeof object === "number" || false;
          else
            t2 = true;
          if (t2)
            H.throwExpression(P.ArgumentError$value(object, "Expandos are not allowed on strings, numbers, booleans or null", null));
          return t1.get(object);
        }
        values = H.Primitives_getProperty(object, "expando$values");
        t1 = values == null ? null : H.Primitives_getProperty(values, t1);
        return H.assertSubtypeOfRuntimeType(t1, H.getTypeArgumentByIndex(this, 0));
      },
      $indexSet: function(_, object, value) {
        var t1, values;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = this._jsWeakMapOrKey;
        if (typeof t1 !== "string")
          t1.set(object, value);
        else {
          values = H.Primitives_getProperty(object, "expando$values");
          if (values == null) {
            values = new P.Object();
            H.Primitives_setProperty(object, "expando$values", values);
          }
          H.Primitives_setProperty(values, t1, value);
        }
      },
      toString$0: function(_) {
        return "Expando:" + H.S(this.name);
      },
      static: {
        Expando$: function($name, $T) {
          var t1;
          if (typeof WeakMap == "function")
            t1 = new WeakMap();
          else {
            t1 = $.Expando__keyCount;
            $.Expando__keyCount = t1 + 1;
            t1 = "expando$key$" + t1;
          }
          return new P.Expando(t1, $name, [$T]);
        }
      }
    },
    Function: {
      "^": "Object;"
    },
    int: {
      "^": "num;"
    },
    "+int": 0,
    Iterable: {
      "^": "Object;$ti",
      map$1$1: function(_, f, $T) {
        var t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
        return H.MappedIterable_MappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), t1, $T);
      },
      where$1: ["super$Iterable$where", function(_, test) {
        var t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
        return new H.WhereIterable(this, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), [t1]);
      }],
      contains$1: function(_, element) {
        var t1;
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          if (J.$eq$(t1.get$current(t1), element))
            return true;
        return false;
      },
      forEach$1: function(_, f) {
        var t1;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "Iterable", 0)]});
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          f.call$1(t1.get$current(t1));
      },
      reduce$1: function(_, combine) {
        var t1, iterator, value;
        t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
        H.functionTypeCheck(combine, {func: 1, ret: t1, args: [t1, t1]});
        iterator = this.get$iterator(this);
        if (!iterator.moveNext$0())
          throw H.wrapException(H.IterableElementError_noElement());
        value = iterator.get$current(iterator);
        for (; iterator.moveNext$0();)
          value = combine.call$2(value, iterator.get$current(iterator));
        return value;
      },
      join$1: function(_, separator) {
        var iterator, t1;
        iterator = this.get$iterator(this);
        if (!iterator.moveNext$0())
          return "";
        if (separator === "") {
          t1 = "";
          do
            t1 += H.S(iterator.get$current(iterator));
          while (iterator.moveNext$0());
        } else {
          t1 = H.S(iterator.get$current(iterator));
          for (; iterator.moveNext$0();)
            t1 = t1 + separator + H.S(iterator.get$current(iterator));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      get$length: function(_) {
        var it, count;
        it = this.get$iterator(this);
        for (count = 0; it.moveNext$0();)
          ++count;
        return count;
      },
      get$isEmpty: function(_) {
        return !this.get$iterator(this).moveNext$0();
      },
      get$first: function(_) {
        var it = this.get$iterator(this);
        if (!it.moveNext$0())
          throw H.wrapException(H.IterableElementError_noElement());
        return it.get$current(it);
      },
      elementAt$1: function(_, index) {
        var t1, elementIndex, element;
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$notNull("index"));
        if (index < 0)
          H.throwExpression(P.RangeError$range(index, 0, null, "index", null));
        for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
          element = t1.get$current(t1);
          if (index === elementIndex)
            return element;
          ++elementIndex;
        }
        throw H.wrapException(P.IndexError$(index, this, "index", null, elementIndex));
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToShortString(this, "(", ")");
      }
    },
    Iterator: {
      "^": "Object;$ti"
    },
    List: {
      "^": "Object;$ti",
      $isEfficientLengthIterable: 1,
      $isIterable: 1
    },
    "+List": 0,
    Map: {
      "^": "Object;$ti"
    },
    Null: {
      "^": "Object;",
      get$hashCode: function(_) {
        return P.Object.prototype.get$hashCode.call(this, this);
      },
      toString$0: function(_) {
        return "null";
      }
    },
    "+Null": 0,
    num: {
      "^": "Object;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.num];
      }
    },
    "+num": 0,
    Object: {
      "^": ";",
      $eq: function(_, other) {
        return this === other;
      },
      get$hashCode: function(_) {
        return H.Primitives_objectHashCode(this);
      },
      toString$0: ["super$Object$toString", function(_) {
        return "Instance of '" + H.Primitives_objectTypeName(this) + "'";
      }],
      noSuchMethod$1: [function(_, invocation) {
        H.interceptedTypeCheck(invocation, "$isInvocation");
        throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
      }, null, "get$noSuchMethod", 5, 0, null, 21],
      toString: function() {
        return this.toString$0(this);
      }
    },
    Match: {
      "^": "Object;"
    },
    RegExp: {
      "^": "Object;",
      $isPattern: 1
    },
    Set: {
      "^": "EfficientLengthIterable;$ti"
    },
    StackTrace: {
      "^": "Object;"
    },
    _StringStackTrace: {
      "^": "Object;_stackTrace",
      toString$0: function(_) {
        return this._stackTrace;
      },
      $isStackTrace: 1
    },
    String: {
      "^": "Object;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.String];
      },
      $isPattern: 1
    },
    "+String": 0,
    StringBuffer: {
      "^": "Object;_contents<",
      set$_contents: function(_contents) {
        this._contents = H.stringTypeCheck(_contents);
      },
      get$length: function(_) {
        return this._contents.length;
      },
      toString$0: function(_) {
        var t1 = this._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      static: {
        StringBuffer__writeAll: function(string, objects, separator) {
          var iterator = J.get$iterator$ax(objects);
          if (!iterator.moveNext$0())
            return string;
          if (separator.length === 0) {
            do
              string += H.S(iterator.get$current(iterator));
            while (iterator.moveNext$0());
          } else {
            string += H.S(iterator.get$current(iterator));
            for (; iterator.moveNext$0();)
              string = string + separator + H.S(iterator.get$current(iterator));
          }
          return string;
        }
      }
    },
    Symbol0: {
      "^": "Object;"
    },
    Type: {
      "^": "Object;"
    }
  }], ["dart.dom.html", "dart:html",, W, {
    "^": "",
    document: function() {
      return document;
    },
    promiseToFuture: function(jsPromise, $T) {
      var t1, completer;
      t1 = new P._Future(0, $.Zone__current, [$T]);
      completer = new P._AsyncCompleter(t1, [$T]);
      jsPromise.then(H.convertDartClosureToJS(new W.promiseToFuture_closure(completer, $T), 1), H.convertDartClosureToJS(new W.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    DivElement_DivElement: function() {
      return document.createElement("div");
    },
    Element__determineTransitionEventType: [function(e) {
      H.interceptedTypeCheck(e, "$isEventTarget");
      if (P.Device_isWebKit())
        return "webkitTransitionEnd";
      else if (P.Device_isOpera())
        return "oTransitionEnd";
      return "transitionend";
    }, null, null, 4, 0, null, 6],
    Element__safeTagName: function(element) {
      var result, t1, t2, exception;
      result = "element tag unavailable";
      try {
        t1 = J.getInterceptor$x(element);
        t2 = t1.get$tagName(element);
        if (typeof t2 === "string")
          result = t1.get$tagName(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return result;
    },
    _JenkinsSmiHash_combine: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_hash4: function(a, b, c, d) {
      var t1, hash;
      t1 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, a), b), c), d);
      hash = 536870911 & t1 + ((67108863 & t1) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    _convertNativeToDart_Window: function(win) {
      if (win == null)
        return;
      return W._DOMWindowCrossFrame__createSafe(win);
    },
    _convertNativeToDart_EventTarget: function(e) {
      var $window;
      if (e == null)
        return;
      if ("postMessage" in e) {
        $window = W._DOMWindowCrossFrame__createSafe(e);
        if (!!J.getInterceptor$($window).$isEventTarget)
          return $window;
        return;
      } else
        return H.interceptedTypeCheck(e, "$isEventTarget");
    },
    _wrapZone: function(callback, $T) {
      var t1;
      H.functionTypeCheck(callback, {func: 1, ret: -1, args: [$T]});
      t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    promiseToFuture_closure: {
      "^": "Closure:2;completer,T",
      call$1: [function(promiseValue) {
        return this.completer.complete$1(0, H.futureOrCheck(promiseValue, {futureOr: 1, type: this.T}));
      }, null, null, 4, 0, null, 55, "call"]
    },
    promiseToFuture_closure0: {
      "^": "Closure:2;completer",
      call$1: [function(promiseError) {
        return this.completer.completeError$1(promiseError);
      }, null, null, 4, 0, null, 67, "call"]
    },
    HtmlElement: {
      "^": "Element;",
      $isHtmlElement: 1,
      "%": "HTMLBRElement|HTMLContentElement|HTMLDListElement|HTMLDataElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadingElement|HTMLHtmlElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLOptGroupElement|HTMLOptionElement|HTMLParagraphElement|HTMLPictureElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLShadowElement|HTMLSourceElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTimeElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement;HTMLElement"
    },
    Accelerometer: {
      "^": "Sensor;0x=,0y=",
      "%": "Accelerometer|LinearAccelerationSensor"
    },
    AccessibleNode: {
      "^": "EventTarget;0checked=",
      set$checked: function(receiver, checked) {
        receiver.checked = H.stringTypeCheck(checked);
      },
      "%": "AccessibleNode"
    },
    AccessibleNodeList: {
      "^": "Interceptor;0length=",
      "%": "AccessibleNodeList"
    },
    AnchorElement: {
      "^": "HtmlElement;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isAnchorElement: 1,
      "%": "HTMLAnchorElement"
    },
    Animation: {
      "^": "EventTarget;",
      $isAnimation: 1,
      "%": "Animation"
    },
    AnimationEvent: {
      "^": "Event;",
      $isAnimationEvent: 1,
      "%": "AnimationEvent"
    },
    AreaElement: {
      "^": "HtmlElement;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      "%": "HTMLAreaElement"
    },
    BaseElement: {
      "^": "HtmlElement;",
      $isBaseElement: 1,
      "%": "HTMLBaseElement"
    },
    Blob: {
      "^": "Interceptor;",
      $isBlob: 1,
      "%": ";Blob"
    },
    BodyElement: {
      "^": "HtmlElement;",
      $isBodyElement: 1,
      "%": "HTMLBodyElement"
    },
    BroadcastChannel: {
      "^": "EventTarget;0name=",
      "%": "BroadcastChannel"
    },
    ButtonElement: {
      "^": "HtmlElement;0name=",
      "%": "HTMLButtonElement"
    },
    CanvasElement: {
      "^": "HtmlElement;0height=,0width=",
      "%": "HTMLCanvasElement"
    },
    CharacterData: {
      "^": "Node;0length=",
      "%": "ProcessingInstruction;CharacterData"
    },
    Comment: {
      "^": "CharacterData;",
      $isComment: 1,
      "%": "Comment"
    },
    Credential: {
      "^": "Interceptor;",
      "%": "PublicKeyCredential;Credential"
    },
    CredentialUserData: {
      "^": "Interceptor;0name=",
      "%": "CredentialUserData"
    },
    CssKeyframesRule: {
      "^": "CssRule;0name=",
      "%": "CSSKeyframesRule|MozCSSKeyframesRule|WebKitCSSKeyframesRule"
    },
    CssNumericValue: {
      "^": "CssStyleValue;",
      add$1: function(receiver, value) {
        return receiver.add(H.interceptedTypeCheck(value, "$isCssNumericValue"));
      },
      $isCssNumericValue: 1,
      "%": "CSSNumericValue|CSSUnitValue"
    },
    CssPerspective: {
      "^": "CssTransformComponent;0length=",
      "%": "CSSPerspective"
    },
    CssPositionValue: {
      "^": "CssStyleValue;0x=,0y=",
      "%": "CSSPositionValue"
    },
    CssRotation: {
      "^": "CssTransformComponent;0x=,0y=",
      "%": "CSSRotation"
    },
    CssRule: {
      "^": "Interceptor;",
      $isCssRule: 1,
      "%": "CSSCharsetRule|CSSConditionRule|CSSFontFaceRule|CSSGroupingRule|CSSImportRule|CSSKeyframeRule|CSSMediaRule|CSSNamespaceRule|CSSPageRule|CSSStyleRule|CSSSupportsRule|CSSViewportRule|MozCSSKeyframeRule|WebKitCSSKeyframeRule;CSSRule"
    },
    CssScale: {
      "^": "CssTransformComponent;0x=,0y=",
      "%": "CSSScale"
    },
    CssStyleDeclaration: {
      "^": "_CssStyleDeclaration_Interceptor_CssStyleDeclarationBase;0length=",
      getPropertyValue$1: function(receiver, propertyName) {
        var propValue = this._getPropertyValue$1(receiver, this._browserPropertyName$1(receiver, propertyName));
        return propValue == null ? "" : propValue;
      },
      _browserPropertyName$1: function(receiver, propertyName) {
        var t1, $name;
        t1 = $.$get$CssStyleDeclaration__propertyCache();
        $name = t1[propertyName];
        if (typeof $name === "string")
          return $name;
        $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
        t1[propertyName] = $name;
        return $name;
      },
      _supportedBrowserPropertyName$1: function(receiver, propertyName) {
        var prefixed;
        if (propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
          return letter.toUpperCase();
        }) in receiver)
          return propertyName;
        prefixed = P.Device_cssPrefix() + H.S(propertyName);
        if (prefixed in receiver)
          return prefixed;
        return propertyName;
      },
      _setPropertyHelper$3: function(receiver, propertyName, value, priority) {
        if (value == null)
          value = "";
        if (priority == null)
          priority = "";
        receiver.setProperty(propertyName, value, priority);
      },
      _getPropertyValue$1: function(receiver, property) {
        return receiver.getPropertyValue(property);
      },
      get$bottom: function(receiver) {
        return receiver.bottom;
      },
      get$height: function(receiver) {
        return receiver.height;
      },
      get$left: function(receiver) {
        return receiver.left;
      },
      get$right: function(receiver) {
        return receiver.right;
      },
      get$top: function(receiver) {
        return receiver.top;
      },
      get$width: function(receiver) {
        return receiver.width;
      },
      "%": "CSS2Properties|CSSStyleDeclaration|MSStyleCSSProperties"
    },
    CssStyleDeclarationBase: {
      "^": "Object;",
      get$bottom: function(receiver) {
        return this.getPropertyValue$1(receiver, "bottom");
      },
      get$height: function(receiver) {
        return this.getPropertyValue$1(receiver, "height");
      },
      get$left: function(receiver) {
        return this.getPropertyValue$1(receiver, "left");
      },
      get$right: function(receiver) {
        return this.getPropertyValue$1(receiver, "right");
      },
      get$top: function(receiver) {
        return this.getPropertyValue$1(receiver, "top");
      },
      get$width: function(receiver) {
        return this.getPropertyValue$1(receiver, "width");
      }
    },
    CssStyleValue: {
      "^": "Interceptor;",
      "%": "CSSImageValue|CSSKeywordValue|CSSResourceValue|CSSURLImageValue;CSSStyleValue"
    },
    CssTransformComponent: {
      "^": "Interceptor;",
      "%": "CSSMatrixComponent|CSSSkew;CSSTransformComponent"
    },
    CssTransformValue: {
      "^": "CssStyleValue;0length=",
      "%": "CSSTransformValue"
    },
    CssTranslation: {
      "^": "CssTransformComponent;0x=,0y=",
      "%": "CSSTranslation"
    },
    CssUnparsedValue: {
      "^": "CssStyleValue;0length=",
      "%": "CSSUnparsedValue"
    },
    DataTransferItemList: {
      "^": "Interceptor;0length=",
      add$2: function(receiver, data_OR_file, type) {
        return receiver.add(data_OR_file, type);
      },
      add$1: function($receiver, data_OR_file) {
        return $receiver.add(data_OR_file);
      },
      "%": "DataTransferItemList"
    },
    DeviceAcceleration: {
      "^": "Interceptor;0x=,0y=",
      "%": "DeviceAcceleration"
    },
    DivElement: {
      "^": "HtmlElement;",
      $isDivElement: 1,
      "%": "HTMLDivElement"
    },
    Document: {
      "^": "Node;",
      adoptNode$1: function(receiver, node) {
        return receiver.adoptNode(node);
      },
      _createEvent$1: function(receiver, eventType) {
        return receiver.createEvent(eventType);
      },
      querySelector$1: function(receiver, selectors) {
        return receiver.querySelector(selectors);
      },
      _querySelectorAll$1: function(receiver, selectors) {
        return receiver.querySelectorAll(selectors);
      },
      get$onKeyUp: function(receiver) {
        return new W._EventStream(receiver, "keyup", false, [W.KeyboardEvent]);
      },
      get$onMouseDown: function(receiver) {
        return new W._EventStream(receiver, "mousedown", false, [W.MouseEvent]);
      },
      get$onMouseUp: function(receiver) {
        return new W._EventStream(receiver, "mouseup", false, [W.MouseEvent]);
      },
      $isDocument: 1,
      "%": "XMLDocument;Document"
    },
    DomError: {
      "^": "Interceptor;0name=",
      "%": "DOMError"
    },
    DomException: {
      "^": "Interceptor;",
      get$name: function(receiver) {
        var errorName = receiver.name;
        if (P.Device_isWebKit() && errorName === "SECURITY_ERR")
          return "SecurityError";
        if (P.Device_isWebKit() && errorName === "SYNTAX_ERR")
          return "SyntaxError";
        return errorName;
      },
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isDomException: 1,
      "%": "DOMException"
    },
    DomImplementation: {
      "^": "Interceptor;",
      createHtmlDocument$1: function(receiver, title) {
        return receiver.createHTMLDocument(title);
      },
      "%": "DOMImplementation"
    },
    DomPoint: {
      "^": "DomPointReadOnly;",
      get$x: function(receiver) {
        return receiver.x;
      },
      get$y: function(receiver) {
        return receiver.y;
      },
      "%": "DOMPoint"
    },
    DomPointReadOnly: {
      "^": "Interceptor;",
      get$x: function(receiver) {
        return receiver.x;
      },
      get$y: function(receiver) {
        return receiver.y;
      },
      "%": ";DOMPointReadOnly"
    },
    DomRectList: {
      "^": "_DomRectList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.assertSubtype(value, "$isRectangle", [P.num], "$asRectangle");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [[P.Rectangle, P.num]];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [[P.Rectangle, P.num]];
      },
      $asListMixin: function() {
        return [[P.Rectangle, P.num]];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [[P.Rectangle, P.num]];
      },
      $isList: 1,
      $asList: function() {
        return [[P.Rectangle, P.num]];
      },
      $asImmutableListMixin: function() {
        return [[P.Rectangle, P.num]];
      },
      "%": "ClientRectList|DOMRectList"
    },
    DomRectReadOnly: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(this.get$width(receiver)) + " x " + H.S(this.get$height(receiver));
      },
      $eq: function(receiver, other) {
        var t1;
        if (other == null)
          return false;
        if (!H.checkSubtype(other, "$isRectangle", [P.num], "$asRectangle"))
          return false;
        t1 = J.getInterceptor$x(other);
        return receiver.left === t1.get$left(other) && receiver.top === t1.get$top(other) && this.get$width(receiver) === t1.get$width(other) && this.get$height(receiver) === t1.get$height(other);
      },
      get$hashCode: function(receiver) {
        return W._JenkinsSmiHash_hash4(receiver.left & 0x1FFFFFFF, receiver.top & 0x1FFFFFFF, this.get$width(receiver) & 0x1FFFFFFF, this.get$height(receiver) & 0x1FFFFFFF);
      },
      get$topLeft: function(receiver) {
        return new P.Point(receiver.left, receiver.top, [P.num]);
      },
      get$bottom: function(receiver) {
        return receiver.bottom;
      },
      get$height: function(receiver) {
        return receiver.height;
      },
      get$left: function(receiver) {
        return receiver.left;
      },
      get$right: function(receiver) {
        return receiver.right;
      },
      get$top: function(receiver) {
        return receiver.top;
      },
      get$width: function(receiver) {
        return receiver.width;
      },
      get$x: function(receiver) {
        return receiver.x;
      },
      get$y: function(receiver) {
        return receiver.y;
      },
      $isRectangle: 1,
      $asRectangle: function() {
        return [P.num];
      },
      "%": ";DOMRectReadOnly"
    },
    DomStringList: {
      "^": "_DomStringList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.stringTypeCheck(value);
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.String];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [P.String];
      },
      $asListMixin: function() {
        return [P.String];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      },
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $asImmutableListMixin: function() {
        return [P.String];
      },
      "%": "DOMStringList"
    },
    DomTokenList: {
      "^": "Interceptor;0length=",
      add$1: function(receiver, tokens) {
        return receiver.add(H.stringTypeCheck(tokens));
      },
      "%": "DOMTokenList"
    },
    _ChildrenElementList: {
      "^": "ListBase;_html$_element<,_childElements",
      contains$1: function(_, element) {
        return J.contains$1$asx(this._childElements, element);
      },
      get$isEmpty: function(_) {
        return this._html$_element.firstElementChild == null;
      },
      get$length: function(_) {
        return this._childElements.length;
      },
      $index: function(_, index) {
        return H.interceptedTypeCheck(J.$index$asx(this._childElements, index), "$isElement");
      },
      $indexSet: function(_, index, value) {
        H.intTypeCheck(index);
        J._replaceChild$2$x(this._html$_element, H.interceptedTypeCheck(value, "$isElement"), J.$index$asx(this._childElements, index));
      },
      set$length: function(_, newLength) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize element lists"));
      },
      add$1: function(_, value) {
        H.interceptedTypeCheck(value, "$isElement");
        J.append$1$x(this._html$_element, value);
        return value;
      },
      get$iterator: function(_) {
        var t1 = this.toList$0(this);
        return new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      sort$1: [function(_, compare) {
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [W.Element, W.Element]});
        throw H.wrapException(P.UnsupportedError$("Cannot sort element lists"));
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, 32],
      removeAt$1: function(_, index) {
        var result = H.interceptedTypeCheck(J.$index$asx(this._childElements, index), "$isElement");
        J._removeChild$1$x(this._html$_element, result);
        return result;
      },
      get$last: function(_) {
        var result = this._html$_element.lastElementChild;
        if (result == null)
          throw H.wrapException(P.StateError$("No elements"));
        return result;
      },
      $asEfficientLengthIterable: function() {
        return [W.Element];
      },
      $asListMixin: function() {
        return [W.Element];
      },
      $asIterable: function() {
        return [W.Element];
      },
      $asList: function() {
        return [W.Element];
      }
    },
    _FrozenElementList: {
      "^": "ListBase;_nodeList,$ti",
      get$length: function(_) {
        return this._nodeList.length;
      },
      $index: function(_, index) {
        return H.assertSubtypeOfRuntimeType(C.NodeList_methods.$index(this._nodeList, index), H.getTypeArgumentByIndex(this, 0));
      },
      $indexSet: function(_, index, value) {
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
      },
      set$length: function(_, newLength) {
        throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
      },
      sort$1: [function(_, compare) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [t1, t1]});
        throw H.wrapException(P.UnsupportedError$("Cannot sort list"));
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, function() {
        return H.computeSignature(function(E) {
          return {func: 1, ret: -1, opt: [{func: 1, ret: P.int, args: [E, E]}]};
        }, this.$receiver, "_FrozenElementList");
      }],
      get$last: function(_) {
        return H.assertSubtypeOfRuntimeType(C.NodeList_methods.get$last(this._nodeList), H.getTypeArgumentByIndex(this, 0));
      },
      get$classes: function(_) {
        return W._MultiElementCssClassSet__MultiElementCssClassSet(this);
      }
    },
    Element: {
      "^": "Node;0tabIndex=,0className=,0id=,0tagName=",
      get$attributes: function(receiver) {
        return new W._ElementAttributeMap(receiver);
      },
      get$children: function(receiver) {
        return new W._ChildrenElementList(receiver, receiver.children);
      },
      get$classes: function(receiver) {
        return new W._ElementCssClassSet(receiver);
      },
      animate$2: function(receiver, $frames, timing) {
        var t1, convertedFrames, convertedTiming;
        H.assertSubtype($frames, "$isIterable", [[P.Map, P.String,,]], "$asIterable");
        t1 = !!J.getInterceptor$($frames).$isIterable;
        if (!t1 || !C.JSArray_methods.every$1($frames, new W.Element_animate_closure()))
          throw H.wrapException(P.ArgumentError$("The frames parameter should be a List of Maps with frame information"));
        if (t1) {
          t1 = H.getTypeArgumentByIndex($frames, 0);
          convertedFrames = new H.MappedListIterable($frames, H.functionTypeCheck(P.html_common__convertDartToNative_Dictionary$closure(), {func: 1, ret: null, args: [t1]}), [t1, null]).toList$0(0);
        } else
          convertedFrames = $frames;
        convertedTiming = !!J.getInterceptor$(timing).$isMap ? P.convertDartToNative_Dictionary(timing, null) : timing;
        return convertedTiming == null ? this._animate$1(receiver, convertedFrames) : this._animate$2(receiver, convertedFrames, convertedTiming);
      },
      _animate$2: function(receiver, effect, timing) {
        return receiver.animate(effect, timing);
      },
      _animate$1: function($receiver, effect) {
        return $receiver.animate(effect);
      },
      toString$0: function(receiver) {
        return receiver.localName;
      },
      createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
        var t1, t2, contextElement, fragment;
        t1 = $.Element__defaultValidator;
        if (t1 == null) {
          t1 = H.setRuntimeTypeInfo([], [W.NodeValidator]);
          t2 = new W.NodeValidatorBuilder(t1);
          C.JSArray_methods.add$1(t1, W._Html5NodeValidator$(null));
          C.JSArray_methods.add$1(t1, W._TemplatingNodeValidator$());
          $.Element__defaultValidator = t2;
          validator = t2;
        } else
          validator = t1;
        t1 = $.Element__defaultSanitizer;
        if (t1 == null) {
          t1 = new W._ValidatingTreeSanitizer(validator);
          $.Element__defaultSanitizer = t1;
          treeSanitizer = t1;
        } else {
          t1.validator = validator;
          treeSanitizer = t1;
        }
        if ($.Element__parseDocument == null) {
          t1 = document;
          t2 = t1.implementation;
          t2 = (t2 && C.DomImplementation_methods).createHtmlDocument$1(t2, "");
          $.Element__parseDocument = t2;
          $.Element__parseRange = t2.createRange();
          t2 = $.Element__parseDocument;
          t2.toString;
          t2 = t2.createElement("base");
          H.interceptedTypeCheck(t2, "$isBaseElement");
          t2.href = t1.baseURI;
          t1 = $.Element__parseDocument.head;
          (t1 && C.HeadElement_methods).append$1(t1, t2);
        }
        t1 = $.Element__parseDocument;
        if (t1.body == null) {
          t1.toString;
          t2 = t1.createElement("body");
          t1.body = H.interceptedTypeCheck(t2, "$isBodyElement");
        }
        t1 = $.Element__parseDocument;
        if (!!this.$isBodyElement)
          contextElement = t1.body;
        else {
          t2 = receiver.tagName;
          t1.toString;
          contextElement = t1.createElement(t2);
          t1 = $.Element__parseDocument.body;
          (t1 && C.BodyElement_methods).append$1(t1, contextElement);
        }
        if ("createContextualFragment" in window.Range.prototype && !C.JSArray_methods.contains$1(C.List_ego, receiver.tagName)) {
          t1 = $.Element__parseRange;
          (t1 && C.Range_methods).selectNodeContents$1(t1, contextElement);
          t1 = $.Element__parseRange;
          fragment = (t1 && C.Range_methods).createContextualFragment$1(t1, html);
        } else {
          contextElement.innerHTML = html;
          fragment = $.Element__parseDocument.createDocumentFragment();
          for (t1 = J.getInterceptor$x(fragment); t2 = contextElement.firstChild, t2 != null;)
            t1.append$1(fragment, t2);
        }
        t1 = $.Element__parseDocument.body;
        if (contextElement == null ? t1 != null : contextElement !== t1)
          J.remove$0$ax(contextElement);
        treeSanitizer.sanitizeTree$1(fragment);
        C.HtmlDocument_methods.adoptNode$1(document, fragment);
        return fragment;
      },
      getAttribute$1: function(receiver, $name) {
        return receiver.getAttribute($name);
      },
      _hasAttribute$1: function(receiver, $name) {
        return receiver.hasAttribute($name);
      },
      _removeAttribute$1: function(receiver, $name) {
        return receiver.removeAttribute($name);
      },
      setAttribute$2: function(receiver, $name, value) {
        return receiver.setAttribute($name, value);
      },
      querySelector$1: function(receiver, selectors) {
        return receiver.querySelector(selectors);
      },
      $isElement: 1,
      "%": ";Element"
    },
    Element_animate_closure: {
      "^": "Closure:173;",
      call$1: function(x) {
        return !!J.getInterceptor$(H.assertSubtype(x, "$isMap", [P.String, null], "$asMap")).$isMap;
      }
    },
    EmbedElement: {
      "^": "HtmlElement;0height=,0name=,0width=",
      "%": "HTMLEmbedElement"
    },
    Entry: {
      "^": "Interceptor;0name=",
      _html$_remove$2: function(receiver, successCallback, errorCallback) {
        H.functionTypeCheck(successCallback, {func: 1, ret: -1});
        H.functionTypeCheck(errorCallback, {func: 1, ret: -1, args: [W.DomException]});
        return receiver.remove(H.convertDartClosureToJS(successCallback, 0), H.convertDartClosureToJS(errorCallback, 1));
      },
      remove$0: function(receiver) {
        var t1, completer;
        t1 = new P._Future(0, $.Zone__current, [null]);
        completer = new P._AsyncCompleter(t1, [null]);
        this._html$_remove$2(receiver, new W.Entry_remove_closure(completer), new W.Entry_remove_closure0(completer));
        return t1;
      },
      "%": "DirectoryEntry|Entry|FileEntry"
    },
    Entry_remove_closure: {
      "^": "Closure:0;completer",
      call$0: [function() {
        this.completer.complete$0(0);
      }, null, null, 0, 0, null, "call"]
    },
    Entry_remove_closure0: {
      "^": "Closure:63;completer",
      call$1: [function(error) {
        this.completer.completeError$1(H.interceptedTypeCheck(error, "$isDomException"));
      }, null, null, 4, 0, null, 4, "call"]
    },
    Event: {
      "^": "Interceptor;",
      get$target: function(receiver) {
        return W._convertNativeToDart_EventTarget(receiver.target);
      },
      _initEvent$3: function(receiver, type, bubbles, cancelable) {
        return receiver.initEvent(type, true, true);
      },
      preventDefault$0: function(receiver) {
        return receiver.preventDefault();
      },
      stopPropagation$0: function(receiver) {
        return receiver.stopPropagation();
      },
      $isEvent: 1,
      "%": "AbortPaymentEvent|AnimationPlaybackEvent|ApplicationCacheErrorEvent|AudioProcessingEvent|BackgroundFetchClickEvent|BackgroundFetchEvent|BackgroundFetchFailEvent|BackgroundFetchedEvent|BeforeInstallPromptEvent|BeforeUnloadEvent|BlobEvent|CanMakePaymentEvent|ClipboardEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|ExtendableEvent|ExtendableMessageEvent|FetchEvent|FontFaceSetLoadEvent|ForeignFetchEvent|GamepadEvent|HashChangeEvent|InstallEvent|MIDIConnectionEvent|MIDIMessageEvent|MediaEncryptedEvent|MediaKeyMessageEvent|MediaQueryListEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MojoInterfaceRequestEvent|MutationEvent|NotificationEvent|OfflineAudioCompletionEvent|PageTransitionEvent|PaymentRequestEvent|PaymentRequestUpdateEvent|PopStateEvent|PresentationConnectionAvailableEvent|PresentationConnectionCloseEvent|ProgressEvent|PromiseRejectionEvent|PushEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCPeerConnectionIceEvent|RTCTrackEvent|ResourceProgressEvent|SecurityPolicyViolationEvent|SensorErrorEvent|SpeechRecognitionError|SpeechRecognitionEvent|SyncEvent|TrackEvent|USBConnectionEvent|VRDeviceEvent|VRDisplayEvent|VRSessionEvent|WebGLContextEvent;Event|InputEvent"
    },
    EventTarget: {
      "^": "Interceptor;",
      addEventListener$3: function(receiver, type, listener, useCapture) {
        H.functionTypeCheck(listener, {func: 1, args: [W.Event]});
        if (listener != null)
          this._addEventListener$3(receiver, type, listener, useCapture);
      },
      addEventListener$2: function($receiver, type, listener) {
        return this.addEventListener$3($receiver, type, listener, null);
      },
      removeEventListener$3: function(receiver, type, listener, useCapture) {
        H.functionTypeCheck(listener, {func: 1, args: [W.Event]});
        if (listener != null)
          this._removeEventListener$3(receiver, type, listener, useCapture);
      },
      removeEventListener$2: function($receiver, type, listener) {
        return this.removeEventListener$3($receiver, type, listener, null);
      },
      _addEventListener$3: function(receiver, type, listener, options) {
        return receiver.addEventListener(type, H.convertDartClosureToJS(H.functionTypeCheck(listener, {func: 1, args: [W.Event]}), 1), options);
      },
      dispatchEvent$1: function(receiver, $event) {
        return receiver.dispatchEvent($event);
      },
      _removeEventListener$3: function(receiver, type, listener, options) {
        return receiver.removeEventListener(type, H.convertDartClosureToJS(H.functionTypeCheck(listener, {func: 1, args: [W.Event]}), 1), options);
      },
      $isEventTarget: 1,
      "%": "AnalyserNode|ApplicationCache|AudioBufferSourceNode|AudioChannelMerger|AudioChannelSplitter|AudioDestinationNode|AudioGainNode|AudioNode|AudioPannerNode|AudioScheduledSourceNode|AudioWorkletNode|BackgroundFetchRegistration|BatteryManager|BiquadFilterNode|BluetoothDevice|BluetoothRemoteGATTCharacteristic|CanvasCaptureMediaStreamTrack|ChannelMergerNode|ChannelSplitterNode|Clipboard|ConstantSourceNode|ConvolverNode|DOMApplicationCache|DataChannel|DelayNode|DynamicsCompressorNode|EventSource|FileReader|GainNode|IDBTransaction|IIRFilterNode|JavaScriptAudioNode|MIDIAccess|MediaDevices|MediaElementAudioSourceNode|MediaQueryList|MediaRecorder|MediaSource|MediaStream|MediaStreamAudioDestinationNode|MediaStreamAudioSourceNode|MediaStreamTrack|MessagePort|MojoInterfaceInterceptor|NetworkInformation|Notification|OfflineResourceList|Oscillator|OscillatorNode|PannerNode|PaymentRequest|Performance|PermissionStatus|PresentationAvailability|PresentationConnection|PresentationConnectionList|PresentationRequest|RTCDTMFSender|RTCDataChannel|RTCPeerConnection|RealtimeAnalyserNode|RemotePlayback|ScreenOrientation|ScriptProcessorNode|ServiceWorker|ServiceWorkerContainer|ServiceWorkerRegistration|SharedWorker|SpeechRecognition|SpeechSynthesis|SpeechSynthesisUtterance|StereoPannerNode|USB|VR|VRDevice|VRDisplay|VRSession|WaveShaperNode|WebSocket|Worker|WorkerPerformance|XMLHttpRequest|XMLHttpRequestEventTarget|XMLHttpRequestUpload|mozRTCPeerConnection|webkitAudioPannerNode|webkitRTCPeerConnection;EventTarget;_SourceBufferList_EventTarget_ListMixin|_SourceBufferList_EventTarget_ListMixin_ImmutableListMixin|_TextTrackList_EventTarget_ListMixin|_TextTrackList_EventTarget_ListMixin_ImmutableListMixin"
    },
    FederatedCredential: {
      "^": "Credential;0name=",
      "%": "FederatedCredential"
    },
    FieldSetElement: {
      "^": "HtmlElement;0name=",
      "%": "HTMLFieldSetElement"
    },
    File: {
      "^": "Blob;0name=",
      $isFile: 1,
      "%": "File"
    },
    FileList: {
      "^": "_FileList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isFile");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.File];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.File];
      },
      $asListMixin: function() {
        return [W.File];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.File];
      },
      $isList: 1,
      $asList: function() {
        return [W.File];
      },
      $isFileList: 1,
      $asImmutableListMixin: function() {
        return [W.File];
      },
      "%": "FileList"
    },
    FileSystem: {
      "^": "Interceptor;0name=",
      "%": "DOMFileSystem"
    },
    FileWriter: {
      "^": "EventTarget;0length=",
      "%": "FileWriter"
    },
    FocusEvent: {
      "^": "UIEvent;",
      $isFocusEvent: 1,
      "%": "FocusEvent"
    },
    FontFace: {
      "^": "Interceptor;",
      $isFontFace: 1,
      "%": "FontFace"
    },
    FontFaceSet: {
      "^": "EventTarget;",
      add$1: function(receiver, arg) {
        return receiver.add(H.interceptedTypeCheck(arg, "$isFontFace"));
      },
      "%": "FontFaceSet"
    },
    FormElement: {
      "^": "HtmlElement;0length=,0name=",
      "%": "HTMLFormElement"
    },
    Gamepad: {
      "^": "Interceptor;",
      $isGamepad: 1,
      "%": "Gamepad"
    },
    Gyroscope: {
      "^": "Sensor;0x=,0y=",
      "%": "Gyroscope"
    },
    HeadElement: {
      "^": "HtmlElement;",
      $isHeadElement: 1,
      "%": "HTMLHeadElement"
    },
    History: {
      "^": "Interceptor;0length=",
      "%": "History"
    },
    HtmlCollection: {
      "^": "_HtmlCollection_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isNode");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Node];
      },
      $asListMixin: function() {
        return [W.Node];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isHtmlCollection: 1,
      $asImmutableListMixin: function() {
        return [W.Node];
      },
      "%": "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"
    },
    HtmlDocument: {
      "^": "Document;",
      $isHtmlDocument: 1,
      "%": "HTMLDocument"
    },
    IFrameElement: {
      "^": "HtmlElement;0height=,0name=,0width=",
      "%": "HTMLIFrameElement"
    },
    ImageBitmap: {
      "^": "Interceptor;0height=,0width=",
      "%": "ImageBitmap"
    },
    ImageData: {
      "^": "Interceptor;0height=,0width=",
      $isImageData: 1,
      "%": "ImageData"
    },
    ImageElement: {
      "^": "HtmlElement;0height=,0width=",
      "%": "HTMLImageElement"
    },
    InputElement: {
      "^": "HtmlElement;0checked=,0height=,0name=,0width=",
      set$checked: function(receiver, checked) {
        receiver.checked = H.boolTypeCheck(checked);
      },
      "%": "HTMLInputElement"
    },
    KeyboardEvent: {
      "^": "UIEvent;0key=",
      $isKeyboardEvent: 1,
      "%": "KeyboardEvent"
    },
    Location: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isLocation: 1,
      "%": "Location"
    },
    Magnetometer: {
      "^": "Sensor;0x=,0y=",
      "%": "Magnetometer"
    },
    MapElement: {
      "^": "HtmlElement;0name=",
      "%": "HTMLMapElement"
    },
    MediaElement: {
      "^": "HtmlElement;",
      "%": "HTMLAudioElement;HTMLMediaElement"
    },
    MediaKeySession: {
      "^": "EventTarget;",
      remove$0: function(receiver) {
        return W.promiseToFuture(receiver.remove(), null);
      },
      "%": "MediaKeySession"
    },
    MediaList: {
      "^": "Interceptor;0length=",
      "%": "MediaList"
    },
    MetaElement: {
      "^": "HtmlElement;0name=",
      "%": "HTMLMetaElement"
    },
    MidiInputMap: {
      "^": "_MidiInputMap_Interceptor_MapMixin;",
      $index: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
      },
      forEach$1: function(receiver, f) {
        var entries, entry;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
        entries = receiver.entries();
        for (; true;) {
          entry = entries.next();
          if (entry.done)
            return;
          f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new W.MidiInputMap_keys_closure(keys));
        return keys;
      },
      get$length: function(receiver) {
        return receiver.size;
      },
      $asMapMixin: function() {
        return [P.String, null];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, null];
      },
      "%": "MIDIInputMap"
    },
    MidiInputMap_keys_closure: {
      "^": "Closure:16;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    MidiOutputMap: {
      "^": "_MidiOutputMap_Interceptor_MapMixin;",
      $index: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
      },
      forEach$1: function(receiver, f) {
        var entries, entry;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
        entries = receiver.entries();
        for (; true;) {
          entry = entries.next();
          if (entry.done)
            return;
          f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new W.MidiOutputMap_keys_closure(keys));
        return keys;
      },
      get$length: function(receiver) {
        return receiver.size;
      },
      $asMapMixin: function() {
        return [P.String, null];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, null];
      },
      "%": "MIDIOutputMap"
    },
    MidiOutputMap_keys_closure: {
      "^": "Closure:16;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    MidiPort: {
      "^": "EventTarget;0name=",
      "%": "MIDIInput|MIDIOutput|MIDIPort"
    },
    MimeType: {
      "^": "Interceptor;",
      $isMimeType: 1,
      "%": "MimeType"
    },
    MimeTypeArray: {
      "^": "_MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isMimeType");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.MimeType];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.MimeType];
      },
      $asListMixin: function() {
        return [W.MimeType];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.MimeType];
      },
      $isList: 1,
      $asList: function() {
        return [W.MimeType];
      },
      $asImmutableListMixin: function() {
        return [W.MimeType];
      },
      "%": "MimeTypeArray"
    },
    MouseEvent: {
      "^": "UIEvent;",
      $isMouseEvent: 1,
      "%": "WheelEvent;DragEvent|MouseEvent"
    },
    NavigatorUserMediaError: {
      "^": "Interceptor;0name=",
      "%": "NavigatorUserMediaError"
    },
    _ChildNodeListLazy: {
      "^": "ListBase;_this",
      get$last: function(_) {
        var result = this._this.lastChild;
        if (result == null)
          throw H.wrapException(P.StateError$("No elements"));
        return result;
      },
      add$1: function(_, value) {
        J.append$1$x(this._this, H.interceptedTypeCheck(value, "$isNode"));
      },
      $indexSet: function(_, index, value) {
        var t1;
        H.intTypeCheck(index);
        t1 = this._this;
        J._replaceChild$2$x(t1, H.interceptedTypeCheck(value, "$isNode"), C.NodeList_methods.$index(t1.childNodes, index));
      },
      get$iterator: function(_) {
        var t1 = this._this.childNodes;
        return new W.FixedSizeListIterator(t1, t1.length, -1, [H.getRuntimeTypeArgumentIntercepted(C.NodeList_methods, t1, "ImmutableListMixin", 0)]);
      },
      sort$1: [function(_, compare) {
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [W.Node, W.Node]});
        throw H.wrapException(P.UnsupportedError$("Cannot sort Node list"));
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, 65],
      get$length: function(_) {
        return this._this.childNodes.length;
      },
      set$length: function(_, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
      },
      $index: function(_, index) {
        return C.NodeList_methods.$index(this._this.childNodes, index);
      },
      $asEfficientLengthIterable: function() {
        return [W.Node];
      },
      $asListMixin: function() {
        return [W.Node];
      },
      $asIterable: function() {
        return [W.Node];
      },
      $asList: function() {
        return [W.Node];
      }
    },
    Node: {
      "^": "EventTarget;0previousNode:previousSibling=",
      remove$0: function(receiver) {
        var t1 = receiver.parentNode;
        if (t1 != null)
          J._removeChild$1$x(t1, receiver);
      },
      replaceWith$1: function(receiver, otherNode) {
        var $parent, exception;
        try {
          $parent = receiver.parentNode;
          J._replaceChild$2$x($parent, otherNode, receiver);
        } catch (exception) {
          H.unwrapException(exception);
        }
        return receiver;
      },
      insertAllBefore$2: function(receiver, newNodes, refChild) {
        var len, i, t1;
        H.assertSubtype(newNodes, "$isIterable", [W.Node], "$asIterable");
        for (len = newNodes.get$length(newNodes), i = 0; C.JSInt_methods.$lt(i, len); ++i) {
          t1 = newNodes.get$_this();
          this.insertBefore$2(receiver, t1.get$firstChild(t1), refChild);
        }
      },
      _clearChildren$0: function(receiver) {
        var t1;
        for (; t1 = receiver.firstChild, t1 != null;)
          this._removeChild$1(receiver, t1);
      },
      toString$0: function(receiver) {
        var value = receiver.nodeValue;
        return value == null ? this.super$Interceptor$toString(receiver) : value;
      },
      append$1: function(receiver, node) {
        return receiver.appendChild(H.interceptedTypeCheck(node, "$isNode"));
      },
      clone$1: function(receiver, deep) {
        return receiver.cloneNode(false);
      },
      contains$1: function(receiver, other) {
        return receiver.contains(H.interceptedTypeCheck(other, "$isNode"));
      },
      insertBefore$2: function(receiver, node, child) {
        return receiver.insertBefore(H.interceptedTypeCheck(node, "$isNode"), child);
      },
      _removeChild$1: function(receiver, child) {
        return receiver.removeChild(child);
      },
      _replaceChild$2: function(receiver, node, child) {
        return receiver.replaceChild(node, child);
      },
      $isNode: 1,
      "%": "DocumentFragment|DocumentType|ShadowRoot;Node"
    },
    NodeList: {
      "^": "_NodeList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isNode");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Node];
      },
      $asListMixin: function() {
        return [W.Node];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $asImmutableListMixin: function() {
        return [W.Node];
      },
      "%": "NodeList|RadioNodeList"
    },
    ObjectElement: {
      "^": "HtmlElement;0height=,0name=,0width=",
      "%": "HTMLObjectElement"
    },
    OffscreenCanvas: {
      "^": "EventTarget;0height=,0width=",
      "%": "OffscreenCanvas"
    },
    OutputElement: {
      "^": "HtmlElement;0name=",
      "%": "HTMLOutputElement"
    },
    OverconstrainedError: {
      "^": "Interceptor;0name=",
      "%": "OverconstrainedError"
    },
    PaintSize: {
      "^": "Interceptor;0height=,0width=",
      "%": "PaintSize"
    },
    ParamElement: {
      "^": "HtmlElement;0name=",
      "%": "HTMLParamElement"
    },
    PasswordCredential: {
      "^": "Credential;0name=",
      "%": "PasswordCredential"
    },
    PerformanceEntry: {
      "^": "Interceptor;0name=",
      "%": "PerformanceEntry|PerformanceLongTaskTiming|PerformanceMark|PerformanceMeasure|PerformanceNavigationTiming|PerformancePaintTiming|PerformanceResourceTiming|TaskAttributionTiming"
    },
    PerformanceServerTiming: {
      "^": "Interceptor;0name=",
      "%": "PerformanceServerTiming"
    },
    Plugin: {
      "^": "Interceptor;0length=,0name=",
      $isPlugin: 1,
      "%": "Plugin"
    },
    PluginArray: {
      "^": "_PluginArray_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isPlugin");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Plugin];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Plugin];
      },
      $asListMixin: function() {
        return [W.Plugin];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Plugin];
      },
      $isList: 1,
      $asList: function() {
        return [W.Plugin];
      },
      $asImmutableListMixin: function() {
        return [W.Plugin];
      },
      "%": "PluginArray"
    },
    PointerEvent: {
      "^": "MouseEvent;0height=,0width=",
      "%": "PointerEvent"
    },
    Range: {
      "^": "Interceptor;",
      createContextualFragment$1: function(receiver, fragment) {
        return receiver.createContextualFragment(fragment);
      },
      selectNodeContents$1: function(receiver, node) {
        return receiver.selectNodeContents(node);
      },
      "%": "Range"
    },
    RtcStatsReport: {
      "^": "_RtcStatsReport_Interceptor_MapMixin;",
      $index: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
      },
      forEach$1: function(receiver, f) {
        var entries, entry;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
        entries = receiver.entries();
        for (; true;) {
          entry = entries.next();
          if (entry.done)
            return;
          f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new W.RtcStatsReport_keys_closure(keys));
        return keys;
      },
      get$length: function(receiver) {
        return receiver.size;
      },
      $asMapMixin: function() {
        return [P.String, null];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, null];
      },
      "%": "RTCStatsReport"
    },
    RtcStatsReport_keys_closure: {
      "^": "Closure:16;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    Screen: {
      "^": "Interceptor;0height=,0width=",
      "%": "Screen"
    },
    SelectElement: {
      "^": "HtmlElement;0length=,0name=",
      "%": "HTMLSelectElement"
    },
    Sensor: {
      "^": "EventTarget;",
      "%": "AbsoluteOrientationSensor|AmbientLightSensor|OrientationSensor|RelativeOrientationSensor;Sensor"
    },
    SharedWorkerGlobalScope: {
      "^": "WorkerGlobalScope;0name=",
      "%": "SharedWorkerGlobalScope"
    },
    SlotElement: {
      "^": "HtmlElement;0name=",
      "%": "HTMLSlotElement"
    },
    SourceBuffer: {
      "^": "EventTarget;",
      $isSourceBuffer: 1,
      "%": "SourceBuffer"
    },
    SourceBufferList: {
      "^": "_SourceBufferList_EventTarget_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isSourceBuffer");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.SourceBuffer];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.SourceBuffer];
      },
      $asListMixin: function() {
        return [W.SourceBuffer];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.SourceBuffer];
      },
      $isList: 1,
      $asList: function() {
        return [W.SourceBuffer];
      },
      $asImmutableListMixin: function() {
        return [W.SourceBuffer];
      },
      "%": "SourceBufferList"
    },
    SpanElement: {
      "^": "HtmlElement;",
      $isSpanElement: 1,
      "%": "HTMLSpanElement"
    },
    SpeechGrammar: {
      "^": "Interceptor;",
      $isSpeechGrammar: 1,
      "%": "SpeechGrammar"
    },
    SpeechGrammarList: {
      "^": "_SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isSpeechGrammar");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.SpeechGrammar];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.SpeechGrammar];
      },
      $asListMixin: function() {
        return [W.SpeechGrammar];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechGrammar];
      },
      $isList: 1,
      $asList: function() {
        return [W.SpeechGrammar];
      },
      $asImmutableListMixin: function() {
        return [W.SpeechGrammar];
      },
      "%": "SpeechGrammarList"
    },
    SpeechRecognitionResult: {
      "^": "Interceptor;0length=",
      $isSpeechRecognitionResult: 1,
      "%": "SpeechRecognitionResult"
    },
    SpeechSynthesisEvent: {
      "^": "Event;0name=",
      "%": "SpeechSynthesisEvent"
    },
    SpeechSynthesisVoice: {
      "^": "Interceptor;0name=",
      "%": "SpeechSynthesisVoice"
    },
    Storage: {
      "^": "_Storage_Interceptor_MapMixin;",
      $index: function(receiver, key) {
        return this._getItem$1(receiver, H.stringTypeCheck(key));
      },
      forEach$1: function(receiver, f) {
        var i, key;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String, P.String]});
        for (i = 0; true; ++i) {
          key = this._key$1(receiver, i);
          if (key == null)
            return;
          f.call$2(key, this._getItem$1(receiver, key));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new W.Storage_keys_closure(keys));
        return keys;
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      _getItem$1: function(receiver, key) {
        return receiver.getItem(key);
      },
      _key$1: function(receiver, index) {
        return receiver.key(index);
      },
      $asMapMixin: function() {
        return [P.String, P.String];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, P.String];
      },
      "%": "Storage"
    },
    Storage_keys_closure: {
      "^": "Closure:88;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    StorageEvent: {
      "^": "Event;0key=",
      "%": "StorageEvent"
    },
    StyleSheet: {
      "^": "Interceptor;",
      $isStyleSheet: 1,
      "%": "CSSStyleSheet|StyleSheet"
    },
    TableElement: {
      "^": "HtmlElement;",
      $isTableElement: 1,
      "%": "HTMLTableElement"
    },
    TemplateElement: {
      "^": "HtmlElement;",
      $isTemplateElement: 1,
      "%": "HTMLTemplateElement"
    },
    Text: {
      "^": "CharacterData;",
      $isText: 1,
      "%": "CDATASection|Text"
    },
    TextAreaElement: {
      "^": "HtmlElement;0name=",
      $isTextAreaElement: 1,
      "%": "HTMLTextAreaElement"
    },
    TextMetrics: {
      "^": "Interceptor;0width=",
      "%": "TextMetrics"
    },
    TextTrack: {
      "^": "EventTarget;",
      $isTextTrack: 1,
      "%": "TextTrack"
    },
    TextTrackCue: {
      "^": "EventTarget;",
      $isTextTrackCue: 1,
      "%": "TextTrackCue|VTTCue"
    },
    TextTrackCueList: {
      "^": "_TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isTextTrackCue");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.TextTrackCue];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.TextTrackCue];
      },
      $asListMixin: function() {
        return [W.TextTrackCue];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrackCue];
      },
      $isList: 1,
      $asList: function() {
        return [W.TextTrackCue];
      },
      $asImmutableListMixin: function() {
        return [W.TextTrackCue];
      },
      "%": "TextTrackCueList"
    },
    TextTrackList: {
      "^": "_TextTrackList_EventTarget_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isTextTrack");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.TextTrack];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.TextTrack];
      },
      $asListMixin: function() {
        return [W.TextTrack];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrack];
      },
      $isList: 1,
      $asList: function() {
        return [W.TextTrack];
      },
      $asImmutableListMixin: function() {
        return [W.TextTrack];
      },
      "%": "TextTrackList"
    },
    TimeRanges: {
      "^": "Interceptor;0length=",
      "%": "TimeRanges"
    },
    Touch: {
      "^": "Interceptor;",
      $isTouch: 1,
      "%": "Touch"
    },
    TouchList: {
      "^": "_TouchList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isTouch");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Touch];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Touch];
      },
      $asListMixin: function() {
        return [W.Touch];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Touch];
      },
      $isList: 1,
      $asList: function() {
        return [W.Touch];
      },
      $asImmutableListMixin: function() {
        return [W.Touch];
      },
      "%": "TouchList"
    },
    TrackDefaultList: {
      "^": "Interceptor;0length=",
      "%": "TrackDefaultList"
    },
    TransitionEvent: {
      "^": "Event;",
      $isTransitionEvent: 1,
      "%": "TransitionEvent|WebKitTransitionEvent"
    },
    UIEvent: {
      "^": "Event;",
      $isUIEvent: 1,
      "%": "CompositionEvent|TextEvent|TouchEvent;UIEvent"
    },
    Url: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      "%": "URL"
    },
    VRStageBoundsPoint: {
      "^": "Interceptor;0x=",
      "%": "VRStageBoundsPoint"
    },
    VideoElement: {
      "^": "MediaElement;0height=,0width=",
      "%": "HTMLVideoElement"
    },
    VideoTrackList: {
      "^": "EventTarget;0length=",
      "%": "VideoTrackList"
    },
    VisualViewport: {
      "^": "EventTarget;0height=,0width=",
      "%": "VisualViewport"
    },
    VttRegion: {
      "^": "Interceptor;0width=",
      "%": "VTTRegion"
    },
    Window: {
      "^": "EventTarget;0name=",
      open$3: [function(receiver, url, $name, options) {
        H.stringTypeCheck(url);
        H.stringTypeCheck($name);
        H.stringTypeCheck(options);
        if (options == null)
          return W._DOMWindowCrossFrame__createSafe(receiver.open(url, $name));
        else
          return W._DOMWindowCrossFrame__createSafe(receiver.open(url, $name, options));
      }, function($receiver, url, $name) {
        return this.open$3($receiver, url, $name, null);
      }, "open$2", "call$3", "call$2", "get$open", 9, 2, 67, 3, 68, 70, 35],
      requestAnimationFrame$1: function(receiver, callback) {
        H.functionTypeCheck(callback, {func: 1, ret: -1, args: [P.num]});
        this._ensureRequestAnimationFrame$0(receiver);
        return this._requestAnimationFrame$1(receiver, W._wrapZone(callback, P.num));
      },
      _requestAnimationFrame$1: function(receiver, callback) {
        return receiver.requestAnimationFrame(H.convertDartClosureToJS(H.functionTypeCheck(callback, {func: 1, ret: -1, args: [P.num]}), 1));
      },
      _cancelAnimationFrame$1: function(receiver, id) {
        return receiver.cancelAnimationFrame(id);
      },
      _ensureRequestAnimationFrame$0: function(receiver) {
        if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
          return;
        (function($this) {
          var vendors = ['ms', 'moz', 'webkit', 'o'];
          for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
            $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
            $this.cancelAnimationFrame = $this[vendors[i] + 'CancelAnimationFrame'] || $this[vendors[i] + 'CancelRequestAnimationFrame'];
          }
          if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
            return;
          $this.requestAnimationFrame = function(callback) {
            return window.setTimeout(function() {
              callback(Date.now());
            }, 16);
          };
          $this.cancelAnimationFrame = function(id) {
            clearTimeout(id);
          };
        })(receiver);
      },
      get$top: function(receiver) {
        return W._convertNativeToDart_Window(receiver.top);
      },
      alert$1: [function(receiver, message) {
        return receiver.alert(H.stringTypeCheck(message));
      }, function($receiver) {
        return $receiver.alert();
      }, "alert$0", "call$1", "call$0", "get$alert", 1, 2, 68, 3, 33],
      $isWindow: 1,
      $isWindowBase: 1,
      "%": "DOMWindow|Window"
    },
    WorkerGlobalScope: {
      "^": "EventTarget;",
      $isWorkerGlobalScope: 1,
      "%": "DedicatedWorkerGlobalScope|ServiceWorkerGlobalScope;WorkerGlobalScope"
    },
    _Attr: {
      "^": "Node;0name=",
      $is_Attr: 1,
      "%": "Attr"
    },
    _CssRuleList: {
      "^": "__CssRuleList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isCssRule");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.CssRule];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.CssRule];
      },
      $asListMixin: function() {
        return [W.CssRule];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.CssRule];
      },
      $isList: 1,
      $asList: function() {
        return [W.CssRule];
      },
      $asImmutableListMixin: function() {
        return [W.CssRule];
      },
      "%": "CSSRuleList"
    },
    _DomRect: {
      "^": "DomRectReadOnly;",
      toString$0: function(receiver) {
        return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
      },
      $eq: function(receiver, other) {
        var t1;
        if (other == null)
          return false;
        if (!H.checkSubtype(other, "$isRectangle", [P.num], "$asRectangle"))
          return false;
        t1 = J.getInterceptor$x(other);
        return receiver.left === t1.get$left(other) && receiver.top === t1.get$top(other) && receiver.width === t1.get$width(other) && receiver.height === t1.get$height(other);
      },
      get$hashCode: function(receiver) {
        return W._JenkinsSmiHash_hash4(receiver.left & 0x1FFFFFFF, receiver.top & 0x1FFFFFFF, receiver.width & 0x1FFFFFFF, receiver.height & 0x1FFFFFFF);
      },
      get$topLeft: function(receiver) {
        return new P.Point(receiver.left, receiver.top, [P.num]);
      },
      get$height: function(receiver) {
        return receiver.height;
      },
      get$width: function(receiver) {
        return receiver.width;
      },
      get$x: function(receiver) {
        return receiver.x;
      },
      get$y: function(receiver) {
        return receiver.y;
      },
      "%": "ClientRect|DOMRect"
    },
    _GamepadList: {
      "^": "__GamepadList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isGamepad");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Gamepad];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Gamepad];
      },
      $asListMixin: function() {
        return [W.Gamepad];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Gamepad];
      },
      $isList: 1,
      $asList: function() {
        return [W.Gamepad];
      },
      $asImmutableListMixin: function() {
        return [W.Gamepad];
      },
      "%": "GamepadList"
    },
    _NamedNodeMap: {
      "^": "__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isNode");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Node];
      },
      $asListMixin: function() {
        return [W.Node];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $asImmutableListMixin: function() {
        return [W.Node];
      },
      "%": "MozNamedAttrMap|NamedNodeMap"
    },
    _SpeechRecognitionResultList: {
      "^": "__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isSpeechRecognitionResult");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.SpeechRecognitionResult];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.SpeechRecognitionResult];
      },
      $asListMixin: function() {
        return [W.SpeechRecognitionResult];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechRecognitionResult];
      },
      $isList: 1,
      $asList: function() {
        return [W.SpeechRecognitionResult];
      },
      $asImmutableListMixin: function() {
        return [W.SpeechRecognitionResult];
      },
      "%": "SpeechRecognitionResultList"
    },
    _StyleSheetList: {
      "^": "__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isStyleSheet");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.StyleSheet];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.StyleSheet];
      },
      $asListMixin: function() {
        return [W.StyleSheet];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.StyleSheet];
      },
      $isList: 1,
      $asList: function() {
        return [W.StyleSheet];
      },
      $asImmutableListMixin: function() {
        return [W.StyleSheet];
      },
      "%": "StyleSheetList"
    },
    _AttributeMap: {
      "^": "MapBase;_html$_element<",
      forEach$1: function(_, f) {
        var t1, t2, t3, t4, _i, key;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String, P.String]});
        for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._html$_element, t4 = J.getInterceptor$x(t3), _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          f.call$2(key, t4.getAttribute$1(t3, key));
        }
      },
      get$keys: function(_) {
        var attributes, keys, len, i, attr;
        attributes = this._html$_element.attributes;
        keys = H.setRuntimeTypeInfo([], [P.String]);
        for (len = attributes.length, i = 0; i < len; ++i) {
          if (i >= attributes.length)
            return H.ioore(attributes, i);
          attr = H.interceptedTypeCheck(attributes[i], "$is_Attr");
          if (attr.namespaceURI == null)
            C.JSArray_methods.add$1(keys, attr.name);
        }
        return keys;
      },
      $asMapMixin: function() {
        return [P.String, P.String];
      },
      $asMap: function() {
        return [P.String, P.String];
      }
    },
    _ElementAttributeMap: {
      "^": "_AttributeMap;_html$_element",
      $index: function(_, key) {
        return J.getAttribute$1$x(this._html$_element, H.stringTypeCheck(key));
      },
      remove$1: function(_, key) {
        var t1, t2, value;
        t1 = this._html$_element;
        H.stringTypeCheck(key);
        t2 = J.getInterceptor$x(t1);
        value = t2.getAttribute$1(t1, key);
        t2._removeAttribute$1(t1, key);
        return value;
      },
      get$length: function(_) {
        return this.get$keys(this).length;
      }
    },
    WindowBase: {
      "^": "Object;",
      $isEventTarget: 1
    },
    CssClassSet: {
      "^": "Object;",
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.String];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      },
      $isSet: 1,
      $asSet: function() {
        return [P.String];
      }
    },
    _MultiElementCssClassSet: {
      "^": "CssClassSetImpl;_elementIterable,_sets",
      readClasses$0: function() {
        var s = P.LinkedHashSet_LinkedHashSet(null, null, null, P.String);
        C.JSArray_methods.forEach$1(this._sets, new W._MultiElementCssClassSet_readClasses_closure(s));
        return s;
      },
      writeClasses$1: function(s) {
        var classes, t1;
        classes = H.assertSubtype(s, "$isSet", [P.String], "$asSet").join$1(0, " ");
        for (t1 = this._elementIterable, t1 = new H.ListIterator(t1, t1.get$length(t1), 0, [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
          t1.__internal$_current.className = classes;
      },
      modify$1: function(_, f) {
        C.JSArray_methods.forEach$1(this._sets, new W._MultiElementCssClassSet_modify_closure(H.functionTypeCheck(f, {func: 1, args: [[P.Set, P.String]]})));
      },
      remove$1: function(_, value) {
        return C.JSArray_methods.fold$1$2(this._sets, false, new W._MultiElementCssClassSet_remove_closure(value), P.bool);
      },
      static: {
        _MultiElementCssClassSet__MultiElementCssClassSet: function(elements) {
          var t1;
          H.assertSubtype(elements, "$isIterable", [W.Element], "$asIterable");
          t1 = H.getTypeArgumentByIndex(elements, 0);
          return new W._MultiElementCssClassSet(elements, P.List_List$from(new H.MappedListIterable(elements, H.functionTypeCheck(new W._MultiElementCssClassSet__MultiElementCssClassSet_closure(), {func: 1, ret: null, args: [t1]}), [t1, null]), true, P.CssClassSetImpl));
        }
      }
    },
    _MultiElementCssClassSet__MultiElementCssClassSet_closure: {
      "^": "Closure:72;",
      call$1: [function(e) {
        return J.get$classes$x(H.interceptedTypeCheck(e, "$isElement"));
      }, null, null, 4, 0, null, 6, "call"]
    },
    _MultiElementCssClassSet_readClasses_closure: {
      "^": "Closure:76;s",
      call$1: function(e) {
        return this.s.addAll$1(0, H.interceptedTypeCheck(e, "$isCssClassSetImpl").readClasses$0());
      }
    },
    _MultiElementCssClassSet_modify_closure: {
      "^": "Closure:77;f",
      call$1: function(e) {
        return H.interceptedTypeCheck(e, "$isCssClassSetImpl").modify$1(0, this.f);
      }
    },
    _MultiElementCssClassSet_remove_closure: {
      "^": "Closure:79;value",
      call$2: function(changed, e) {
        H.boolTypeCheck(changed);
        return H.interceptedTypeCheck(e, "$isCssClassSetImpl").remove$1(0, this.value) || changed;
      }
    },
    _ElementCssClassSet: {
      "^": "CssClassSetImpl;_html$_element<",
      readClasses$0: function() {
        var s, t1, t2, _i, trimmed;
        s = P.LinkedHashSet_LinkedHashSet(null, null, null, P.String);
        for (t1 = this._html$_element.className.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
          trimmed = J.trim$0$s(t1[_i]);
          if (trimmed.length !== 0)
            s.add$1(0, trimmed);
        }
        return s;
      },
      writeClasses$1: function(s) {
        this._html$_element.className = H.assertSubtype(s, "$isSet", [P.String], "$asSet").join$1(0, " ");
      },
      get$length: function(_) {
        return this._html$_element.classList.length;
      },
      get$isEmpty: function(_) {
        return this._html$_element.classList.length === 0;
      },
      contains$1: function(_, value) {
        return typeof value === "string" && this._html$_element.classList.contains(value);
      },
      add$1: function(_, value) {
        var list, t1;
        H.stringTypeCheck(value);
        list = this._html$_element.classList;
        t1 = list.contains(value);
        list.add(value);
        return !t1;
      },
      remove$1: function(_, value) {
        var list, removed, t1;
        if (typeof value === "string") {
          list = this._html$_element.classList;
          removed = list.contains(value);
          list.remove(value);
          t1 = removed;
        } else
          t1 = false;
        return t1;
      },
      addAll$1: function(_, iterable) {
        W._ElementCssClassSet__addAll(this._html$_element, H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable"));
      },
      removeAll$1: function(iterable) {
        W._ElementCssClassSet__removeAll(this._html$_element, H.assertSubtype(H.assertSubtype(iterable, "$isIterable", [P.Object], "$asIterable"), "$isIterable", [P.String], "$asIterable"));
      },
      static: {
        _ElementCssClassSet__addAll: function(_element, iterable) {
          var list, t1;
          H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable");
          list = _element.classList;
          for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();)
            list.add(t1.get$current(t1));
        },
        _ElementCssClassSet__removeAll: function(_element, iterable) {
          var list, t1;
          H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable");
          list = _element.classList;
          for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();)
            list.remove(t1.get$current(t1));
        }
      }
    },
    _EventStream: {
      "^": "Stream;_html$_target,_eventType,_useCapture,$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        return W._EventStreamSubscription$(this._html$_target, this._eventType, onData, false, t1);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      }
    },
    _EventStreamSubscription: {
      "^": "StreamSubscription;_pauseCount,_html$_target,_eventType,_html$_onData,_useCapture,$ti",
      set$_html$_onData: function(_onData) {
        this._html$_onData = H.functionTypeCheck(_onData, {func: 1, args: [W.Event]});
      },
      cancel$0: function(_) {
        if (this._html$_target == null)
          return;
        this._unlisten$0();
        this._html$_target = null;
        this.set$_html$_onData(null);
        return;
      },
      pause$1: function(_, resumeSignal) {
        if (this._html$_target == null)
          return;
        ++this._pauseCount;
        this._unlisten$0();
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        if (this._html$_target == null || this._pauseCount <= 0)
          return;
        --this._pauseCount;
        this._tryResume$0();
      },
      _tryResume$0: function() {
        var t1 = this._html$_onData;
        if (t1 != null && this._pauseCount <= 0)
          J.addEventListener$3$x(this._html$_target, this._eventType, t1, false);
      },
      _unlisten$0: function() {
        var t1 = this._html$_onData;
        if (t1 != null)
          J.removeEventListener$3$x(this._html$_target, this._eventType, t1, false);
      },
      static: {
        _EventStreamSubscription$: function(_target, _eventType, onData, _useCapture, $T) {
          var t1 = onData == null ? null : W._wrapZone(new W._EventStreamSubscription_closure(onData), W.Event);
          t1 = new W._EventStreamSubscription(0, _target, _eventType, t1, false, [$T]);
          t1._tryResume$0();
          return t1;
        }
      }
    },
    _EventStreamSubscription_closure: {
      "^": "Closure:80;onData",
      call$1: [function(e) {
        return this.onData.call$1(H.interceptedTypeCheck(e, "$isEvent"));
      }, null, null, 4, 0, null, 6, "call"]
    },
    _Html5NodeValidator: {
      "^": "Object;uriPolicy",
      _Html5NodeValidator$1$uriPolicy: function(uriPolicy) {
        var t1, _i;
        t1 = $.$get$_Html5NodeValidator__attributeValidators();
        if (t1.get$isEmpty(t1)) {
          for (_i = 0; _i < 262; ++_i)
            t1.$indexSet(0, C.List_2Zi[_i], W.html__Html5NodeValidator__standardAttributeValidator$closure());
          for (_i = 0; _i < 12; ++_i)
            t1.$indexSet(0, C.List_yrN[_i], W.html__Html5NodeValidator__uriAttributeValidator$closure());
        }
      },
      allowsElement$1: function(element) {
        return $.$get$_Html5NodeValidator__allowedElements().contains$1(0, W.Element__safeTagName(element));
      },
      allowsAttribute$3: function(element, attributeName, value) {
        var tagName, t1, validator;
        tagName = W.Element__safeTagName(element);
        t1 = $.$get$_Html5NodeValidator__attributeValidators();
        validator = t1.$index(0, H.S(tagName) + "::" + attributeName);
        if (validator == null)
          validator = t1.$index(0, "*::" + attributeName);
        if (validator == null)
          return false;
        return H.boolTypeCheck(validator.call$4(element, attributeName, value, this));
      },
      $isNodeValidator: 1,
      static: {
        _Html5NodeValidator$: function(uriPolicy) {
          var e, t1;
          e = document.createElement("a");
          t1 = new W._SameOriginUriPolicy(e, window.location);
          t1 = new W._Html5NodeValidator(t1);
          t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
          return t1;
        },
        _Html5NodeValidator__standardAttributeValidator: [function(element, attributeName, value, context) {
          H.interceptedTypeCheck(element, "$isElement");
          H.stringTypeCheck(attributeName);
          H.stringTypeCheck(value);
          H.interceptedTypeCheck(context, "$is_Html5NodeValidator");
          return true;
        }, "call$4", "html__Html5NodeValidator__standardAttributeValidator$closure", 16, 0, 56, 17, 28, 1, 26],
        _Html5NodeValidator__uriAttributeValidator: [function(element, attributeName, value, context) {
          var t1, t2, t3;
          H.interceptedTypeCheck(element, "$isElement");
          H.stringTypeCheck(attributeName);
          H.stringTypeCheck(value);
          t1 = H.interceptedTypeCheck(context, "$is_Html5NodeValidator").uriPolicy;
          t2 = t1._hiddenAnchor;
          t2.href = value;
          t3 = t2.hostname;
          t1 = t1._loc;
          if (!(t3 == t1.hostname && t2.port == t1.port && t2.protocol == t1.protocol))
            if (t3 === "")
              if (t2.port === "") {
                t1 = t2.protocol;
                t1 = t1 === ":" || t1 === "";
              } else
                t1 = false;
            else
              t1 = false;
          else
            t1 = true;
          return t1;
        }, "call$4", "html__Html5NodeValidator__uriAttributeValidator$closure", 16, 0, 56, 17, 28, 1, 26]
      }
    },
    ImmutableListMixin: {
      "^": "Object;$ti",
      get$iterator: function(receiver) {
        return new W.FixedSizeListIterator(receiver, this.get$length(receiver), -1, [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0)]);
      },
      add$1: function(receiver, value) {
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
      },
      sort$1: [function(receiver, compare) {
        var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0);
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [t1, t1]});
        throw H.wrapException(P.UnsupportedError$("Cannot sort immutable List."));
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, function() {
        return H.computeSignature(function(E) {
          return {func: 1, ret: -1, opt: [{func: 1, ret: P.int, args: [E, E]}]};
        }, this.$receiver, "ImmutableListMixin");
      }]
    },
    NodeValidatorBuilder: {
      "^": "Object;_validators",
      add$1: function(_, validator) {
        C.JSArray_methods.add$1(this._validators, H.interceptedTypeCheck(validator, "$isNodeValidator"));
      },
      allowsElement$1: function(element) {
        return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsElement_closure(element));
      },
      allowsAttribute$3: function(element, attributeName, value) {
        return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
      },
      $isNodeValidator: 1
    },
    NodeValidatorBuilder_allowsElement_closure: {
      "^": "Closure:52;element",
      call$1: function(v) {
        return H.interceptedTypeCheck(v, "$isNodeValidator").allowsElement$1(this.element);
      }
    },
    NodeValidatorBuilder_allowsAttribute_closure: {
      "^": "Closure:52;element,attributeName,value",
      call$1: function(v) {
        return H.interceptedTypeCheck(v, "$isNodeValidator").allowsAttribute$3(this.element, this.attributeName, this.value);
      }
    },
    _SimpleNodeValidator: {
      "^": "Object;",
      _SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes: function(uriPolicy, allowedAttributes, allowedElements, allowedUriAttributes) {
        var legalAttributes, extraUriAttributes, t1;
        this.allowedElements.addAll$1(0, allowedElements);
        legalAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure());
        extraUriAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure0());
        this.allowedAttributes.addAll$1(0, legalAttributes);
        t1 = this.allowedUriAttributes;
        t1.addAll$1(0, C.List_empty0);
        t1.addAll$1(0, extraUriAttributes);
      },
      allowsElement$1: function(element) {
        return this.allowedElements.contains$1(0, W.Element__safeTagName(element));
      },
      allowsAttribute$3: ["super$_SimpleNodeValidator$allowsAttribute", function(element, attributeName, value) {
        var tagName, t1;
        tagName = W.Element__safeTagName(element);
        t1 = this.allowedUriAttributes;
        if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
          return this.uriPolicy.allowsUri$1(value);
        else if (t1.contains$1(0, "*::" + attributeName))
          return this.uriPolicy.allowsUri$1(value);
        else {
          t1 = this.allowedAttributes;
          if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
            return true;
          else if (t1.contains$1(0, "*::" + attributeName))
            return true;
          else if (t1.contains$1(0, H.S(tagName) + "::*"))
            return true;
          else if (t1.contains$1(0, "*::*"))
            return true;
        }
        return false;
      }],
      $isNodeValidator: 1
    },
    _SimpleNodeValidator_closure: {
      "^": "Closure:10;",
      call$1: function(x) {
        return !C.JSArray_methods.contains$1(C.List_yrN, H.stringTypeCheck(x));
      }
    },
    _SimpleNodeValidator_closure0: {
      "^": "Closure:10;",
      call$1: function(x) {
        return C.JSArray_methods.contains$1(C.List_yrN, H.stringTypeCheck(x));
      }
    },
    _TemplatingNodeValidator: {
      "^": "_SimpleNodeValidator;_templateAttrs,allowedElements,allowedAttributes,allowedUriAttributes,uriPolicy",
      allowsAttribute$3: function(element, attributeName, value) {
        if (this.super$_SimpleNodeValidator$allowsAttribute(element, attributeName, value))
          return true;
        if (attributeName === "template" && value === "")
          return true;
        if (J.getAttribute$1$x(element, "template") === "")
          return this._templateAttrs.contains$1(0, attributeName);
        return false;
      },
      static: {
        _TemplatingNodeValidator$: function() {
          var t1, t2, t3, t4, t5;
          t1 = P.String;
          t2 = P.LinkedHashSet_LinkedHashSet$from(C.List_wSV, t1);
          t3 = H.getTypeArgumentByIndex(C.List_wSV, 0);
          t4 = H.functionTypeCheck(new W._TemplatingNodeValidator_closure(), {func: 1, ret: t1, args: [t3]});
          t5 = H.setRuntimeTypeInfo(["TEMPLATE"], [t1]);
          t2 = new W._TemplatingNodeValidator(t2, P.LinkedHashSet_LinkedHashSet(null, null, null, t1), P.LinkedHashSet_LinkedHashSet(null, null, null, t1), P.LinkedHashSet_LinkedHashSet(null, null, null, t1), null);
          t2._SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(null, new H.MappedListIterable(C.List_wSV, t4, [t3, t1]), t5, null);
          return t2;
        }
      }
    },
    _TemplatingNodeValidator_closure: {
      "^": "Closure:13;",
      call$1: [function(attr) {
        return "TEMPLATE::" + H.S(H.stringTypeCheck(attr));
      }, null, null, 4, 0, null, 37, "call"]
    },
    FixedSizeListIterator: {
      "^": "Object;_array,_html$_length,_position,0_html$_current,$ti",
      set$_html$_current: function(_current) {
        this._html$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      moveNext$0: function() {
        var nextPosition, t1;
        nextPosition = this._position + 1;
        t1 = this._html$_length;
        if (nextPosition < t1) {
          this.set$_html$_current(J.$index$asx(this._array, nextPosition));
          this._position = nextPosition;
          return true;
        }
        this.set$_html$_current(null);
        this._position = t1;
        return false;
      },
      get$current: function(_) {
        return this._html$_current;
      },
      $isIterator: 1
    },
    _DOMWindowCrossFrame: {
      "^": "Object;_window",
      get$top: function(_) {
        return W._DOMWindowCrossFrame__createSafe(this._window.top);
      },
      $isEventTarget: 1,
      $isWindowBase: 1,
      static: {
        _DOMWindowCrossFrame__createSafe: function(w) {
          if (w === window)
            return H.interceptedTypeCheck(w, "$isWindowBase");
          else
            return new W._DOMWindowCrossFrame(w);
        }
      }
    },
    NodeValidator: {
      "^": "Object;"
    },
    _SameOriginUriPolicy: {
      "^": "Object;_hiddenAnchor,_loc",
      $isUriPolicy: 1
    },
    _ValidatingTreeSanitizer: {
      "^": "Object;validator",
      sanitizeTree$1: function(node) {
        new W._ValidatingTreeSanitizer_sanitizeTree_walk(this).call$2(node, null);
      },
      _removeNode$2: function(node, $parent) {
        if ($parent == null)
          J.remove$0$ax(node);
        else
          J._removeChild$1$x($parent, node);
      },
      _sanitizeUntrustedElement$2: function(element, $parent) {
        var corrupted, attrs, isAttr, corruptedTest1, elementText, elementTagName, exception, t1;
        corrupted = true;
        attrs = null;
        isAttr = null;
        try {
          attrs = J.get$attributes$x(element);
          isAttr = J.getAttribute$1$x(attrs.get$_html$_element(), "is");
          H.interceptedTypeCheck(element, "$isElement");
          corruptedTest1 = function(element) {
            if (!(element.attributes instanceof NamedNodeMap))
              return true;
            var childNodes = element.childNodes;
            if (element.lastChild && element.lastChild !== childNodes[childNodes.length - 1])
              return true;
            if (element.children)
              if (!(element.children instanceof HTMLCollection || element.children instanceof NodeList))
                return true;
            var length = 0;
            if (element.children)
              length = element.children.length;
            for (var i = 0; i < length; i++) {
              var child = element.children[i];
              if (child.id == 'attributes' || child.name == 'attributes' || child.id == 'lastChild' || child.name == 'lastChild' || child.id == 'children' || child.name == 'children')
                return true;
            }
            return false;
          }(element);
          corrupted = corruptedTest1 ? true : !(element.attributes instanceof NamedNodeMap);
        } catch (exception) {
          H.unwrapException(exception);
        }
        elementText = "element unprintable";
        try {
          elementText = J.toString$0$(element);
        } catch (exception) {
          H.unwrapException(exception);
        }
        try {
          elementTagName = W.Element__safeTagName(element);
          this._sanitizeElement$7(H.interceptedTypeCheck(element, "$isElement"), $parent, corrupted, elementText, elementTagName, H.interceptedTypeCheck(attrs, "$isMap"), H.stringTypeCheck(isAttr));
        } catch (exception) {
          if (H.unwrapException(exception) instanceof P.ArgumentError)
            throw exception;
          else {
            this._removeNode$2(element, $parent);
            window;
            t1 = "Removing corrupted element " + H.S(elementText);
            if (typeof console != "undefined")
              window.console.warn(t1);
          }
        }
      },
      _sanitizeElement$7: function(element, $parent, corrupted, text, tag, attrs, isAttr) {
        var t1, keys, i, t2, $name, t3, t4;
        if (corrupted) {
          this._removeNode$2(element, $parent);
          window;
          t1 = "Removing element due to corrupted attributes on <" + text + ">";
          if (typeof console != "undefined")
            window.console.warn(t1);
          return;
        }
        if (!this.validator.allowsElement$1(element)) {
          this._removeNode$2(element, $parent);
          window;
          t1 = "Removing disallowed element <" + H.S(tag) + "> from " + H.S($parent);
          if (typeof console != "undefined")
            window.console.warn(t1);
          return;
        }
        if (isAttr != null)
          if (!this.validator.allowsAttribute$3(element, "is", isAttr)) {
            this._removeNode$2(element, $parent);
            window;
            t1 = "Removing disallowed type extension <" + H.S(tag) + ' is="' + isAttr + '">';
            if (typeof console != "undefined")
              window.console.warn(t1);
            return;
          }
        t1 = attrs.get$keys(attrs);
        keys = H.setRuntimeTypeInfo(t1.slice(0), [H.getTypeArgumentByIndex(t1, 0)]);
        for (i = attrs.get$keys(attrs).length - 1, t1 = attrs._html$_element, t2 = J.getInterceptor$x(t1); i >= 0; --i) {
          if (i >= keys.length)
            return H.ioore(keys, i);
          $name = keys[i];
          t3 = this.validator;
          t4 = J.toLowerCase$0$s($name);
          H.stringTypeCheck($name);
          if (!t3.allowsAttribute$3(element, t4, t2.getAttribute$1(t1, $name))) {
            window;
            t3 = "Removing disallowed attribute <" + H.S(tag) + " " + H.S($name) + '="' + H.S(t2.getAttribute$1(t1, $name)) + '">';
            if (typeof console != "undefined")
              window.console.warn(t3);
            t2.getAttribute$1(t1, $name);
            t2._removeAttribute$1(t1, $name);
          }
        }
        if (!!J.getInterceptor$(element).$isTemplateElement)
          this.sanitizeTree$1(element.content);
      },
      $isNodeTreeSanitizer: 1
    },
    _ValidatingTreeSanitizer_sanitizeTree_walk: {
      "^": "Closure:92;$this",
      call$2: function(node, $parent) {
        var child, nextChild, t1, exception, t2, t3;
        t1 = this.$this;
        switch (node.nodeType) {
          case 1:
            t1._sanitizeUntrustedElement$2(node, $parent);
            break;
          case 8:
          case 11:
          case 3:
          case 4:
            break;
          default:
            t1._removeNode$2(node, $parent);
        }
        child = node.lastChild;
        for (t1 = node == null; null != child;) {
          nextChild = null;
          try {
            nextChild = J.get$previousNode$x(child);
          } catch (exception) {
            H.unwrapException(exception);
            t2 = H.interceptedTypeCheck(child, "$isNode");
            if (t1) {
              t3 = t2.parentNode;
              if (t3 != null)
                J._removeChild$1$x(t3, t2);
            } else
              J._removeChild$1$x(node, t2);
            child = null;
            nextChild = node.lastChild;
          }
          if (child != null)
            this.call$2(child, node);
          child = H.interceptedTypeCheck(nextChild, "$isNode");
        }
      }
    },
    _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase: {
      "^": "Interceptor+CssStyleDeclarationBase;"
    },
    _DomRectList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _DomRectList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_DomRectList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _DomStringList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _DomStringList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_DomStringList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _FileList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _FileList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_FileList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _HtmlCollection_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_HtmlCollection_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _MidiInputMap_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    },
    _MidiOutputMap_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    },
    _MimeTypeArray_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_MimeTypeArray_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _NodeList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _NodeList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_NodeList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _PluginArray_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _PluginArray_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_PluginArray_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _RtcStatsReport_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    },
    _SourceBufferList_EventTarget_ListMixin: {
      "^": "EventTarget+ListMixin;"
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: {
      "^": "_SourceBufferList_EventTarget_ListMixin+ImmutableListMixin;"
    },
    _SpeechGrammarList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_SpeechGrammarList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _Storage_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    },
    _TextTrackCueList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_TextTrackCueList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _TextTrackList_EventTarget_ListMixin: {
      "^": "EventTarget+ListMixin;"
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: {
      "^": "_TextTrackList_EventTarget_ListMixin+ImmutableListMixin;"
    },
    _TouchList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _TouchList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_TouchList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __CssRuleList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __CssRuleList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__CssRuleList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __GamepadList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __GamepadList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__GamepadList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __NamedNodeMap_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__NamedNodeMap_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__SpeechRecognitionResultList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __StyleSheetList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__StyleSheetList_Interceptor_ListMixin+ImmutableListMixin;"
    }
  }], ["html_common", "dart:html_common",, P, {
    "^": "",
    convertNativeToDart_Dictionary: function(object) {
      var dict, keys, t1, _i, key;
      if (object == null)
        return;
      dict = P.LinkedHashMap_LinkedHashMap$_empty(P.String, null);
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
        key = H.stringTypeCheck(keys[_i]);
        dict.$indexSet(0, key, object[key]);
      }
      return dict;
    },
    convertDartToNative_Dictionary: [function(dict, postCreate) {
      var object;
      H.interceptedTypeCheck(dict, "$isMap");
      H.functionTypeCheck(postCreate, {func: 1, ret: -1, args: [P.Object]});
      if (dict == null)
        return;
      object = {};
      if (postCreate != null)
        postCreate.call$1(object);
      J.forEach$1$ax(dict, new P.convertDartToNative_Dictionary_closure(object));
      return object;
    }, function(dict) {
      return P.convertDartToNative_Dictionary(dict, null);
    }, "call$2", "call$1", "html_common__convertDartToNative_Dictionary$closure", 4, 2, 155, 3, 38, 39],
    convertNativePromiseToDartFuture: function(promise) {
      var t1, completer;
      t1 = new P._Future(0, $.Zone__current, [null]);
      completer = new P._AsyncCompleter(t1, [null]);
      promise.then(H.convertDartClosureToJS(new P.convertNativePromiseToDartFuture_closure(completer), 1))["catch"](H.convertDartClosureToJS(new P.convertNativePromiseToDartFuture_closure0(completer), 1));
      return t1;
    },
    Device_isOpera: function() {
      var t1 = $.Device__isOpera;
      if (t1 == null) {
        t1 = J.contains$2$asx(window.navigator.userAgent, "Opera", 0);
        $.Device__isOpera = t1;
      }
      return t1;
    },
    Device_isWebKit: function() {
      var t1 = $.Device__isWebKit;
      if (t1 == null) {
        t1 = !P.Device_isOpera() && J.contains$2$asx(window.navigator.userAgent, "WebKit", 0);
        $.Device__isWebKit = t1;
      }
      return t1;
    },
    Device_cssPrefix: function() {
      var prefix, t1;
      prefix = $.Device__cachedCssPrefix;
      if (prefix != null)
        return prefix;
      t1 = $.Device__isFirefox;
      if (t1 == null) {
        t1 = J.contains$2$asx(window.navigator.userAgent, "Firefox", 0);
        $.Device__isFirefox = t1;
      }
      if (t1)
        prefix = "-moz-";
      else {
        t1 = $.Device__isIE;
        if (t1 == null) {
          t1 = !P.Device_isOpera() && J.contains$2$asx(window.navigator.userAgent, "Trident/", 0);
          $.Device__isIE = t1;
        }
        if (t1)
          prefix = "-ms-";
        else
          prefix = P.Device_isOpera() ? "-o-" : "-webkit-";
      }
      $.Device__cachedCssPrefix = prefix;
      return prefix;
    },
    _StructuredClone: {
      "^": "Object;",
      findSlot$1: function(value) {
        var t1, $length, i;
        t1 = this.values;
        $length = t1.length;
        for (i = 0; i < $length; ++i)
          if (t1[i] === value)
            return i;
        C.JSArray_methods.add$1(t1, value);
        C.JSArray_methods.add$1(this.copies, null);
        return $length;
      },
      walk$1: function(e) {
        var t1, t2, slot, t3, copy;
        t1 = {};
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        t2 = J.getInterceptor$(e);
        if (!!t2.$isDateTime)
          return new Date(e._value);
        if (!!t2.$isRegExp)
          throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
        if (!!t2.$isFile)
          return e;
        if (!!t2.$isBlob)
          return e;
        if (!!t2.$isFileList)
          return e;
        if (!!t2.$isImageData)
          return e;
        if (!!t2.$isNativeByteBuffer || !!t2.$isNativeTypedData)
          return e;
        if (!!t2.$isMap) {
          slot = this.findSlot$1(e);
          t3 = this.copies;
          if (slot >= t3.length)
            return H.ioore(t3, slot);
          copy = t3[slot];
          t1.copy = copy;
          if (copy != null)
            return copy;
          copy = {};
          t1.copy = copy;
          C.JSArray_methods.$indexSet(t3, slot, copy);
          t2.forEach$1(e, new P._StructuredClone_walk_closure(t1, this));
          return t1.copy;
        }
        if (!!t2.$isList) {
          slot = this.findSlot$1(e);
          t1 = this.copies;
          if (slot >= t1.length)
            return H.ioore(t1, slot);
          copy = t1[slot];
          if (copy != null)
            return copy;
          return this.copyList$2(e, slot);
        }
        throw H.wrapException(P.UnimplementedError$("structured clone of other type"));
      },
      copyList$2: function(e, slot) {
        var t1, $length, copy, i;
        t1 = J.getInterceptor$asx(e);
        $length = t1.get$length(e);
        copy = new Array($length);
        C.JSArray_methods.$indexSet(this.copies, slot, copy);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i)
          C.JSArray_methods.$indexSet(copy, i, this.walk$1(t1.$index(e, i)));
        return copy;
      }
    },
    _StructuredClone_walk_closure: {
      "^": "Closure:4;_box_0,$this",
      call$2: function(key, value) {
        this._box_0.copy[key] = this.$this.walk$1(value);
      }
    },
    _AcceptStructuredClone: {
      "^": "Object;",
      findSlot$1: function(value) {
        var t1, $length, i, t2;
        t1 = this.values;
        $length = t1.length;
        for (i = 0; i < $length; ++i) {
          t2 = t1[i];
          if (t2 == null ? value == null : t2 === value)
            return i;
        }
        C.JSArray_methods.add$1(t1, value);
        C.JSArray_methods.add$1(this.copies, null);
        return $length;
      },
      walk$1: function(e) {
        var _box_0, millisSinceEpoch, t1, proto, slot, copy, l, t2, $length, i;
        _box_0 = {};
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date) {
          millisSinceEpoch = e.getTime();
          t1 = new P.DateTime(millisSinceEpoch, true);
          t1.DateTime$_withValue$2$isUtc(millisSinceEpoch, true);
          return t1;
        }
        if (e instanceof RegExp)
          throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
        if (typeof Promise != "undefined" && e instanceof Promise)
          return P.convertNativePromiseToDartFuture(e);
        proto = Object.getPrototypeOf(e);
        if (proto === Object.prototype || proto === null) {
          slot = this.findSlot$1(e);
          t1 = this.copies;
          if (slot >= t1.length)
            return H.ioore(t1, slot);
          copy = t1[slot];
          _box_0.copy = copy;
          if (copy != null)
            return copy;
          copy = P.LinkedHashMap__makeEmpty();
          _box_0.copy = copy;
          C.JSArray_methods.$indexSet(t1, slot, copy);
          this.forEachJsField$2(e, new P._AcceptStructuredClone_walk_closure(_box_0, this));
          return _box_0.copy;
        }
        if (e instanceof Array) {
          l = e;
          slot = this.findSlot$1(l);
          t1 = this.copies;
          if (slot >= t1.length)
            return H.ioore(t1, slot);
          copy = t1[slot];
          if (copy != null)
            return copy;
          t2 = J.getInterceptor$asx(l);
          $length = t2.get$length(l);
          C.JSArray_methods.$indexSet(t1, slot, l);
          if (typeof $length !== "number")
            return H.iae($length);
          i = 0;
          for (; i < $length; ++i)
            t2.$indexSet(l, i, this.walk$1(t2.$index(l, i)));
          return l;
        }
        return e;
      }
    },
    _AcceptStructuredClone_walk_closure: {
      "^": "Closure:97;_box_0,$this",
      call$2: function(key, value) {
        var t1, t2;
        t1 = this._box_0.copy;
        t2 = this.$this.walk$1(value);
        J.$indexSet$ax(t1, key, t2);
        return t2;
      }
    },
    convertDartToNative_Dictionary_closure: {
      "^": "Closure:4;object",
      call$2: function(key, value) {
        this.object[key] = value;
      }
    },
    _StructuredCloneDart2Js: {
      "^": "_StructuredClone;values,copies"
    },
    _AcceptStructuredCloneDart2Js: {
      "^": "_AcceptStructuredClone;values,copies,mustCopy",
      forEachJsField$2: function(object, action) {
        var t1, t2, _i, key;
        H.functionTypeCheck(action, {func: 1, args: [,,]});
        for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          action.call$2(key, object[key]);
        }
      }
    },
    convertNativePromiseToDartFuture_closure: {
      "^": "Closure:2;completer",
      call$1: [function(result) {
        return this.completer.complete$1(0, result);
      }, null, null, 4, 0, null, 8, "call"]
    },
    convertNativePromiseToDartFuture_closure0: {
      "^": "Closure:2;completer",
      call$1: [function(result) {
        return this.completer.completeError$1(result);
      }, null, null, 4, 0, null, 8, "call"]
    },
    CssClassSetImpl: {
      "^": "SetBase;",
      _validateToken$1: [function(value) {
        var t1;
        H.stringTypeCheck(value);
        t1 = $.$get$CssClassSetImpl__validTokenRE()._nativeRegExp;
        if (typeof value !== "string")
          H.throwExpression(H.argumentErrorValue(value));
        if (t1.test(value))
          return value;
        throw H.wrapException(P.ArgumentError$value(value, "value", "Not a valid class token"));
      }, "call$1", "get$_validateToken", 4, 0, 13, 1],
      toString$0: function(_) {
        return this.readClasses$0().join$1(0, " ");
      },
      get$iterator: function(_) {
        var t1 = this.readClasses$0();
        return P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H.getTypeArgumentByIndex(t1, 0));
      },
      forEach$1: function(_, f) {
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String]});
        this.readClasses$0().forEach$1(0, f);
      },
      join$1: function(_, separator) {
        return this.readClasses$0().join$1(0, separator);
      },
      map$1$1: function(_, f, $T) {
        var t1, t2;
        H.functionTypeCheck(f, {func: 1, ret: $T, args: [P.String]});
        t1 = this.readClasses$0();
        t2 = H.getRuntimeTypeArgument(t1, "SetMixin", 0);
        return new H.EfficientLengthMappedIterable(t1, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t2]}), [t2, $T]);
      },
      get$isEmpty: function(_) {
        return this.readClasses$0()._collection$_length === 0;
      },
      get$length: function(_) {
        return this.readClasses$0()._collection$_length;
      },
      contains$1: function(_, value) {
        if (typeof value !== "string")
          return false;
        this._validateToken$1(value);
        return this.readClasses$0().contains$1(0, value);
      },
      add$1: function(_, value) {
        H.stringTypeCheck(value);
        this._validateToken$1(value);
        return H.boolTypeCheck(this.modify$1(0, new P.CssClassSetImpl_add_closure(value)));
      },
      remove$1: function(_, value) {
        var s, result;
        H.stringTypeCheck(value);
        this._validateToken$1(value);
        if (typeof value !== "string")
          return false;
        s = this.readClasses$0();
        result = s.remove$1(0, value);
        this.writeClasses$1(s);
        return result;
      },
      addAll$1: function(_, iterable) {
        this.modify$1(0, new P.CssClassSetImpl_addAll_closure(this, H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable")));
      },
      removeAll$1: function(iterable) {
        this.modify$1(0, new P.CssClassSetImpl_removeAll_closure(H.assertSubtype(iterable, "$isIterable", [P.Object], "$asIterable")));
      },
      elementAt$1: function(_, index) {
        return this.readClasses$0().elementAt$1(0, index);
      },
      modify$1: function(_, f) {
        var s, ret;
        H.functionTypeCheck(f, {func: 1, args: [[P.Set, P.String]]});
        s = this.readClasses$0();
        ret = f.call$1(s);
        this.writeClasses$1(s);
        return ret;
      },
      $asEfficientLengthIterable: function() {
        return [P.String];
      },
      $asSetMixin: function() {
        return [P.String];
      },
      $asIterable: function() {
        return [P.String];
      },
      $asSet: function() {
        return [P.String];
      },
      $isCssClassSet: 1
    },
    CssClassSetImpl_add_closure: {
      "^": "Closure:101;value",
      call$1: function(s) {
        return H.assertSubtype(s, "$isSet", [P.String], "$asSet").add$1(0, this.value);
      }
    },
    CssClassSetImpl_addAll_closure: {
      "^": "Closure:30;$this,iterable",
      call$1: function(s) {
        var t1 = P.String;
        return H.assertSubtype(s, "$isSet", [t1], "$asSet").addAll$1(0, J.map$1$1$ax(this.iterable, this.$this.get$_validateToken(), t1));
      }
    },
    CssClassSetImpl_removeAll_closure: {
      "^": "Closure:30;iterable",
      call$1: function(s) {
        return H.assertSubtype(s, "$isSet", [P.String], "$asSet").removeAll$1(this.iterable);
      }
    },
    FilteredElementList: {
      "^": "ListBase;_node,_childNodes",
      get$_html_common$_iterable: function() {
        var t1, t2, t3;
        t1 = this._childNodes;
        t2 = H.getRuntimeTypeArgument(t1, "ListMixin", 0);
        t3 = W.Element;
        return new H.MappedIterable(new H.WhereIterable(t1, H.functionTypeCheck(new P.FilteredElementList__iterable_closure(), {func: 1, ret: P.bool, args: [t2]}), [t2]), H.functionTypeCheck(new P.FilteredElementList__iterable_closure0(), {func: 1, ret: t3, args: [t2]}), [t2, t3]);
      },
      forEach$1: function(_, f) {
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [W.Element]});
        C.JSArray_methods.forEach$1(P.List_List$from(this.get$_html_common$_iterable(), false, W.Element), f);
      },
      $indexSet: function(_, index, value) {
        var t1;
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isElement");
        t1 = this.get$_html_common$_iterable();
        J.replaceWith$1$x(t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index)), value);
      },
      set$length: function(_, newLength) {
        var len = J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
        if (typeof len !== "number")
          return H.iae(len);
        if (newLength >= len)
          return;
        else if (newLength < 0)
          throw H.wrapException(P.ArgumentError$("Invalid list length"));
        this.removeRange$2(0, newLength, len);
      },
      add$1: function(_, value) {
        J.append$1$x(this._childNodes._this, H.interceptedTypeCheck(value, "$isElement"));
      },
      contains$1: function(_, needle) {
        return false;
      },
      sort$1: [function(_, compare) {
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [W.Element, W.Element]});
        throw H.wrapException(P.UnsupportedError$("Cannot sort filtered list"));
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, 32],
      removeRange$2: function(_, start, end) {
        var t1 = this.get$_html_common$_iterable();
        t1 = H.SkipIterable_SkipIterable(t1, start, H.getRuntimeTypeArgument(t1, "Iterable", 0));
        if (typeof end !== "number")
          return end.$sub();
        C.JSArray_methods.forEach$1(P.List_List$from(H.TakeIterable_TakeIterable(t1, end - start, H.getRuntimeTypeArgument(t1, "Iterable", 0)), true, null), new P.FilteredElementList_removeRange_closure());
      },
      insertAll$2: function(_, index, iterable) {
        var t1, element;
        H.assertSubtype(iterable, "$isIterable", [W.Element], "$asIterable");
        J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
        t1 = this.get$_html_common$_iterable();
        element = t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
        J.insertAllBefore$2$x(element.parentNode, iterable, element);
      },
      removeAt$1: function(_, index) {
        var t1 = this.get$_html_common$_iterable();
        t1 = t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
        J.remove$0$ax(t1);
        return t1;
      },
      get$length: function(_) {
        return J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
      },
      $index: function(_, index) {
        var t1 = this.get$_html_common$_iterable();
        return t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
      },
      get$iterator: function(_) {
        var t1 = P.List_List$from(this.get$_html_common$_iterable(), false, W.Element);
        return new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      $asEfficientLengthIterable: function() {
        return [W.Element];
      },
      $asListMixin: function() {
        return [W.Element];
      },
      $asIterable: function() {
        return [W.Element];
      },
      $asList: function() {
        return [W.Element];
      }
    },
    FilteredElementList__iterable_closure: {
      "^": "Closure:37;",
      call$1: function(n) {
        return !!J.getInterceptor$(H.interceptedTypeCheck(n, "$isNode")).$isElement;
      }
    },
    FilteredElementList__iterable_closure0: {
      "^": "Closure:109;",
      call$1: [function(n) {
        return H.interceptedTypeCast(H.interceptedTypeCheck(n, "$isNode"), "$isElement");
      }, null, null, 4, 0, null, 40, "call"]
    },
    FilteredElementList_removeRange_closure: {
      "^": "Closure:7;",
      call$1: function(el) {
        return J.remove$0$ax(el);
      }
    }
  }], ["dart.dom.indexed_db", "dart:indexed_db",, P, {
    "^": "",
    _completeRequest: function(request, $T) {
      var t1, completer, t2, t3;
      t1 = new P._Future(0, $.Zone__current, [$T]);
      completer = new P._SyncCompleter(t1, [$T]);
      t2 = W.Event;
      t3 = {func: 1, ret: -1, args: [t2]};
      W._EventStreamSubscription$(request, "success", H.functionTypeCheck(new P._completeRequest_closure(request, completer, $T), t3), false, t2);
      W._EventStreamSubscription$(request, "error", H.functionTypeCheck(completer.get$completeError(), t3), false, t2);
      return t1;
    },
    Cursor: {
      "^": "Interceptor;0key=",
      "%": "IDBCursor|IDBCursorWithValue"
    },
    Database: {
      "^": "EventTarget;0name=",
      "%": "IDBDatabase"
    },
    _completeRequest_closure: {
      "^": "Closure:11;request,completer,T",
      call$1: function(e) {
        this.completer.complete$1(0, H.assertSubtypeOfRuntimeType(new P._AcceptStructuredCloneDart2Js([], [], false).walk$1(this.request.result), this.T));
      }
    },
    Index: {
      "^": "Interceptor;0name=",
      "%": "IDBIndex"
    },
    KeyRange: {
      "^": "Interceptor;",
      $isKeyRange: 1,
      "%": "IDBKeyRange"
    },
    ObjectStore: {
      "^": "Interceptor;0name=",
      add$2: function(receiver, value, key) {
        var request, e, stacktrace, t1, exception, error, stackTrace, replacement;
        try {
          request = null;
          request = this._indexed_db$_add$1(receiver, value);
          t1 = P._completeRequest(H.interceptedTypeCheck(request, "$isRequest"), null);
          return t1;
        } catch (exception) {
          e = H.unwrapException(exception);
          stacktrace = H.getTraceFromException(exception);
          error = e;
          stackTrace = stacktrace;
          if (error == null)
            error = new P.NullThrownError();
          t1 = $.Zone__current;
          if (t1 !== C.C__RootZone) {
            replacement = t1.errorCallback$2(error, stackTrace);
            if (replacement != null) {
              error = replacement.error;
              if (error == null)
                error = new P.NullThrownError();
              stackTrace = replacement.stackTrace;
            }
          }
          t1 = new P._Future(0, $.Zone__current, [null]);
          t1._asyncCompleteError$2(error, stackTrace);
          return t1;
        }
      },
      add$1: function($receiver, value) {
        return this.add$2($receiver, value, null);
      },
      _indexed_db$_add$2: function(receiver, value, key) {
        return this._add_2$1(receiver, new P._StructuredCloneDart2Js([], []).walk$1(value));
      },
      _indexed_db$_add$1: function($receiver, value) {
        return this._indexed_db$_add$2($receiver, value, null);
      },
      _add_2$1: function(receiver, value) {
        return receiver.add(value);
      },
      "%": "IDBObjectStore"
    },
    Observation: {
      "^": "Interceptor;0key=",
      "%": "IDBObservation"
    },
    OpenDBRequest: {
      "^": "Request;",
      $isOpenDBRequest: 1,
      "%": "IDBOpenDBRequest|IDBVersionChangeRequest"
    },
    Request: {
      "^": "EventTarget;",
      $isRequest: 1,
      "%": ";IDBRequest"
    },
    VersionChangeEvent: {
      "^": "Event;0target=",
      "%": "IDBVersionChangeEvent"
    }
  }], ["dart.js", "dart:js",, P, {
    "^": "",
    _callDartFunction: [function(callback, captureThis, $self, $arguments) {
      var arguments0, dartArgs;
      H.boolTypeCheck(captureThis);
      H.listTypeCheck($arguments);
      if (captureThis) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      dartArgs = P.List_List$from(J.map$1$1$ax($arguments, P.js___convertToDart$closure(), null), true, null);
      return P._convertToJS(P.Function_apply(H.interceptedTypeCheck(callback, "$isFunction"), dartArgs, null));
    }, null, null, 16, 0, null, 10, 42, 11, 25],
    _defineProperty: function(o, $name, value) {
      var exception;
      try {
        if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name)) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
      return false;
    },
    _getOwnProperty: function(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return;
    },
    _convertToJS: [function(o) {
      var t1;
      if (o == null || typeof o === "string" || typeof o === "number" || typeof o === "boolean")
        return o;
      t1 = J.getInterceptor$(o);
      if (!!t1.$isJsObject)
        return o._jsObject;
      if (H.isBrowserObject(o))
        return o;
      if (!!t1.$isTypedData)
        return o;
      if (!!t1.$isDateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (!!t1.$isFunction)
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.$get$_dartProxyCtor()));
    }, "call$1", "js___convertToJS$closure", 4, 0, 7, 12],
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy;
      H.functionTypeCheck(createProxy, {func: 1, args: [,]});
      jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: [function(o) {
      var ms, t1;
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else if (o instanceof Object && H.isBrowserObject(o))
        return o;
      else if (o instanceof Object && !!J.getInterceptor$(o).$isTypedData)
        return o;
      else if (o instanceof Date) {
        ms = H.intTypeCheck(o.getTime());
        t1 = new P.DateTime(ms, false);
        t1.DateTime$_withValue$2$isUtc(ms, false);
        return t1;
      } else if (o.constructor === $.$get$_dartProxyCtor())
        return o.o;
      else
        return P._wrapToDart(o);
    }, "call$1", "js___convertToDart$closure", 4, 0, 156, 12],
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy;
      H.functionTypeCheck(createProxy, {func: 1, args: [,]});
      dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    _convertDartFunctionFast: function(f) {
      var existing, ret;
      existing = f.$dart_jsFunction;
      if (existing != null)
        return existing;
      ret = function(_call, f) {
        return function() {
          return _call(f, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunctionFast, f);
      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      f.$dart_jsFunction = ret;
      return ret;
    },
    _callDartFunctionFast: [function(callback, $arguments) {
      H.listTypeCheck($arguments);
      return P.Function_apply(H.interceptedTypeCheck(callback, "$isFunction"), $arguments, null);
    }, null, null, 8, 0, null, 10, 25],
    allowInterop: function(f, $F) {
      H.assertIsSubtype($F, P.Function, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'F' in 'allowInterop'.");
      H.assertSubtypeOfRuntimeType(f, $F);
      if (typeof f == "function")
        return f;
      else
        return H.assertSubtypeOfRuntimeType(P._convertDartFunctionFast(f), $F);
    },
    JsObject: {
      "^": "Object;_jsObject",
      $index: ["super$JsObject$$index", function(_, property) {
        if (typeof property !== "number")
          throw H.wrapException(P.ArgumentError$("property is not a String or num"));
        return P._convertToDart(this._jsObject[property]);
      }],
      $indexSet: ["super$JsObject$$indexSet", function(_, property, value) {
        if (typeof property !== "string" && typeof property !== "number")
          throw H.wrapException(P.ArgumentError$("property is not a String or num"));
        this._jsObject[property] = P._convertToJS(value);
      }],
      get$hashCode: function(_) {
        return 0;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof P.JsObject && this._jsObject === other._jsObject;
      },
      toString$0: function(_) {
        var t1, exception;
        try {
          t1 = String(this._jsObject);
          return t1;
        } catch (exception) {
          H.unwrapException(exception);
          t1 = this.super$Object$toString(this);
          return t1;
        }
      },
      callMethod$2: function(method, args) {
        var t1, t2;
        t1 = this._jsObject;
        if (args == null)
          t2 = null;
        else {
          t2 = H.getTypeArgumentByIndex(args, 0);
          t2 = P.List_List$from(new H.MappedListIterable(args, H.functionTypeCheck(P.js___convertToJS$closure(), {func: 1, ret: null, args: [t2]}), [t2, null]), true, null);
        }
        return P._convertToDart(t1[method].apply(t1, t2));
      }
    },
    JsFunction: {
      "^": "JsObject;_jsObject"
    },
    JsArray: {
      "^": "_JsArray_JsObject_ListMixin;_jsObject,$ti",
      _checkIndex$1: function(index) {
        var t1 = index < 0 || index >= this.get$length(this);
        if (t1)
          throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this), null, null));
      },
      $index: function(_, index) {
        if (typeof index === "number" && index === C.JSInt_methods.toInt$0(index))
          this._checkIndex$1(index);
        return H.assertSubtypeOfRuntimeType(this.super$JsObject$$index(0, index), H.getTypeArgumentByIndex(this, 0));
      },
      $indexSet: function(_, index, value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index))
          this._checkIndex$1(H.intTypeCheck(index));
        this.super$JsObject$$indexSet(0, index, value);
      },
      get$length: function(_) {
        var len = this._jsObject.length;
        if (typeof len === "number" && len >>> 0 === len)
          return len;
        throw H.wrapException(P.StateError$("Bad JsArray length"));
      },
      set$length: function(_, $length) {
        this.super$JsObject$$indexSet(0, "length", $length);
      },
      add$1: function(_, value) {
        this.callMethod$2("push", [H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0))]);
      },
      sort$1: [function(_, compare) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [t1, t1]});
        this.callMethod$2("sort", compare == null ? [] : [compare]);
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, function() {
        return H.computeSignature(function(E) {
          return {func: 1, ret: -1, opt: [{func: 1, ret: P.int, args: [E, E]}]};
        }, this.$receiver, "JsArray");
      }],
      $isEfficientLengthIterable: 1,
      $isIterable: 1,
      $isList: 1
    },
    _convertToJS_closure: {
      "^": "Closure:7;",
      call$1: function(o) {
        var jsFunction;
        H.interceptedTypeCheck(o, "$isFunction");
        jsFunction = function(_call, f, captureThis) {
          return function() {
            return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
          };
        }(P._callDartFunction, o, false);
        P._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
        return jsFunction;
      }
    },
    _convertToJS_closure0: {
      "^": "Closure:7;ctor",
      call$1: function(o) {
        return new this.ctor(o);
      }
    },
    _wrapToDart_closure: {
      "^": "Closure:113;",
      call$1: function(o) {
        return new P.JsFunction(o);
      }
    },
    _wrapToDart_closure0: {
      "^": "Closure:116;",
      call$1: function(o) {
        return new P.JsArray(o, [null]);
      }
    },
    _wrapToDart_closure1: {
      "^": "Closure:117;",
      call$1: function(o) {
        return new P.JsObject(o);
      }
    },
    _JsArray_JsObject_ListMixin: {
      "^": "JsObject+ListMixin;"
    }
  }], ["dart.js_util", "dart:js_util",, P, {
    "^": "",
    _convertDataTree: function(data) {
      return new P._convertDataTree__convert(new P._IdentityHashMap(0, [null, null])).call$1(data);
    },
    hasProperty: function(o, $name) {
      return $name in o;
    },
    _convertDataTree__convert: {
      "^": "Closure:7;_convertedObjects",
      call$1: [function(o) {
        var t1, t2, convertedMap, key, convertedList;
        t1 = this._convertedObjects;
        if (t1.containsKey$1(0, o))
          return t1.$index(0, o);
        t2 = J.getInterceptor$(o);
        if (!!t2.$isMap) {
          convertedMap = {};
          t1.$indexSet(0, o, convertedMap);
          for (t1 = J.get$iterator$ax(t2.get$keys(o)); t1.moveNext$0();) {
            key = t1.get$current(t1);
            convertedMap[key] = this.call$1(t2.$index(o, key));
          }
          return convertedMap;
        } else if (!!t2.$isIterable) {
          convertedList = [];
          t1.$indexSet(0, o, convertedList);
          C.JSArray_methods.addAll$1(convertedList, t2.map$1$1(o, this, null));
          return convertedList;
        } else
          return o;
      }, null, null, 4, 0, null, 12, "call"]
    }
  }], ["dart.math", "dart:math",, P, {
    "^": "",
    max: [1, function(a, b, $T) {
      H.assertIsSubtype($T, P.num, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'T' in 'max'.");
      H.assertSubtypeOfRuntimeType(a, $T);
      H.assertSubtypeOfRuntimeType(b, $T);
      return Math.max(H.checkNum(a), H.checkNum(b));
    }, function(a, b) {
      return P.max(a, b, P.num);
    }, "call$1$2", "call$2", "math__max$closure", 8, 0, 157, 13, 15],
    Random_Random: function(seed) {
      return C.C__JSRandom;
    },
    _JenkinsSmiHash_combine0: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_finish: function(hash) {
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    _JSRandom: {
      "^": "Object;",
      nextInt$1: function(max) {
        if (max <= 0 || max > 4294967296)
          throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + max));
        return Math.random() * max >>> 0;
      }
    },
    Point: {
      "^": "Object;x>,y>,$ti",
      toString$0: function(_) {
        return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
      },
      $eq: function(_, other) {
        var t1, t2;
        if (other == null)
          return false;
        if (!H.checkSubtype(other, "$isPoint", [P.num], null))
          return false;
        t1 = J.getInterceptor$x(other);
        if (J.$eq$(this.x, t1.get$x(other))) {
          t2 = this.y;
          t1 = t1.get$y(other);
          t1 = t2 == null ? t1 == null : t2 === t1;
        } else
          t1 = false;
        return t1;
      },
      get$hashCode: function(_) {
        var t1, t2;
        t1 = J.get$hashCode$(this.x);
        t2 = J.get$hashCode$(this.y);
        return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2));
      },
      $add: function(_, other) {
        var t1, t2, t3, t4, t5;
        t1 = this.$ti;
        H.assertSubtype(other, "$isPoint", t1, "$asPoint");
        t2 = H.getTypeArgumentByIndex(this, 0);
        t3 = H.assertSubtypeOfRuntimeType(J.$add$ansx(this.x, other.x), t2);
        t4 = this.y;
        t5 = other.y;
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t5 !== "number")
          return H.iae(t5);
        return new P.Point(t3, H.assertSubtypeOfRuntimeType(t4 + t5, t2), t1);
      }
    },
    _RectangleBase: {
      "^": "Object;$ti",
      get$right: function(_) {
        var t1, t2;
        t1 = this.get$left(this);
        t2 = J.get$width$x(this);
        if (typeof t2 !== "number")
          return H.iae(t2);
        return H.assertSubtypeOfRuntimeType(t1 + t2, H.getTypeArgumentByIndex(this, 0));
      },
      get$bottom: function(_) {
        var t1, t2;
        t1 = this.get$top(this);
        t2 = J.get$height$x(this);
        if (typeof t2 !== "number")
          return H.iae(t2);
        return H.assertSubtypeOfRuntimeType(t1 + t2, H.getTypeArgumentByIndex(this, 0));
      },
      toString$0: function(_) {
        var t1 = J.getInterceptor$x(this);
        return "Rectangle (" + H.S(this.get$left(this)) + ", " + H.S(t1.get$top(this)) + ") " + H.S(t1.get$width(this)) + " x " + H.S(t1.get$height(this));
      },
      $eq: function(_, other) {
        var t1, t2, t3, t4, t5;
        if (other == null)
          return false;
        if (!H.checkSubtype(other, "$isRectangle", [P.num], "$asRectangle"))
          return false;
        t1 = J.getInterceptor$x(this);
        t2 = J.getInterceptor$x(other);
        if (this.get$left(this) === t2.get$left(other))
          if (t1.get$top(this) === t2.get$top(other)) {
            t3 = t1.get$left(this);
            t4 = t1.get$width(this);
            if (typeof t4 !== "number")
              return H.iae(t4);
            t5 = H.getTypeArgumentByIndex(this, 0);
            if (H.assertSubtypeOfRuntimeType(t3 + t4, t5) === t2.get$right(other)) {
              t3 = t1.get$top(this);
              t1 = t1.get$height(this);
              if (typeof t1 !== "number")
                return H.iae(t1);
              t2 = H.assertSubtypeOfRuntimeType(t3 + t1, t5) === t2.get$bottom(other);
              t1 = t2;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
        return t1;
      },
      get$hashCode: function(_) {
        var t1, t2, t3, t4, t5, t6;
        t1 = J.getInterceptor$x(this);
        t2 = this.get$left(this);
        t3 = t1.get$top(this);
        t4 = t1.get$left(this);
        t5 = t1.get$width(this);
        if (typeof t5 !== "number")
          return H.iae(t5);
        t6 = H.getTypeArgumentByIndex(this, 0);
        t5 = H.assertSubtypeOfRuntimeType(t4 + t5, t6);
        t4 = t1.get$top(this);
        t1 = t1.get$height(this);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t6 = H.assertSubtypeOfRuntimeType(t4 + t1, t6);
        return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t2 & 0x1FFFFFFF), t3 & 0x1FFFFFFF), t5 & 0x1FFFFFFF), t6 & 0x1FFFFFFF));
      },
      intersection$1: function(_, other) {
        var t1, t2, x0, t3, t4, t5, x1, y0, y1;
        H.assertSubtype(other, "$isRectangle", this.$ti, "$asRectangle");
        t1 = J.getInterceptor$x(this);
        t2 = other.left;
        x0 = Math.max(this.get$left(this), t2);
        t3 = t1.get$left(this);
        t4 = t1.get$width(this);
        if (typeof t4 !== "number")
          return H.iae(t4);
        t5 = other.width;
        if (typeof t5 !== "number")
          return H.iae(t5);
        x1 = Math.min(t3 + t4, t2 + t5);
        if (x0 <= x1) {
          t2 = other.top;
          y0 = Math.max(t1.get$top(this), t2);
          t3 = t1.get$top(this);
          t1 = t1.get$height(this);
          if (typeof t1 !== "number")
            return H.iae(t1);
          t4 = other.height;
          if (typeof t4 !== "number")
            return H.iae(t4);
          y1 = Math.min(t3 + t1, t2 + t4);
          if (y0 <= y1) {
            t1 = H.getTypeArgumentByIndex(this, 0);
            return P.Rectangle$(x0, y0, H.assertSubtypeOfRuntimeType(x1 - x0, t1), H.assertSubtypeOfRuntimeType(y1 - y0, t1), t1);
          }
        }
        return;
      },
      get$topLeft: function(_) {
        return new P.Point(this.get$left(this), J.get$top$x(this), this.$ti);
      }
    },
    Rectangle: {
      "^": "_RectangleBase;left>,top>,width>,height>,$ti",
      static: {
        Rectangle$: function(left, $top, width, height, $T) {
          var t1, t2;
          if (typeof width !== "number")
            return width.$lt();
          if (width < 0)
            t1 = -width * 0;
          else
            t1 = width;
          H.assertSubtypeOfRuntimeType(t1, $T);
          if (typeof height !== "number")
            return height.$lt();
          if (height < 0)
            t2 = -height * 0;
          else
            t2 = height;
          return new P.Rectangle(left, $top, t1, H.assertSubtypeOfRuntimeType(t2, $T), [$T]);
        }
      }
    },
    MutableRectangle: {
      "^": "_RectangleBase;left>,top>,_math$_width,_height,$ti",
      set$_math$_width: function(_, _width) {
        this._math$_width = H.assertSubtypeOfRuntimeType(_width, H.getTypeArgumentByIndex(this, 0));
      },
      set$_height: function(_, _height) {
        this._height = H.assertSubtypeOfRuntimeType(_height, H.getTypeArgumentByIndex(this, 0));
      },
      get$width: function(_) {
        return this._math$_width;
      },
      get$height: function(_) {
        return this._height;
      },
      $isRectangle: 1
    }
  }], ["dart.dom.svg", "dart:svg",, P, {
    "^": "",
    AnimatedLength: {
      "^": "Interceptor;",
      $isAnimatedLength: 1,
      "%": "SVGAnimatedLength"
    },
    AnimatedLengthList: {
      "^": "Interceptor;",
      $isAnimatedLengthList: 1,
      "%": "SVGAnimatedLengthList"
    },
    AnimatedNumber: {
      "^": "Interceptor;",
      $isAnimatedNumber: 1,
      "%": "SVGAnimatedNumber"
    },
    FEBlendElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEBlendElement"
    },
    FEColorMatrixElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEColorMatrixElement"
    },
    FEComponentTransferElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEComponentTransferElement"
    },
    FECompositeElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFECompositeElement"
    },
    FEConvolveMatrixElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEConvolveMatrixElement"
    },
    FEDiffuseLightingElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEDiffuseLightingElement"
    },
    FEDisplacementMapElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEDisplacementMapElement"
    },
    FEFloodElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEFloodElement"
    },
    FEGaussianBlurElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEGaussianBlurElement"
    },
    FEImageElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEImageElement"
    },
    FEMergeElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEMergeElement"
    },
    FEMorphologyElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEMorphologyElement"
    },
    FEOffsetElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEOffsetElement"
    },
    FEPointLightElement: {
      "^": "SvgElement;0x=,0y=",
      "%": "SVGFEPointLightElement"
    },
    FESpecularLightingElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFESpecularLightingElement"
    },
    FESpotLightElement: {
      "^": "SvgElement;0x=,0y=",
      "%": "SVGFESpotLightElement"
    },
    FETileElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFETileElement"
    },
    FETurbulenceElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFETurbulenceElement"
    },
    FilterElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFilterElement"
    },
    ForeignObjectElement: {
      "^": "GraphicsElement;0height=,0width=,0x=,0y=",
      "%": "SVGForeignObjectElement"
    },
    GeometryElement: {
      "^": "GraphicsElement;",
      "%": "SVGCircleElement|SVGEllipseElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement;SVGGeometryElement"
    },
    GraphicsElement: {
      "^": "SvgElement;",
      "%": "SVGAElement|SVGClipPathElement|SVGDefsElement|SVGGElement|SVGSwitchElement;SVGGraphicsElement"
    },
    ImageElement0: {
      "^": "GraphicsElement;0height=,0width=,0x=,0y=",
      "%": "SVGImageElement"
    },
    Length: {
      "^": "Interceptor;",
      $isLength: 1,
      "%": "SVGLength"
    },
    LengthList: {
      "^": "_LengthList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return this.getItem$1(receiver, index);
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isLength");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      getItem$1: function(receiver, index) {
        return receiver.getItem(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.Length];
      },
      $asListMixin: function() {
        return [P.Length];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.Length];
      },
      $isList: 1,
      $asList: function() {
        return [P.Length];
      },
      $asImmutableListMixin: function() {
        return [P.Length];
      },
      "%": "SVGLengthList"
    },
    MaskElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGMaskElement"
    },
    Number: {
      "^": "Interceptor;",
      $isNumber: 1,
      "%": "SVGNumber"
    },
    NumberList: {
      "^": "_NumberList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return this.getItem$1(receiver, index);
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isNumber");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      getItem$1: function(receiver, index) {
        return receiver.getItem(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.Number];
      },
      $asListMixin: function() {
        return [P.Number];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.Number];
      },
      $isList: 1,
      $asList: function() {
        return [P.Number];
      },
      $asImmutableListMixin: function() {
        return [P.Number];
      },
      "%": "SVGNumberList"
    },
    PatternElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGPatternElement"
    },
    Point0: {
      "^": "Interceptor;0x=,0y=",
      "%": "SVGPoint"
    },
    PointList: {
      "^": "Interceptor;0length=",
      "%": "SVGPointList"
    },
    Rect: {
      "^": "Interceptor;0height=,0width=,0x=,0y=",
      "%": "SVGRect"
    },
    RectElement: {
      "^": "GeometryElement;0height=,0width=,0x=,0y=",
      "%": "SVGRectElement"
    },
    StringList: {
      "^": "_StringList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return this.getItem$1(receiver, index);
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.stringTypeCheck(value);
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      getItem$1: function(receiver, index) {
        return receiver.getItem(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.String];
      },
      $asListMixin: function() {
        return [P.String];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      },
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $asImmutableListMixin: function() {
        return [P.String];
      },
      "%": "SVGStringList"
    },
    AttributeClassSet: {
      "^": "CssClassSetImpl;_svg$_element",
      readClasses$0: function() {
        var classname, s, t1, t2, _i, trimmed;
        classname = J.getAttribute$1$x(this._svg$_element, "class");
        s = P.LinkedHashSet_LinkedHashSet(null, null, null, P.String);
        if (classname == null)
          return s;
        for (t1 = classname.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
          trimmed = J.trim$0$s(t1[_i]);
          if (trimmed.length !== 0)
            s.add$1(0, trimmed);
        }
        return s;
      },
      writeClasses$1: function(s) {
        J.setAttribute$2$x(this._svg$_element, "class", s.join$1(0, " "));
      }
    },
    SvgElement: {
      "^": "Element;",
      get$classes: function(receiver) {
        return new P.AttributeClassSet(receiver);
      },
      get$children: function(receiver) {
        return new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
      },
      "%": "SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGComponentTransferFunctionElement|SVGDescElement|SVGDiscardElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGGradientElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMetadataElement|SVGRadialGradientElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStyleElement|SVGSymbolElement|SVGTitleElement|SVGViewElement;SVGElement"
    },
    SvgSvgElement: {
      "^": "GraphicsElement;0height=,0width=,0x=,0y=",
      "%": "SVGSVGElement"
    },
    TextContentElement: {
      "^": "GraphicsElement;",
      "%": "SVGTextPathElement;SVGTextContentElement"
    },
    TextPositioningElement: {
      "^": "TextContentElement;0x=,0y=",
      "%": "SVGTSpanElement|SVGTextElement|SVGTextPositioningElement"
    },
    Transform: {
      "^": "Interceptor;",
      $isTransform: 1,
      "%": "SVGTransform"
    },
    TransformList: {
      "^": "_TransformList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return this.getItem$1(receiver, index);
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isTransform");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      getItem$1: function(receiver, index) {
        return receiver.getItem(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.Transform];
      },
      $asListMixin: function() {
        return [P.Transform];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.Transform];
      },
      $isList: 1,
      $asList: function() {
        return [P.Transform];
      },
      $asImmutableListMixin: function() {
        return [P.Transform];
      },
      "%": "SVGTransformList"
    },
    UseElement: {
      "^": "GraphicsElement;0height=,0width=,0x=,0y=",
      "%": "SVGUseElement"
    },
    _LengthList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _LengthList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_LengthList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _NumberList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _NumberList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_NumberList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _StringList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _StringList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_StringList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _TransformList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _TransformList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_TransformList_Interceptor_ListMixin+ImmutableListMixin;"
    }
  }], ["dart.dom.web_audio", "dart:web_audio",, P, {
    "^": "",
    AudioBuffer: {
      "^": "Interceptor;0length=",
      "%": "AudioBuffer"
    },
    AudioParamMap: {
      "^": "_AudioParamMap_Interceptor_MapMixin;",
      $index: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
      },
      forEach$1: function(receiver, f) {
        var entries, entry;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
        entries = receiver.entries();
        for (; true;) {
          entry = entries.next();
          if (entry.done)
            return;
          f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new P.AudioParamMap_keys_closure(keys));
        return keys;
      },
      get$length: function(receiver) {
        return receiver.size;
      },
      $asMapMixin: function() {
        return [P.String, null];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, null];
      },
      "%": "AudioParamMap"
    },
    AudioParamMap_keys_closure: {
      "^": "Closure:16;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    AudioTrackList: {
      "^": "EventTarget;0length=",
      "%": "AudioTrackList"
    },
    BaseAudioContext: {
      "^": "EventTarget;",
      "%": "AudioContext|webkitAudioContext;BaseAudioContext"
    },
    OfflineAudioContext: {
      "^": "BaseAudioContext;0length=",
      "%": "OfflineAudioContext"
    },
    _AudioParamMap_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    }
  }], ["dart.dom.web_gl", "dart:web_gl",, P, {
    "^": "",
    ActiveInfo: {
      "^": "Interceptor;0name=",
      "%": "WebGLActiveInfo"
    }
  }], ["dart.dom.web_sql", "dart:web_sql",, P, {
    "^": "",
    SqlResultSetRowList: {
      "^": "_SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return P.convertNativeToDart_Dictionary(this._item_1$1(receiver, index));
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isMap");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      _item_1$1: function(receiver, index) {
        return receiver.item(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [[P.Map,,,]];
      },
      $asListMixin: function() {
        return [[P.Map,,,]];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [[P.Map,,,]];
      },
      $isList: 1,
      $asList: function() {
        return [[P.Map,,,]];
      },
      $asImmutableListMixin: function() {
        return [[P.Map,,,]];
      },
      "%": "SQLResultSetRowList"
    },
    _SqlResultSetRowList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_SqlResultSetRowList_Interceptor_ListMixin+ImmutableListMixin;"
    }
  }], ["angular.src.bootstrap.modules", "package:angular/src/bootstrap/modules.dart",, G, {
    "^": "",
    createNgZone: [function() {
      return Y.NgZone$(false);
    }, "call$0", "modules__createNgZone$closure", 0, 0, 58],
    createRandomAppId: function() {
      var t1 = new G.createRandomAppId_char(C.C__JSRandom);
      return H.S(t1.call$0()) + H.S(t1.call$0()) + H.S(t1.call$0());
    },
    ThrowingSlowComponentLoader: {
      "^": "Object;",
      loadNextToLocation$1$3: function(_, __, ___) {
        throw H.wrapException(P.UnsupportedError$("You are using runApp or runAppAsync, which does not support loading a component with SlowComponentLoader. Please migrate this code to use ComponentLoader instead."));
      },
      loadNextToLocation$1$2: function(_, __, $T) {
        return this.loadNextToLocation$1$3(_, __, null, $T);
      },
      $isSlowComponentLoader: 1
    },
    createRandomAppId_char: {
      "^": "Closure:122;random",
      call$0: function() {
        return H.Primitives_stringFromCharCode(97 + this.random.nextInt$1(26));
      }
    }
  }], ["", "package:angular/src/bootstrap/modules.template.dart",, Y, {
    "^": "",
    minimalApp$Injector: [function($parent) {
      return new Y._Injector$minimalApp($parent == null ? C.EmptyInjector_null : $parent);
    }, function() {
      return Y.minimalApp$Injector(null);
    }, "call$1", "call$0", "modules_template__minimalApp$Injector$closure", 0, 2, 57],
    _Injector$minimalApp: {
      "^": "HierarchicalInjector;0_field0,0_field1,0_field2,0_field3,0_field5,parent",
      injectFromSelfOptional$2: function(token, orElse) {
        var t1;
        if (token === C.Type_SlowComponentLoader_qxe) {
          t1 = this._field0;
          if (t1 == null) {
            t1 = new G.ThrowingSlowComponentLoader();
            this._field0 = t1;
          }
          return t1;
        }
        if (token === C.Type_ComponentLoader_7xV) {
          t1 = this._field1;
          if (t1 == null) {
            t1 = new M.ComponentLoader();
            this._field1 = t1;
          }
          return t1;
        }
        if (token === C.OpaqueToken_APP_ID) {
          t1 = this._field2;
          if (t1 == null) {
            t1 = G.createRandomAppId();
            this._field2 = t1;
          }
          return t1;
        }
        if (token === C.Type_DomSanitizationService_cKo) {
          t1 = this._field3;
          if (t1 == null) {
            this._field3 = C.C_DomSanitizationServiceImpl;
            t1 = C.C_DomSanitizationServiceImpl;
          }
          return t1;
        }
        if (token === C.Type_SanitizationService_bRS)
          return this.$get$1(0, C.Type_DomSanitizationService_cKo);
        if (token === C.Type_ExceptionHandler_qBE) {
          t1 = this._field5;
          if (t1 == null) {
            t1 = new T.BrowserExceptionHandler();
            this._field5 = t1;
          }
          return t1;
        }
        if (token === C.Type_Injector_aJC)
          return this;
        return orElse;
      }
    }
  }], ["", "package:angular/src/bootstrap/run.dart",, G, {
    "^": "",
    appInjector: function(userProvidedInjector, createNgZone) {
      var t1, t2, testabilityRegistry, minimalInjector, ngZone, userInjector;
      t1 = {};
      H.functionTypeCheck(userProvidedInjector, {func: 1, ret: M.Injector, opt: [M.Injector]});
      H.functionTypeCheck(createNgZone, {func: 1, ret: Y.NgZone});
      t2 = $._platformInjectorCache;
      if (t2 == null) {
        testabilityRegistry = new D.TestabilityRegistry(new H.JsLinkedHashMap(0, 0, [null, D.Testability]), new D._NoopGetTestability());
        if ($.sharedStylesHost == null)
          $.sharedStylesHost = new A.DomSharedStylesHost(document.head, new P._LinkedIdentityHashSet(0, 0, [P.String]));
        t2 = new K.BrowserGetTestability();
        testabilityRegistry._testabilityGetter = t2;
        t2.addToWindow$1(testabilityRegistry);
        t2 = P.Object;
        t2 = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_TestabilityRegistry_IMm, testabilityRegistry], t2, t2);
        t2 = new A.MapInjector(t2, C.EmptyInjector_null);
        $._platformInjectorCache = t2;
      }
      minimalInjector = Y.modules_template__minimalApp$Injector$closure().call$1(t2);
      t1.applicationRef = null;
      ngZone = createNgZone.call$0();
      t2 = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_ApplicationRef_Aij, new G.appInjector_closure(t1), C.Type_AppViewUtils_NWH, new G.appInjector_closure0(), C.Type_NgZone_6ty, new G.appInjector_closure1(ngZone), C.Type_Testability_h8g, new G.appInjector_closure2(ngZone)], P.Object, {func: 1, ret: P.Object});
      userInjector = userProvidedInjector.call$1(new G._LazyInjector(t2, minimalInjector == null ? C.EmptyInjector_null : minimalInjector));
      t2 = M.Injector;
      ngZone.toString;
      t1 = H.functionTypeCheck(new G.appInjector_closure3(t1, ngZone, userInjector), {func: 1, ret: t2});
      return ngZone._innerZone.run$1$1(t1, t2);
    },
    _identityInjector: [function($parent) {
      return $parent;
    }, function() {
      return G._identityInjector(null);
    }, "call$1", "call$0", "run___identityInjector$closure", 0, 2, 57],
    appInjector_closure: {
      "^": "Closure:123;_box_0",
      call$0: function() {
        return this._box_0.applicationRef;
      }
    },
    appInjector_closure0: {
      "^": "Closure:124;",
      call$0: function() {
        return $.appViewUtils;
      }
    },
    appInjector_closure1: {
      "^": "Closure:58;ngZone",
      call$0: function() {
        return this.ngZone;
      }
    },
    appInjector_closure2: {
      "^": "Closure:140;ngZone",
      call$0: function() {
        var t1 = new D.Testability(this.ngZone, 0, true, false, H.setRuntimeTypeInfo([], [P.Function]));
        t1._watchAngularEvents$0();
        return t1;
      }
    },
    appInjector_closure3: {
      "^": "Closure:141;_box_0,ngZone,userInjector",
      call$0: [function() {
        var t1, t2, t3, t4;
        t1 = this.ngZone;
        t2 = this.userInjector;
        this._box_0.applicationRef = Y.ApplicationRef$_(t1, H.interceptedTypeCheck(t2.$get$1(0, C.Type_ExceptionHandler_qBE), "$isExceptionHandler"), t2);
        t3 = H.stringTypeCheck(t2.$get$1(0, C.OpaqueToken_APP_ID));
        t4 = H.interceptedTypeCheck(t2.$get$1(0, C.Type_SanitizationService_bRS), "$isSanitizationService");
        $.appViewUtils = new Q.AppViewUtils(t3, N.EventManager$(H.setRuntimeTypeInfo([new L.DomEventsPlugin(), new N.KeyEventsPlugin()], [N.EventManagerPlugin]), t1), t4);
        return t2;
      }, null, null, 0, 0, null, "call"]
    },
    _LazyInjector: {
      "^": "HierarchicalInjector;_providers,parent",
      injectFromSelfOptional$2: function(token, orElse) {
        var result = this._providers.$index(0, token);
        if (result == null) {
          if (token === C.Type_Injector_aJC)
            return this;
          return orElse;
        }
        return result.call$0();
      }
    }
  }], ["", "package:angular/src/common/directives/ng_class.dart",, Y, {
    "^": "",
    NgClass: {
      "^": "Object;_ngEl,0_iterableDiffer,0_keyValueDiffer,_initialClasses,0_rawClass",
      set$_initialClasses: function(_initialClasses) {
        this._initialClasses = H.assertSubtype(_initialClasses, "$isList", [P.String], "$asList");
      },
      set$initialClasses: function(v) {
        var t1;
        this._applyInitialClasses$1(true);
        t1 = H.setRuntimeTypeInfo(v.split(" "), [P.String]);
        this.set$_initialClasses(t1);
        this._applyInitialClasses$1(false);
        this._applyClasses$2(this._rawClass, false);
      },
      set$rawClass: function(v) {
        this._applyClasses$2(this._rawClass, true);
        this._applyInitialClasses$1(false);
        this._rawClass = v;
        this._iterableDiffer = null;
        this._keyValueDiffer = null;
        if (v != null)
          if (!!J.getInterceptor$(v).$isIterable)
            this._iterableDiffer = R.DefaultIterableDiffer$(null);
          else
            this._keyValueDiffer = new N.DefaultKeyValueDiffer(new H.JsLinkedHashMap(0, 0, [null, N.KeyValueChangeRecord]));
      },
      ngDoCheck$0: function() {
        var t1, changes;
        t1 = this._iterableDiffer;
        if (t1 != null) {
          changes = t1.diff$1(H.listSuperNativeTypeCheck(this._rawClass, "$isIterable"));
          if (changes != null)
            this._applyIterableChanges$1(changes);
        }
        t1 = this._keyValueDiffer;
        if (t1 != null) {
          changes = t1.diff$1(H.interceptedTypeCheck(this._rawClass, "$isMap"));
          if (changes != null)
            this._applyKeyValueChanges$1(changes);
        }
      },
      _applyKeyValueChanges$1: function(changes) {
        changes.forEachAddedItem$1(new Y.NgClass__applyKeyValueChanges_closure(this));
        changes.forEachChangedItem$1(new Y.NgClass__applyKeyValueChanges_closure0(this));
        changes.forEachRemovedItem$1(new Y.NgClass__applyKeyValueChanges_closure1(this));
      },
      _applyIterableChanges$1: function(changes) {
        changes.forEachAddedItem$1(new Y.NgClass__applyIterableChanges_closure(this));
        changes.forEachRemovedItem$1(new Y.NgClass__applyIterableChanges_closure0(this));
      },
      _applyInitialClasses$1: function(isCleanup) {
        var t1, t2, t3, _i;
        for (t1 = this._initialClasses, t2 = t1.length, t3 = !isCleanup, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          this._toggleClass$2(t1[_i], t3);
      },
      _applyClasses$2: function(rawClassVal, isCleanup) {
        var t1, len, t2, i;
        if (rawClassVal != null) {
          t1 = J.getInterceptor$(rawClassVal);
          if (!!t1.$isList) {
            len = t1.get$length(rawClassVal);
            if (typeof len !== "number")
              return H.iae(len);
            t2 = !isCleanup;
            i = 0;
            for (; i < len; ++i)
              this._toggleClass$2(H.stringTypeCheck(t1.$index(rawClassVal, i)), t2);
          } else if (!!t1.$isIterable)
            for (t1 = t1.get$iterator(rawClassVal), t2 = !isCleanup; t1.moveNext$0();)
              this._toggleClass$2(H.stringTypeCheck(t1.get$current(t1)), t2);
          else
            t1.forEach$1(H.interceptedTypeCast(rawClassVal, "$isMap"), new Y.NgClass__applyClasses_closure(this, isCleanup));
        }
      },
      _toggleClass$2: function(className, enabled) {
        var classList, t1, classes, len, i;
        H.stringTypeCheck(className);
        H.boolTypeCheck(enabled);
        className = J.trim$0$s(className);
        if (className.length === 0)
          return;
        classList = J.get$classes$x(this._ngEl);
        if (C.JSString_methods.contains$1(className, " ")) {
          t1 = $.NgClass__separator;
          if (t1 == null) {
            t1 = P.RegExp_RegExp("\\s+", true, false);
            $.NgClass__separator = t1;
          }
          classes = C.JSString_methods.split$1(className, t1);
          for (len = classes.length, i = 0; i < len; ++i) {
            t1 = classes.length;
            if (enabled) {
              if (i >= t1)
                return H.ioore(classes, i);
              classList.add$1(0, classes[i]);
            } else {
              if (i >= t1)
                return H.ioore(classes, i);
              classList.remove$1(0, classes[i]);
            }
          }
        } else if (enabled)
          classList.add$1(0, className);
        else
          classList.remove$1(0, className);
      }
    },
    NgClass__applyKeyValueChanges_closure: {
      "^": "Closure:25;$this",
      call$1: function(record) {
        this.$this._toggleClass$2(H.stringTypeCheck(record.key), H.boolTypeCheck(record.currentValue));
      }
    },
    NgClass__applyKeyValueChanges_closure0: {
      "^": "Closure:25;$this",
      call$1: function(record) {
        this.$this._toggleClass$2(H.stringTypeCheck(record.key), H.boolTypeCheck(record.currentValue));
      }
    },
    NgClass__applyKeyValueChanges_closure1: {
      "^": "Closure:25;$this",
      call$1: function(record) {
        if (record.previousValue != null)
          this.$this._toggleClass$2(H.stringTypeCheck(record.key), false);
      }
    },
    NgClass__applyIterableChanges_closure: {
      "^": "Closure:22;$this",
      call$1: function(record) {
        this.$this._toggleClass$2(H.stringTypeCheck(record.item), true);
      }
    },
    NgClass__applyIterableChanges_closure0: {
      "^": "Closure:22;$this",
      call$1: function(record) {
        this.$this._toggleClass$2(H.stringTypeCheck(record.item), false);
      }
    },
    NgClass__applyClasses_closure: {
      "^": "Closure:4;$this,isCleanup",
      call$2: function(className, expVal) {
        if (expVal != null)
          this.$this._toggleClass$2(H.stringTypeCheck(className), !this.isCleanup);
      }
    }
  }], ["", "package:angular/src/common/directives/ng_for.dart",, R, {
    "^": "",
    NgFor: {
      "^": "Object;_ng_for$_viewContainer,0_differ,0_ngForOf,0_ngForTrackBy,_ng_for$_templateRef",
      set$_ngForTrackBy: function(_ngForTrackBy) {
        this._ngForTrackBy = H.functionTypeCheck(_ngForTrackBy, {func: 1, ret: P.Object, args: [P.int,,]});
      },
      set$ngForOf: function(value) {
        this._ngForOf = value;
        if (this._differ == null && value != null)
          this._differ = R.DefaultIterableDiffer$(this._ngForTrackBy);
      },
      ngDoCheck$0: function() {
        var t1, changes;
        t1 = this._differ;
        if (t1 != null) {
          changes = t1.diff$1(this._ngForOf);
          if (changes != null)
            this._ng_for$_applyChanges$1(changes);
        }
      },
      _ng_for$_applyChanges$1: function(changes) {
        var insertTuples, i, t1, t2, t3, len;
        insertTuples = H.setRuntimeTypeInfo([], [R._RecordViewTuple]);
        changes.forEachOperation$1(new R.NgFor__applyChanges_closure(this, insertTuples));
        for (i = 0; i < insertTuples.length; ++i) {
          t1 = insertTuples[i];
          t2 = t1.record;
          t1 = t1.view.appView.locals;
          t1.$indexSet(0, "$implicit", t2.item);
          t3 = t2.currentIndex;
          t3.toString;
          if (typeof t3 !== "number")
            return t3.$and();
          t1.$indexSet(0, "even", (t3 & 1) === 0);
          t2 = t2.currentIndex;
          t2.toString;
          if (typeof t2 !== "number")
            return t2.$and();
          t1.$indexSet(0, "odd", (t2 & 1) === 1);
        }
        for (t1 = this._ng_for$_viewContainer, len = t1.get$length(t1), t2 = len - 1, i = 0; i < len; ++i) {
          t3 = t1.nestedViews;
          if (i >= t3.length)
            return H.ioore(t3, i);
          t3 = t3[i].viewData.ref.appView.locals;
          t3.$indexSet(0, "first", i === 0);
          t3.$indexSet(0, "last", i === t2);
          t3.$indexSet(0, "index", i);
          t3.$indexSet(0, "count", len);
        }
        changes.forEachIdentityChange$1(new R.NgFor__applyChanges_closure0(this));
      }
    },
    NgFor__applyChanges_closure: {
      "^": "Closure:163;$this,insertTuples",
      call$3: function(item, adjustedPreviousIndex, currentIndex) {
        var t1, t2, viewRef, view;
        H.interceptedTypeCheck(item, "$isCollectionChangeRecord");
        if (item.previousIndex == null) {
          t1 = this.$this;
          t2 = t1._ng_for$_viewContainer;
          t2.toString;
          viewRef = t1._ng_for$_templateRef.createEmbeddedView$0();
          t2.insert$2(0, viewRef, currentIndex);
          C.JSArray_methods.add$1(this.insertTuples, new R._RecordViewTuple(viewRef, item));
        } else {
          t1 = this.$this._ng_for$_viewContainer;
          if (currentIndex == null)
            t1.remove$1(0, adjustedPreviousIndex);
          else {
            t2 = t1.nestedViews;
            view = (t2 && C.JSArray_methods).$index(t2, adjustedPreviousIndex).viewData.ref;
            t1.move$2(view, currentIndex);
            C.JSArray_methods.add$1(this.insertTuples, new R._RecordViewTuple(view, item));
          }
        }
      }
    },
    NgFor__applyChanges_closure0: {
      "^": "Closure:22;$this",
      call$1: function(record) {
        var t1, t2;
        t1 = record.currentIndex;
        t2 = this.$this._ng_for$_viewContainer.nestedViews;
        (t2 && C.JSArray_methods).$index(t2, t1).viewData.ref.appView.locals.$indexSet(0, "$implicit", record.item);
      }
    },
    _RecordViewTuple: {
      "^": "Object;view,record"
    }
  }], ["", "package:angular/src/common/directives/ng_if.dart",, K, {
    "^": "",
    NgIf: {
      "^": "Object;_templateRef,_viewContainer,_prevCondition",
      set$ngIf: function(newCondition) {
        var t1;
        newCondition = newCondition === true;
        t1 = this._prevCondition;
        if (t1 === newCondition)
          return;
        t1 = this._viewContainer;
        if (newCondition)
          t1.createEmbeddedView$1(this._templateRef);
        else
          t1.clear$0(0);
        this._prevCondition = newCondition;
      }
    }
  }], ["", "package:angular/src/common/pipes/invalid_pipe_argument_exception.dart",, K, {
    "^": "",
    InvalidPipeArgumentException: {
      "^": "FormatException;message,source,offset",
      static: {
        InvalidPipeArgumentException$: function(type, value) {
          return new K.InvalidPipeArgumentException("Invalid argument '" + H.S(value) + "' for pipe '" + type.toString$0(0) + "'", null, null);
        }
      }
    }
  }], ["", "package:angular/src/core/application_ref.dart",, Y, {
    "^": "",
    ApplicationRef: {
      "^": "ChangeDetectionHost;_disposeListeners,_rootComponents,_exceptionHandler,_injector,_application_ref$_ngZone,0_onErrorSub,0_onMicroSub,0_lastGuardedView,0_lastCaughtException,0_lastCaughtTrace,_runningTick,_changeDetectors,_scheduledCallbacks,_scheduledViews,_scheduledElements",
      set$_onErrorSub: function(_onErrorSub) {
        this._onErrorSub = H.assertSubtype(_onErrorSub, "$isStreamSubscription", [-1], "$asStreamSubscription");
      },
      set$_onMicroSub: function(_onMicroSub) {
        this._onMicroSub = H.assertSubtype(_onMicroSub, "$isStreamSubscription", [-1], "$asStreamSubscription");
      },
      ApplicationRef$_$3: function(_ngZone, _exceptionHandler, _injector) {
        var t1, t2;
        t1 = this._application_ref$_ngZone;
        t2 = t1._onError;
        this.set$_onErrorSub(new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new Y.ApplicationRef$__closure(this)));
        t1 = t1._onMicrotaskEmpty;
        this.set$_onMicroSub(new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new Y.ApplicationRef$__closure0(this)));
      },
      bootstrap$1$1: function(componentFactory, $T) {
        var t1 = [D.ComponentRef, $T];
        return H.assertSubtypeOfRuntimeType(this.run$1$1(new Y.ApplicationRef_bootstrap_closure(this, H.assertSubtype(componentFactory, "$isComponentFactory", [$T], "$asComponentFactory"), $T), t1), t1);
      },
      _loadedRootComponent$2: function(component, node) {
        var t1, t2, t3, t4;
        H.assertSubtype(component, "$isComponentRef", [-1], "$asComponentRef");
        C.JSArray_methods.add$1(this._rootComponents, component);
        component.toString;
        t1 = {func: 1, ret: -1};
        t2 = H.functionTypeCheck(new Y.ApplicationRef__loadedRootComponent_closure(this, component, node), t1);
        t3 = component._parentView;
        t4 = t3.viewData.ref.appView.viewData;
        if (t4._onDestroyCallbacks == null)
          t4.set$_onDestroyCallbacks(H.setRuntimeTypeInfo([], [t1]));
        t1 = t4._onDestroyCallbacks;
        (t1 && C.JSArray_methods).add$1(t1, t2);
        C.JSArray_methods.add$1(this._changeDetectors, t3.viewData.ref);
        this.tick$0();
      },
      _destroyedRootComponent$1: function(component) {
        H.assertSubtype(component, "$isComponentRef", [-1], "$asComponentRef");
        if (!C.JSArray_methods.remove$1(this._rootComponents, component))
          return;
        C.JSArray_methods.remove$1(this._changeDetectors, component._parentView.viewData.ref);
      },
      static: {
        ApplicationRef$_: function(_ngZone, _exceptionHandler, _injector) {
          var t1 = new Y.ApplicationRef(H.setRuntimeTypeInfo([], [{func: 1, ret: -1}]), H.setRuntimeTypeInfo([], [[D.ComponentRef, -1]]), _exceptionHandler, _injector, _ngZone, false, H.setRuntimeTypeInfo([], [S.ChangeDetectorRef]), H.setRuntimeTypeInfo([], [{func: 1, ret: -1, args: [[S.AppView, -1], W.Element]}]), H.setRuntimeTypeInfo([], [[S.AppView, -1]]), H.setRuntimeTypeInfo([], [W.Element]));
          t1.ApplicationRef$_$3(_ngZone, _exceptionHandler, _injector);
          return t1;
        }
      }
    },
    ApplicationRef$__closure: {
      "^": "Closure:62;$this",
      call$1: [function(e) {
        H.interceptedTypeCheck(e, "$isNgZoneError");
        this.$this._exceptionHandler.call$3(e.error, new P._StringStackTrace(C.JSArray_methods.join$1(e.stackTrace, "\n")), null);
      }, null, null, 4, 0, null, 6, "call"]
    },
    ApplicationRef$__closure0: {
      "^": "Closure:12;$this",
      call$1: [function(_) {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._application_ref$_ngZone;
        t2.toString;
        t1 = H.functionTypeCheck(t1.get$tick(), {func: 1, ret: -1});
        t2._innerZone.runGuarded$1(t1);
      }, null, null, 4, 0, null, 0, "call"]
    },
    ApplicationRef_bootstrap_closure: {
      "^": "Closure;$this,componentFactory,T",
      call$0: function() {
        var t1, t2, t3, component, t4, existing, newElement, replacement, t5, testability;
        t1 = this.componentFactory;
        t2 = this.$this;
        t3 = t2._injector;
        component = t1.create$1(0, t3);
        t4 = document;
        existing = C.HtmlDocument_methods.querySelector$1(t4, t1.selector);
        if (existing != null) {
          newElement = component._nativeElement;
          t1 = newElement.id;
          if (t1 == null || t1.length === 0)
            newElement.id = existing.id;
          J.replaceWith$1$x(existing, newElement);
          t1 = newElement;
          replacement = t1;
        } else {
          t1 = t4.body;
          t4 = component._nativeElement;
          (t1 && C.BodyElement_methods).append$1(t1, t4);
          t1 = t4;
          replacement = null;
        }
        t4 = component._parentView;
        t5 = component._nodeIndex;
        testability = H.interceptedTypeCheck(new G.ElementInjector(t4, t5, C.EmptyInjector_null).$get$2(0, C.Type_Testability_h8g, null), "$isTestability");
        if (testability != null)
          H.interceptedTypeCheck(t3.$get$1(0, C.Type_TestabilityRegistry_IMm), "$isTestabilityRegistry")._applications.$indexSet(0, t1, testability);
        t2._loadedRootComponent$2(component, replacement);
        return component;
      },
      $signature: function() {
        return {func: 1, ret: [D.ComponentRef, this.T]};
      }
    },
    ApplicationRef__loadedRootComponent_closure: {
      "^": "Closure:0;$this,component,node",
      call$0: function() {
        this.$this._destroyedRootComponent$1(this.component);
        var t1 = this.node;
        if (!(t1 == null))
          J.remove$0$ax(t1);
      }
    }
  }], ["", "package:angular/src/core/change_detection/change_detection_util.dart",, A, {
    "^": "",
    SimpleChange: {
      "^": "Object;previousValue,currentValue"
    }
  }], ["", "package:angular/src/core/change_detection/change_detector_ref.dart",, S, {
    "^": "",
    ChangeDetectorRef: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/core/change_detection/differs/default_iterable_differ.dart",, R, {
    "^": "",
    _trackByIdentity: [function(index, item) {
      H.intTypeCheck(index);
      return item;
    }, "call$2", "default_iterable_differ___trackByIdentity$closure", 8, 0, 159, 23, 27],
    _getPreviousIndex: function(item, addRemoveOffset, moveOffsets) {
      var previousIndex, moveOffset;
      H.interceptedTypeCheck(item, "$isCollectionChangeRecord");
      H.assertSubtype(moveOffsets, "$isList", [P.int], "$asList");
      previousIndex = item.previousIndex;
      if (previousIndex == null)
        return previousIndex;
      if (moveOffsets != null && previousIndex < moveOffsets.length) {
        if (previousIndex !== (previousIndex | 0) || previousIndex >= moveOffsets.length)
          return H.ioore(moveOffsets, previousIndex);
        moveOffset = moveOffsets[previousIndex];
      } else
        moveOffset = 0;
      if (typeof moveOffset !== "number")
        return H.iae(moveOffset);
      return previousIndex + addRemoveOffset + moveOffset;
    },
    DefaultIterableDiffer: {
      "^": "Object;_trackByFn,0_default_iterable_differ$_length,0_collection,0_linkedRecords,0_unlinkedRecords,0_previousItHead,0_itHead,0_itTail,0_default_iterable_differ$_additionsHead,0_default_iterable_differ$_additionsTail,0_movesHead,0_movesTail,0_default_iterable_differ$_removalsHead,0_removalsTail,0_identityChangesHead,0_identityChangesTail",
      get$length: function(_) {
        return this._default_iterable_differ$_length;
      },
      forEachOperation$1: function(fn) {
        var nextIt, nextRemove, t1, addRemoveOffset, sizeDeficit, moveOffsets, t2, t3, record, adjPreviousIndex, currentIndex, localMovePreviousIndex, localCurrentIndex, i, offset, j, index, previousIndex;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord, P.int, P.int]});
        nextIt = this._itHead;
        nextRemove = this._default_iterable_differ$_removalsHead;
        t1 = [P.int];
        addRemoveOffset = 0;
        sizeDeficit = null;
        moveOffsets = null;
        while (true) {
          t2 = nextIt == null;
          if (!(!t2 || nextRemove != null))
            break;
          if (nextRemove != null)
            if (!t2) {
              t2 = nextIt.currentIndex;
              t3 = R._getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets);
              if (typeof t2 !== "number")
                return t2.$lt();
              if (typeof t3 !== "number")
                return H.iae(t3);
              t3 = t2 < t3;
              t2 = t3;
            } else
              t2 = false;
          else
            t2 = true;
          record = t2 ? nextIt : nextRemove;
          adjPreviousIndex = R._getPreviousIndex(record, addRemoveOffset, moveOffsets);
          currentIndex = record.currentIndex;
          if (record === nextRemove) {
            --addRemoveOffset;
            nextRemove = nextRemove._nextRemoved;
          } else {
            nextIt = nextIt._default_iterable_differ$_next;
            if (record.previousIndex == null)
              ++addRemoveOffset;
            else {
              if (moveOffsets == null)
                moveOffsets = H.setRuntimeTypeInfo([], t1);
              if (typeof adjPreviousIndex !== "number")
                return adjPreviousIndex.$sub();
              localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;
              if (typeof currentIndex !== "number")
                return currentIndex.$sub();
              localCurrentIndex = currentIndex - addRemoveOffset;
              if (localMovePreviousIndex !== localCurrentIndex) {
                for (i = 0; i < localMovePreviousIndex; ++i) {
                  t2 = moveOffsets.length;
                  if (i < t2)
                    offset = moveOffsets[i];
                  else {
                    if (t2 > i)
                      C.JSArray_methods.$indexSet(moveOffsets, i, 0);
                    else {
                      sizeDeficit = i - t2 + 1;
                      for (j = 0; j < sizeDeficit; ++j)
                        C.JSArray_methods.add$1(moveOffsets, null);
                      C.JSArray_methods.$indexSet(moveOffsets, i, 0);
                    }
                    offset = 0;
                  }
                  if (typeof offset !== "number")
                    return offset.$add();
                  index = offset + i;
                  if (localCurrentIndex <= index && index < localMovePreviousIndex)
                    C.JSArray_methods.$indexSet(moveOffsets, i, offset + 1);
                }
                previousIndex = record.previousIndex;
                t2 = moveOffsets.length;
                if (typeof previousIndex !== "number")
                  return previousIndex.$sub();
                sizeDeficit = previousIndex - t2 + 1;
                for (j = 0; j < sizeDeficit; ++j)
                  C.JSArray_methods.add$1(moveOffsets, null);
                C.JSArray_methods.$indexSet(moveOffsets, previousIndex, localCurrentIndex - localMovePreviousIndex);
              }
            }
          }
          if (adjPreviousIndex != currentIndex)
            fn.call$3(record, adjPreviousIndex, currentIndex);
        }
      },
      forEachAddedItem$1: function(fn) {
        var record;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord]});
        for (record = this._default_iterable_differ$_additionsHead; record != null; record = record._default_iterable_differ$_nextAdded)
          fn.call$1(record);
      },
      forEachRemovedItem$1: function(fn) {
        var record;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord]});
        for (record = this._default_iterable_differ$_removalsHead; record != null; record = record._nextRemoved)
          fn.call$1(record);
      },
      forEachIdentityChange$1: function(fn) {
        var record;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord]});
        for (record = this._identityChangesHead; record != null; record = record._nextIdentityChange)
          fn.call$1(record);
      },
      diff$1: function(collection) {
        H.listSuperNativeTypeCheck(collection, "$isIterable");
        if (!(collection != null))
          collection = C.List_empty;
        return this.check$1(0, collection) ? this : null;
      },
      check$1: function(_, collection) {
        var _box_0, t1, t2, t3, t4, item, itemTrackBy, record, index;
        _box_0 = {};
        this._default_iterable_differ$_reset$0();
        _box_0.record = this._itHead;
        _box_0.mayBeDirty = false;
        _box_0.index = null;
        _box_0.itemTrackBy = null;
        t1 = J.getInterceptor$(collection);
        if (!!t1.$isList) {
          this._default_iterable_differ$_length = t1.get$length(collection);
          _box_0.index = 0;
          t2 = this._trackByFn;
          t3 = 0;
          while (true) {
            t4 = this._default_iterable_differ$_length;
            if (typeof t4 !== "number")
              return H.iae(t4);
            if (!(t3 < t4))
              break;
            item = t1.$index(collection, t3);
            itemTrackBy = t2.call$2(_box_0.index, item);
            _box_0.itemTrackBy = itemTrackBy;
            t3 = _box_0.record;
            if (t3 != null) {
              t4 = t3.trackById;
              t4 = t4 == null ? itemTrackBy != null : t4 !== itemTrackBy;
            } else
              t4 = true;
            if (t4) {
              record = this._mismatch$4(t3, item, itemTrackBy, _box_0.index);
              _box_0.record = record;
              _box_0.mayBeDirty = true;
              t3 = record;
            } else {
              if (_box_0.mayBeDirty) {
                record = this._verifyReinsertion$4(t3, item, itemTrackBy, _box_0.index);
                _box_0.record = record;
                t3 = record;
              }
              t4 = t3.item;
              if (t4 == null ? item != null : t4 !== item) {
                t3.item = item;
                t4 = this._identityChangesTail;
                if (t4 == null) {
                  this._identityChangesHead = t3;
                  this._identityChangesTail = t3;
                } else {
                  t4._nextIdentityChange = t3;
                  this._identityChangesTail = t3;
                }
              }
            }
            _box_0.record = t3._default_iterable_differ$_next;
            t3 = _box_0.index;
            if (typeof t3 !== "number")
              return t3.$add();
            index = t3 + 1;
            _box_0.index = index;
            t3 = index;
          }
        } else {
          _box_0.index = 0;
          t1.forEach$1(collection, new R.DefaultIterableDiffer_check_closure(_box_0, this));
          this._default_iterable_differ$_length = _box_0.index;
        }
        this._truncate$1(_box_0.record);
        this._collection = collection;
        return this.get$isDirty();
      },
      get$isDirty: function() {
        return this._default_iterable_differ$_additionsHead != null || this._movesHead != null || this._default_iterable_differ$_removalsHead != null || this._identityChangesHead != null;
      },
      _default_iterable_differ$_reset$0: function() {
        var record, record0, nextRecord;
        if (this.get$isDirty()) {
          for (record = this._itHead, this._previousItHead = record; record != null; record = record0) {
            record0 = record._default_iterable_differ$_next;
            record._default_iterable_differ$_nextPrevious = record0;
          }
          for (record = this._default_iterable_differ$_additionsHead; record != null; record = record._default_iterable_differ$_nextAdded)
            record.previousIndex = record.currentIndex;
          this._default_iterable_differ$_additionsTail = null;
          this._default_iterable_differ$_additionsHead = null;
          for (record = this._movesHead; record != null; record = nextRecord) {
            record.previousIndex = record.currentIndex;
            nextRecord = record._nextMoved;
          }
          this._movesTail = null;
          this._movesHead = null;
          this._removalsTail = null;
          this._default_iterable_differ$_removalsHead = null;
          this._identityChangesTail = null;
          this._identityChangesHead = null;
        }
      },
      _mismatch$4: function(record, item, itemTrackBy, index) {
        var previousRecord, t1;
        if (record == null)
          previousRecord = this._itTail;
        else {
          previousRecord = record._default_iterable_differ$_prev;
          this._addToRemovals$1(this._unlink$1(record));
        }
        t1 = this._linkedRecords;
        record = t1 == null ? null : t1.$get$2(0, itemTrackBy, index);
        if (record != null) {
          t1 = record.item;
          if (t1 == null ? item != null : t1 !== item)
            this._addIdentityChange$2(record, item);
          this._unlink$1(record);
          this._insertAfter$3(record, previousRecord, index);
          this._addToMoves$2(record, index);
        } else {
          t1 = this._unlinkedRecords;
          record = t1 == null ? null : t1.$get$1(0, itemTrackBy);
          if (record != null) {
            t1 = record.item;
            if (t1 == null ? item != null : t1 !== item)
              this._addIdentityChange$2(record, item);
            this._reinsertAfter$3(record, previousRecord, index);
          } else {
            record = new R.CollectionChangeRecord(item, itemTrackBy);
            this._insertAfter$3(record, previousRecord, index);
            t1 = this._default_iterable_differ$_additionsTail;
            if (t1 == null) {
              this._default_iterable_differ$_additionsHead = record;
              this._default_iterable_differ$_additionsTail = record;
            } else {
              t1._default_iterable_differ$_nextAdded = record;
              this._default_iterable_differ$_additionsTail = record;
            }
          }
        }
        return record;
      },
      _verifyReinsertion$4: function(record, item, itemTrackBy, index) {
        var t1, reinsertRecord;
        t1 = this._unlinkedRecords;
        reinsertRecord = t1 == null ? null : t1.$get$1(0, itemTrackBy);
        if (reinsertRecord != null)
          record = this._reinsertAfter$3(reinsertRecord, record._default_iterable_differ$_prev, index);
        else if (record.currentIndex != index) {
          record.currentIndex = index;
          this._addToMoves$2(record, index);
        }
        return record;
      },
      _truncate$1: function(record) {
        var nextRecord, t1;
        for (; record != null; record = nextRecord) {
          nextRecord = record._default_iterable_differ$_next;
          this._addToRemovals$1(this._unlink$1(record));
        }
        t1 = this._unlinkedRecords;
        if (t1 != null)
          t1._default_iterable_differ$_map.clear$0(0);
        t1 = this._default_iterable_differ$_additionsTail;
        if (t1 != null)
          t1._default_iterable_differ$_nextAdded = null;
        t1 = this._movesTail;
        if (t1 != null)
          t1._nextMoved = null;
        t1 = this._itTail;
        if (t1 != null)
          t1._default_iterable_differ$_next = null;
        t1 = this._removalsTail;
        if (t1 != null)
          t1._nextRemoved = null;
        t1 = this._identityChangesTail;
        if (t1 != null)
          t1._nextIdentityChange = null;
      },
      _reinsertAfter$3: function(record, prevRecord, index) {
        var t1, prev, next;
        t1 = this._unlinkedRecords;
        if (t1 != null)
          t1.remove$1(0, record);
        prev = record._prevRemoved;
        next = record._nextRemoved;
        if (prev == null)
          this._default_iterable_differ$_removalsHead = next;
        else
          prev._nextRemoved = next;
        if (next == null)
          this._removalsTail = prev;
        else
          next._prevRemoved = prev;
        this._insertAfter$3(record, prevRecord, index);
        this._addToMoves$2(record, index);
        return record;
      },
      _insertAfter$3: function(record, prevRecord, index) {
        var t1, next;
        t1 = prevRecord == null;
        next = t1 ? this._itHead : prevRecord._default_iterable_differ$_next;
        record._default_iterable_differ$_next = next;
        record._default_iterable_differ$_prev = prevRecord;
        if (next == null)
          this._itTail = record;
        else
          next._default_iterable_differ$_prev = record;
        if (t1)
          this._itHead = record;
        else
          prevRecord._default_iterable_differ$_next = record;
        t1 = this._linkedRecords;
        if (t1 == null) {
          t1 = new R._DuplicateMap(P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, R._DuplicateItemRecordList));
          this._linkedRecords = t1;
        }
        t1.put$1(0, record);
        record.currentIndex = index;
        return record;
      },
      _unlink$1: function(record) {
        var t1, prev, next;
        t1 = this._linkedRecords;
        if (!(t1 == null))
          t1.remove$1(0, record);
        prev = record._default_iterable_differ$_prev;
        next = record._default_iterable_differ$_next;
        if (prev == null)
          this._itHead = next;
        else
          prev._default_iterable_differ$_next = next;
        if (next == null)
          this._itTail = prev;
        else
          next._default_iterable_differ$_prev = prev;
        return record;
      },
      _addToMoves$2: function(record, toIndex) {
        var t1;
        if (record.previousIndex == toIndex)
          return record;
        t1 = this._movesTail;
        if (t1 == null) {
          this._movesHead = record;
          this._movesTail = record;
        } else {
          t1._nextMoved = record;
          this._movesTail = record;
        }
        return record;
      },
      _addToRemovals$1: function(record) {
        var t1 = this._unlinkedRecords;
        if (t1 == null) {
          t1 = new R._DuplicateMap(P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, R._DuplicateItemRecordList));
          this._unlinkedRecords = t1;
        }
        t1.put$1(0, record);
        record.currentIndex = null;
        record._nextRemoved = null;
        t1 = this._removalsTail;
        if (t1 == null) {
          this._default_iterable_differ$_removalsHead = record;
          this._removalsTail = record;
          record._prevRemoved = null;
        } else {
          record._prevRemoved = t1;
          t1._nextRemoved = record;
          this._removalsTail = record;
        }
        return record;
      },
      _addIdentityChange$2: function(record, item) {
        var t1;
        record.item = item;
        t1 = this._identityChangesTail;
        if (t1 == null) {
          this._identityChangesHead = record;
          this._identityChangesTail = record;
        } else {
          t1._nextIdentityChange = record;
          this._identityChangesTail = record;
        }
        return record;
      },
      toString$0: function(_) {
        var t1 = this.super$Object$toString(0);
        return t1;
      },
      static: {
        DefaultIterableDiffer$: function(trackByFn) {
          return new R.DefaultIterableDiffer(trackByFn == null ? R.default_iterable_differ___trackByIdentity$closure() : trackByFn);
        }
      }
    },
    DefaultIterableDiffer_check_closure: {
      "^": "Closure:3;_box_0,$this",
      call$1: function(item) {
        var t1, t2, itemTrackBy, t3, t4, record;
        t1 = this.$this;
        t2 = this._box_0;
        itemTrackBy = t1._trackByFn.call$2(t2.index, item);
        t2.itemTrackBy = itemTrackBy;
        t3 = t2.record;
        if (t3 != null) {
          t4 = t3.trackById;
          t4 = t4 == null ? itemTrackBy != null : t4 !== itemTrackBy;
        } else
          t4 = true;
        if (t4) {
          t2.record = t1._mismatch$4(t3, item, itemTrackBy, t2.index);
          t2.mayBeDirty = true;
        } else {
          if (t2.mayBeDirty) {
            record = t1._verifyReinsertion$4(t3, item, itemTrackBy, t2.index);
            t2.record = record;
            t3 = record;
          }
          t4 = t3.item;
          if (t4 == null ? item != null : t4 !== item)
            t1._addIdentityChange$2(t3, item);
        }
        t2.record = t2.record._default_iterable_differ$_next;
        t1 = t2.index;
        if (typeof t1 !== "number")
          return t1.$add();
        t2.index = t1 + 1;
      }
    },
    CollectionChangeRecord: {
      "^": "Object;item,trackById,0currentIndex,0previousIndex,0_default_iterable_differ$_nextPrevious,0_default_iterable_differ$_prev,0_default_iterable_differ$_next,0_prevDup,0_nextDup,0_prevRemoved,0_nextRemoved,0_default_iterable_differ$_nextAdded,0_nextMoved,0_nextIdentityChange",
      toString$0: function(_) {
        var t1, t2, t3;
        t1 = this.previousIndex;
        t2 = this.currentIndex;
        t3 = this.item;
        return t1 == t2 ? J.toString$0$(t3) : H.S(t3) + "[" + H.S(this.previousIndex) + "->" + H.S(this.currentIndex) + "]";
      }
    },
    _DuplicateItemRecordList: {
      "^": "Object;0_head,0_tail",
      add$1: function(_, record) {
        var t1;
        H.interceptedTypeCheck(record, "$isCollectionChangeRecord");
        if (this._head == null) {
          this._tail = record;
          this._head = record;
          record._nextDup = null;
          record._prevDup = null;
        } else {
          t1 = this._tail;
          t1._nextDup = record;
          record._prevDup = t1;
          record._nextDup = null;
          this._tail = record;
        }
      },
      $get$2: function(_, trackById, afterIndex) {
        var record, t1, t2;
        for (record = this._head, t1 = afterIndex != null; record != null; record = record._nextDup) {
          if (t1) {
            t2 = record.currentIndex;
            if (typeof t2 !== "number")
              return H.iae(t2);
            t2 = afterIndex < t2;
          } else
            t2 = true;
          if (t2) {
            t2 = record.trackById;
            t2 = t2 == null ? trackById == null : t2 === trackById;
          } else
            t2 = false;
          if (t2)
            return record;
        }
        return;
      }
    },
    _DuplicateMap: {
      "^": "Object;_default_iterable_differ$_map",
      put$1: function(_, record) {
        var key, t1, duplicates;
        key = record.trackById;
        t1 = this._default_iterable_differ$_map;
        duplicates = t1.$index(0, key);
        if (duplicates == null) {
          duplicates = new R._DuplicateItemRecordList();
          t1.$indexSet(0, key, duplicates);
        }
        duplicates.add$1(0, record);
      },
      $get$2: function(_, trackById, afterIndex) {
        var recordList = this._default_iterable_differ$_map.$index(0, trackById);
        return recordList == null ? null : recordList.$get$2(0, trackById, afterIndex);
      },
      $get$1: function($receiver, trackById) {
        return this.$get$2($receiver, trackById, null);
      },
      remove$1: function(_, record) {
        var key, t1, recordList, prev, next;
        key = record.trackById;
        t1 = this._default_iterable_differ$_map;
        recordList = t1.$index(0, key);
        recordList.toString;
        prev = record._prevDup;
        next = record._nextDup;
        if (prev == null)
          recordList._head = next;
        else
          prev._nextDup = next;
        if (next == null)
          recordList._tail = prev;
        else
          next._prevDup = prev;
        if (recordList._head == null)
          if (t1.containsKey$1(0, key))
            t1.remove$1(0, key);
        return record;
      },
      toString$0: function(_) {
        return "_DuplicateMap(" + this._default_iterable_differ$_map.toString$0(0) + ")";
      }
    }
  }], ["", "package:angular/src/core/change_detection/differs/default_keyvalue_differ.dart",, N, {
    "^": "",
    DefaultKeyValueDiffer: {
      "^": "Object;_records,0_mapHead,0_appendAfter,0_previousMapHead,0_changesHead,0_changesTail,0_additionsHead,0_additionsTail,0_removalsHead",
      get$isDirty: function() {
        return this._additionsHead != null || this._changesHead != null || this._removalsHead != null;
      },
      forEachChangedItem$1: function(fn) {
        var record;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [N.KeyValueChangeRecord]});
        for (record = this._changesHead; record != null; record = record._nextChanged)
          fn.call$1(record);
      },
      forEachAddedItem$1: function(fn) {
        var record;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [N.KeyValueChangeRecord]});
        for (record = this._additionsHead; record != null; record = record._nextAdded)
          fn.call$1(record);
      },
      forEachRemovedItem$1: function(fn) {
        var record;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [N.KeyValueChangeRecord]});
        for (record = this._removalsHead; record != null; record = record._default_keyvalue_differ$_next)
          fn.call$1(record);
      },
      diff$1: function(map) {
        H.interceptedTypeCheck(map, "$isMap");
        if (map == null)
          map = P.LinkedHashMap__makeEmpty();
        if (this.check$1(0, map))
          return this;
        else
          return;
      },
      check$1: function(_, map) {
        var _box_0, t1, record, t2;
        _box_0 = {};
        this._reset$0();
        t1 = this._mapHead;
        if (t1 == null) {
          J.forEach$1$ax(map, new N.DefaultKeyValueDiffer_check_closure(this));
          return this._mapHead != null;
        }
        _box_0.insertBefore = t1;
        J.forEach$1$ax(map, new N.DefaultKeyValueDiffer_check_closure0(_box_0, this));
        record = _box_0.insertBefore;
        if (record != null) {
          this._removalsHead = record;
          for (t1 = this._records; record != null; record = record._default_keyvalue_differ$_next) {
            t1.remove$1(0, record.key);
            record.previousValue = record.currentValue;
            record.currentValue = null;
          }
          t1 = this._removalsHead;
          t2 = this._mapHead;
          if (t1 == null ? t2 == null : t1 === t2)
            this._mapHead = null;
          else
            t1._prev._default_keyvalue_differ$_next = null;
        }
        return this.get$isDirty();
      },
      _insertBeforeOrAppend$2: function(before, record) {
        var t1;
        if (before != null) {
          record._default_keyvalue_differ$_next = before;
          record._prev = before._prev;
          t1 = before._prev;
          if (!(t1 == null))
            t1._default_keyvalue_differ$_next = record;
          before._prev = record;
          if (before === this._mapHead)
            this._mapHead = record;
          this._appendAfter = before;
          return before;
        }
        t1 = this._appendAfter;
        if (t1 != null) {
          t1._default_keyvalue_differ$_next = record;
          record._prev = t1;
        } else
          this._mapHead = record;
        this._appendAfter = record;
        return;
      },
      _getOrCreateRecord$2: function(key, value) {
        var t1, record, t2;
        t1 = this._records;
        if (t1.containsKey$1(0, key)) {
          record = t1.$index(0, key);
          this._maybeAddToChanges$2(record, value);
          t1 = record._prev;
          if (!(t1 == null))
            t1._default_keyvalue_differ$_next = record._default_keyvalue_differ$_next;
          t2 = record._default_keyvalue_differ$_next;
          if (!(t2 == null))
            t2._prev = t1;
          record._prev = null;
          record._default_keyvalue_differ$_next = null;
          return record;
        }
        record = new N.KeyValueChangeRecord(key);
        record.currentValue = value;
        t1.$indexSet(0, key, record);
        this._addToAdditions$1(record);
        return record;
      },
      _maybeAddToChanges$2: function(record, value) {
        var t1 = record.currentValue;
        if (value == null ? t1 != null : value !== t1) {
          record.previousValue = t1;
          record.currentValue = value;
          if (this._changesHead == null) {
            this._changesTail = record;
            this._changesHead = record;
          } else {
            this._changesTail._nextChanged = record;
            this._changesTail = record;
          }
        }
      },
      _reset$0: function() {
        var record, record0;
        this._appendAfter = null;
        if (this.get$isDirty()) {
          record = this._mapHead;
          this._previousMapHead = record;
          for (; record != null; record = record0) {
            record0 = record._default_keyvalue_differ$_next;
            record._nextPrevious = record0;
          }
          for (record = this._changesHead; record != null; record = record._nextChanged)
            record.previousValue = record.currentValue;
          for (record = this._additionsHead; record != null; record = record._nextAdded)
            record.previousValue = record.currentValue;
          this._changesTail = null;
          this._changesHead = null;
          this._additionsTail = null;
          this._additionsHead = null;
          this._removalsHead = null;
        }
      },
      _addToAdditions$1: function(record) {
        if (this._additionsHead == null) {
          this._additionsTail = record;
          this._additionsHead = record;
        } else {
          this._additionsTail._nextAdded = record;
          this._additionsTail = record;
        }
      },
      toString$0: function(_) {
        var items, previous, changes, additions, removals, record;
        items = [];
        previous = [];
        changes = [];
        additions = [];
        removals = [];
        for (record = this._mapHead; record != null; record = record._default_keyvalue_differ$_next)
          items.push(record);
        for (record = this._previousMapHead; record != null; record = record._nextPrevious)
          previous.push(record);
        for (record = this._changesHead; record != null; record = record._nextChanged)
          changes.push(record);
        for (record = this._additionsHead; record != null; record = record._nextAdded)
          additions.push(record);
        for (record = this._removalsHead; record != null; record = record._default_keyvalue_differ$_next)
          removals.push(record);
        return "map: " + C.JSArray_methods.join$1(items, ", ") + "\nprevious: " + C.JSArray_methods.join$1(previous, ", ") + "\nadditions: " + C.JSArray_methods.join$1(additions, ", ") + "\nchanges: " + C.JSArray_methods.join$1(changes, ", ") + "\nremovals: " + C.JSArray_methods.join$1(removals, ", ") + "\n";
      }
    },
    DefaultKeyValueDiffer_check_closure: {
      "^": "Closure:4;$this",
      call$2: function(key, value) {
        var record, t1, t2;
        record = new N.KeyValueChangeRecord(key);
        record.currentValue = value;
        t1 = this.$this;
        t1._records.$indexSet(0, key, record);
        t1._addToAdditions$1(record);
        t2 = t1._appendAfter;
        if (t2 == null)
          t1._mapHead = record;
        else {
          record._prev = t2;
          t2._default_keyvalue_differ$_next = record;
        }
        t1._appendAfter = record;
      }
    },
    DefaultKeyValueDiffer_check_closure0: {
      "^": "Closure:4;_box_0,$this",
      call$2: function(key, value) {
        var t1, t2, t3, record;
        t1 = this._box_0;
        t2 = t1.insertBefore;
        t3 = this.$this;
        if (J.$eq$(t2 == null ? null : t2.key, key)) {
          t3._maybeAddToChanges$2(t1.insertBefore, value);
          t2 = t1.insertBefore;
          t3._appendAfter = t2;
          t1.insertBefore = t2._default_keyvalue_differ$_next;
        } else {
          record = t3._getOrCreateRecord$2(key, value);
          t1.insertBefore = t3._insertBeforeOrAppend$2(t1.insertBefore, record);
        }
      }
    },
    KeyValueChangeRecord: {
      "^": "Object;key>,0previousValue,0currentValue,0_nextPrevious,0_default_keyvalue_differ$_next,0_prev,0_nextAdded,0_nextChanged",
      toString$0: function(_) {
        var t1, t2, t3;
        t1 = this.previousValue;
        t2 = this.currentValue;
        t3 = this.key;
        return (t1 == null ? t2 == null : t1 === t2) ? H.S(t3) : H.S(t3) + "[" + H.S(this.previousValue) + "->" + H.S(this.currentValue) + "]";
      }
    }
  }], ["", "package:angular/src/core/change_detection/directive_change_detector.dart",, E, {
    "^": "",
    DirectiveChangeDetector: {
      "^": "Object;",
      updateElemClass$3: function(element, className, isAdd) {
        var t1 = J.getInterceptor$x(element);
        if (isAdd)
          t1.get$classes(element).add$1(0, className);
        else
          t1.get$classes(element).remove$1(0, className);
      },
      setAttr$3: function(renderElement, attributeName, attributeValue) {
        if (attributeValue != null)
          (renderElement && C.DivElement_methods).setAttribute$2(renderElement, attributeName, attributeValue);
        else {
          renderElement.toString;
          new W._ElementAttributeMap(renderElement).remove$1(0, attributeName);
        }
      }
    }
  }], ["", "package:angular/src/core/change_detection/host.dart",, M, {
    "^": "",
    ChangeDetectionHost: {
      "^": "Object;0_lastGuardedView",
      set$_lastGuardedView: function(_lastGuardedView) {
        this._lastGuardedView = H.assertSubtype(_lastGuardedView, "$isAppView", [-1], "$asAppView");
      },
      tick$0: [function() {
        var e, s, exception;
        try {
          $.ChangeDetectionHost__current = this;
          this._runningTick = true;
          this._runTick$0();
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          if (!this._runTickGuarded$0())
            this._exceptionHandler.call$3(e, H.interceptedTypeCheck(s, "$isStackTrace"), "DigestTick");
          throw exception;
        } finally {
          $.ChangeDetectionHost__current = null;
          this._runningTick = false;
          this._resetViewErrors$0();
        }
      }, "call$0", "get$tick", 0, 0, 1],
      _runTick$0: function() {
        var detectors, $length, i;
        detectors = this._changeDetectors;
        $length = detectors.length;
        for (i = 0; i < $length; ++i) {
          if (i >= detectors.length)
            return H.ioore(detectors, i);
          detectors[i].appView.detectChanges$0();
        }
      },
      _runTickGuarded$0: function() {
        var detectors, $length, i, view;
        detectors = this._changeDetectors;
        $length = detectors.length;
        for (i = 0; i < $length; ++i) {
          if (i >= detectors.length)
            return H.ioore(detectors, i);
          view = detectors[i].appView;
          this.set$_lastGuardedView(view);
          view.detectChanges$0();
        }
        return this._checkForChangeDetectionError$0();
      },
      _checkForChangeDetectionError$0: function() {
        var t1 = this._lastGuardedView;
        if (t1 != null) {
          this.reportViewException$3(t1, this._lastCaughtException, this._lastCaughtTrace);
          this._resetViewErrors$0();
          return true;
        }
        return false;
      },
      _resetViewErrors$0: function() {
        this._lastCaughtTrace = null;
        this._lastCaughtException = null;
        this.set$_lastGuardedView(null);
      },
      reportViewException$3: function(view, error, trace) {
        H.assertSubtype(view, "$isAppView", [-1], "$asAppView").viewData.set$cdState(2);
        this._exceptionHandler.call$3(error, trace, null);
      },
      run$1$1: function(callback, $R) {
        var t1, t2, t3, t4, t5;
        t1 = {};
        H.functionTypeCheck(callback, {func: 1, ret: {futureOr: 1, type: $R}});
        t2 = new P._Future(0, $.Zone__current, [$R]);
        t1.result = null;
        t3 = P.Null;
        t4 = H.functionTypeCheck(new M.ChangeDetectionHost_run_closure(t1, this, callback, new P._AsyncCompleter(t2, [$R]), $R), {func: 1, ret: t3});
        t5 = this._application_ref$_ngZone;
        t5.toString;
        H.functionTypeCheck(t4, {func: 1, ret: t3});
        t5._innerZone.run$1$1(t4, t3);
        t1 = t1.result;
        return !!J.getInterceptor$(t1).$isFuture ? t2 : t1;
      }
    },
    ChangeDetectionHost_run_closure: {
      "^": "Closure:0;_box_0,$this,callback,completer,R",
      call$0: [function() {
        var resultCast, e, s, result, t1, t2, exception;
        try {
          result = this.callback.call$0();
          this._box_0.result = result;
          if (!!J.getInterceptor$(result).$isFuture) {
            t1 = this.R;
            resultCast = H.assertSubtypeOfRuntimeType(result, [P.Future, t1]);
            t2 = this.completer;
            resultCast.then$1$2$onError(new M.ChangeDetectionHost_run__closure(t2, t1), new M.ChangeDetectionHost_run__closure0(this.$this, t2), null);
          }
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          this.$this._exceptionHandler.call$3(e, H.interceptedTypeCheck(s, "$isStackTrace"), null);
          throw exception;
        }
      }, null, null, 0, 0, null, "call"]
    },
    ChangeDetectionHost_run__closure: {
      "^": "Closure;completer,R",
      call$1: [function(result) {
        H.assertSubtypeOfRuntimeType(result, this.R);
        this.completer.complete$1(0, result);
      }, null, null, 4, 0, null, 8, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.R]};
      }
    },
    ChangeDetectionHost_run__closure0: {
      "^": "Closure:4;$this,completer",
      call$2: [function(e, s) {
        var sCasted = H.interceptedTypeCheck(s, "$isStackTrace");
        this.completer.completeError$2(e, sCasted);
        this.$this._exceptionHandler.call$3(e, H.interceptedTypeCheck(sCasted, "$isStackTrace"), null);
      }, null, null, 8, 0, null, 6, 24, "call"]
    }
  }], ["", "package:angular/src/core/di/opaque_token.dart",, S, {
    "^": "",
    OpaqueToken: {
      "^": "Object;_uniqueName,$ti",
      toString$0: function(_) {
        return this.super$Object$toString(0);
      }
    }
  }], ["", "package:angular/src/core/linker/app_view.dart",, S, {
    "^": "",
    _findLastRenderNode: function(node) {
      var lastNode, nestedViews, i, t1;
      if (node instanceof V.ViewContainer) {
        lastNode = node.nativeElement;
        nestedViews = node.nestedViews;
        if (nestedViews != null)
          for (i = nestedViews.length - 1; i >= 0; --i) {
            t1 = nestedViews[i].viewData.rootNodesOrViewContainers;
            if (t1.length !== 0)
              return S._findLastRenderNode((t1 && C.JSArray_methods).get$last(t1));
          }
      } else {
        H.interceptedTypeCheck(node, "$isNode");
        lastNode = node;
      }
      return lastNode;
    },
    _appendNestedViewRenderNodes: function(targetElement, appElement) {
      var t1, nestedViews, nestedViewCount, viewIndex, projectables, projectableCount, i, projectable;
      t1 = J.getInterceptor$x(targetElement);
      t1.append$1(targetElement, appElement.nativeElement);
      nestedViews = appElement.nestedViews;
      if (nestedViews == null || nestedViews.length === 0)
        return;
      nestedViewCount = nestedViews.length;
      for (viewIndex = 0; viewIndex < nestedViewCount; ++viewIndex) {
        if (viewIndex >= nestedViews.length)
          return H.ioore(nestedViews, viewIndex);
        projectables = nestedViews[viewIndex].viewData.rootNodesOrViewContainers;
        projectableCount = projectables.length;
        for (i = 0; i < projectableCount; ++i) {
          if (i >= projectables.length)
            return H.ioore(projectables, i);
          projectable = projectables[i];
          if (projectable instanceof V.ViewContainer)
            S._appendNestedViewRenderNodes(targetElement, projectable);
          else
            t1.append$1(targetElement, H.interceptedTypeCheck(projectable, "$isNode"));
        }
      }
    },
    _flattenNestedViewRenderNodes: function(nodes, renderNodes) {
      var nodeCount, i, node, nestedViews, len, k;
      H.assertSubtype(renderNodes, "$isList", [W.Node], "$asList");
      nodeCount = nodes.length;
      for (i = 0; i < nodeCount; ++i) {
        if (i >= nodes.length)
          return H.ioore(nodes, i);
        node = nodes[i];
        if (node instanceof V.ViewContainer) {
          C.JSArray_methods.add$1(renderNodes, node.nativeElement);
          nestedViews = node.nestedViews;
          if (nestedViews != null)
            for (len = nestedViews.length, k = 0; k < len; ++k) {
              if (k >= nestedViews.length)
                return H.ioore(nestedViews, k);
              S._flattenNestedViewRenderNodes(nestedViews[k].viewData.rootNodesOrViewContainers, renderNodes);
            }
        } else
          C.JSArray_methods.add$1(renderNodes, H.interceptedTypeCheck(node, "$isNode"));
      }
      return renderNodes;
    },
    _moveNodesAfterSibling: function(sibling, nodes) {
      var $parent, t1, nextSibling, t2, i;
      H.assertSubtype(nodes, "$isList", [W.Node], "$asList");
      $parent = sibling.parentNode;
      t1 = nodes.length;
      if (t1 !== 0 && $parent != null) {
        nextSibling = sibling.nextSibling;
        if (nextSibling != null)
          for (t2 = J.getInterceptor$x($parent), i = 0; i < t1; ++i) {
            if (i >= nodes.length)
              return H.ioore(nodes, i);
            t2.insertBefore$2($parent, nodes[i], nextSibling);
          }
        else
          for (t2 = J.getInterceptor$x($parent), i = 0; i < t1; ++i) {
            if (i >= nodes.length)
              return H.ioore(nodes, i);
            t2.append$1($parent, nodes[i]);
          }
      }
    },
    createAndAppend: function(doc, tagName, $parent) {
      var t1 = doc.createElement(tagName);
      return H.interceptedTypeCheck(J.append$1$x($parent, t1), "$isElement");
    },
    createDivAndAppend: function(doc, $parent) {
      var t1 = doc.createElement("div");
      return H.interceptedTypeCheck(J.append$1$x($parent, t1), "$isDivElement");
    },
    createSpanAndAppend: function(doc, $parent) {
      var t1 = doc.createElement("span");
      return H.interceptedTypeCheck(J.append$1$x($parent, t1), "$isSpanElement");
    },
    _detachAll: function(viewRootNodes) {
      var len, i, node, t1;
      H.assertSubtype(viewRootNodes, "$isList", [W.Node], "$asList");
      len = viewRootNodes.length;
      for (i = 0; i < len; ++i) {
        if (i >= viewRootNodes.length)
          return H.ioore(viewRootNodes, i);
        node = viewRootNodes[i];
        t1 = node.parentNode;
        if (t1 != null)
          J._removeChild$1$x(t1, node);
        $.domRootRendererIsDirty = true;
      }
    },
    AppViewData: {
      "^": "Object;type,ref,destroyed,0_viewContainerElement,0projectableNodes,0_hostInjector,0subscriptions,0_onDestroyCallbacks,0rootNodesOrViewContainers,0inlinedNodes,parentIndex,_cdMode,_skipChangeDetection,_cdState,$ti",
      set$_onDestroyCallbacks: function(_onDestroyCallbacks) {
        this._onDestroyCallbacks = H.assertSubtype(_onDestroyCallbacks, "$isList", [{func: 1, ret: -1}], "$asList");
      },
      set$cdMode: function(value) {
        if (this._cdMode !== value) {
          this._cdMode = value;
          this.updateSkipChangeDetectionFlag$0();
        }
      },
      set$cdState: function(value) {
        if (this._cdState !== value) {
          this._cdState = value;
          this.updateSkipChangeDetectionFlag$0();
        }
      },
      updateSkipChangeDetectionFlag$0: function() {
        var t1 = this._cdMode;
        this._skipChangeDetection = t1 === 4 || t1 === 2 || this._cdState === 2;
      },
      destroy$0: function() {
        var t1, len, i;
        t1 = this._onDestroyCallbacks;
        if (t1 != null)
          for (len = t1.length, i = 0; i < len; ++i) {
            t1 = this._onDestroyCallbacks;
            if (i >= t1.length)
              return H.ioore(t1, i);
            t1[i].call$0();
          }
        t1 = this.subscriptions;
        if (t1 == null)
          return;
        for (len = t1.length, i = 0; i < len; ++i) {
          t1 = this.subscriptions;
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1[i].cancel$0(0);
        }
      },
      static: {
        AppViewData_AppViewData: function(appView, cdMode, viewType, parentIndex, $T) {
          return new S.AppViewData(viewType, new L.ViewRefImpl(H.assertSubtype(appView, "$isAppView", [$T], "$asAppView")), false, parentIndex, cdMode, false, 0, [$T]);
        }
      }
    },
    AppView: {
      "^": "Object;0viewData,0ctx,$ti",
      set$viewData: function(viewData) {
        this.viewData = H.assertSubtype(viewData, "$isAppViewData", [H.getRuntimeTypeArgument(this, "AppView", 0)], "$asAppViewData");
      },
      set$ctx: function(ctx) {
        this.ctx = H.assertSubtypeOfRuntimeType(ctx, H.getRuntimeTypeArgument(this, "AppView", 0));
      },
      setupComponentType$1: function(renderType) {
        var t1, styles, t2;
        if (!renderType.stylesShimmed) {
          t1 = $.sharedStylesHost;
          renderType.toString;
          styles = H.setRuntimeTypeInfo([], [P.String]);
          t2 = renderType.id;
          renderType._flattenStyles$3(t2, renderType.templateStyles, styles);
          t1.addStyles$1(styles);
          if (renderType.encapsulation === C.ViewEncapsulation_0) {
            renderType._hostAttr = "_nghost-" + t2;
            renderType._viewAttr = "_ngcontent-" + t2;
          }
          renderType.stylesShimmed = true;
        }
        this.componentType = renderType;
      },
      create$2: function(_, context, givenProjectableNodes) {
        this.set$ctx(H.assertSubtypeOfRuntimeType(context, H.getRuntimeTypeArgument(this, "AppView", 0)));
        this.viewData.projectableNodes = givenProjectableNodes;
        return this.build$0();
      },
      build$0: function() {
        return;
      },
      init0$1: function(e) {
        this.viewData.rootNodesOrViewContainers = [e];
      },
      init$2: function(rootNodesOrViewContainers, subscriptions) {
        var t1 = this.viewData;
        t1.rootNodesOrViewContainers = rootNodesOrViewContainers;
        t1.subscriptions = subscriptions;
      },
      removeInlinedNodes$2: function(inlinedNodes, isRoot) {
        var nodeList, i, node;
        H.assertSubtype(inlinedNodes, "$isList", [W.Node], "$asList");
        S._detachAll(inlinedNodes);
        nodeList = this.viewData.rootNodesOrViewContainers;
        for (i = nodeList.length - 1; i >= 0; --i) {
          if (i >= nodeList.length)
            return H.ioore(nodeList, i);
          node = nodeList[i];
          if (C.JSArray_methods.contains$1(inlinedNodes, node))
            C.JSArray_methods.remove$1(nodeList, node);
        }
      },
      injectorGet$3: function(token, nodeIndex, notFoundValue) {
        var result, view, injector;
        A.debugInjectorEnter(token);
        for (result = C.C_Object, view = this; result === C.C_Object;) {
          if (nodeIndex != null)
            result = view.injectorGetInternal$3(token, nodeIndex, C.C_Object);
          if (result === C.C_Object) {
            injector = view.viewData._hostInjector;
            if (injector != null)
              result = injector.$get$2(0, token, notFoundValue);
          }
          nodeIndex = view.viewData.parentIndex;
          view = view.parentView;
        }
        A.debugInjectorLeave(token);
        return result;
      },
      injectorGet$2: function(token, nodeIndex) {
        return this.injectorGet$3(token, nodeIndex, C.C_Object);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        return notFoundResult;
      },
      destroy$0: function() {
        var t1 = this.viewData;
        if (t1.destroyed)
          return;
        t1.destroyed = true;
        t1.destroy$0();
        this.destroyInternal$0();
        this.dirtyParentQueriesInternal$0();
      },
      destroyInternal$0: function() {
      },
      get$lastRootNode: function() {
        var t1 = this.viewData.rootNodesOrViewContainers;
        return S._findLastRenderNode(t1.length !== 0 ? (t1 && C.JSArray_methods).get$last(t1) : null);
      },
      dirtyParentQueriesInternal$0: function() {
      },
      detectChanges$0: function() {
        if (this.viewData._skipChangeDetection)
          return;
        var t1 = $.ChangeDetectionHost__current;
        if ((t1 == null ? null : t1._lastGuardedView) != null)
          this.detectCrash$0();
        else
          this.detectChangesInternal$0();
        t1 = this.viewData;
        if (t1._cdMode === 1) {
          t1._cdMode = 2;
          t1._skipChangeDetection = true;
        }
        t1.set$cdState(1);
      },
      detectCrash$0: function() {
        var e, s, exception, current;
        try {
          this.detectChangesInternal$0();
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          current = $.ChangeDetectionHost__current;
          current.set$_lastGuardedView(this);
          current._lastCaughtException = e;
          current._lastCaughtTrace = s;
        }
      },
      detectChangesInternal$0: function() {
      },
      markPathToRootAsCheckOnce$0: function() {
        var view, t1, cdMode, t2;
        for (view = this; view != null;) {
          t1 = view.viewData;
          cdMode = t1._cdMode;
          if (cdMode === 4)
            break;
          if (cdMode === 2)
            if (cdMode !== 1) {
              t1._cdMode = 1;
              t2 = t1._cdState === 2;
              t1._skipChangeDetection = t2;
            }
          if (t1.type === C.ViewType_1)
            view = view.parentView;
          else {
            t1 = t1._viewContainerElement;
            view = t1 == null ? null : t1.parentView;
          }
        }
      },
      initViewRoot$1: function(hostElement) {
        var t1 = this.componentType._hostAttr;
        if (t1 != null)
          hostElement.classList.add(t1);
        return hostElement;
      },
      updateClass$3: function(element, className, isAdd) {
        if (isAdd)
          element.classList.add(className);
        else
          element.classList.remove(className);
      },
      updateElemClass$3: function(element, className, isAdd) {
        if (isAdd)
          element.classList.add(className);
        else
          element.classList.remove(className);
      },
      setAttr$3: function(renderElement, attributeName, attributeValue) {
        if (attributeValue != null)
          J.setAttribute$2$x(renderElement, attributeName, attributeValue);
        else {
          renderElement.toString;
          new W._ElementAttributeMap(renderElement).remove$1(0, attributeName);
        }
        $.domRootRendererIsDirty = true;
      },
      addShimC$1: function(element) {
        var contentClass = this.componentType._viewAttr;
        if (contentClass != null)
          element.classList.add(contentClass);
      },
      addShimE$1: function(element) {
        var contentClass = this.componentType._viewAttr;
        if (contentClass != null)
          J.get$classes$x(element).add$1(0, contentClass);
      },
      project$2: function(parentElement, index) {
        var projectableNodes, projectables, projectableCount, t1, i, projectable, t2, len, n, node;
        if (parentElement == null)
          return;
        projectableNodes = this.viewData.projectableNodes;
        if (projectableNodes == null || index >= projectableNodes.length)
          return;
        if (index >= projectableNodes.length)
          return H.ioore(projectableNodes, index);
        projectables = projectableNodes[index];
        projectableCount = projectables.length;
        for (t1 = J.getInterceptor$x(parentElement), i = 0; i < projectableCount; ++i) {
          if (i >= projectables.length)
            return H.ioore(projectables, i);
          projectable = projectables[i];
          t2 = J.getInterceptor$(projectable);
          if (!!t2.$isViewContainer)
            if (projectable.nestedViews == null)
              t1.append$1(parentElement, projectable.nativeElement);
            else
              S._appendNestedViewRenderNodes(parentElement, projectable);
          else if (!!t2.$isList) {
            len = t2.get$length(projectable);
            if (typeof len !== "number")
              return H.iae(len);
            n = 0;
            for (; n < len; ++n) {
              node = t2.$index(projectable, n);
              if (node instanceof V.ViewContainer)
                if (node.nestedViews == null)
                  t1.append$1(parentElement, node.nativeElement);
                else
                  S._appendNestedViewRenderNodes(parentElement, node);
              else
                t1.append$1(parentElement, H.interceptedTypeCheck(node, "$isNode"));
            }
          } else
            t1.append$1(parentElement, H.interceptedTypeCheck(projectable, "$isNode"));
        }
        $.domRootRendererIsDirty = true;
      },
      eventHandler0$1$1: function(handler, $E) {
        return new S.AppView_eventHandler0_closure(this, H.functionTypeCheck(handler, {func: 1, ret: -1}), $E);
      },
      eventHandler1$2$1: function(handler, $E, $F) {
        H.assertIsSubtype($F, $E, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'F' in 'eventHandler1'.");
        return new S.AppView_eventHandler1_closure(this, H.functionTypeCheck(handler, {func: 1, ret: -1, args: [$F]}), $E, $F);
      }
    },
    AppView_eventHandler0_closure: {
      "^": "Closure;$this,handler,E",
      call$1: [function($event) {
        var t1, t2;
        H.assertSubtypeOfRuntimeType($event, this.E);
        this.$this.markPathToRootAsCheckOnce$0();
        t1 = $.appViewUtils.eventManager.zone;
        t1.toString;
        t2 = H.functionTypeCheck(this.handler, {func: 1, ret: -1});
        t1._innerZone.runGuarded$1(t2);
      }, null, null, 4, 0, null, 7, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.E]};
      }
    },
    AppView_eventHandler1_closure: {
      "^": "Closure;$this,handler,E,F",
      call$1: [function($event) {
        var t1, t2;
        H.assertSubtypeOfRuntimeType($event, this.E);
        this.$this.markPathToRootAsCheckOnce$0();
        t1 = $.appViewUtils.eventManager.zone;
        t1.toString;
        t2 = H.functionTypeCheck(new S.AppView_eventHandler1__closure(this.handler, $event, this.F), {func: 1, ret: -1});
        t1._innerZone.runGuarded$1(t2);
      }, null, null, 4, 0, null, 7, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.E]};
      }
    },
    AppView_eventHandler1__closure: {
      "^": "Closure:1;handler,event,F",
      call$0: [function() {
        return this.handler.call$1(H.assertSubtypeOfRuntimeType(this.event, this.F));
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular/src/core/linker/app_view_utils.dart",, Q, {
    "^": "",
    interpolate0: function(p) {
      if (typeof p === "string")
        return p;
      return p == null ? "" : H.S(p);
    },
    pureProxy1: function(fn, $T, S0) {
      var t1 = {};
      H.functionTypeCheck(fn, {func: 1, ret: $T, args: [S0]});
      t1.result = null;
      t1.first = true;
      t1.v0 = null;
      return new Q.pureProxy1_closure(t1, fn, S0, $T);
    },
    pureProxy2: function(fn, $T, S0, S1) {
      var t1 = {};
      H.functionTypeCheck(fn, {func: 1, ret: $T, args: [S0, S1]});
      t1.result = null;
      t1.first = true;
      t1.v0 = null;
      t1.v1 = null;
      return new Q.pureProxy2_closure(t1, fn, S0, S1, $T);
    },
    AppViewUtils: {
      "^": "Object;_appId,eventManager,sanitizer",
      createRenderType$3: function(templateUrl, encapsulation, styles) {
        var t1, t2;
        t1 = H.S(this._appId) + "-";
        t2 = $.AppViewUtils__nextCompTypeId;
        $.AppViewUtils__nextCompTypeId = t2 + 1;
        return new A.RenderComponentType(t1 + t2, templateUrl, encapsulation, styles, false);
      }
    },
    pureProxy1_closure: {
      "^": "Closure;_box_0,fn,S0,T",
      call$1: [function(p0) {
        var t1, t2;
        H.assertSubtypeOfRuntimeType(p0, this.S0);
        t1 = this._box_0;
        if (!t1.first) {
          t2 = t1.v0;
          t2 = t2 == null ? p0 != null : t2 !== p0;
        } else
          t2 = true;
        if (t2) {
          t1.first = false;
          t1.v0 = p0;
          t1.result = this.fn.call$1(p0);
        }
        return t1.result;
      }, null, null, 4, 0, null, 30, "call"],
      $signature: function() {
        return {func: 1, ret: this.T, args: [this.S0]};
      }
    },
    pureProxy2_closure: {
      "^": "Closure;_box_0,fn,S0,S1,T",
      call$2: [function(p0, p1) {
        var t1, t2;
        H.assertSubtypeOfRuntimeType(p0, this.S0);
        H.assertSubtypeOfRuntimeType(p1, this.S1);
        t1 = this._box_0;
        if (!t1.first) {
          t2 = t1.v0;
          if (t2 == null ? p0 == null : t2 === p0) {
            t2 = t1.v1;
            t2 = t2 == null ? p1 != null : t2 !== p1;
          } else
            t2 = true;
        } else
          t2 = true;
        if (t2) {
          t1.first = false;
          t1.v0 = p0;
          t1.v1 = p1;
          t1.result = this.fn.call$2(p0, p1);
        }
        return t1.result;
      }, null, null, 8, 0, null, 30, 74, "call"],
      $signature: function() {
        return {func: 1, ret: this.T, args: [this.S0, this.S1]};
      }
    }
  }], ["", "package:angular/src/core/linker/component_factory.dart",, D, {
    "^": "",
    ComponentRef: {
      "^": "Object;_parentView,_nodeIndex,_nativeElement,_component,$ti"
    },
    ComponentFactory: {
      "^": "Object;selector,_viewFactory,$ti",
      create$2: function(_, injector, projectableNodes) {
        var hostView, t1;
        hostView = this._viewFactory.call$2(null, null);
        t1 = hostView.viewData;
        t1._hostInjector = injector;
        t1.projectableNodes = C.List_empty;
        return hostView.build$0();
      },
      create$1: function($receiver, injector) {
        return this.create$2($receiver, injector, null);
      }
    }
  }], ["", "package:angular/src/core/linker/component_loader.dart",, M, {
    "^": "",
    ComponentLoader: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/core/linker/dynamic_component_loader.dart",, L, {
    "^": "",
    SlowComponentLoader: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/core/linker/element_ref.dart",, Z, {
    "^": "",
    ElementRef: {
      "^": "Object;nativeElement"
    }
  }], ["", "package:angular/src/core/linker/template_ref.dart",, D, {
    "^": "",
    TemplateRef: {
      "^": "Object;_template_ref$_viewContainer,_template_ref$_viewFactory",
      createEmbeddedView$0: function() {
        var t1, parentView, view;
        t1 = this._template_ref$_viewContainer;
        parentView = t1.parentView;
        view = H.interceptedTypeCheck(this._template_ref$_viewFactory.call$2(parentView, t1.index), "$isAppView");
        view.create$2(0, parentView.ctx, parentView.viewData.projectableNodes);
        return view.viewData.ref;
      }
    }
  }], ["", "package:angular/src/core/linker/view_container.dart",, V, {
    "^": "",
    _assertCanMove: function(view) {
      if (view.viewData.type === C.ViewType_1)
        throw H.wrapException(P.ArgumentError$("Component views can't be moved!"));
    },
    ViewContainer: {
      "^": "ComponentLoader;index,parentIndex,parentView,nativeElement,0nestedViews,0_elementRef,0_parentInjector",
      set$nestedViews: function(nestedViews) {
        this.nestedViews = H.assertSubtype(nestedViews, "$isList", [[S.AppView,,]], "$asList");
      },
      get$length: function(_) {
        var nested = this.nestedViews;
        return nested == null ? 0 : nested.length;
      },
      detectChangesInNestedViews$0: function() {
        var _nestedViews, len, i;
        _nestedViews = this.nestedViews;
        if (_nestedViews == null)
          return;
        for (len = _nestedViews.length, i = 0; i < len; ++i) {
          if (i >= _nestedViews.length)
            return H.ioore(_nestedViews, i);
          _nestedViews[i].detectChanges$0();
        }
      },
      destroyNestedViews$0: function() {
        var _nestedViews, len, i;
        _nestedViews = this.nestedViews;
        if (_nestedViews == null)
          return;
        for (len = _nestedViews.length, i = 0; i < len; ++i) {
          if (i >= _nestedViews.length)
            return H.ioore(_nestedViews, i);
          _nestedViews[i].destroy$0();
        }
      },
      createEmbeddedView$1: function(templateRef) {
        var viewRef = templateRef.createEmbeddedView$0();
        this.attachView$2(viewRef.appView, this.get$length(this));
        return viewRef;
      },
      insert$2: function(_, viewRef, index) {
        if (index === -1)
          index = this.get$length(this);
        this.attachView$2(viewRef.appView, index);
        return viewRef;
      },
      move$2: function(viewRef, currentIndex) {
        var t1, views, t2, refRenderNode;
        if (currentIndex === -1)
          return;
        t1 = viewRef.appView;
        V._assertCanMove(t1);
        views = this.nestedViews;
        C.JSArray_methods.removeAt$1(views, (views && C.JSArray_methods).indexOf$1(views, t1));
        C.JSArray_methods.insert$2(views, currentIndex, t1);
        if (currentIndex > 0) {
          t2 = currentIndex - 1;
          if (t2 >= views.length)
            return H.ioore(views, t2);
          refRenderNode = views[t2].get$lastRootNode();
        } else
          refRenderNode = this.nativeElement;
        if (refRenderNode != null) {
          t2 = [W.Node];
          S._moveNodesAfterSibling(refRenderNode, H.assertSubtype(S._flattenNestedViewRenderNodes(t1.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], t2)), "$isList", t2, "$asList"));
          $.domRootRendererIsDirty = true;
        }
        t1.dirtyParentQueriesInternal$0();
        return viewRef;
      },
      remove$1: function(_, index) {
        this.detachView$1(index === -1 ? this.get$length(this) - 1 : index).destroy$0();
      },
      remove$0: function($receiver) {
        return this.remove$1($receiver, -1);
      },
      clear$0: function(_) {
        var i, nested, index;
        for (i = this.get$length(this) - 1; i >= 0; --i) {
          if (i === -1) {
            nested = this.nestedViews;
            index = (nested == null ? 0 : nested.length) - 1;
          } else
            index = i;
          this.detachView$1(index).destroy$0();
        }
      },
      mapNestedViews$2$1: function(callback, $T, $U) {
        var nestedViews, result, l, i;
        H.assertIsSubtype($U, [S.AppView,,], "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'U' in 'mapNestedViews'.");
        H.functionTypeCheck(callback, {func: 1, ret: [P.List, $T], args: [$U]});
        nestedViews = this.nestedViews;
        if (nestedViews == null || nestedViews.length === 0)
          return C.List_empty1;
        result = H.setRuntimeTypeInfo([], [$T]);
        for (l = nestedViews.length, i = 0; i < l; ++i) {
          if (i >= nestedViews.length)
            return H.ioore(nestedViews, i);
          C.JSArray_methods.addAll$1(result, callback.call$1(H.assertSubtypeOfRuntimeType(nestedViews[i], $U)));
        }
        return result;
      },
      attachView$2: function(view, viewIndex) {
        var _nestedViews, t1, refRenderNode;
        V._assertCanMove(view);
        _nestedViews = this.nestedViews;
        if (_nestedViews == null)
          _nestedViews = H.setRuntimeTypeInfo([], [[S.AppView,,]]);
        C.JSArray_methods.insert$2(_nestedViews, viewIndex, view);
        if (typeof viewIndex !== "number")
          return viewIndex.$gt();
        if (viewIndex > 0) {
          t1 = viewIndex - 1;
          if (t1 >= _nestedViews.length)
            return H.ioore(_nestedViews, t1);
          refRenderNode = _nestedViews[t1].get$lastRootNode();
        } else
          refRenderNode = this.nativeElement;
        this.set$nestedViews(_nestedViews);
        if (refRenderNode != null) {
          t1 = [W.Node];
          S._moveNodesAfterSibling(refRenderNode, H.assertSubtype(S._flattenNestedViewRenderNodes(view.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], t1)), "$isList", t1, "$asList"));
          $.domRootRendererIsDirty = true;
        }
        view.viewData._viewContainerElement = this;
        view.dirtyParentQueriesInternal$0();
      },
      detachView$1: function(viewIndex) {
        var t1, view, t2;
        t1 = this.nestedViews;
        view = (t1 && C.JSArray_methods).removeAt$1(t1, viewIndex);
        V._assertCanMove(view);
        t1 = [W.Node];
        S._detachAll(H.assertSubtype(S._flattenNestedViewRenderNodes(view.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], t1)), "$isList", t1, "$asList"));
        t2 = view.viewData.inlinedNodes;
        if (t2 != null)
          S._detachAll(H.assertSubtype(t2, "$isList", t1, "$asList"));
        view.dirtyParentQueriesInternal$0();
        view.viewData._viewContainerElement = null;
        return view;
      },
      $isViewContainerRef: 1
    }
  }], ["", "package:angular/src/core/linker/view_ref.dart",, L, {
    "^": "",
    ViewRefImpl: {
      "^": "Object;appView",
      $isChangeDetectorRef: 1,
      $isViewRef: 1,
      $isEmbeddedViewRef: 1
    }
  }], ["", "package:angular/src/core/linker/view_type.dart",, R, {
    "^": "",
    ViewType: {
      "^": "Object;index,_name",
      toString$0: function(_) {
        return this._name;
      }
    }
  }], ["", "package:angular/src/core/metadata/view.dart",, A, {
    "^": "",
    ViewEncapsulation: {
      "^": "Object;index,_view$_name",
      toString$0: function(_) {
        return this._view$_name;
      }
    }
  }], ["", "package:angular/src/core/render/api.dart",, A, {
    "^": "",
    RenderComponentType: {
      "^": "Object;id>,templateUrl,encapsulation,templateStyles,0_viewAttr,0_hostAttr,stylesShimmed",
      _flattenStyles$3: function(compId, styles, target) {
        var t1, styleCount, i, style, t2;
        H.assertSubtype(target, "$isList", [P.String], "$asList");
        t1 = J.getInterceptor$asx(styles);
        styleCount = t1.get$length(styles);
        if (typeof styleCount !== "number")
          return H.iae(styleCount);
        i = 0;
        for (; i < styleCount; ++i) {
          style = t1.$index(styles, i);
          if (!!J.getInterceptor$(style).$isList)
            this._flattenStyles$3(compId, style, target);
          else {
            H.stringTypeCheck(style);
            t2 = $.$get$_componentIdPlaceholder();
            style.toString;
            C.JSArray_methods.add$1(target, H.stringReplaceAllUnchecked(style, t2, compId));
          }
        }
        return target;
      }
    }
  }], ["", "package:angular/src/core/security.dart",, E, {
    "^": "",
    SanitizationService: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/core/testability/testability.dart",, D, {
    "^": "",
    Testability: {
      "^": "Object;_testability$_ngZone,_pendingCount,_isZoneStable,_didWork,_testability$_callbacks",
      _watchAngularEvents$0: function() {
        var t1, t2, t3;
        t1 = this._testability$_ngZone;
        t2 = t1._onTurnStart;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new D.Testability__watchAngularEvents_closure(this));
        t2 = P.Null;
        t1.toString;
        t3 = H.functionTypeCheck(new D.Testability__watchAngularEvents_closure0(this), {func: 1, ret: t2});
        t1._outerZone.run$1$1(t3, t2);
      },
      isStable$0: [function(_) {
        return this._isZoneStable && this._pendingCount === 0 && !this._testability$_ngZone._hasPendingMacrotasks;
      }, "call$0", "get$isStable", 1, 0, 23],
      _runCallbacksIfReady$0: function() {
        if (this.isStable$0(0))
          P.scheduleMicrotask(new D.Testability__runCallbacksIfReady_closure(this));
        else
          this._didWork = true;
      },
      whenStable$1: [function(_, callback) {
        C.JSArray_methods.add$1(this._testability$_callbacks, H.interceptedTypeCheck(callback, "$isFunction"));
        this._runCallbacksIfReady$0();
      }, "call$1", "get$whenStable", 5, 0, 174, 10]
    },
    Testability__watchAngularEvents_closure: {
      "^": "Closure:12;$this",
      call$1: [function(_) {
        var t1 = this.$this;
        t1._didWork = true;
        t1._isZoneStable = false;
      }, null, null, 4, 0, null, 0, "call"]
    },
    Testability__watchAngularEvents_closure0: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._testability$_ngZone._onTurnDone;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new D.Testability__watchAngularEvents__closure(t1));
      }, null, null, 0, 0, null, "call"]
    },
    Testability__watchAngularEvents__closure: {
      "^": "Closure:12;$this",
      call$1: [function(_) {
        if ($.Zone__current.$index(0, $.$get$NgZone__anyZoneKey()) === true)
          H.throwExpression(P.Exception_Exception("Expected to not be in Angular Zone, but it is!"));
        P.scheduleMicrotask(new D.Testability__watchAngularEvents___closure(this.$this));
      }, null, null, 4, 0, null, 0, "call"]
    },
    Testability__watchAngularEvents___closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._isZoneStable = true;
        t1._runCallbacksIfReady$0();
      }, null, null, 0, 0, null, "call"]
    },
    Testability__runCallbacksIfReady_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2, t3;
        for (t1 = this.$this, t2 = t1._testability$_callbacks; t3 = t2.length, t3 !== 0;) {
          if (0 >= t3)
            return H.ioore(t2, -1);
          t2.pop().call$1(t1._didWork);
        }
        t1._didWork = false;
      }, null, null, 0, 0, null, "call"]
    },
    TestabilityRegistry: {
      "^": "Object;_applications,_testabilityGetter"
    },
    _NoopGetTestability: {
      "^": "Object;",
      findTestabilityInTree$2: function(registry, elem) {
        return;
      },
      $isGetTestability: 1
    }
  }], ["", "package:angular/src/core/zone/ng_zone.dart",, Y, {
    "^": "",
    NgZone: {
      "^": "Object;_thisZoneKey,_onTurnStart,_onMicrotaskEmpty,_onTurnDone,_onError,0_outerZone,0_innerZone,_hasPendingMicrotasks,_hasPendingMacrotasks,_isStable,_nesting,_isRunning,_disposed,_pendingMicrotasks,_pendingTimers",
      NgZone$1$enableLongStackTrace: function(enableLongStackTrace) {
        var t1 = $.Zone__current;
        this._outerZone = t1;
        this._innerZone = this._createInnerZone$2$handleUncaughtError(t1, this.get$_onErrorWithoutLongStackTrace());
      },
      _createInnerZone$2$handleUncaughtError: function(zone, handleUncaughtError) {
        return zone.fork$2$specification$zoneValues(P._ZoneSpecification$(null, this.get$_createTimer(), null, null, H.functionTypeCheck(handleUncaughtError, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}), null, null, null, null, this.get$_run(), this.get$_runBinary(), this.get$_runUnary(), this.get$_ng_zone$_scheduleMicrotask()), P.LinkedHashMap__makeLiteral([this._thisZoneKey, true, $.$get$NgZone__anyZoneKey(), true]));
      },
      _ng_zone$_scheduleMicrotask$4: [function($self, $parent, zone, fn) {
        var safeMicrotask, implementation, implZone;
        H.functionTypeCheck(fn, {func: 1, ret: -1});
        if (this._pendingMicrotasks === 0) {
          this._hasPendingMicrotasks = true;
          this._checkStable$0();
        }
        ++this._pendingMicrotasks;
        $parent.toString;
        safeMicrotask = H.functionTypeCheck(new Y.NgZone__scheduleMicrotask_closure(this, fn), {func: 1});
        implementation = $parent._delegationTarget.get$_scheduleMicrotask();
        implZone = implementation.zone;
        implementation.$function.call$4(implZone, P._parentDelegate(implZone), zone, safeMicrotask);
      }, "call$4", "get$_ng_zone$_scheduleMicrotask", 16, 0, 36],
      _run$1$4: [function($self, $parent, zone, fn, $R) {
        var t1, implementation, implZone;
        H.functionTypeCheck(fn, {func: 1, ret: $R});
        $parent.toString;
        t1 = H.functionTypeCheck(new Y.NgZone__run_closure(this, fn, $R), {func: 1, ret: $R});
        implementation = $parent._delegationTarget.get$_async$_run();
        implZone = implementation.zone;
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}).call$1$4(implZone, P._parentDelegate(implZone), zone, t1, $R);
      }, function($self, $parent, zone, fn) {
        return this._run$1$4($self, $parent, zone, fn, null);
      }, "_run$4", "call$1$4", "call$4", "get$_run", 16, 0, 43],
      _runUnary$2$5: [function($self, $parent, zone, fn, arg, $R, $T) {
        var t1, implementation, implZone;
        H.functionTypeCheck(fn, {func: 1, ret: $R, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        $parent.toString;
        t1 = H.functionTypeCheck(new Y.NgZone__runUnary_closure(this, fn, $T, $R), {func: 1, ret: $R, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        implementation = $parent._delegationTarget.get$_async$_runUnary();
        implZone = implementation.zone;
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}, 1]}).call$2$5(implZone, P._parentDelegate(implZone), zone, t1, arg, $R, $T);
      }, function($self, $parent, zone, fn, arg) {
        return this._runUnary$2$5($self, $parent, zone, fn, arg, null, null);
      }, "_runUnary$5", "call$2$5", "call$5", "get$_runUnary", 20, 0, 50],
      _runBinary$3$6: [function($self, $parent, zone, fn, arg1, arg2, $R, T1, T2) {
        var t1, implementation, implZone;
        H.functionTypeCheck(fn, {func: 1, ret: $R, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        $parent.toString;
        t1 = H.functionTypeCheck(new Y.NgZone__runBinary_closure(this, fn, T1, T2, $R), {func: 1, ret: $R, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        implementation = $parent._delegationTarget.get$_async$_runBinary();
        implZone = implementation.zone;
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}, 1, 2]}).call$3$6(implZone, P._parentDelegate(implZone), zone, t1, arg1, arg2, $R, T1, T2);
      }, "call$3$6", "get$_runBinary", 24, 0, 55],
      _onEnter$0: function() {
        ++this._nesting;
        if (this._isStable) {
          this._isStable = false;
          this._isRunning = true;
          this._onTurnStart.add$1(0, null);
        }
      },
      _onLeave$0: function() {
        --this._nesting;
        this._checkStable$0();
      },
      _onErrorWithoutLongStackTrace$5: [function($self, $parent, zone, error, trace) {
        this._onError.add$1(0, new Y.NgZoneError(error, [J.toString$0$(H.interceptedTypeCheck(trace, "$isStackTrace"))]));
      }, "call$5", "get$_onErrorWithoutLongStackTrace", 20, 0, 61],
      _createTimer$5: [function($self, $parent, zone, duration, fn) {
        var t1, t2, onDone, callback, implementation, implZone, wrappedTimer;
        t1 = {};
        H.interceptedTypeCheck(duration, "$isDuration");
        t2 = {func: 1, ret: -1};
        H.functionTypeCheck(fn, t2);
        t1.wrappedTimer = null;
        onDone = new Y.NgZone__createTimer_closure(t1, this);
        $parent.toString;
        callback = H.functionTypeCheck(new Y.NgZone__createTimer_closure0(fn, onDone), t2);
        implementation = $parent._delegationTarget.get$_async$_createTimer();
        implZone = implementation.zone;
        wrappedTimer = new Y._WrappedTimer(implementation.$function.call$5(implZone, P._parentDelegate(implZone), zone, duration, callback), duration, onDone);
        t1.wrappedTimer = wrappedTimer;
        C.JSArray_methods.add$1(this._pendingTimers, wrappedTimer);
        this._hasPendingMacrotasks = true;
        return t1.wrappedTimer;
      }, "call$5", "get$_createTimer", 20, 0, 31],
      _checkStable$0: function() {
        var t1, t2;
        t1 = this._nesting;
        if (t1 === 0)
          if (!this._hasPendingMicrotasks && !this._isStable)
            try {
              this._nesting = t1 + 1;
              this._isRunning = false;
              this._onMicrotaskEmpty.add$1(0, null);
            } finally {
              --this._nesting;
              if (!this._hasPendingMicrotasks)
                try {
                  t1 = P.Null;
                  t2 = H.functionTypeCheck(new Y.NgZone__checkStable_closure(this), {func: 1, ret: t1});
                  this._outerZone.run$1$1(t2, t1);
                } finally {
                  this._isStable = true;
                }
            }
      },
      runOutsideAngular$1$1: [1, function(callback, $R) {
        H.functionTypeCheck(callback, {func: 1, ret: $R});
        return this._outerZone.run$1$1(callback, $R);
      }, function(callback) {
        return this.runOutsideAngular$1$1(callback, null);
      }, "runOutsideAngular$1", "call$1$1", "call$1", "get$runOutsideAngular", 4, 0, 69, 10],
      static: {
        NgZone$: function(enableLongStackTrace) {
          var t1 = [-1];
          t1 = new Y.NgZone(new P.Object(), new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, [Y.NgZoneError]), false, false, true, 0, false, false, 0, H.setRuntimeTypeInfo([], [Y._WrappedTimer]));
          t1.NgZone$1$enableLongStackTrace(false);
          return t1;
        }
      }
    },
    NgZone__scheduleMicrotask_closure: {
      "^": "Closure:0;$this,fn",
      call$0: [function() {
        try {
          this.fn.call$0();
        } finally {
          var t1 = this.$this;
          if (--t1._pendingMicrotasks === 0) {
            t1._hasPendingMicrotasks = false;
            t1._checkStable$0();
          }
        }
      }, null, null, 0, 0, null, "call"]
    },
    NgZone__run_closure: {
      "^": "Closure;$this,fn,R",
      call$0: [function() {
        try {
          this.$this._onEnter$0();
          var t1 = this.fn.call$0();
          return t1;
        } finally {
          this.$this._onLeave$0();
        }
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: this.R};
      }
    },
    NgZone__runUnary_closure: {
      "^": "Closure;$this,fn,T,R",
      call$1: [function(arg) {
        var t1;
        H.assertSubtypeOfRuntimeType(arg, this.T);
        try {
          this.$this._onEnter$0();
          t1 = this.fn.call$1(arg);
          return t1;
        } finally {
          this.$this._onLeave$0();
        }
      }, null, null, 4, 0, null, 18, "call"],
      $signature: function() {
        return {func: 1, ret: this.R, args: [this.T]};
      }
    },
    NgZone__runBinary_closure: {
      "^": "Closure;$this,fn,T1,T2,R",
      call$2: [function(arg1, arg2) {
        var t1;
        H.assertSubtypeOfRuntimeType(arg1, this.T1);
        H.assertSubtypeOfRuntimeType(arg2, this.T2);
        try {
          this.$this._onEnter$0();
          t1 = this.fn.call$2(arg1, arg2);
          return t1;
        } finally {
          this.$this._onLeave$0();
        }
      }, null, null, 8, 0, null, 19, 22, "call"],
      $signature: function() {
        return {func: 1, ret: this.R, args: [this.T1, this.T2]};
      }
    },
    NgZone__createTimer_closure: {
      "^": "Closure:0;_box_0,$this",
      call$0: function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._pendingTimers;
        C.JSArray_methods.remove$1(t2, this._box_0.wrappedTimer);
        t1._hasPendingMacrotasks = t2.length !== 0;
      }
    },
    NgZone__createTimer_closure0: {
      "^": "Closure:0;fn,onDone",
      call$0: [function() {
        try {
          this.fn.call$0();
        } finally {
          this.onDone.call$0();
        }
      }, null, null, 0, 0, null, "call"]
    },
    NgZone__checkStable_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        this.$this._onTurnDone.add$1(0, null);
      }, null, null, 0, 0, null, "call"]
    },
    _WrappedTimer: {
      "^": "Object;_timer,_ng_zone$_duration,_onCancel",
      cancel$0: function(_) {
        this._onCancel.call$0();
        this._timer.cancel$0(0);
      },
      $isTimer: 1
    },
    NgZoneError: {
      "^": "Object;error,stackTrace"
    }
  }], ["", "package:angular/src/di/errors.dart",, A, {
    "^": "",
    debugInjectorEnter: function(token) {
      return;
    },
    debugInjectorLeave: function(token) {
      return;
    },
    noProviderError: function(token) {
      return new P.ArgumentError(false, null, null, "No provider found for " + token.toString$0(0));
    }
  }], ["", "package:angular/src/di/injector/element.dart",, G, {
    "^": "",
    ElementInjector: {
      "^": "HierarchicalInjector;_view,_element$_nodeIndex,0_parent,parent",
      provideUntyped$2: function(token, orElse) {
        return this._view.injectorGet$3(token, this._element$_nodeIndex, orElse);
      },
      injectFromAncestryOptional$2: function(token, orElse) {
        var t1 = this._view;
        return t1.parentView.injectorGet$3(token, t1.viewData.parentIndex, orElse);
      },
      injectFromSelfOptional$2: function(token, orElse) {
        return H.throwExpression(P.UnimplementedError$(null));
      },
      get$parent: function(_) {
        var t1, t2;
        t1 = this._parent;
        if (t1 == null) {
          t1 = this._view;
          t2 = t1.parentView;
          t1 = t1.viewData.parentIndex;
          t1 = new G.ElementInjector(t2, t1, C.EmptyInjector_null);
          this._parent = t1;
        }
        return t1;
      }
    }
  }], ["", "package:angular/src/di/injector/empty.dart",, R, {
    "^": "",
    EmptyInjector: {
      "^": "HierarchicalInjector;parent",
      injectFromSelfOptional$2: function(token, orElse) {
        return token === C.Type_Injector_aJC ? this : orElse;
      },
      injectFromAncestryOptional$2: function(token, orElse) {
        var t1 = this.parent;
        if (t1 == null)
          return orElse;
        return t1.provideUntyped$2(token, orElse);
      }
    }
  }], ["", "package:angular/src/di/injector/hierarchical.dart",, E, {
    "^": "",
    HierarchicalInjector: {
      "^": "Injector;parent>",
      provideUntyped$2: function(token, orElse) {
        var result;
        A.debugInjectorEnter(token);
        result = this.injectFromSelfOptional$2(token, orElse);
        if (result == null ? orElse == null : result === orElse)
          result = this.injectFromAncestryOptional$2(token, orElse);
        A.debugInjectorLeave(token);
        return result;
      },
      injectFromAncestryOptional$2: function(token, orElse) {
        return this.get$parent(this).provideUntyped$2(token, orElse);
      }
    }
  }], ["", "package:angular/src/di/injector/injector.dart",, M, {
    "^": "",
    throwsNotFound: function(injector, token) {
      throw H.wrapException(A.noProviderError(token));
    },
    Injector: {
      "^": "Object;",
      $get$2: function(_, token, notFoundValue) {
        var result;
        A.debugInjectorEnter(token);
        result = this.provideUntyped$2(token, notFoundValue);
        if (result === C.C_Object)
          return M.throwsNotFound(this, token);
        A.debugInjectorLeave(token);
        return result;
      },
      $get$1: function($receiver, token) {
        return this.$get$2($receiver, token, C.C_Object);
      }
    }
  }], ["", "package:angular/src/di/injector/map.dart",, A, {
    "^": "",
    MapInjector: {
      "^": "HierarchicalInjector;_map$_providers,parent",
      injectFromSelfOptional$2: function(token, orElse) {
        var result = this._map$_providers.$index(0, token);
        if (result == null) {
          if (token === C.Type_Injector_aJC)
            return this;
          result = orElse;
        }
        return result;
      }
    }
  }], ["", "package:angular/src/facade/exception_handler.dart",, U, {
    "^": "",
    ExceptionHandler: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/platform/browser/exceptions.dart",, T, {
    "^": "",
    BrowserExceptionHandler: {
      "^": "Object;",
      call$3: function(error, stack, reason) {
        var t1, t2;
        H.stringTypeCheck(reason);
        window;
        t1 = "EXCEPTION: " + H.S(error) + "\n";
        if (stack != null) {
          t1 += "STACKTRACE: \n";
          t2 = J.getInterceptor$(stack);
          t1 += H.S(!!t2.$isIterable ? t2.join$1(stack, "\n\n-----async gap-----\n") : t2.toString$0(stack)) + "\n";
        }
        if (reason != null)
          t1 += "REASON: " + reason + "\n";
        if (typeof console != "undefined")
          window.console.error(t1.charCodeAt(0) == 0 ? t1 : t1);
        return;
      },
      call$1: function(error) {
        return this.call$3(error, null, null);
      },
      call$2: function(error, stack) {
        return this.call$3(error, stack, null);
      },
      $isExceptionHandler: 1
    }
  }], ["browser.testability", "package:angular/src/platform/browser/testability.dart",, K, {
    "^": "",
    BrowserGetTestability: {
      "^": "Object;",
      addToWindow$1: function(registry) {
        var jsRegistry, getAllAngularTestabilities, whenAllStable;
        jsRegistry = self.self.ngTestabilityRegistries;
        if (jsRegistry == null) {
          jsRegistry = [];
          self.self.ngTestabilityRegistries = jsRegistry;
          self.self.getAngularTestability = P.allowInterop(new K.BrowserGetTestability_addToWindow_closure(), {func: 1, args: [W.Element], opt: [P.bool]});
          getAllAngularTestabilities = new K.BrowserGetTestability_addToWindow_closure0();
          self.self.getAllAngularTestabilities = P.allowInterop(getAllAngularTestabilities, {func: 1, ret: [P.List,,]});
          whenAllStable = P.allowInterop(new K.BrowserGetTestability_addToWindow_closure1(getAllAngularTestabilities), {func: 1, ret: P.Null, args: [,]});
          if (!("frameworkStabilizers" in self.self))
            self.self.frameworkStabilizers = [];
          J.add$1$ax(self.self.frameworkStabilizers, whenAllStable);
        }
        J.add$1$ax(jsRegistry, this._createRegistry$1(registry));
      },
      findTestabilityInTree$2: function(registry, element) {
        var t1;
        if (element == null)
          return;
        t1 = registry._applications.$index(0, element);
        return t1 == null ? this.findTestabilityInTree$2(registry, element.parentElement) : t1;
      },
      _createRegistry$1: function(registry) {
        var object = {};
        object.getAngularTestability = P.allowInterop(new K.BrowserGetTestability__createRegistry_closure(registry), {func: 1, ret: U.JsTestability, args: [W.Element]});
        object.getAllAngularTestabilities = P.allowInterop(new K.BrowserGetTestability__createRegistry_closure0(registry), {func: 1, ret: [P.List, U.JsTestability]});
        return object;
      },
      $isGetTestability: 1
    },
    BrowserGetTestability_addToWindow_closure: {
      "^": "Closure:70;",
      call$2: [function(elem, findInAncestors) {
        var registry, t1, i, t2, result;
        H.interceptedTypeCheck(elem, "$isElement");
        H.boolTypeCheck(findInAncestors);
        registry = H.listTypeCheck(self.self.ngTestabilityRegistries);
        t1 = J.getInterceptor$asx(registry);
        i = 0;
        while (true) {
          t2 = t1.get$length(registry);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          t2 = t1.$index(registry, i);
          result = t2.getAngularTestability.apply(t2, [elem]);
          if (result != null)
            return result;
          ++i;
        }
        throw H.wrapException(P.StateError$("Could not find testability for element."));
      }, function(elem) {
        return this.call$2(elem, true);
      }, "call$1", null, null, null, 4, 2, null, 50, 51, 52, "call"]
    },
    BrowserGetTestability_addToWindow_closure0: {
      "^": "Closure:71;",
      call$0: [function() {
        var registry, result, t1, i, t2, testabilities, testabilityCount, j;
        registry = H.listTypeCheck(self.self.ngTestabilityRegistries);
        result = [];
        t1 = J.getInterceptor$asx(registry);
        i = 0;
        while (true) {
          t2 = t1.get$length(registry);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          t2 = t1.$index(registry, i);
          testabilities = t2.getAllAngularTestabilities.apply(t2, []);
          testabilityCount = H.numTypeCheck(testabilities.length);
          if (typeof testabilityCount !== "number")
            return H.iae(testabilityCount);
          j = 0;
          for (; j < testabilityCount; ++j)
            result.push(testabilities[j]);
          ++i;
        }
        return result;
      }, null, null, 0, 0, null, "call"]
    },
    BrowserGetTestability_addToWindow_closure1: {
      "^": "Closure:3;getAllAngularTestabilities",
      call$1: [function(callback) {
        var _box_0, testabilities, t1, decrement, t2, testability;
        _box_0 = {};
        testabilities = this.getAllAngularTestabilities.call$0();
        t1 = J.getInterceptor$asx(testabilities);
        _box_0.count = t1.get$length(testabilities);
        _box_0.didWork = false;
        decrement = new K.BrowserGetTestability_addToWindow__closure(_box_0, callback);
        for (t1 = t1.get$iterator(testabilities), t2 = {func: 1, ret: P.Null, args: [P.bool]}; t1.moveNext$0();) {
          testability = t1.get$current(t1);
          testability.whenStable.apply(testability, [P.allowInterop(decrement, t2)]);
        }
      }, null, null, 4, 0, null, 10, "call"]
    },
    BrowserGetTestability_addToWindow__closure: {
      "^": "Closure:24;_box_0,callback",
      call$1: [function(didWork_) {
        var t1, didWork, t2, count;
        H.boolTypeCheck(didWork_);
        t1 = this._box_0;
        didWork = t1.didWork || didWork_;
        t1.didWork = didWork;
        t2 = t1.count;
        if (typeof t2 !== "number")
          return t2.$sub();
        count = t2 - 1;
        t1.count = count;
        if (count === 0)
          this.callback.call$1(didWork);
      }, null, null, 4, 0, null, 53, "call"]
    },
    BrowserGetTestability__createRegistry_closure: {
      "^": "Closure:73;registry",
      call$1: [function(element) {
        var t1, testability;
        H.interceptedTypeCheck(element, "$isElement");
        t1 = this.registry;
        testability = t1._testabilityGetter.findTestabilityInTree$2(t1, element);
        return testability == null ? null : {isStable: P.allowInterop(testability.get$isStable(testability), {func: 1, ret: P.bool}), whenStable: P.allowInterop(testability.get$whenStable(testability), {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool]}]})};
      }, null, null, 4, 0, null, 17, "call"]
    },
    BrowserGetTestability__createRegistry_closure0: {
      "^": "Closure:74;registry",
      call$0: [function() {
        var t1, t2, t3;
        t1 = this.registry._applications;
        t1 = t1.get$values(t1);
        t1 = P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "Iterable", 0));
        t2 = U.JsTestability;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        return new H.MappedListIterable(t1, H.functionTypeCheck(new K.BrowserGetTestability__createRegistry__closure(), {func: 1, ret: t2, args: [t3]}), [t3, t2]).toList$0(0);
      }, null, null, 0, 0, null, "call"]
    },
    BrowserGetTestability__createRegistry__closure: {
      "^": "Closure:75;",
      call$1: [function(t) {
        H.interceptedTypeCheck(t, "$isTestability");
        return {isStable: P.allowInterop(t.get$isStable(t), {func: 1, ret: P.bool}), whenStable: P.allowInterop(t.get$whenStable(t), {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool]}]})};
      }, null, null, 4, 0, null, 54, "call"]
    }
  }], ["", "package:angular/src/platform/dom/events/dom_events.dart",, L, {
    "^": "",
    DomEventsPlugin: {
      "^": "EventManagerPlugin;0manager"
    }
  }], ["", "package:angular/src/platform/dom/events/event_manager.dart",, N, {
    "^": "",
    EventManager: {
      "^": "Object;zone,_plugins,_eventToPlugin",
      EventManager$2: function(_plugins, zone) {
        var t1, i;
        for (t1 = this._plugins, i = 0; i < 2; ++i)
          t1[i].manager = this;
      },
      static: {
        EventManager$: function(_plugins, zone) {
          var t1 = new N.EventManager(zone, _plugins, P.LinkedHashMap_LinkedHashMap$_empty(P.String, N.EventManagerPlugin));
          t1.EventManager$2(_plugins, zone);
          return t1;
        }
      }
    },
    EventManagerPlugin: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/platform/dom/events/key_events.dart",, N, {
    "^": "",
    KeyEventsPlugin: {
      "^": "EventManagerPlugin;0manager"
    }
  }], ["", "package:angular/src/platform/dom/shared_styles_host.dart",, A, {
    "^": "",
    DomSharedStylesHost: {
      "^": "Object;_rootHost,_stylesSet",
      addStyles$1: function(styles) {
        var l, t1, t2, t3, i, style, styleElement;
        H.assertSubtype(styles, "$isList", [P.String], "$asList");
        l = styles.length;
        t1 = this._stylesSet;
        t2 = this._rootHost;
        t3 = t2 && C.HeadElement_methods;
        i = 0;
        for (; i < l; ++i) {
          if (i >= styles.length)
            return H.ioore(styles, i);
          style = styles[i];
          if (t1.add$1(0, style)) {
            styleElement = document.createElement("style");
            styleElement.textContent = style;
            t3.append$1(t2, styleElement);
          }
        }
      },
      $isSharedStylesHost: 1
    }
  }], ["", "package:angular/src/security/dom_sanitization_service.dart",, Z, {
    "^": "",
    DomSanitizationService: {
      "^": "Object;",
      $isSanitizationService: 1
    }
  }], ["", "package:angular/src/security/dom_sanitization_service_impl.dart",, R, {
    "^": "",
    DomSanitizationServiceImpl: {
      "^": "Object;",
      sanitizeUrl$1: function(value) {
        return E.internalSanitizeUrl(value);
      },
      $isSanitizationService: 1
    }
  }], ["", "package:angular/src/security/url_sanitizer.dart",, E, {
    "^": "",
    internalSanitizeUrl: function(url) {
      var t1;
      if (url.length === 0)
        return url;
      t1 = $.$get$_safeUrlPattern()._nativeRegExp;
      if (!t1.test(url)) {
        t1 = $.$get$_dataUrlPattern()._nativeRegExp;
        t1 = t1.test(url);
      } else
        t1 = true;
      return t1 ? url : "unsafe:" + url;
    }
  }], ["angular.src.testability.js_api", "package:angular/src/testability/js_api.dart",, U, {
    "^": "",
    JsTestability: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    JsTestabilityRegistry: {
      "^": "JavaScriptObject;",
      "%": ""
    }
  }], ["asset_angular_components_lib_app_layout_layout.scss.css.shim.dart", "package:angular_components/app_layout/layout.scss.css.shim.dart",, O, {}], ["", "package:angular_components/app_layout/material_drawer_base.dart",, L, {
    "^": "",
    MaterialDrawerBase: {
      "^": "Object;",
      set$visible: function(_, value) {
        if (value === this._visible)
          return;
        this._visible = value;
        if (!value)
          P.Timer_Timer(C.Duration_500000, new L.MaterialDrawerBase_visible_closure(this));
        else
          this._visibleChange.add$1(0, true);
      },
      toggle$0: ["super$MaterialDrawerBase$toggle", function(_) {
        this.set$visible(0, !this._visible);
      }]
    },
    MaterialDrawerBase_visible_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        if (!t1._visible)
          t1._visibleChange.add$1(0, false);
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular_components/app_layout/material_persistent_drawer.dart",, G, {
    "^": "",
    MaterialPersistentDrawerDirective: {
      "^": "MaterialDrawerBase;_visible,_visibleChange",
      get$hostMatDrawerCollapsed: function() {
        return !this._visible;
      },
      get$hostMatDrawerExpanded: function() {
        return this._visible;
      }
    }
  }], ["", "package:angular_components/app_layout/material_persistent_drawer.template.dart",, O, {
    "^": "",
    MaterialPersistentDrawerDirectiveNgCd: {
      "^": "DirectiveChangeDetector;instance,0_material_persistent_drawer_template$_expr_0,0_material_persistent_drawer_template$_expr_1,0directive,0view,0el,_hasHostChanges"
    }
  }], ["", "package:angular_components/app_layout/material_temporary_drawer.dart",, B, {
    "^": "",
    MaterialTemporaryDrawerComponent: {
      "^": "MaterialDrawerBase;_visible,_visibleChange",
      get$hostMatDrawerCollapsed: function() {
        return !this._visible;
      },
      get$hostMatDrawerExpanded: function() {
        return this._visible;
      },
      toggle$0: [function(_) {
        return this.super$MaterialDrawerBase$toggle(0);
      }, "call$0", "get$toggle", 1, 0, 1]
    }
  }], ["asset_angular_components_lib_app_layout_material_temporary_drawer.scss.css.shim.dart", "package:angular_components/app_layout/material_temporary_drawer.scss.css.shim.dart",, K, {}], ["", "package:angular_components/app_layout/material_temporary_drawer.template.dart",, V, {
    "^": "",
    ViewMaterialTemporaryDrawerComponent0: {
      "^": "AppView;0_material_temporary_drawer_template$_expr_0,0_material_temporary_drawer_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, _el_0, t1;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        _el_0 = S.createDivAndAppend(document, parentRenderNode);
        _el_0.className = "drawer-content";
        this.addShimC$1(_el_0);
        this.project$2(_el_0, 0);
        t1 = W.Event;
        (_el_0 && C.DivElement_methods).addEventListener$2(_el_0, "click", this.eventHandler1$2$1(this.get$_handle_click_0_0(), t1, t1));
        this.init$2(C.List_empty, null);
        J.addEventListener$2$x(_rootEl, "click", this.eventHandler0$1$1(_ctx.get$toggle(_ctx), t1));
      },
      _handle_click_0_0$1: [function($$event) {
        J.stopPropagation$0$x($$event);
      }, "call$1", "get$_handle_click_0_0", 4, 0, 2],
      $asAppView: function() {
        return [B.MaterialTemporaryDrawerComponent];
      }
    }
  }], ["", "package:angular_components/button_decorator/button_decorator.dart",, T, {
    "^": "",
    ButtonDirective: {
      "^": "_ButtonDirective_RootFocusable_HasTabIndex;_trigger,0_hostTabIndex,role>,disabled>,tabbable,HasTabIndex__tabIndex,_focus$_root",
      get$ariaRole: function() {
        return this.role;
      },
      get$disabledStr: function() {
        return "" + this.get$disabled(this);
      },
      handleClick$1: [function(mouseEvent) {
        H.interceptedTypeCheck(mouseEvent, "$isMouseEvent");
        if (this.get$disabled(this))
          return;
        this._trigger.add$1(0, mouseEvent);
      }, "call$1", "get$handleClick", 4, 0, 17],
      handleKeyPress$1: [function(keyboardEvent) {
        H.interceptedTypeCheck(keyboardEvent, "$isKeyboardEvent");
        if (this.get$disabled(this))
          return;
        if (keyboardEvent.keyCode === 13 || Z.isSpaceKey(keyboardEvent)) {
          this._trigger.add$1(0, keyboardEvent);
          keyboardEvent.preventDefault();
        }
      }, "call$1", "get$handleKeyPress", 4, 0, 5],
      static: {
        ButtonDirective$: function(element, role) {
          var t1 = role == null ? "button" : role;
          return new T.ButtonDirective(new P._SyncBroadcastStreamController(null, null, 0, [W.UIEvent]), t1, false, true, null, element);
        }
      }
    },
    _ButtonDirective_RootFocusable_HasTabIndex: {
      "^": "RootFocusable+HasTabIndex;"
    }
  }], ["asset_angular_components_lib_button_decorator_button_decorator.scss.css.shim.dart", "package:angular_components/button_decorator/button_decorator.scss.css.shim.dart",, T, {}], ["", "package:angular_components/button_decorator/button_decorator.template.dart",, R, {
    "^": "",
    ButtonDirectiveNgCd: {
      "^": "DirectiveChangeDetector;instance,0_button_decorator_template$_expr_0,0_button_decorator_template$_expr_1,0_button_decorator_template$_expr_2,0_button_decorator_template$_expr_3,0directive,0view,0el,_hasHostChanges"
    }
  }], ["", "package:angular_components/content/deferred_content.dart",, K, {
    "^": "",
    DeferredContentDirective: {
      "^": "Object;_deferred_content$_disposer,_placeholder,_deferred_content$_viewContainer,0_viewRef,_template,preserveDimensions,_shown,_deferred_content$_visible,_forceContent",
      _setVisible$0: function() {
        var value, t1, rootNodes, $content, dimensions, t2, container;
        value = this._deferred_content$_visible || false;
        if (value === this._shown)
          return;
        if (value) {
          if (this.preserveDimensions)
            C.DivElement_methods.remove$0(this._placeholder);
          this._viewRef = this._deferred_content$_viewContainer.createEmbeddedView$1(this._template);
        } else {
          if (this.preserveDimensions) {
            t1 = this._viewRef;
            rootNodes = t1 == null ? null : S._flattenNestedViewRenderNodes(t1.appView.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], [W.Node]));
            if (rootNodes == null)
              rootNodes = H.setRuntimeTypeInfo([], [W.Node]);
            $content = rootNodes.length !== 0 ? C.JSArray_methods.get$first(rootNodes) : null;
            if (!!J.getInterceptor$($content).$isHtmlElement) {
              dimensions = $content.getBoundingClientRect();
              t1 = this._placeholder.style;
              t2 = H.S(dimensions.width) + "px";
              t1.width = t2;
              t2 = H.S(dimensions.height) + "px";
              t1.height = t2;
            }
          }
          this._deferred_content$_viewContainer.clear$0(0);
          if (this.preserveDimensions) {
            t1 = this._deferred_content$_viewContainer;
            t2 = t1._elementRef;
            if (t2 == null) {
              t2 = new Z.ElementRef(t1.nativeElement);
              t1._elementRef = t2;
              t1 = t2;
            } else
              t1 = t2;
            container = t1.nativeElement;
            if ((container == null ? null : container.parentNode) != null)
              J.insertBefore$2$x(container.parentNode, this._placeholder, container);
          }
        }
        this._shown = value;
      },
      DeferredContentDirective$3: function(_viewContainer, _template, $parent) {
        var t1, t2;
        t1 = $parent._onContentVisible;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        this._deferred_content$_disposer.addStreamSubscription$1$1(new P._DistinctStream(null, new P._BroadcastStream(t1, [t2]), [t2]).listen$1(new K.DeferredContentDirective_closure(this)), P.bool);
      },
      static: {
        DeferredContentDirective$: function(_viewContainer, _template, $parent) {
          var t1 = new K.DeferredContentDirective(new R.Disposer(true, false), document.createElement("div"), _viewContainer, _template, false, false, false, false);
          t1.DeferredContentDirective$3(_viewContainer, _template, $parent);
          return t1;
        }
      }
    },
    DeferredContentDirective_closure: {
      "^": "Closure:24;$this",
      call$1: [function(value) {
        var t1 = this.$this;
        t1._deferred_content$_visible = H.boolTypeCheck(value);
        t1._setVisible$0();
      }, null, null, 4, 0, null, 1, "call"]
    }
  }], ["", "package:angular_components/content/deferred_content_aware.dart",, E, {
    "^": "",
    DeferredContentAware: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/dynamic_component/dynamic_component.dart",, Z, {
    "^": "",
    DynamicComponent: {
      "^": "Object;_slowComponentLoader,_componentLoader,_dynamic_component$_changeDetectorRef,_onLoadController,0_viewContainerRef,_loadDeferred,0_childComponent,0_componentType,_typeChanged,0_componentFactory,_factoryChanged,0_dynamic_component$_value,_valueChanged",
      set$viewContainerRef: function(value) {
        this._viewContainerRef = value;
        if (this._loadDeferred) {
          this._initialize$0();
          this._loadDeferred = false;
        }
      },
      _disposeChildComponent$0: function() {
        var t1, containerElement, t2;
        t1 = this._childComponent;
        if (!(t1 == null)) {
          t1 = t1._parentView;
          containerElement = t1.viewData._viewContainerElement;
          if (!(containerElement == null)) {
            t2 = containerElement.nestedViews;
            containerElement.detachView$1((t2 && C.JSArray_methods).indexOf$1(t2, t1));
          }
          t1.destroy$0();
        }
        this._childComponent = null;
      },
      set$componentFactory: function(component) {
        var t1 = this._componentFactory;
        if (t1 == null ? component != null : t1 !== component)
          this._factoryChanged = true;
        this._componentFactory = component;
      },
      ngAfterChanges$0: function() {
        if (this._factoryChanged || this._typeChanged) {
          this._disposeChildComponent$0();
          if (this._viewContainerRef != null)
            this._initialize$0();
          else
            this._loadDeferred = true;
        } else if (this._valueChanged)
          this._updateChildComponent$0();
        this._typeChanged = false;
        this._factoryChanged = false;
        this._valueChanged = false;
      },
      _initialize$0: function() {
        var t1, t2, t3, t4, t5, t6, contextInjector, componentRef;
        t1 = this._componentFactory;
        if (t1 != null) {
          if (this._childComponent != null)
            throw H.wrapException("Attempting to overwrite a dynamic component");
          t2 = this._viewContainerRef;
          this._componentLoader.toString;
          t3 = [null];
          H.assertSubtype(t1, "$isComponentFactory", t3, "$asComponentFactory");
          t4 = t2.get$length(t2);
          t5 = t2.parentView;
          t6 = t2.index;
          contextInjector = new G.ElementInjector(t5, t6, C.EmptyInjector_null);
          H.assertSubtype(t1, "$isComponentFactory", t3, "$asComponentFactory");
          componentRef = t1.create$2(0, contextInjector, null);
          t2.insert$2(0, componentRef._parentView.viewData.ref, t4);
          this._childComponent = componentRef;
          this._onLoadController.add$1(0, componentRef);
          this._updateChildComponent$0();
        } else {
          t1 = this._componentType;
          if (t1 != null)
            this._slowComponentLoader.loadNextToLocation$1$2(t1, this._viewContainerRef, null).then$1$1(new Z.DynamicComponent__initialize_closure(this, t1), null);
        }
      },
      _updateChildComponent$0: function() {
        this._dynamic_component$_changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
        var t1 = this._childComponent;
        if (t1 != null) {
          t1 = t1._component;
          if (t1 instanceof G.RendersValue)
            t1.value = H.interceptedTypeCheck(this._dynamic_component$_value, "$isWrRowData");
        }
      }
    },
    DynamicComponent__initialize_closure: {
      "^": "Closure:78;$this,loadType",
      call$1: function(componentRef) {
        var t1 = this.$this;
        if (!J.$eq$(this.loadType, t1._componentType)) {
          componentRef.destroy$0();
          return;
        }
        if (t1._childComponent != null)
          throw H.wrapException("Attempting to overwrite a dynamic component");
        t1._childComponent = componentRef;
        t1._onLoadController.add$1(0, componentRef);
        t1._updateChildComponent$0();
      }
    }
  }], ["", "package:angular_components/dynamic_component/dynamic_component.template.dart",, Q, {
    "^": "",
    viewFactory_DynamicComponent1: [function(parentView, parentIndex) {
      var t1 = new Q._ViewDynamicComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Z.DynamicComponent));
      t1.componentType = $.ViewDynamicComponent0__renderType;
      return t1;
    }, "call$2", "dynamic_component_template__viewFactory_DynamicComponent1$closure", 8, 0, 160],
    ViewDynamicComponent0: {
      "^": "AppView;0_dynamic_component_template$_appEl_0,0_TemplateRef_0_8,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _anchor_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_0 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(parentRenderNode, _anchor_0);
        t1 = new V.ViewContainer(0, null, this, _anchor_0);
        this._dynamic_component_template$_appEl_0 = t1;
        this._TemplateRef_0_8 = new D.TemplateRef(t1, Q.dynamic_component_template__viewFactory_DynamicComponent1$closure());
        this.ctx.set$viewContainerRef(t1);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        this._dynamic_component_template$_appEl_0.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._dynamic_component_template$_appEl_0.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [Z.DynamicComponent];
      },
      static: {
        ViewDynamicComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new Q.ViewDynamicComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, parentIndex, Z.DynamicComponent));
          t2 = document.createElement("dynamic-component");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewDynamicComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
            $.ViewDynamicComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    _ViewDynamicComponent1: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [Z.DynamicComponent];
      }
    }
  }], ["", "package:angular_components/focus/focus.dart",, E, {
    "^": "",
    RootFocusable: {
      "^": "Object;",
      focus$0: ["super$RootFocusable$focus", function(_) {
        var t1, t2;
        t1 = this._focus$_root;
        if (t1 == null)
          return;
        t2 = t1.tabIndex;
        if (typeof t2 !== "number")
          return t2.$lt();
        if (t2 < 0)
          t1.tabIndex = -1;
        t1.focus();
      }],
      dispose$0: ["super$RootFocusable$dispose", function() {
        this._focus$_root = null;
      }],
      $isFocusable: 1,
      $isDisposable: 1
    },
    AutoFocusDirective: {
      "^": "RootFocusable;_focus$_disposer,0_autoFocus,_focus$_focusable,_focus$_domService,_focus$_modal,_focus$_popupRef,_focus$_root",
      ngOnInit$0: function() {
        var t1, t2, onVisibleChanged;
        if (!this._autoFocus)
          return;
        t1 = this._focus$_popupRef;
        t2 = t1 != null;
        if (t2) {
          if (t2 ? t1._popupComponent._isVisible : this._focus$_modal.get$resolvedOverlayRef().get$isVisible())
            this._focus$_domService.scheduleWrite$1(this.get$focus(this));
          t1 = this._focus$_popupRef;
          if (t1 != null) {
            t1 = t1._popupComponent.PopupEvents_onVisibleController;
            onVisibleChanged = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
          } else
            onVisibleChanged = this._focus$_modal.get$resolvedOverlayRef().get$onVisibleChanged();
          this._focus$_disposer.addStreamSubscription$1$1(onVisibleChanged.listen$1(this.get$_onModalOrPopupVisibleChanged()), P.bool);
        } else
          this._focus$_domService.scheduleWrite$1(this.get$focus(this));
      },
      focus$0: [function(_) {
        if (!this._autoFocus)
          return;
        this.super$RootFocusable$focus(0);
      }, "call$0", "get$focus", 1, 0, 1],
      _onModalOrPopupVisibleChanged$1: [function(isVisible) {
        if (H.boolTypeCheck(isVisible))
          this._focus$_domService.scheduleWrite$1(this.get$focus(this));
      }, "call$1", "get$_onModalOrPopupVisibleChanged", 4, 0, 35, 31]
    }
  }], ["", "package:angular_components/focus/focus_interface.dart",, O, {
    "^": "",
    Focusable: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/focus/keyboard_only_focus_indicator.dart",, O, {
    "^": "",
    KeyboardOnlyFocusIndicatorDirective: {
      "^": "Object;_keyboard_only_focus_indicator$_element,_domService,_lastInteraction",
      keydown$1: [function(e) {
        H.interceptedTypeCheck(e, "$isKeyboardEvent");
        this._lastInteraction = C._InteractionType_1;
        this.resetOutline$0();
      }, "call$1", "get$keydown", 4, 0, 5],
      resetOutline$0: [function() {
        if (this._keyboard_only_focus_indicator$_element.style.outline !== "")
          this._domService.scheduleWrite$1(new O.KeyboardOnlyFocusIndicatorDirective_resetOutline_closure(this));
      }, "call$0", "get$resetOutline", 0, 0, 1],
      onMouseInteraction$0: [function() {
        this._lastInteraction = C._InteractionType_0;
        this.hideOutline$0();
      }, "call$0", "get$onMouseInteraction", 0, 0, 1],
      hideOutline$0: function() {
        if (this._keyboard_only_focus_indicator$_element.style.outline !== "none")
          this._domService.scheduleWrite$1(new O.KeyboardOnlyFocusIndicatorDirective_hideOutline_closure(this));
      },
      onFocus$1: [function(_, $event) {
        H.interceptedTypeCheck($event, "$isEvent");
        if (this._lastInteraction === C._InteractionType_0)
          this.hideOutline$0();
        else
          this.resetOutline$0();
      }, "call$1", "get$onFocus", 5, 0, 26]
    },
    KeyboardOnlyFocusIndicatorDirective_resetOutline_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        var t1 = this.$this._keyboard_only_focus_indicator$_element.style;
        t1.outline = "";
      }
    },
    KeyboardOnlyFocusIndicatorDirective_hideOutline_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        var t1 = this.$this._keyboard_only_focus_indicator$_element.style;
        t1.outline = "none";
      }
    },
    _InteractionType: {
      "^": "Object;index,_keyboard_only_focus_indicator$_name",
      toString$0: function(_) {
        return this._keyboard_only_focus_indicator$_name;
      }
    }
  }], ["angular_components.framework_stabilizers.framework_stabilizers", "package:angular_components/framework_stabilizers/framework_stabilizers.dart",, V, {
    "^": ""
  }], ["angular_components.framework_stabilizers.testability", "package:angular_components/framework_stabilizers/testability.dart",, D, {
    "^": "",
    AbstractTestability: {
      "^": "Object;",
      register$0: function(_) {
        var wrappedFn, id;
        wrappedFn = P.allowInterop(this.get$whenStable(this), {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool, P.String]}]});
        id = $.FrameworkStabilizers__nextId;
        $.FrameworkStabilizers__nextId = id + 1;
        $.$get$FrameworkStabilizers__idToFrameworkStabilizer().$indexSet(0, id, wrappedFn);
        if (self.frameworkStabilizers == null)
          self.frameworkStabilizers = [];
        J.add$1$ax(self.frameworkStabilizers, wrappedFn);
      },
      whenStable$1: [function(_, fn) {
        this._runCallbacksIfStable$1$newCallback(H.functionTypeCheck(fn, {func: 1, ret: -1, args: [P.bool, P.String]}));
      }, "call$1", "get$whenStable", 5, 0, 81, 56],
      _runCallbacksIfStable$1$newCallback: function(newCallback) {
        C.C__RootZone.run$1$1(new D.AbstractTestability__runCallbacksIfStable_closure(this, H.functionTypeCheck(newCallback, {func: 1, ret: -1, args: [P.bool, P.String]})), P.Null);
      },
      _runCallbacksIfStable$0: function() {
        return this._runCallbacksIfStable$1$newCallback(null);
      },
      get$name: function(_) {
        return "Instance of '" + H.Primitives_objectTypeName(this) + "'";
      }
    },
    AbstractTestability__runCallbacksIfStable_closure: {
      "^": "Closure:0;$this,newCallback",
      call$0: function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._dom_service_webdriver_testability$_domService;
        if (t2._insideDigest || t2._scheduledProcessQueue || t2._layoutObserveRead != null || t2._nextFrameFuture != null || t2._domReadQueue.length !== 0 || t2._domWriteQueue.length !== 0) {
          t2 = this.newCallback;
          if (t2 != null)
            C.JSArray_methods.add$1(t1._callbacks, t2);
          return;
        }
        P.Future_Future(new D.AbstractTestability__runCallbacksIfStable__closure(t1, this.newCallback), null);
      }
    },
    AbstractTestability__runCallbacksIfStable__closure: {
      "^": "Closure:0;$this,newCallback",
      call$0: function() {
        var t1, t2, t3;
        t1 = this.newCallback;
        if (t1 != null)
          t1.call$2(false, "Instance of '" + H.Primitives_objectTypeName(this.$this) + "'");
        for (t1 = this.$this, t2 = t1._callbacks; t3 = t2.length, t3 !== 0;) {
          if (0 >= t3)
            return H.ioore(t2, -1);
          t2.pop().call$2(true, "Instance of '" + H.Primitives_objectTypeName(t1) + "'");
        }
      }
    },
    NullTestability: {
      "^": "Object;",
      register$0: function(_) {
      },
      get$name: function(_) {
        throw H.wrapException(P.UnsupportedError$("not supported by NullTestability"));
      }
    }
  }], ["", "package:angular_components/glyph/glyph.dart",, L, {
    "^": "",
    GlyphComponent: {
      "^": "Object;0_glyph$_icon,0_iconSet,_useMaterialIconsExtended,_glyph$_element",
      set$icon: function(_, value) {
        this._glyph$_icon = value;
        if (C.JSArray_methods.contains$1(C.List_CX7, H.stringTypeCheck(value instanceof L.Icon ? value.name : value)))
          J.setAttribute$2$x(this._glyph$_element, "flip", "");
      }
    }
  }], ["asset_angular_components_lib_glyph_glyph.scss.css.shim.dart", "package:angular_components/glyph/glyph.scss.css.shim.dart",, O, {}], ["", "package:angular_components/glyph/glyph.template.dart",, M, {
    "^": "",
    ViewGlyphComponent0: {
      "^": "AppView;0_glyph_template$_expr_0,0_glyph_template$_expr_1,0_el_1,0_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = document;
        J.append$1$x(parentRenderNode, t1.createTextNode("\n"));
        t2 = S.createAndAppend(t1, "i", parentRenderNode);
        this._el_1 = t2;
        J.setAttribute$2$x(t2, "aria-hidden", "true");
        t2 = this._el_1;
        t2.className = "glyph-i";
        this.addShimE$1(t2);
        t1 = t1.createTextNode("");
        this._text_2 = t1;
        J.append$1$x(this._el_1, t1);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_1;
        _ctx = this.ctx;
        _ctx._useMaterialIconsExtended;
        t1 = this._glyph_template$_expr_0;
        if (t1 !== true) {
          this.updateClass$3(H.interceptedTypeCheck(this._el_1, "$isHtmlElement"), "material-icons", true);
          this._glyph_template$_expr_0 = true;
        }
        t1 = _ctx._glyph$_icon;
        currVal_1 = H.stringTypeCheck(t1 instanceof L.Icon ? t1.name : t1);
        if (currVal_1 == null)
          currVal_1 = "";
        t1 = this._glyph_template$_expr_1;
        if (t1 !== currVal_1) {
          this._text_2.textContent = currVal_1;
          this._glyph_template$_expr_1 = currVal_1;
        }
      },
      $asAppView: function() {
        return [L.GlyphComponent];
      },
      static: {
        ViewGlyphComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new M.ViewGlyphComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, L.GlyphComponent));
          t2 = document.createElement("glyph");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewGlyphComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$GlyphComponent());
            $.ViewGlyphComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/interfaces/has_disabled.dart",, U, {
    "^": "",
    HasDisabled: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/laminate/components/modal/modal.dart",, D, {
    "^": "",
    Modal: {
      "^": "Object;"
    },
    ModalComponent: {
      "^": "Object;",
      $isModal: 1
    }
  }], ["", "package:angular_components/laminate/enums/alignment.dart",, K, {
    "^": "",
    Alignment: {
      "^": "Object;_displayName,_cssPropertyValue",
      get$requiresContentSizeToPosition: function() {
        return this !== C.Alignment_dMH;
      },
      calcLeft$2: function(sourceRect, contentRect) {
        var t1, left, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        if (this.get$requiresContentSizeToPosition() && contentRect == null)
          throw H.wrapException(P.ArgumentError$notNull("contentRect"));
        t1 = J.getInterceptor$x(sourceRect);
        left = t1.get$left(sourceRect);
        if (this === C.Alignment_Center_center) {
          t1 = t1.get$width(sourceRect);
          if (typeof t1 !== "number")
            return t1.$div();
          t2 = J.get$width$x(contentRect);
          if (typeof t2 !== "number")
            return t2.$div();
          left += t1 / 2 - t2 / 2;
        } else if (this === C.Alignment_Yw7) {
          t1 = t1.get$width(sourceRect);
          t2 = J.get$width$x(contentRect);
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof t2 !== "number")
            return H.iae(t2);
          left += t1 - t2;
        }
        return left;
      },
      calcTop$2: function(sourceRect, contentRect) {
        var t1, $top, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        if (this.get$requiresContentSizeToPosition() && contentRect == null)
          throw H.wrapException(P.ArgumentError$notNull("contentRect"));
        t1 = J.getInterceptor$x(sourceRect);
        $top = t1.get$top(sourceRect);
        if (this === C.Alignment_Center_center) {
          t1 = t1.get$height(sourceRect);
          if (typeof t1 !== "number")
            return t1.$div();
          t2 = J.get$height$x(contentRect);
          if (typeof t2 !== "number")
            return t2.$div();
          $top += t1 / 2 - t2 / 2;
        } else if (this === C.Alignment_Yw7) {
          t1 = t1.get$height(sourceRect);
          t2 = J.get$height$x(contentRect);
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof t2 !== "number")
            return H.iae(t2);
          $top += t1 - t2;
        }
        return $top;
      },
      toString$0: function(_) {
        return "Alignment {" + this._displayName + "}";
      }
    },
    _CustomAlignment: {
      "^": "Alignment;"
    },
    BeforeCustomAlignment: {
      "^": "_CustomAlignment;requiresContentSizeToPosition<,cssClassX,cssClassY,_displayName,_cssPropertyValue",
      calcLeft$2: function(sourceRect, contentRect) {
        var t1, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        t1 = J.get$left$x(sourceRect);
        t2 = J.get$width$x(contentRect);
        if (typeof t2 !== "number")
          return t2.$negate();
        return t1 + -t2;
      }
    },
    AfterCustomAlignment: {
      "^": "_CustomAlignment;requiresContentSizeToPosition<,cssClassX,cssClassY,_displayName,_cssPropertyValue",
      calcLeft$2: function(sourceRect, contentRect) {
        var t1, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        t1 = J.getInterceptor$x(sourceRect);
        t2 = t1.get$left(sourceRect);
        t1 = t1.get$width(sourceRect);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return t2 + t1;
      }
    },
    RelativePosition: {
      "^": "Object;originX<,originY<,animationOrigin",
      flipRelativePosition$0: function() {
        var t1, t2;
        t1 = this._flipAlignment$1(this.originX);
        t2 = this.animationOrigin;
        if (C.Map_yH4ig.containsKey$1(0, t2))
          t2 = C.Map_yH4ig.$index(0, t2);
        return new K.RelativePosition(t1, this.originY, t2);
      },
      _flipAlignment$1: function(alignment) {
        if (alignment === C.Alignment_dMH)
          return C.Alignment_Yw7;
        if (alignment === C.Alignment_Yw7)
          return C.Alignment_dMH;
        if (alignment === C.BeforeCustomAlignment_yHF)
          return C.AfterCustomAlignment_ZCw;
        if (alignment === C.AfterCustomAlignment_ZCw)
          return C.BeforeCustomAlignment_yHF;
        return alignment;
      },
      toString$0: function(_) {
        return "RelativePosition " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["originX", this.originX, "originY", this.originY], P.String, K.Alignment));
      }
    }
  }], ["", "package:angular_components/laminate/enums/visibility.dart",, L, {
    "^": "",
    Visibility: {
      "^": "Object;displayName,_propertyName,_propertyValue",
      apply$1: function(setProperty) {
        var t1;
        H.functionTypeCheck(setProperty, {func: 1, ret: -1, args: [P.String,,]});
        t1 = this._propertyName;
        if (t1 != null)
          setProperty.call$2(t1, this._propertyValue);
      },
      toString$0: function(_) {
        return "Visibility {" + this.displayName + "}";
      }
    }
  }], ["", "package:angular_components/laminate/overlay/module.dart",, G, {
    "^": "",
    getDefaultContainer: function($name, $parent, container) {
      var t1;
      if (container != null)
        return H.interceptedTypeCheck(container, "$isHtmlElement");
      t1 = J.getInterceptor$x($parent);
      container = t1.querySelector$1($parent, "#default-acx-overlay-container");
      if (container == null) {
        container = document.createElement("div");
        container.id = "default-acx-overlay-container";
        container.classList.add("acx-overlay-container");
        t1.append$1($parent, container);
      }
      J.setAttribute$2$x(container, "container-name", $name);
      return H.interceptedTypeCheck(container, "$isHtmlElement");
    },
    getDefaultContainerName: function(containerName) {
      return H.stringTypeCheck(containerName == null ? "default" : containerName);
    },
    getOverlayContainerParent: function($document, containerParent) {
      return H.interceptedTypeCheck(containerParent == null ? ($document && C.HtmlDocument_methods).querySelector$1($document, "body") : containerParent, "$isHtmlElement");
    }
  }], ["angular_components.css.acux.zindexer", "package:angular_components/laminate/overlay/zindexer.dart",, X, {
    "^": "",
    ZIndexer: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/laminate/portal/portal.dart",, L, {
    "^": "",
    BasePortalHost: {
      "^": "Object;",
      $isPortalHost: 1,
      $isDisposable: 1
    },
    DomPortalHost: {
      "^": "BasePortalHost;_hostElement,_portal$_imperativeViewUtils,0_attachedPortal,0_detachPortal,_isDisposed"
    }
  }], ["", "package:angular_components/laminate/ruler/dom_ruler.dart",, K, {
    "^": "",
    DomRuler: {
      "^": "Object;"
    },
    DomRulerImpl: {
      "^": "RulerBase;_document,_dom_ruler$_domService,_addedCssClasses",
      canSyncWrite$1: function(element) {
        var t1, t2;
        t1 = this._document;
        t2 = J.getInterceptor$(t1);
        if (!!t2.$isHtmlDocument) {
          t1 = t1.body;
          return !(t1 && C.BodyElement_methods).contains$1(t1, element);
        }
        return !t2.contains$1(t1, element);
      },
      measure$2$offset: function(_, element, offset) {
        var t1;
        if (this.canSyncWrite$1(element)) {
          t1 = new P._Future(0, $.Zone__current, [[P.Rectangle, P.num]]);
          t1._asyncComplete$1(C.Rectangle_0_0_0_0);
          return t1;
        }
        return this.super$RulerBase$measure(0, element, false);
      },
      measure$1: function($receiver, element) {
        return this.measure$2$offset($receiver, element, false);
      },
      measureSync$2$offset: function(element, offset) {
        return element.getBoundingClientRect();
      },
      measureSync$1: function(element) {
        return this.measureSync$2$offset(element, false);
      },
      track$1: function(_, element) {
        if (this.canSyncWrite$1(element))
          return P.Stream_Stream$fromIterable(C.List_4YB, [P.Rectangle, P.num]);
        return this.super$RulerBase$track(0, element);
      },
      removeCssClassesSync$2: function(element, classes) {
        H.assertSubtype(classes, "$isList", [P.String], "$asList");
        J.get$classes$x(element).removeAll$1(J.where$1$ax(classes, new K.DomRulerImpl_removeCssClassesSync_closure()));
      },
      addCssClassesSync$2: function(element, classes) {
        var t1;
        H.assertSubtype(classes, "$isList", [P.String], "$asList");
        t1 = H.getTypeArgumentByIndex(classes, 0);
        J.get$classes$x(element).addAll$1(0, new H.WhereIterable(classes, H.functionTypeCheck(new K.DomRulerImpl_addCssClassesSync_closure(), {func: 1, ret: P.bool, args: [t1]}), [t1]));
      },
      $isDomRuler: 1,
      $asRulerBase: function() {
        return [W.Element];
      }
    },
    DomRulerImpl_removeCssClassesSync_closure: {
      "^": "Closure:10;",
      call$1: function(c) {
        return H.stringTypeCheck(c).length !== 0;
      }
    },
    DomRulerImpl_addCssClassesSync_closure: {
      "^": "Closure:10;",
      call$1: function(c) {
        return H.stringTypeCheck(c).length !== 0;
      }
    }
  }], ["", "package:angular_components/material_button/material_button.dart",, B, {
    "^": "",
    MaterialButtonComponent: {
      "^": "MaterialButtonBase;_material_button$_changeDetector,0ariaLabel,_focused,_clickFocused,_isMouseDown,raised,_trigger,0_hostTabIndex,role,disabled,tabbable,HasTabIndex__tabIndex,_focus$_root",
      focusedStateChanged$0: function() {
        this._material_button$_changeDetector.appView.markPathToRootAsCheckOnce$0();
      },
      get$hostDisabled: function() {
        return this.disabled ? "" : null;
      },
      get$hostRaised: function() {
        return this.raised ? "" : null;
      },
      get$hostClassIsFocused: function() {
        return this._focused;
      },
      get$hostElevation: function() {
        return "" + (this._isMouseDown || this._focused ? 4 : 1);
      },
      static: {
        MaterialButtonComponent$: function(element, darktheme, _changeDetector, role) {
          if (darktheme.isDarkTheme)
            element.classList.add("acx-theme-dark");
          return new B.MaterialButtonComponent(_changeDetector, false, false, false, false, new P._SyncBroadcastStreamController(null, null, 0, [W.UIEvent]), "button", false, true, null, element);
        }
      }
    }
  }], ["asset_angular_components_lib_material_button_material_button.scss.css.shim.dart", "package:angular_components/material_button/material_button.scss.css.shim.dart",, O, {}], ["", "package:angular_components/material_button/material_button.template.dart",, U, {
    "^": "",
    ViewMaterialButtonComponent0: {
      "^": "AppView;0_material_button_template$_compView_2,0_MaterialRippleComponent_2_5,0_material_button_template$_expr_0,0_material_button_template$_expr_1,0_material_button_template$_expr_2,0_material_button_template$_expr_3,0_material_button_template$_expr_4,0_material_button_template$_expr_5,0_material_button_template$_expr_6,0_material_button_template$_expr_7,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, t1, t2, _el_1, _el_2, t3;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        t1 = document;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        _el_1 = S.createDivAndAppend(t1, parentRenderNode);
        _el_1.className = "content";
        this.addShimC$1(_el_1);
        this.project$2(_el_1, 0);
        t1 = L.ViewMaterialRippleComponent0$(this, 2);
        this._material_button_template$_compView_2 = t1;
        _el_2 = t1.rootEl;
        t2.append$1(parentRenderNode, _el_2);
        this.addShimC$1(_el_2);
        t2 = B.MaterialRippleComponent$(_el_2);
        this._MaterialRippleComponent_2_5 = t2;
        this._material_button_template$_compView_2.create$2(0, t2, []);
        t2 = W.Event;
        t1 = J.getInterceptor$x(_el_2);
        t1.addEventListener$2(_el_2, "mousedown", this.eventHandler1$2$1(J.get$onMouseDown$x(this.ctx), t2, t2));
        t1.addEventListener$2(_el_2, "mouseup", this.eventHandler1$2$1(J.get$onMouseUp$x(this.ctx), t2, t2));
        this.init$2(C.List_empty, null);
        t1 = J.getInterceptor$x(_rootEl);
        t1.addEventListener$2(_rootEl, "click", this.eventHandler1$2$1(_ctx.get$handleClick(), t2, W.MouseEvent));
        t1.addEventListener$2(_rootEl, "keypress", this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t2, W.KeyboardEvent));
        t1.addEventListener$2(_rootEl, "mousedown", this.eventHandler1$2$1(_ctx.get$onMouseDown(_ctx), t2, t2));
        t1.addEventListener$2(_rootEl, "mouseup", this.eventHandler1$2$1(_ctx.get$onMouseUp(_ctx), t2, t2));
        t3 = W.UIEvent;
        t1.addEventListener$2(_rootEl, "focus", this.eventHandler1$2$1(_ctx.get$onFocus(_ctx), t2, t3));
        t1.addEventListener$2(_rootEl, "blur", this.eventHandler1$2$1(_ctx.get$onBlur(_ctx), t2, t3));
      },
      detectChangesInternal$0: function() {
        this._material_button_template$_compView_2.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_button_template$_compView_2.destroy$0();
        this._MaterialRippleComponent_2_5.ngOnDestroy$0();
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_0, t1, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7;
        currVal_0 = J.get$tabIndex$x(this.ctx);
        t1 = this._material_button_template$_expr_0;
        if (t1 != currVal_0) {
          this.rootEl.tabIndex = currVal_0;
          this._material_button_template$_expr_0 = currVal_0;
        }
        currVal_1 = this.ctx.get$ariaRole();
        t1 = this._material_button_template$_expr_1;
        if (t1 != currVal_1) {
          this.setAttr$3(this.rootEl, "role", currVal_1);
          this._material_button_template$_expr_1 = currVal_1;
        }
        currVal_2 = this.ctx.get$disabledStr();
        t1 = this._material_button_template$_expr_2;
        if (t1 !== currVal_2) {
          this.setAttr$3(this.rootEl, "aria-disabled", currVal_2);
          this._material_button_template$_expr_2 = currVal_2;
        }
        currVal_3 = J.get$disabled$z(this.ctx);
        t1 = this._material_button_template$_expr_3;
        if (t1 !== currVal_3) {
          this.updateElemClass$3(this.rootEl, "is-disabled", currVal_3);
          this._material_button_template$_expr_3 = currVal_3;
        }
        currVal_4 = this.ctx.get$hostDisabled();
        t1 = this._material_button_template$_expr_4;
        if (t1 != currVal_4) {
          this.setAttr$3(this.rootEl, "disabled", currVal_4);
          this._material_button_template$_expr_4 = currVal_4;
        }
        currVal_5 = this.ctx.get$hostRaised();
        t1 = this._material_button_template$_expr_5;
        if (t1 != currVal_5) {
          this.setAttr$3(this.rootEl, "raised", currVal_5);
          this._material_button_template$_expr_5 = currVal_5;
        }
        currVal_6 = this.ctx.get$hostClassIsFocused();
        t1 = this._material_button_template$_expr_6;
        if (t1 !== currVal_6) {
          this.updateElemClass$3(this.rootEl, "is-focused", currVal_6);
          this._material_button_template$_expr_6 = currVal_6;
        }
        currVal_7 = this.ctx.get$hostElevation();
        t1 = this._material_button_template$_expr_7;
        if (t1 !== currVal_7) {
          this.setAttr$3(this.rootEl, "elevation", currVal_7);
          this._material_button_template$_expr_7 = currVal_7;
        }
      },
      $asAppView: function() {
        return [B.MaterialButtonComponent];
      },
      static: {
        ViewMaterialButtonComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new U.ViewMaterialButtonComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, B.MaterialButtonComponent));
          t2 = document.createElement("material-button");
          H.interceptedTypeCheck(t2, "$isHtmlElement");
          t1.rootEl = t2;
          J.setAttribute$2$x(t2, "animated", "true");
          t2 = $.ViewMaterialButtonComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialButtonComponent());
            $.ViewMaterialButtonComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/material_button/material_button_base.dart",, S, {
    "^": "",
    MaterialButtonBase: {
      "^": "ButtonDirective;",
      _setFocused$1: function(newValue) {
        P.scheduleMicrotask(new S.MaterialButtonBase__setFocused_closure(this, newValue));
      },
      focusedStateChanged$0: function() {
      },
      onMouseDown$1: [function(_, _0) {
        this._clickFocused = true;
        this._isMouseDown = true;
      }, "call$1", "get$onMouseDown", 5, 0, 2],
      onMouseUp$1: [function(_, _0) {
        this._isMouseDown = false;
      }, "call$1", "get$onMouseUp", 5, 0, 2],
      onFocus$1: [function(_, $event) {
        H.interceptedTypeCheck($event, "$isUIEvent");
        if (this._clickFocused)
          return;
        this._setFocused$1(true);
      }, "call$1", "get$onFocus", 5, 0, 18],
      onBlur$1: [function(_, $event) {
        H.interceptedTypeCheck($event, "$isUIEvent");
        if (this._clickFocused)
          this._clickFocused = false;
        this._setFocused$1(false);
      }, "call$1", "get$onBlur", 5, 0, 18]
    },
    MaterialButtonBase__setFocused_closure: {
      "^": "Closure:0;$this,newValue",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t2 = this.newValue;
        if (t1._focused !== t2) {
          t1._focused = t2;
          t1.focusedStateChanged$0();
        }
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular_components/material_checkbox/material_checkbox.dart",, B, {
    "^": "",
    MaterialCheckboxComponent: {
      "^": "Object;_material_checkbox$_changeDetector,_root,_defaultTabIndex,role>,0_onTouched,_onChecked,_onIndeterminate,_onChange,indeterminateToChecked,disabled>,_checked,readOnly,_material_checkbox$_focused,_isKeyboardEvent,_checkedStr,_indeterminate,_material_checkbox$_icon,0themeColor,0label>,0focusDelegate",
      get$tabIndex: function(_) {
        return this.disabled ? "-1" : this._defaultTabIndex;
      },
      set$checked: function(_, newValue) {
        if (this._checked == newValue)
          return;
        this._setStates$1$checked(newValue);
      },
      get$checked: function(_) {
        return this._checked;
      },
      _setStates$3$checked$emitEvent$indeterminate: function(checked, emitEvent, indeterminate) {
        var prevChecked, prevState, t1;
        prevChecked = this._checked;
        prevState = this._checkedStr;
        this._checked = checked;
        this._indeterminate = false;
        t1 = checked ? "true" : "false";
        this._checkedStr = t1;
        t1 = checked ? C.Icon_check_box : C.Icon_check_box_outline_blank;
        this._material_checkbox$_icon = t1;
        if (checked != prevChecked)
          this._onChecked.add$1(0, checked);
        if (this._checkedStr !== prevState) {
          this._syncAriaChecked$0();
          this._onChange.add$1(0, this._checkedStr);
        }
      },
      _setStates$1$checked: function(checked) {
        return this._setStates$3$checked$emitEvent$indeterminate(checked, true, false);
      },
      _setStates$0: function() {
        return this._setStates$3$checked$emitEvent$indeterminate(false, true, false);
      },
      _syncAriaChecked$0: function() {
        var t1 = this._root;
        if (t1 == null)
          return;
        J.setAttribute$2$x(t1, "aria-checked", this._checkedStr);
        this._material_checkbox$_changeDetector.appView.markPathToRootAsCheckOnce$0();
      },
      toggleChecked$0: function() {
        if (this.disabled || false)
          return;
        var t1 = this._checked;
        if (!t1)
          this._setStates$1$checked(true);
        else
          this._setStates$0();
      },
      handleKeyUp$1: [function($event) {
        var t1, t2;
        t1 = W._convertNativeToDart_EventTarget(H.interceptedTypeCheck($event, "$isKeyboardEvent").target);
        t2 = this._root;
        if (t1 == null ? t2 != null : t1 !== t2)
          return;
        this._isKeyboardEvent = true;
      }, "call$1", "get$handleKeyUp", 4, 0, 5],
      handleClick$1: [function(mouseEvent) {
        H.interceptedTypeCheck(mouseEvent, "$isMouseEvent");
        if (this.disabled)
          return;
        this._isKeyboardEvent = false;
        this.toggleChecked$0();
      }, "call$1", "get$handleClick", 4, 0, 17],
      handleMouseDown$1: [function(mouseEvent) {
        H.interceptedTypeCheck(mouseEvent, "$isMouseEvent");
      }, "call$1", "get$handleMouseDown", 4, 0, 17],
      handleKeyPress$1: [function($event) {
        var t1, t2;
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        if (this.disabled)
          return;
        t1 = W._convertNativeToDart_EventTarget($event.target);
        t2 = this._root;
        if (t1 == null ? t2 != null : t1 !== t2)
          return;
        if (Z.isSpaceKey($event)) {
          $event.preventDefault();
          this._isKeyboardEvent = true;
          this.toggleChecked$0();
        }
      }, "call$1", "get$handleKeyPress", 4, 0, 5],
      handleFocus$1: [function(_) {
        this._material_checkbox$_focused = true;
      }, "call$1", "get$handleFocus", 4, 0, 2],
      handleBlur$1: [function($event) {
        H.interceptedTypeCheck($event, "$isEvent");
        this._material_checkbox$_focused = false;
      }, "call$1", "get$handleBlur", 4, 0, 26],
      $isFocusable: 1,
      static: {
        MaterialCheckboxComponent$: function(_root, _changeDetector, cd, hostTabIndex, role) {
          var t1, t2;
          t1 = [null];
          t2 = hostTabIndex == null ? null : hostTabIndex.length !== 0;
          t2 = (t2 == null ? false : t2) ? hostTabIndex : "0";
          t1 = new B.MaterialCheckboxComponent(_changeDetector, _root, t2, "checkbox", new P._AsyncBroadcastStreamController(null, null, 0, t1), new P._AsyncBroadcastStreamController(null, null, 0, t1), new P._AsyncBroadcastStreamController(null, null, 0, t1), false, false, false, false, false, false, "false", false, C.Icon_check_box_outline_blank);
          t1._syncAriaChecked$0();
          return t1;
        }
      }
    }
  }], ["asset_angular_components_lib_material_checkbox_material_checkbox.scss.css.shim.dart", "package:angular_components/material_checkbox/material_checkbox.scss.css.shim.dart",, F, {}], ["", "package:angular_components/material_checkbox/material_checkbox.template.dart",, G, {
    "^": "",
    viewFactory_MaterialCheckboxComponent1: [function(parentView, parentIndex) {
      var t1 = new G._ViewMaterialCheckboxComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, B.MaterialCheckboxComponent));
      t1.componentType = $.ViewMaterialCheckboxComponent0__renderType;
      return t1;
    }, "call$2", "material_checkbox_template__viewFactory_MaterialCheckboxComponent1$closure", 8, 0, 161],
    ViewMaterialCheckboxComponent0: {
      "^": "AppView;0_material_checkbox_template$_compView_1,0_material_checkbox_template$_MaterialIconComponent_1_5,0_material_checkbox_template$_appEl_2,0_material_checkbox_template$_NgIf_2_9,0_material_checkbox_template$_expr_0,0_material_checkbox_template$_expr_1,0_material_checkbox_template$_expr_2,0_material_checkbox_template$_expr_3,0_material_checkbox_template$_expr_5,0_material_checkbox_template$_expr_6,0_material_checkbox_template$_expr_8,0_material_checkbox_template$_expr_9,0_expr_10,0_material_checkbox_template$_el_0,0_material_checkbox_template$_el_1,0_text_4,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, doc, t1, t2, _anchor_2, _el_3, t3, t4;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        doc = document;
        t1 = S.createDivAndAppend(doc, parentRenderNode);
        this._material_checkbox_template$_el_0 = t1;
        t1.className = "icon-container";
        this.addShimC$1(t1);
        t1 = M.ViewMaterialIconComponent0$(this, 1);
        this._material_checkbox_template$_compView_1 = t1;
        t1 = t1.rootEl;
        this._material_checkbox_template$_el_1 = t1;
        t2 = this._material_checkbox_template$_el_0;
        (t2 && C.DivElement_methods).append$1(t2, t1);
        J.setAttribute$2$x(this._material_checkbox_template$_el_1, "aria-hidden", "true");
        t1 = this._material_checkbox_template$_el_1;
        t1.className = "icon";
        this.addShimC$1(t1);
        t1 = new Y.MaterialIconComponent(this._material_checkbox_template$_el_1);
        this._material_checkbox_template$_MaterialIconComponent_1_5 = t1;
        this._material_checkbox_template$_compView_1.create$2(0, t1, []);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_2 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t1 = this._material_checkbox_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _anchor_2);
        t1 = new V.ViewContainer(2, 0, this, _anchor_2);
        this._material_checkbox_template$_appEl_2 = t1;
        this._material_checkbox_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, G.material_checkbox_template__viewFactory_MaterialCheckboxComponent1$closure()), t1, false);
        _el_3 = S.createDivAndAppend(doc, parentRenderNode);
        _el_3.className = "content";
        this.addShimC$1(_el_3);
        t1 = doc.createTextNode("");
        this._text_4 = t1;
        (_el_3 && C.DivElement_methods).append$1(_el_3, t1);
        C.DivElement_methods.append$1(_el_3, doc.createTextNode(" "));
        this.project$2(_el_3, 0);
        this.init$2(C.List_empty, null);
        t1 = W.Event;
        t2 = W.KeyboardEvent;
        t3 = J.getInterceptor$x(_rootEl);
        t3.addEventListener$2(_rootEl, "keyup", this.eventHandler1$2$1(_ctx.get$handleKeyUp(), t1, t2));
        t4 = W.MouseEvent;
        t3.addEventListener$2(_rootEl, "click", this.eventHandler1$2$1(_ctx.get$handleClick(), t1, t4));
        t3.addEventListener$2(_rootEl, "mousedown", this.eventHandler1$2$1(_ctx.get$handleMouseDown(), t1, t4));
        t3.addEventListener$2(_rootEl, "keypress", this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t1, t2));
        t3.addEventListener$2(_rootEl, "focus", this.eventHandler1$2$1(_ctx.get$handleFocus(), t1, t1));
        t3.addEventListener$2(_rootEl, "blur", this.eventHandler1$2$1(_ctx.get$handleBlur(), t1, t1));
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_3, t1, changed, currVal_0, currVal_2;
        _ctx = this.ctx;
        currVal_3 = _ctx._material_checkbox$_icon;
        t1 = this._material_checkbox_template$_expr_3;
        if (t1 !== currVal_3) {
          this._material_checkbox_template$_MaterialIconComponent_1_5.set$icon(0, currVal_3);
          this._material_checkbox_template$_expr_3 = currVal_3;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._material_checkbox_template$_compView_1.viewData.set$cdMode(1);
        this._material_checkbox_template$_NgIf_2_9.set$ngIf(!_ctx.disabled);
        this._material_checkbox_template$_appEl_2.detectChangesInNestedViews$0();
        currVal_0 = _ctx._material_checkbox$_focused && _ctx._isKeyboardEvent;
        t1 = this._material_checkbox_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateClass$3(this._material_checkbox_template$_el_0, "focus", currVal_0);
          this._material_checkbox_template$_expr_0 = currVal_0;
        }
        if (!_ctx._checked) {
          _ctx._indeterminate;
          currVal_2 = false;
        } else
          currVal_2 = true;
        t1 = this._material_checkbox_template$_expr_2;
        if (t1 !== currVal_2) {
          this.updateElemClass$3(this._material_checkbox_template$_el_1, "filled", currVal_2);
          this._material_checkbox_template$_expr_2 = currVal_2;
        }
        _ctx.label;
        t1 = this._material_checkbox_template$_expr_5;
        if (t1 !== "") {
          this._text_4.textContent = "";
          this._material_checkbox_template$_expr_5 = "";
        }
        this._material_checkbox_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_checkbox_template$_appEl_2.destroyNestedViews$0();
        this._material_checkbox_template$_compView_1.destroy$0();
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_6, t1, currVal_8, currVal_9, t2, currVal_10;
        if (firstCheck)
          if (J.get$role$z(this.ctx) != null)
            this.setAttr$3(this.rootEl, "role", J.get$role$z(this.ctx));
        currVal_6 = J.get$tabIndex$x(this.ctx);
        t1 = this._material_checkbox_template$_expr_6;
        if (t1 != currVal_6) {
          this.setAttr$3(this.rootEl, "tabindex", currVal_6);
          this._material_checkbox_template$_expr_6 = currVal_6;
        }
        currVal_8 = J.get$disabled$z(this.ctx);
        t1 = this._material_checkbox_template$_expr_8;
        if (t1 !== currVal_8) {
          this.updateElemClass$3(this.rootEl, "disabled", currVal_8);
          this._material_checkbox_template$_expr_8 = currVal_8;
        }
        currVal_9 = J.get$disabled$z(this.ctx);
        t1 = this._material_checkbox_template$_expr_9;
        if (t1 !== currVal_9) {
          t1 = this.rootEl;
          t2 = String(currVal_9);
          this.setAttr$3(t1, "aria-disabled", t2);
          this._material_checkbox_template$_expr_9 = currVal_9;
        }
        currVal_10 = J.get$label$z(this.ctx);
        t1 = this._expr_10;
        if (t1 != currVal_10) {
          this.setAttr$3(this.rootEl, "aria-label", currVal_10);
          this._expr_10 = currVal_10;
        }
      },
      $asAppView: function() {
        return [B.MaterialCheckboxComponent];
      },
      static: {
        ViewMaterialCheckboxComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new G.ViewMaterialCheckboxComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, B.MaterialCheckboxComponent));
          t2 = document.createElement("material-checkbox");
          H.interceptedTypeCheck(t2, "$isHtmlElement");
          t1.rootEl = t2;
          t2.className = "themeable";
          t2 = $.ViewMaterialCheckboxComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialCheckboxComponent());
            $.ViewMaterialCheckboxComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    _ViewMaterialCheckboxComponent1: {
      "^": "AppView;0_material_checkbox_template$_compView_0,0_MaterialRippleComponent_0_5,0_material_checkbox_template$_expr_0,0_material_checkbox_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1 = L.ViewMaterialRippleComponent0$(this, 0);
        this._material_checkbox_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._material_checkbox_template$_el_0 = t1;
        t1.className = "ripple";
        this.addShimC$1(t1);
        t1 = B.MaterialRippleComponent$(this._material_checkbox_template$_el_0);
        this._MaterialRippleComponent_0_5 = t1;
        this._material_checkbox_template$_compView_0.create$2(0, t1, []);
        this.init0$1(this._material_checkbox_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1;
        _ctx = this.ctx;
        currVal_0 = _ctx._checked ? _ctx.themeColor : "";
        t1 = this._material_checkbox_template$_expr_0;
        if (t1 != currVal_0) {
          t1 = this._material_checkbox_template$_el_0.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "color"), currVal_0, null);
          this._material_checkbox_template$_expr_0 = currVal_0;
        }
        this._material_checkbox_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_checkbox_template$_compView_0.destroy$0();
        this._MaterialRippleComponent_0_5.ngOnDestroy$0();
      },
      $asAppView: function() {
        return [B.MaterialCheckboxComponent];
      }
    }
  }], ["", "package:angular_components/material_icon/material_icon.dart",, Y, {
    "^": "",
    MaterialIconComponent: {
      "^": "Object;0_material_icon$_icon,_material_icon$_element",
      set$icon: function(_, value) {
        this._material_icon$_icon = value;
        if (C.JSArray_methods.contains$1(C.List_CX7, this.get$iconName()))
          J.setAttribute$2$x(this._material_icon$_element, "flip", "");
      },
      get$iconName: function() {
        var t1 = this._material_icon$_icon;
        return H.stringTypeCheck(t1 instanceof L.Icon ? t1.name : t1);
      }
    }
  }], ["asset_angular_components_lib_material_icon_material_icon.scss.css.shim.dart", "package:angular_components/material_icon/material_icon.scss.css.shim.dart",, X, {}], ["", "package:angular_components/material_icon/material_icon.template.dart",, M, {
    "^": "",
    ViewMaterialIconComponent0: {
      "^": "AppView;0_material_icon_template$_expr_0,0_material_icon_template$_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_1, t2;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = document;
        J.append$1$x(parentRenderNode, t1.createTextNode("\n"));
        _el_1 = S.createAndAppend(t1, "i", parentRenderNode);
        t2 = J.getInterceptor$x(_el_1);
        t2.setAttribute$2(_el_1, "aria-hidden", "true");
        _el_1.className = "material-icon-i material-icons";
        this.addShimE$1(_el_1);
        t1 = t1.createTextNode("");
        this._material_icon_template$_text_2 = t1;
        t2.append$1(_el_1, t1);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = this.ctx.get$iconName();
        if (currVal_0 == null)
          currVal_0 = "";
        t1 = this._material_icon_template$_expr_0;
        if (t1 !== currVal_0) {
          this._material_icon_template$_text_2.textContent = currVal_0;
          this._material_icon_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [Y.MaterialIconComponent];
      },
      static: {
        ViewMaterialIconComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new M.ViewMaterialIconComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, Y.MaterialIconComponent));
          t2 = document.createElement("material-icon");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewMaterialIconComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialIconComponent());
            $.ViewMaterialIconComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/material_list/material_list.dart",, B, {
    "^": "",
    MaterialListComponent: {
      "^": "Object;size>,role>"
    }
  }], ["asset_angular_components_lib_material_list_material_list.scss.css.shim.dart", "package:angular_components/material_list/material_list.scss.css.shim.dart",, K, {}], ["", "package:angular_components/material_list/material_list.template.dart",, B, {
    "^": "",
    ViewMaterialListComponent0: {
      "^": "AppView;0_material_list_template$_expr_0,0_material_list_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.project$2(this.initViewRoot$1(this.rootEl), 0);
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [B.MaterialListComponent];
      }
    }
  }], ["", "package:angular_components/material_popup/material_popup.dart",, G, {
    "^": "",
    _mergeStreams: function(streams, $T) {
      var t1, t2, streamSubscriptions, cachedResults, streamController;
      t1 = {};
      H.assertSubtype(streams, "$isList", [[P.Stream, $T]], "$asList");
      t2 = new Array(2);
      t2.fixed$length = Array;
      streamSubscriptions = H.setRuntimeTypeInfo(t2, [[P.StreamSubscription, $T]]);
      t2 = new Array(2);
      t2.fixed$length = Array;
      cachedResults = H.setRuntimeTypeInfo(t2, [$T]);
      t1.streamController = null;
      t2 = [P.List, $T];
      streamController = new P._SyncBroadcastStreamController(new G._mergeStreams_closure(t1, streams, streamSubscriptions, cachedResults, $T), new G._mergeStreams_closure0(streamSubscriptions), 0, [t2]);
      t1.streamController = streamController;
      return new P._BroadcastStream(streamController, [t2]);
    },
    _flatten: function($async$nested) {
      return P._makeSyncStarIterable(function() {
        var nested = $async$nested;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, item;
        return function $async$_flatten($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = J.get$iterator$ax(nested);
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                item = t1.get$current(t1);
                $async$goto = !!J.getInterceptor$(item).$isIterable ? 4 : 6;
                break;
              case 4:
                // then
                $async$goto = 7;
                return P._IterationMarker_yieldStar(G._flatten(item));
              case 7:
                // after yield
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                $async$goto = 8;
                return item;
              case 8:
                // after yield
              case 5:
                // join
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, null);
    },
    MaterialPopupComponent: {
      "^": "_MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement;_onOpened,_onContentVisible,_onAutoDismissed,_material_popup$_changeDetector,_material_popup$_viewContainer,_material_popup$_disposer,_material_popup$_ngZone,_overlayService,_material_popup$_domService,_hierarchy,_defaultPreferredPositions,0_alignmentPosition,0_layoutChangeSub,0_layoutInternalSub,0_windowResizeSub,0_overlayRef,elementRef,role>,_material_popup$_uniqueId,0_resolvedPopupRef,_viewInitialized,0_animationTimer,_isOpening,_useRepositionLoop,0_initialSourceDimensions,_repositionOffsetX,_repositionOffsetY,0_repositionLoopId,showPopup,z,0_zIndex,_zIndexer,0_slide,_popupSizeProvider,0minHeight,0minWidth,0maxHeight,0maxWidth,_matchMinSourceWidth,inkBackground,hasBox,state,0templateRef,_isVisible,PopupEvents_onOpenController,PopupEvents_onCloseController,PopupEvents_onVisibleController",
      set$_initialSourceDimensions: function(_initialSourceDimensions) {
        this._initialSourceDimensions = H.assertSubtype(_initialSourceDimensions, "$isRectangle", [P.num], "$asRectangle");
      },
      set$templateRef: function(templateRef) {
        this.templateRef = H.interceptedTypeCheck(templateRef, "$isTemplateRef");
      },
      MaterialPopupComponent$13: function(_hierarchy, parentPopup, role, _ngZone, _overlayService, _domService, _zIndexer, _defaultPreferredPositions, _useRepositionLoop, _popupSizeProvider, _changeDetector, _viewContainer, elementRef) {
        var t1;
        if (parentPopup != null) {
          t1 = parentPopup.PopupEvents_onCloseController;
          new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new G.MaterialPopupComponent_closure(this));
        }
        this._resolvedPopupRef = new G.MaterialPopupRef(this);
        this._initViewportRect$0();
      },
      _initViewportRect$0: function() {
        var t1, t2, t3;
        if ($.MaterialPopupComponent__viewportRect != null)
          return;
        t1 = window.innerWidth;
        t2 = window.innerHeight;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < 0)
          t1 = -t1 * 0;
        if (typeof t2 !== "number")
          return t2.$lt();
        if (t2 < 0)
          t2 = -t2 * 0;
        $.MaterialPopupComponent__viewportRect = new P.MutableRectangle(0, 0, t1, t2, [P.num]);
        t2 = this._material_popup$_ngZone;
        t1 = P.Null;
        t2.toString;
        t3 = H.functionTypeCheck(new G.MaterialPopupComponent__initViewportRect_closure(), {func: 1, ret: t1});
        t2._outerZone.run$1$1(t3, t1);
      },
      get$hierarchy: function() {
        var t1 = this._hierarchy;
        if (t1 == null)
          t1 = new Z.PopupHierarchy(H.setRuntimeTypeInfo([], [Z.PopupHierarchyElement]));
        this._hierarchy = t1;
        return t1;
      },
      _updateOverlayCssClass$0: function() {
        var hostClassName, t1;
        if (this._overlayRef == null)
          return;
        hostClassName = J.get$className$x(this.elementRef.nativeElement);
        t1 = this._overlayRef.overlayElement;
        t1.className = J.$add$ansx(t1.className, " " + H.S(hostClassName));
      },
      get$paneId: function() {
        var t1 = this._overlayRef;
        return t1 == null ? null : C.DivElement_methods.getAttribute$1(t1.overlayElement, "pane-id");
      },
      _initView$0: function() {
        var t1, t2, pane, t3, _i, node;
        t1 = this._overlayService;
        t2 = t1._renderService;
        t2.toString;
        pane = document.createElement("div");
        C.DivElement_methods.setAttribute$2(pane, "pane-id", H.S(t2._containerName) + "-" + ++t2._uniqueId);
        pane.classList.add("pane");
        t2.applyStateSync$2(C._ImmutableOverlayState_oyn, pane);
        t3 = t2.containerElement;
        J.append$1$x(t3, pane);
        t1 = B.OverlayRef$(t2.get$applyState(), t1.get$_measurePane(), new L.DomPortalHost(pane, t2._imperativeViewUtils, false), t3, pane, t1._overlay_service$_ngZone.get$runOutsideAngular(), C._ImmutableOverlayState_oyn);
        this._overlayRef = t1;
        this._material_popup$_disposer.addFunction$1(t1.get$dispose());
        this._zIndexer.toString;
        t1 = J.$add$ansx(self.acxZIndex, 1);
        self.acxZIndex = t1;
        this._zIndex = t1;
        for (t1 = S._flattenNestedViewRenderNodes(this._material_popup$_viewContainer.createEmbeddedView$1(this.templateRef).appView.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], [W.Node])), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          C.DivElement_methods.append$1(this._overlayRef.overlayElement, node);
        }
        this._updateOverlayCssClass$0();
        this._viewInitialized = true;
      },
      set$visible: function(_, visible) {
        if (visible)
          if (!this._viewInitialized) {
            this._initView$0();
            P.scheduleMicrotask(this.get$_open(this));
          } else
            this._open$0(0);
        else if (this._viewInitialized)
          this._close$0();
      },
      get$autoDismissBlockers: function() {
        var t1, sourceElement;
        t1 = this.state._backingMap._observable_map$_map;
        sourceElement = !!J.getInterceptor$(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource")).$isElementPopupSource ? H.interceptedTypeCast(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource"), "$isElementPopupSource").get$sourceElement() : null;
        t1 = [W.Element];
        return sourceElement != null ? H.setRuntimeTypeInfo([sourceElement], t1) : H.setRuntimeTypeInfo([], t1);
      },
      _open$0: [function(_) {
        var t1, t2, t3, t4, t5, t6, t7, popupContentsLayoutStream, popupSourceLayoutStream;
        if (this._isOpening) {
          t1 = new P._Future(0, $.Zone__current, [null]);
          t1._asyncComplete$1(null);
          return t1;
        }
        this._isOpening = true;
        t1 = this._animationTimer;
        if (!(t1 == null))
          t1.cancel$0(0);
        this.PopupEvents_onOpenController.add$1(0, null);
        if (!this._isOpening) {
          t1 = new P._Future(0, $.Zone__current, [null]);
          t1._asyncComplete$1(null);
          return t1;
        }
        if (!this._viewInitialized)
          throw H.wrapException(P.StateError$("No content is attached."));
        else {
          t1 = this.state._backingMap._observable_map$_map;
          if (H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource") == null)
            throw H.wrapException(P.StateError$("Cannot open popup: no source set."));
        }
        this._updatePopupMinMaxSize$0();
        this._overlayRef.state.set$visibility(0, C.Visibility_Hidden_visibility_hidden);
        t2 = this._overlayRef.overlayElement.style;
        t2.display = "";
        t2.visibility = "hidden";
        this._onContentVisible.add$1(0, true);
        this._material_popup$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        t2 = [P.Rectangle, P.num];
        t3 = new P._Future(0, $.Zone__current, [t2]);
        t4 = this._overlayRef.measureSizeChanges$0();
        t5 = H.getTypeArgumentByIndex(t4, 0);
        t6 = H.functionTypeCheck(new G.MaterialPopupComponent__open_closure(this), {func: 1, ret: -1, args: [[P.StreamSubscription, t5]]});
        t7 = [P.StreamSubscription, t5];
        popupContentsLayoutStream = new P._AsBroadcastStream(t4, $.Zone__current.registerUnaryCallback$2$1(null, null, t7), $.Zone__current.registerUnaryCallback$2$1(t6, null, t7), $.Zone__current, [t5]);
        popupContentsLayoutStream.set$_controller(new P._AsBroadcastStreamController(popupContentsLayoutStream.get$_onListen(), popupContentsLayoutStream.get$_async$_onCancel(), 0, [t5]));
        popupSourceLayoutStream = H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").onDimensionsChanged$1$track(H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)));
        if (!H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)))
          popupContentsLayoutStream = new P._TakeStream(1, popupContentsLayoutStream, [t5]);
        this._layoutChangeSub = G._mergeStreams(H.setRuntimeTypeInfo([popupContentsLayoutStream, popupSourceLayoutStream], [[P.Stream, [P.Rectangle, P.num]]]), t2).listen$1(new G.MaterialPopupComponent__open_closure0(this, new P._AsyncCompleter(t3, [t2])));
        if (this._popupSizeProvider != null) {
          t1 = window;
          t2 = W.Event;
          this._windowResizeSub = H.assertSubtype(new R.RateLimitTransformer(C.Duration_200000, H.instantiate1(R.rate_limit_utils__debounce$closure(), null), [t2, null]), "$isStreamTransformer", [t2, null], "$asStreamTransformer").bind$1(new W._EventStream(t1, "resize", false, [t2])).listen$1(new G.MaterialPopupComponent__open_closure1(this));
        }
        return t3;
      }, "call$0", "get$_open", 1, 0, 14],
      _onPopupOpened$0: function() {
        var t1, t2, t3;
        if (!this._isOpening)
          return;
        this.showPopup = true;
        this._material_popup$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        t1 = this.state._backingMap._observable_map$_map;
        if (H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)) && this._useRepositionLoop)
          this._startRepositionLoop$0();
        t2 = this.get$hierarchy();
        t3 = t2._visiblePopupStack;
        if (t3.length === 0)
          t2._rootPane = Z.closestWithClass(H.interceptedTypeCheck(this.elementRef.nativeElement, "$isElement"), "pane");
        C.JSArray_methods.add$1(t3, this);
        if (t2._triggerListener == null)
          t2._triggerListener = Z.triggersOutside(null).listen$1(t2.get$_onTrigger());
        if (t2._keyUpListener == null) {
          t3 = W.KeyboardEvent;
          t2._keyUpListener = W._EventStreamSubscription$(document, "keyup", H.functionTypeCheck(t2.get$_onKeyUp(), {func: 1, ret: -1, args: [t3]}), false, t3);
        }
        H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").onOpen$0(0);
        this._animationTimer = P.Timer_Timer(C.Duration_150000, new G.MaterialPopupComponent__onPopupOpened_closure(this));
      },
      _close$0: function() {
        var t1, t2, t3;
        if (!this._isOpening)
          return;
        this._isOpening = false;
        t1 = this._animationTimer;
        if (!(t1 == null))
          t1.cancel$0(0);
        this.PopupEvents_onCloseController.add$1(0, null);
        if (this._isOpening)
          return;
        t1 = this._layoutInternalSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this._layoutChangeSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this._windowResizeSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this._repositionLoopId;
        if (t1 != null) {
          t2 = window;
          C.Window_methods._ensureRequestAnimationFrame$0(t2);
          C.Window_methods._cancelAnimationFrame$1(t2, t1);
          this._repositionLoopId = null;
          t1 = this._repositionOffsetX;
          if (t1 !== 0 || this._repositionOffsetY !== 0) {
            t2 = this._overlayRef.state;
            t3 = t2._left;
            if (typeof t3 !== "number")
              return t3.$add();
            t2.set$left(0, t3 + t1);
            t1 = t2._top;
            t3 = this._repositionOffsetY;
            if (typeof t1 !== "number")
              return t1.$add();
            t2.set$top(0, t1 + t3);
            this._repositionOffsetY = 0;
            this._repositionOffsetX = 0;
          }
        }
        t1 = this.state._backingMap._observable_map$_map;
        if (!!J.getInterceptor$(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource")).$isFocusable) {
          t2 = J.getInterceptor$(this.get$hierarchy()._lastTriggerEvent);
          t2 = !!t2.$isKeyboardEvent || !!t2.$isFocusEvent;
        } else
          t2 = false;
        if (t2)
          this._material_popup$_domService.scheduleWrite$1(new G.MaterialPopupComponent__close_closure(this));
        t2 = this.get$hierarchy();
        t3 = t2._visiblePopupStack;
        if (C.JSArray_methods.remove$1(t3, this) && t3.length === 0) {
          t2._rootPane = null;
          t2._triggerListener.cancel$0(0);
          t2._keyUpListener.cancel$0(0);
          t2._triggerListener = null;
          t2._keyUpListener = null;
        }
        this.showPopup = false;
        this._material_popup$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").onClose$0(0);
        this._animationTimer = P.Timer_Timer(C.Duration_150000, new G.MaterialPopupComponent__close_closure0(this));
      },
      _onPopupClosed$0: function() {
        this._onContentVisible.add$1(0, false);
        this._material_popup$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        this._overlayRef.state.set$visibility(0, C.Visibility_None_display_none);
        var t1 = this._overlayRef.overlayElement.style;
        t1.display = "none";
        this._isVisible = false;
        this.PopupEvents_onVisibleController.add$1(0, false);
      },
      get$_sourceDimensions: function() {
        var t1, sourceDimensions, containerRect;
        t1 = H.interceptedTypeCheck(this.state._backingMap._observable_map$_map.$index(0, C.Symbol_source), "$isPopupSource");
        sourceDimensions = t1 == null ? null : t1.get$dimensions();
        if (sourceDimensions == null)
          return;
        t1 = this._overlayRef.containerElement;
        containerRect = t1 == null ? null : t1.getBoundingClientRect();
        if (containerRect == null)
          return;
        return P.Rectangle$(C.JSNumber_methods.round$0(sourceDimensions.left - containerRect.left), C.JSNumber_methods.round$0(sourceDimensions.top - containerRect.top), C.JSNumber_methods.round$0(sourceDimensions.width), C.JSNumber_methods.round$0(sourceDimensions.height), P.num);
      },
      _startRepositionLoop$0: function() {
        var t1, t2, t3;
        t1 = this._material_popup$_ngZone;
        t2 = P.Null;
        t1.toString;
        t3 = H.functionTypeCheck(new G.MaterialPopupComponent__startRepositionLoop_closure(this), {func: 1, ret: t2});
        t1._outerZone.run$1$1(t3, t2);
      },
      _reposition$1: [function(_) {
        var sourceDimensions, t1, t2, newOffsetX, newOffsetY, popupRect, t3, t4, x, t5, t6, t7, y, viewportShift;
        this._repositionLoopId = C.Window_methods.requestAnimationFrame$1(window, this.get$_reposition());
        sourceDimensions = this.get$_sourceDimensions();
        if (sourceDimensions == null)
          return;
        if (this._initialSourceDimensions == null)
          this.set$_initialSourceDimensions(sourceDimensions);
        t1 = sourceDimensions.left;
        t2 = this._initialSourceDimensions;
        newOffsetX = C.JSNumber_methods.round$0(t1 - t2.left);
        newOffsetY = C.JSNumber_methods.round$0(sourceDimensions.top - t2.top);
        t2 = this._repositionOffsetX;
        t1 = this._repositionOffsetY;
        this._repositionOffsetX = newOffsetX;
        this._repositionOffsetY = newOffsetY;
        if (H.boolTypeCheck(this.state._backingMap._observable_map$_map.$index(0, C.Symbol_constrainToViewport))) {
          popupRect = this._overlayRef.overlayElement.getBoundingClientRect();
          t3 = P.num;
          popupRect = P.Rectangle$(popupRect.left + (newOffsetX - t2), popupRect.top + (newOffsetY - t1), popupRect.width, popupRect.height, t3);
          t1 = $.MaterialPopupComponent__viewportRect;
          t2 = popupRect.left;
          t4 = t1.left;
          if (t2 < t4)
            x = t4 - t2;
          else {
            t5 = popupRect.width;
            if (typeof t5 !== "number")
              return H.iae(t5);
            t5 = H.assertSubtypeOfRuntimeType(t2 + t5, H.getTypeArgumentByIndex(popupRect, 0));
            t6 = t1.get$width(t1);
            if (typeof t6 !== "number")
              return H.iae(t6);
            t7 = H.getTypeArgumentByIndex(t1, 0);
            if (t5 > H.assertSubtypeOfRuntimeType(t4 + t6, t7)) {
              t4 = t1.left;
              t6 = t1.get$width(t1);
              if (typeof t6 !== "number")
                return H.iae(t6);
              x = Math.max(H.assertSubtypeOfRuntimeType(t4 + t6, t7) - t5, t1.left - t2);
            } else
              x = 0;
          }
          t2 = popupRect.top;
          t4 = t1.top;
          if (t2 < t4)
            y = t4 - t2;
          else {
            t5 = popupRect.height;
            if (typeof t5 !== "number")
              return H.iae(t5);
            t5 = H.assertSubtypeOfRuntimeType(t2 + t5, H.getTypeArgumentByIndex(popupRect, 0));
            t6 = t1.get$height(t1);
            if (typeof t6 !== "number")
              return H.iae(t6);
            t7 = H.getTypeArgumentByIndex(t1, 0);
            if (t5 > H.assertSubtypeOfRuntimeType(t4 + t6, t7)) {
              t1 = t1.get$height(t1);
              if (typeof t1 !== "number")
                return H.iae(t1);
              y = Math.max(H.assertSubtypeOfRuntimeType(t4 + t1, t7) - t5, t4 - t2);
            } else
              y = 0;
          }
          viewportShift = P.Rectangle$(C.JSNumber_methods.round$0(x), C.JSNumber_methods.round$0(y), 0, 0, t3);
          this._repositionOffsetX = H.intTypeCheck(this._repositionOffsetX + viewportShift.left);
          this._repositionOffsetY = H.intTypeCheck(this._repositionOffsetY + viewportShift.top);
        }
        t1 = this._overlayRef.overlayElement.style;
        t2 = "translate(" + this._repositionOffsetX + "px, " + this._repositionOffsetY + "px)";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform"), t2, "");
      }, "call$1", "get$_reposition", 4, 0, 2, 0],
      _updatePopupMinMaxSize$0: function() {
        var t1, t2;
        t1 = this._popupSizeProvider;
        if (t1 == null)
          return;
        t2 = this._overlayRef.state._top;
        if (t2 == null)
          t2 = 0;
        this.minHeight = t1.getMinHeight$2(t2, $.MaterialPopupComponent__viewportRect._height);
        t2 = this._overlayRef.state._left;
        if (t2 == null)
          t2 = 0;
        this.minWidth = t1.getMinWidth$2(t2, $.MaterialPopupComponent__viewportRect._math$_width);
        t2 = this._overlayRef.state._top;
        if (t2 == null)
          t2 = 0;
        this.maxHeight = t1.getMaxHeight$2(t2, $.MaterialPopupComponent__viewportRect._height);
        t2 = this._overlayRef.state._left;
        if (t2 == null)
          t2 = 0;
        this.maxWidth = t1.getMaxWidth$2(t2, $.MaterialPopupComponent__viewportRect._math$_width);
      },
      _getBestPosition$3: function(contentRect, sourceRect, containerRect) {
        var t1, t2, containerOffset, t3, t4, positions, bestPosition, t5, bestOverlap, position, containerPos, t6, t7, t8, t9, t10, t11, t12, t13, left, $top, screenPos, overlapRect, overlap;
        t1 = P.num;
        t2 = [t1];
        H.assertSubtype(contentRect, "$isRectangle", t2, "$asRectangle");
        H.assertSubtype(sourceRect, "$isRectangle", t2, "$asRectangle");
        containerOffset = J.get$topLeft$x(H.assertSubtype(containerRect, "$isRectangle", t2, "$asRectangle"));
        t3 = this.state._backingMap._observable_map$_map;
        t4 = G._flatten(H.listSuperNativeTypeCheck(t3.$index(0, C.Symbol_preferredPositions), "$isIterable"));
        positions = G._flatten(!t4.get$isEmpty(t4) ? H.listSuperNativeTypeCheck(t3.$index(0, C.Symbol_preferredPositions), "$isIterable") : this._defaultPreferredPositions);
        bestPosition = positions.get$first(positions);
        for (t4 = new P._SyncStarIterator(positions._outerHelper(), [H.getTypeArgumentByIndex(positions, 0)]), t5 = J.getInterceptor$x(contentRect), bestOverlap = 0; t4.moveNext$0();) {
          position = t4.get$current(t4);
          if (H.interceptedTypeCheck(t3.$index(0, C.Symbol_source), "$isPopupSource").get$isRtl() === true)
            position = position.flipRelativePosition$0();
          containerPos = P.Rectangle$(position.get$originX().calcLeft$2(sourceRect, contentRect), position.get$originY().calcTop$2(sourceRect, contentRect), t5.get$width(contentRect), t5.get$height(contentRect), t1);
          t6 = containerPos.left;
          t7 = containerPos.top;
          t8 = H.getTypeArgumentByIndex(containerPos, 0);
          H.assertSubtype(containerOffset, "$isPoint", [t8], "$asPoint");
          t9 = containerOffset.x;
          if (typeof t9 !== "number")
            return H.iae(t9);
          t10 = H.assertSubtypeOfRuntimeType(t6 + t9, t8);
          t11 = containerOffset.y;
          if (typeof t11 !== "number")
            return H.iae(t11);
          t12 = H.assertSubtypeOfRuntimeType(t7 + t11, t8);
          t13 = containerPos.width;
          if (typeof t13 !== "number")
            return H.iae(t13);
          t13 = H.assertSubtypeOfRuntimeType(t6 + t13, t8);
          t6 = containerPos.height;
          if (typeof t6 !== "number")
            return H.iae(t6);
          t6 = H.assertSubtypeOfRuntimeType(t7 + t6, t8);
          t9 = H.assertSubtypeOfRuntimeType(t13 + t9, t8);
          t8 = H.assertSubtypeOfRuntimeType(t6 + t11, t8);
          left = Math.min(t10, t9);
          t9 = Math.max(t10, t9);
          $top = Math.min(t12, t8);
          screenPos = P.Rectangle$(left, $top, t9 - left, Math.max(t12, t8) - $top, t1);
          t6 = $.MaterialPopupComponent__viewportRect;
          t6.toString;
          H.assertSubtype(screenPos, "$isRectangle", t2, "$asRectangle");
          t7 = t6.left;
          t8 = screenPos.left;
          if (t7 <= t8) {
            t9 = t6.get$width(t6);
            if (typeof t9 !== "number")
              return H.iae(t9);
            t10 = screenPos.width;
            if (typeof t10 !== "number")
              return H.iae(t10);
            if (t7 + t9 >= t8 + t10) {
              t7 = t6.top;
              t8 = screenPos.top;
              if (t7 <= t8) {
                t6 = t6.get$height(t6);
                if (typeof t6 !== "number")
                  return H.iae(t6);
                t9 = screenPos.height;
                if (typeof t9 !== "number")
                  return H.iae(t9);
                t9 = t7 + t6 >= t8 + t9;
                t6 = t9;
              } else
                t6 = false;
            } else
              t6 = false;
          } else
            t6 = false;
          if (t6) {
            bestPosition = position;
            break;
          }
          overlapRect = $.MaterialPopupComponent__viewportRect.intersection$1(0, screenPos);
          if (overlapRect == null)
            continue;
          t6 = overlapRect.width;
          t7 = overlapRect.height;
          if (typeof t6 !== "number")
            return t6.$mul();
          if (typeof t7 !== "number")
            return H.iae(t7);
          overlap = t6 * t7;
          if (overlap > bestOverlap) {
            bestOverlap = overlap;
            bestPosition = position;
          }
        }
        return H.interceptedTypeCheck(bestPosition, "$isRelativePosition");
      },
      _schedulePositionUpdate$2: function(contentClientRect, sourceClientRect) {
        var t1 = [P.num];
        return this._schedulePositionUpdate$body$MaterialPopupComponent(H.assertSubtype(contentClientRect, "$isRectangle", t1, "$asRectangle"), H.assertSubtype(sourceClientRect, "$isRectangle", t1, "$asRectangle"));
      },
      _schedulePositionUpdate$body$MaterialPopupComponent: function(contentClientRect, sourceClientRect) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$returnValue, $async$self = this, containerRect, t1, isRtl, t2, t3, t4, t5, position, offsetX;
        var $async$_schedulePositionUpdate$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 3;
                return P._asyncAwait($async$self._overlayService._renderService.measureContainer$0(), $async$_schedulePositionUpdate$2);
              case 3:
                // returning from await.
                containerRect = $async$result;
                t1 = $async$self.state._backingMap._observable_map$_map;
                isRtl = H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").get$isRtl() === true;
                $async$self._overlayRef.state;
                if (H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth))) {
                  t2 = $async$self._overlayRef.state;
                  t3 = J.get$width$x(sourceClientRect);
                  if (t2._minWidth != t3) {
                    t2._minWidth = t3;
                    t2._asyncScheduler.scheduleUpdate$0();
                  }
                }
                if (H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth))) {
                  t2 = J.get$width$x(sourceClientRect);
                  t3 = J.getInterceptor$x(contentClientRect);
                  t4 = t3.get$width(contentClientRect);
                  t4 = Math.max(H.checkNum(t2), H.checkNum(t4));
                  t2 = t3.get$left(contentClientRect);
                  t5 = t3.get$top(contentClientRect);
                  t3 = t3.get$height(contentClientRect);
                  contentClientRect = P.Rectangle$(t2, t5, t4, t3, P.num);
                }
                position = H.boolTypeCheck(t1.$index(0, C.Symbol_enforceSpaceConstraints)) ? $async$self._getBestPosition$3(contentClientRect, sourceClientRect, containerRect) : null;
                if (position == null) {
                  position = new K.RelativePosition(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").get$alignOriginX(), H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").get$alignOriginY(), "top left");
                  if (isRtl)
                    position = position.flipRelativePosition$0();
                }
                t2 = J.getInterceptor$x(containerRect);
                if (isRtl) {
                  t2 = t2.get$left(containerRect);
                  t3 = H.intTypeCheck(t1.$index(0, C.Symbol_offsetX));
                  if (typeof t3 !== "number") {
                    $async$returnValue = H.iae(t3);
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                  offsetX = t2 - t3;
                } else {
                  t3 = H.intTypeCheck(t1.$index(0, C.Symbol_offsetX));
                  t2 = t2.get$left(containerRect);
                  if (typeof t3 !== "number") {
                    $async$returnValue = t3.$sub();
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                  offsetX = t3 - t2;
                }
                t1 = H.intTypeCheck(t1.$index(0, C.Symbol_offsetY));
                t2 = J.get$top$x(containerRect);
                if (typeof t1 !== "number") {
                  $async$returnValue = t1.$sub();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t3 = $async$self._overlayRef.state;
                t3.set$left(0, position.originX.calcLeft$2(sourceClientRect, contentClientRect) + offsetX);
                t3.set$top(0, position.originY.calcTop$2(sourceClientRect, contentClientRect) + (t1 - t2));
                t3.set$visibility(0, C.Visibility_Visible_null_null);
                t3 = $async$self._overlayRef.overlayElement.style;
                t3.visibility = "visible";
                t3.display = "";
                $async$self._alignmentPosition = position;
                $async$self._updatePopupMinMaxSize$0();
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_schedulePositionUpdate$2, $async$completer);
      },
      $isDropdownHandle: 1,
      static: {
        MaterialPopupComponent$: function(_hierarchy, parentPopup, role, _ngZone, _overlayService, _domService, _zIndexer, _defaultPreferredPositions, _useRepositionLoop, _popupSizeProvider, _changeDetector, _viewContainer, elementRef) {
          var t1, t2, t3, t4, t5, t6, t7, t8, t9, result;
          t1 = [-1];
          t2 = [P.bool];
          t3 = $.$get$MaterialPopupComponent__idGenerator().nextId$0();
          t4 = P.Symbol0;
          t5 = P.LinkedHashMap_LinkedHashMap$_literal([C.Symbol_autoDismiss, true, C.Symbol_enforceSpaceConstraints, false, C.Symbol_matchMinSourceWidth, false, C.Symbol_offsetX, 0, C.Symbol_offsetY, 0, C.Symbol_preferredPositions, C.List_empty, C.Symbol_source, null, C.Symbol_trackLayoutChanges, true, C.Symbol_constrainToViewport, true], t4, null);
          t6 = P.LinkedHashMap_LinkedHashMap(null, null, null, t4, null);
          t7 = Y.ChangeRecord;
          t8 = new H.TypeImpl(t7).get$_typeName();
          t9 = C.Type_dynamic_0Rz.get$_typeName();
          if (t8 !== t9)
            t8 = new H.TypeImpl(t7).get$_typeName() === C.Type_ChangeRecord_INA.get$_typeName();
          else
            t8 = true;
          result = new Y.ObservableMap(t6, new B.ChangeNotifier(false, [t7]), t8, [t4, null]);
          result.addAll$1(0, t5);
          t4 = Y.ChangeRecord;
          t5 = new H.TypeImpl(t4).get$_typeName();
          t6 = C.Type_dynamic_0Rz.get$_typeName();
          if (t5 !== t6)
            t5 = new H.TypeImpl(t4).get$_typeName() === C.Type_ChangeRecord_INA.get$_typeName();
          else
            t5 = true;
          t1 = new G.MaterialPopupComponent(new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t2), new P._SyncBroadcastStreamController(null, null, 0, [W.Event]), _changeDetector, _viewContainer, new R.Disposer(true, false), _ngZone, _overlayService, _domService, _hierarchy, _defaultPreferredPositions, elementRef, "dialog", t3, false, false, _useRepositionLoop, 0, 0, false, 2, _zIndexer, _popupSizeProvider, false, false, true, new F.PopupState(result, new B.ChangeNotifier(false, [t4]), t5), false, new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t2));
          t1.MaterialPopupComponent$13(_hierarchy, parentPopup, role, _ngZone, _overlayService, _domService, _zIndexer, _defaultPreferredPositions, _useRepositionLoop, _popupSizeProvider, _changeDetector, _viewContainer, elementRef);
          return t1;
        }
      }
    },
    MaterialPopupComponent_closure: {
      "^": "Closure:83;$this",
      call$1: [function(_) {
        this.$this.set$visible(0, false);
        return;
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialPopupComponent__initViewportRect_closure: {
      "^": "Closure:0;",
      call$0: [function() {
        var t1, t2;
        t1 = window;
        t2 = W.Event;
        H.assertSubtype(new R.RateLimitTransformer(C.Duration_100000, H.instantiate1(R.rate_limit_utils__throttleGuaranteeLast$closure(), null), [t2, null]), "$isStreamTransformer", [t2, null], "$asStreamTransformer").bind$1(new W._EventStream(t1, "resize", false, [t2])).listen$1(new G.MaterialPopupComponent__initViewportRect__closure());
      }, null, null, 0, 0, null, "call"]
    },
    MaterialPopupComponent__initViewportRect__closure: {
      "^": "Closure:3;",
      call$1: [function(_) {
        var t1, t2, t3, width, height;
        t1 = $.MaterialPopupComponent__viewportRect;
        t2 = window.innerWidth;
        t1.toString;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        H.assertSubtypeOfRuntimeType(t2, t3);
        if (typeof t2 !== "number")
          return t2.$lt();
        if (t2 < 0)
          width = H.assertSubtypeOfRuntimeType(-t2 * 0, t3);
        else
          width = t2;
        t1.set$_math$_width(0, width);
        t1 = $.MaterialPopupComponent__viewportRect;
        t2 = window.innerHeight;
        t1.toString;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        H.assertSubtypeOfRuntimeType(t2, t3);
        if (typeof t2 !== "number")
          return t2.$lt();
        if (t2 < 0)
          height = H.assertSubtypeOfRuntimeType(-t2 * 0, t3);
        else
          height = t2;
        t1.set$_height(0, height);
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialPopupComponent__open_closure: {
      "^": "Closure:84;$this",
      call$1: [function(sub) {
        this.$this._layoutInternalSub = H.assertSubtype(sub, "$isStreamSubscription", [[P.Rectangle, P.num]], "$asStreamSubscription");
      }, null, null, 4, 0, null, 57, "call"]
    },
    MaterialPopupComponent__open_closure0: {
      "^": "Closure:85;$this,initialData",
      call$1: [function(layoutRects) {
        var t1, t2;
        H.assertSubtype(layoutRects, "$isList", [[P.Rectangle, P.num]], "$asList");
        t1 = J.getInterceptor$ax(layoutRects);
        if (t1.every$1(layoutRects, new G.MaterialPopupComponent__open__closure())) {
          t2 = this.initialData;
          if (t2.future._state === 0) {
            this.$this._onPopupOpened$0();
            t2.complete$1(0, null);
          }
          t2 = this.$this;
          t2.set$_initialSourceDimensions(null);
          t2._schedulePositionUpdate$2(t1.$index(layoutRects, 0), t1.$index(layoutRects, 1));
        }
      }, null, null, 4, 0, null, 58, "call"]
    },
    MaterialPopupComponent__open__closure: {
      "^": "Closure:86;",
      call$1: function(r) {
        return H.assertSubtype(r, "$isRectangle", [P.num], "$asRectangle") != null;
      }
    },
    MaterialPopupComponent__open_closure1: {
      "^": "Closure:3;$this",
      call$1: [function(_) {
        this.$this._updatePopupMinMaxSize$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialPopupComponent__onPopupOpened_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._animationTimer = null;
        t1._isVisible = true;
        t1.PopupEvents_onVisibleController.add$1(0, true);
        t1._onOpened.add$1(0, null);
      }, null, null, 0, 0, null, "call"]
    },
    MaterialPopupComponent__close_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        var t1 = this.$this;
        if (C.DivElement_methods.contains$1(t1._overlayRef.overlayElement, window.document.activeElement))
          H.interceptedTypeCast(H.interceptedTypeCheck(t1.state._backingMap._observable_map$_map.$index(0, C.Symbol_source), "$isPopupSource"), "$isFocusable").focus$0(0);
      }
    },
    MaterialPopupComponent__close_closure0: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._animationTimer = null;
        t1._onPopupClosed$0();
      }, null, null, 0, 0, null, "call"]
    },
    MaterialPopupComponent__startRepositionLoop_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._repositionLoopId = C.Window_methods.requestAnimationFrame$1(window, t1.get$_reposition());
      }, null, null, 0, 0, null, "call"]
    },
    MaterialPopupRef: {
      "^": "Object;_popupComponent",
      $isPopupRef: 1
    },
    _mergeStreams_closure: {
      "^": "Closure:0;_box_1,streams,streamSubscriptions,cachedResults,T",
      call$0: function() {
        var t1 = {};
        t1.i = 0;
        C.JSArray_methods.forEach$1(this.streams, new G._mergeStreams__closure(t1, this._box_1, this.streamSubscriptions, this.cachedResults, this.T));
      }
    },
    _mergeStreams__closure: {
      "^": "Closure;_box_0,_box_1,streamSubscriptions,cachedResults,T",
      call$1: function(stream) {
        var t1, t2;
        t1 = this.T;
        H.assertSubtype(stream, "$isStream", [t1], "$asStream");
        t2 = this._box_0.i++;
        C.JSArray_methods.$indexSet(this.streamSubscriptions, t2, stream.listen$1(new G._mergeStreams___closure(this._box_1, this.cachedResults, t2, t1)));
      },
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P.Stream, this.T]]};
      }
    },
    _mergeStreams___closure: {
      "^": "Closure;_box_1,cachedResults,n,T",
      call$1: [function(result) {
        var t1 = this.cachedResults;
        C.JSArray_methods.$indexSet(t1, this.n, H.assertSubtypeOfRuntimeType(result, this.T));
        this._box_1.streamController.add$1(0, t1);
      }, null, null, 4, 0, null, 8, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.T]};
      }
    },
    _mergeStreams_closure0: {
      "^": "Closure:0;streamSubscriptions",
      call$0: function() {
        var t1, t2, _i;
        for (t1 = this.streamSubscriptions, t2 = t1.length, _i = 0; _i < t2; ++_i)
          t1[_i].cancel$0(0);
      }
    },
    _MaterialPopupComponent_Object_PopupBase: {
      "^": "Object+PopupBase;"
    },
    _MaterialPopupComponent_Object_PopupBase_PopupEvents: {
      "^": "_MaterialPopupComponent_Object_PopupBase+PopupEvents;"
    },
    _MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement: {
      "^": "_MaterialPopupComponent_Object_PopupBase_PopupEvents+PopupHierarchyElement;"
    }
  }], ["asset_angular_components_lib_material_popup_material_popup.scss.css.shim.dart", "package:angular_components/material_popup/material_popup.scss.css.shim.dart",, G, {}], ["", "package:angular_components/material_popup/material_popup.template.dart",, A, {
    "^": "",
    viewFactory_MaterialPopupComponent1: [function(parentView, parentIndex) {
      var t1 = new A._ViewMaterialPopupComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, G.MaterialPopupComponent));
      t1.componentType = $.ViewMaterialPopupComponent0__renderType;
      return t1;
    }, "call$2", "material_popup_template__viewFactory_MaterialPopupComponent1$closure", 8, 0, 162],
    ViewMaterialPopupComponent0: {
      "^": "AppView;0_material_popup_template$_appEl_1,0_TemplateRef_1_7,0_material_popup_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2, t3, _anchor_1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = document;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        t3 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t3 && C.Comment_methods).clone$1(t3, false), "$isComment");
        t2.append$1(parentRenderNode, _anchor_1);
        t3 = new V.ViewContainer(1, null, this, _anchor_1);
        this._material_popup_template$_appEl_1 = t3;
        this._TemplateRef_1_7 = new D.TemplateRef(t3, A.material_popup_template__viewFactory_MaterialPopupComponent1$closure());
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        this.ctx.set$templateRef(this._TemplateRef_1_7);
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [G.MaterialPopupComponent];
      }
    },
    _ViewMaterialPopupComponent1: {
      "^": "AppView;0_material_popup_template$_expr_0,0_material_popup_template$_expr_1,0_material_popup_template$_expr_2,0_material_popup_template$_expr_3,0_material_popup_template$_expr_4,0_material_popup_template$_expr_5,0_material_popup_template$_expr_6,0_material_popup_template$_expr_7,0_material_popup_template$_expr_8,0_material_popup_template$_expr_10,0_material_popup_template$_expr_11,0_material_popup_template$_expr_12,0_material_popup_template$_expr_13,0_material_popup_template$_el_1,0_el_3,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _text_0, t2, _text_2, _text_4, _text_5, _el_6, _text_7, _el_8, _el_10, _el_14, _el_18, _text_22, _text_23, _el_24, _text_25, _text_26, _text_27;
        t1 = document;
        _text_0 = t1.createTextNode("\n  ");
        t2 = t1.createElement("div");
        H.interceptedTypeCheck(t2, "$isDivElement");
        this._material_popup_template$_el_1 = t2;
        t2.className = "popup-wrapper mixin";
        this.addShimC$1(t2);
        _text_2 = t1.createTextNode("\n      ");
        t2 = this._material_popup_template$_el_1;
        (t2 && C.DivElement_methods).append$1(t2, _text_2);
        t2 = S.createDivAndAppend(t1, this._material_popup_template$_el_1);
        this._el_3 = t2;
        t2.className = "popup";
        this.addShimC$1(t2);
        _text_4 = t1.createTextNode("\n          ");
        t2 = this._el_3;
        (t2 && C.DivElement_methods).append$1(t2, _text_4);
        _text_5 = t1.createTextNode("\n          ");
        t2 = this._el_3;
        (t2 && C.DivElement_methods).append$1(t2, _text_5);
        _el_6 = S.createDivAndAppend(t1, this._el_3);
        _el_6.className = "focusable-placeholder";
        _el_6.tabIndex = 0;
        this.addShimC$1(_el_6);
        _text_7 = t1.createTextNode("\n          ");
        t2 = this._el_3;
        (t2 && C.DivElement_methods).append$1(t2, _text_7);
        _el_8 = S.createDivAndAppend(t1, this._el_3);
        _el_8.className = "material-popup-content content";
        this.addShimC$1(_el_8);
        (_el_8 && C.DivElement_methods).append$1(_el_8, t1.createTextNode("\n              "));
        _el_10 = S.createAndAppend(t1, "header", _el_8);
        this.addShimE$1(_el_10);
        t2 = J.getInterceptor$x(_el_10);
        t2.append$1(_el_10, t1.createTextNode("\n                  "));
        this.project$2(_el_10, 0);
        t2.append$1(_el_10, t1.createTextNode("\n              "));
        C.DivElement_methods.append$1(_el_8, t1.createTextNode("\n              "));
        _el_14 = S.createDivAndAppend(t1, _el_8);
        _el_14.className = "main";
        this.addShimC$1(_el_14);
        (_el_14 && C.DivElement_methods).append$1(_el_14, t1.createTextNode("\n                  "));
        this.project$2(_el_14, 1);
        C.DivElement_methods.append$1(_el_14, t1.createTextNode("\n              "));
        C.DivElement_methods.append$1(_el_8, t1.createTextNode("\n              "));
        _el_18 = S.createAndAppend(t1, "footer", _el_8);
        this.addShimE$1(_el_18);
        t2 = J.getInterceptor$x(_el_18);
        t2.append$1(_el_18, t1.createTextNode("\n                  "));
        this.project$2(_el_18, 2);
        t2.append$1(_el_18, t1.createTextNode("\n              "));
        C.DivElement_methods.append$1(_el_8, t1.createTextNode("\n          "));
        _text_22 = t1.createTextNode("\n          ");
        t2 = this._el_3;
        (t2 && C.DivElement_methods).append$1(t2, _text_22);
        _text_23 = t1.createTextNode("\n          ");
        t2 = this._el_3;
        (t2 && C.DivElement_methods).append$1(t2, _text_23);
        _el_24 = S.createDivAndAppend(t1, this._el_3);
        _el_24.className = "focusable-placeholder";
        _el_24.tabIndex = 0;
        this.addShimC$1(_el_24);
        _text_25 = t1.createTextNode("\n      ");
        t2 = this._el_3;
        (t2 && C.DivElement_methods).append$1(t2, _text_25);
        _text_26 = t1.createTextNode("\n  ");
        t2 = this._material_popup_template$_el_1;
        (t2 && C.DivElement_methods).append$1(t2, _text_26);
        _text_27 = t1.createTextNode("\n");
        t1 = W.Event;
        (_el_6 && C.DivElement_methods).addEventListener$2(_el_6, "focus", this.eventHandler1$2$1(this.get$_handle_focus_6_0(), t1, t1));
        (_el_24 && C.DivElement_methods).addEventListener$2(_el_24, "focus", this.eventHandler1$2$1(this.get$_handle_focus_24_0(), t1, t1));
        this.init$2([_text_0, this._material_popup_template$_el_1, _text_27], null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, t2, currVal_0, currVal_2, currVal_5, currVal_6, currVal_7, currVal_8, currVal_12, t3, currVal_13;
        _ctx = this.ctx;
        if (this.viewData._cdState === 0) {
          t1 = this._material_popup_template$_el_1;
          t2 = _ctx.role;
          this.setAttr$3(t1, "role", t2);
        }
        currVal_0 = _ctx.z;
        t1 = this._material_popup_template$_expr_0;
        if (t1 !== currVal_0) {
          t1 = this._material_popup_template$_el_1;
          t2 = C.JSInt_methods.toString$0(currVal_0);
          this.setAttr$3(t1, "elevation", t2);
          this._material_popup_template$_expr_0 = currVal_0;
        }
        _ctx.hasBox;
        t1 = this._material_popup_template$_expr_1;
        if (t1 !== true) {
          this.updateClass$3(this._material_popup_template$_el_1, "shadow", true);
          this._material_popup_template$_expr_1 = true;
        }
        currVal_2 = _ctx._matchMinSourceWidth;
        t1 = this._material_popup_template$_expr_2;
        if (t1 !== currVal_2) {
          this.updateClass$3(this._material_popup_template$_el_1, "full-width", currVal_2);
          this._material_popup_template$_expr_2 = currVal_2;
        }
        _ctx.inkBackground;
        t1 = this._material_popup_template$_expr_3;
        if (t1 !== false) {
          this.updateClass$3(this._material_popup_template$_el_1, "ink", false);
          this._material_popup_template$_expr_3 = false;
        }
        currVal_5 = _ctx._zIndex;
        t1 = this._material_popup_template$_expr_5;
        if (t1 != currVal_5) {
          t1 = this._material_popup_template$_el_1;
          this.setAttr$3(t1, "z-index", currVal_5 == null ? null : C.JSInt_methods.toString$0(currVal_5));
          this._material_popup_template$_expr_5 = currVal_5;
        }
        t1 = _ctx._alignmentPosition;
        currVal_6 = t1 == null ? null : t1.animationOrigin;
        t1 = this._material_popup_template$_expr_6;
        if (t1 != currVal_6) {
          t1 = this._material_popup_template$_el_1.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform-origin"), currVal_6, null);
          this._material_popup_template$_expr_6 = currVal_6;
        }
        currVal_7 = _ctx.showPopup;
        t1 = this._material_popup_template$_expr_7;
        if (t1 !== currVal_7) {
          this.updateClass$3(this._material_popup_template$_el_1, "visible", currVal_7);
          this._material_popup_template$_expr_7 = currVal_7;
        }
        currVal_8 = _ctx._material_popup$_uniqueId;
        t1 = this._material_popup_template$_expr_8;
        if (t1 !== currVal_8) {
          this._material_popup_template$_el_1.id = currVal_8;
          this._material_popup_template$_expr_8 = currVal_8;
        }
        currVal_12 = _ctx.maxHeight;
        t1 = this._material_popup_template$_expr_12;
        if (t1 != currVal_12) {
          t1 = this._el_3.style;
          t2 = currVal_12 == null;
          if ((t2 ? null : C.JSInt_methods.toString$0(currVal_12)) == null)
            t2 = null;
          else {
            t3 = J.$add$ansx(t2 ? null : C.JSInt_methods.toString$0(currVal_12), "px");
            t2 = t3;
          }
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "max-height"), t2, null);
          this._material_popup_template$_expr_12 = currVal_12;
        }
        currVal_13 = _ctx.maxWidth;
        t1 = this._material_popup_template$_expr_13;
        if (t1 != currVal_13) {
          t1 = this._el_3.style;
          t2 = currVal_13 == null;
          if ((t2 ? null : C.JSInt_methods.toString$0(currVal_13)) == null)
            t2 = null;
          else {
            t3 = J.$add$ansx(t2 ? null : C.JSInt_methods.toString$0(currVal_13), "px");
            t2 = t3;
          }
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "max-width"), t2, null);
          this._material_popup_template$_expr_13 = currVal_13;
        }
      },
      _handle_focus_6_0$1: [function($$event) {
        J.set$visible$z(this.ctx, false);
      }, "call$1", "get$_handle_focus_6_0", 4, 0, 2],
      _handle_focus_24_0$1: [function($$event) {
        J.set$visible$z(this.ctx, false);
      }, "call$1", "get$_handle_focus_24_0", 4, 0, 2],
      $asAppView: function() {
        return [G.MaterialPopupComponent];
      }
    }
  }], ["", "package:angular_components/material_progress/material_progress.dart",, X, {
    "^": "",
    MaterialProgressComponent: {
      "^": "Object;_material_progress$_changeDetector,_material_progress$_element,_useFancyAnimation,activeProgress,secondaryProgress,min,max,_material_progress$_indeterminate,_isInitialized,0_primaryIndicator,0_primaryAnimation,0_secondaryIndicator,0_secondaryAnimation",
      _calcRatio$1: function(value) {
        var t1 = this.min;
        return (C.JSInt_methods.clamp$2(value, t1, this.max) - t1) / (this.max - t1);
      },
      set$primary: function(value) {
        this._primaryIndicator = value;
      },
      set$secondary: function(value) {
        this._secondaryIndicator = value;
      }
    }
  }], ["asset_angular_components_lib_material_progress_material_progress.scss.css.shim.dart", "package:angular_components/material_progress/material_progress.scss.css.shim.dart",, V, {}], ["", "package:angular_components/material_progress/material_progress.template.dart",, S, {
    "^": "",
    ViewMaterialProgressComponent0: {
      "^": "AppView;0_material_progress_template$_expr_0,0_material_progress_template$_expr_1,0_material_progress_template$_expr_2,0_material_progress_template$_expr_3,0_material_progress_template$_expr_4,0_material_progress_template$_expr_5,0_material_progress_template$_expr_6,0_material_progress_template$_el_0,0_material_progress_template$_el_1,0_material_progress_template$_el_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, t1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        t1 = S.createDivAndAppend(doc, parentRenderNode);
        this._material_progress_template$_el_0 = t1;
        t1.className = "progress-container";
        (t1 && C.DivElement_methods).setAttribute$2(t1, "role", "progressbar");
        this.addShimC$1(this._material_progress_template$_el_0);
        t1 = S.createDivAndAppend(doc, this._material_progress_template$_el_0);
        this._material_progress_template$_el_1 = t1;
        t1.className = "secondary-progress";
        this.addShimC$1(t1);
        t1 = S.createDivAndAppend(doc, this._material_progress_template$_el_0);
        this._material_progress_template$_el_2 = t1;
        t1.className = "active-progress";
        this.addShimC$1(t1);
        this.ctx.set$primary(this._material_progress_template$_el_2);
        this.ctx.set$secondary(this._material_progress_template$_el_1);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, currVal_3, currVal_4, currVal_5, currVal_6;
        _ctx = this.ctx;
        currVal_0 = "" + _ctx.activeProgress;
        t1 = this._material_progress_template$_expr_0;
        if (t1 !== currVal_0) {
          this.setAttr$3(this._material_progress_template$_el_0, "aria-valuenow", currVal_0);
          this._material_progress_template$_expr_0 = currVal_0;
        }
        _ctx._material_progress$_indeterminate;
        t1 = this._material_progress_template$_expr_1;
        if (t1 !== false) {
          this.updateClass$3(this._material_progress_template$_el_0, "indeterminate", false);
          this._material_progress_template$_expr_1 = false;
        }
        t1 = this._material_progress_template$_expr_2;
        if (t1 !== false) {
          this.updateClass$3(this._material_progress_template$_el_0, "fallback", false);
          this._material_progress_template$_expr_2 = false;
        }
        currVal_3 = Q.interpolate0(_ctx.min);
        t1 = this._material_progress_template$_expr_3;
        if (t1 !== currVal_3) {
          this.setAttr$3(this._material_progress_template$_el_0, "aria-valuemin", currVal_3);
          this._material_progress_template$_expr_3 = currVal_3;
        }
        currVal_4 = Q.interpolate0(_ctx.max);
        t1 = this._material_progress_template$_expr_4;
        if (t1 !== currVal_4) {
          this.setAttr$3(this._material_progress_template$_el_0, "aria-valuemax", currVal_4);
          this._material_progress_template$_expr_4 = currVal_4;
        }
        currVal_5 = "scaleX(" + H.S(_ctx._calcRatio$1(_ctx.secondaryProgress)) + ")";
        t1 = this._material_progress_template$_expr_5;
        if (t1 !== currVal_5) {
          t1 = this._material_progress_template$_el_1.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform"), currVal_5, null);
          this._material_progress_template$_expr_5 = currVal_5;
        }
        currVal_6 = "scaleX(" + H.S(_ctx._calcRatio$1(_ctx.activeProgress)) + ")";
        t1 = this._material_progress_template$_expr_6;
        if (t1 !== currVal_6) {
          t1 = this._material_progress_template$_el_2.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform"), currVal_6, null);
          this._material_progress_template$_expr_6 = currVal_6;
        }
      },
      $asAppView: function() {
        return [X.MaterialProgressComponent];
      }
    }
  }], ["", "package:angular_components/material_ripple/material_ripple.dart",, B, {
    "^": "",
    _createRipple: function(clientX, clientY, container, center) {
      var rect, t1, ripple, t2, containerWidth, containerHeight, minScale, maxScale, initialTransform, finalTransform, $top, left, t3, offsetX, offsetY, transformKeyframes;
      rect = container.getBoundingClientRect();
      if ($._numRipples < 3) {
        t1 = $._rippleTemplate;
        ripple = H.interceptedTypeCast((t1 && C.DivElement_methods).clone$1(t1, false), "$isDivElement");
        t1 = $._ripplePool;
        (t1 && C.JSArray_methods).$indexSet(t1, $._rippleIndex, ripple);
        $._numRipples = $._numRipples + 1;
      } else {
        t1 = $._ripplePool;
        t2 = $._rippleIndex;
        t1.length;
        if (t2 >= 3)
          return H.ioore(t1, t2);
        ripple = t1[t2];
        (ripple && C.DivElement_methods).remove$0(ripple);
      }
      t1 = $._rippleIndex + 1;
      $._rippleIndex = t1;
      if (t1 === 3)
        $._rippleIndex = 0;
      if ($.$get$supportsAnimationApi()) {
        containerWidth = rect.width;
        containerHeight = rect.height;
        minScale = (containerWidth > containerHeight ? containerWidth : containerHeight) * 0.6 / 256;
        t1 = containerWidth / 2;
        t2 = containerHeight / 2;
        maxScale = (Math.sqrt(Math.pow(t1, 2) + Math.pow(t2, 2)) + 10) / 128;
        if (center) {
          initialTransform = "scale(" + H.S(minScale) + ")";
          finalTransform = "scale(" + H.S(maxScale) + ")";
          $top = "calc(50% - 128px)";
          left = "calc(50% - 128px)";
        } else {
          t3 = rect.left;
          if (typeof clientX !== "number")
            return clientX.$sub();
          offsetX = clientX - t3 - 128;
          t3 = rect.top;
          if (typeof clientY !== "number")
            return clientY.$sub();
          offsetY = clientY - t3 - 128;
          $top = H.S(offsetY) + "px";
          left = H.S(offsetX) + "px";
          initialTransform = "translate(0, 0) scale(" + H.S(minScale) + ")";
          finalTransform = "translate(" + H.S(t1 - 128 - offsetX) + "px, " + H.S(t2 - 128 - offsetY) + "px) scale(" + H.S(maxScale) + ")";
        }
        t1 = P.String;
        transformKeyframes = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_literal(["transform", initialTransform], t1, null), P.LinkedHashMap_LinkedHashMap$_literal(["transform", finalTransform], t1, null)], [[P.Map, P.String,,]]);
        ripple.style.cssText = "top: " + $top + "; left: " + left + "; transform: " + finalTransform;
        (ripple && C.DivElement_methods).animate$2(ripple, $._opacityKeyframes, $._opacityTiming);
        C.DivElement_methods.animate$2(ripple, transformKeyframes, $._transformTiming);
      } else {
        if (center) {
          $top = "calc(50% - 128px)";
          left = "calc(50% - 128px)";
        } else {
          t1 = rect.left;
          if (typeof clientX !== "number")
            return clientX.$sub();
          t2 = rect.top;
          if (typeof clientY !== "number")
            return clientY.$sub();
          $top = H.S(clientY - t2 - 128) + "px";
          left = H.S(clientX - t1 - 128) + "px";
        }
        t1 = ripple.style;
        t1.top = $top;
        t1 = ripple.style;
        t1.left = left;
      }
      J.append$1$x(container, ripple);
    },
    MaterialRippleComponent: {
      "^": "Object;_element,0_onMouseDown,0_onKeyDown,center",
      set$_onMouseDown: function(_onMouseDown) {
        this._onMouseDown = H.functionTypeCheck(_onMouseDown, {func: 1, args: [W.Event]});
      },
      set$_onKeyDown: function(_onKeyDown) {
        this._onKeyDown = H.functionTypeCheck(_onKeyDown, {func: 1, args: [W.Event]});
      },
      MaterialRippleComponent$1: function(_element) {
        var t1, t2, className;
        if ($._ripplePool == null) {
          t1 = new Array(3);
          t1.fixed$length = Array;
          $._ripplePool = H.setRuntimeTypeInfo(t1, [W.DivElement]);
        }
        if ($._opacityTiming == null)
          $._opacityTiming = P.LinkedHashMap_LinkedHashMap$_literal(["duration", 300], P.String, P.double);
        if ($._opacityKeyframes == null) {
          t1 = P.String;
          t2 = P.double;
          $._opacityKeyframes = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0.16, "offset", 0.25], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0.16, "offset", 0.5], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0], t1, t2)], [[P.Map, P.String, P.double]]);
        }
        if ($._transformTiming == null)
          $._transformTiming = P.LinkedHashMap_LinkedHashMap$_literal(["duration", 225, "easing", "cubic-bezier(0.4, 0.0, 0.2, 1)"], P.String, null);
        if ($._rippleTemplate == null) {
          className = $.$get$supportsAnimationApi() ? "__acx-ripple" : "__acx-ripple fallback";
          t1 = document.createElement("div");
          t1.className = className;
          $._rippleTemplate = t1;
        }
        this.set$_onMouseDown(new B.MaterialRippleComponent_closure(this));
        this.set$_onKeyDown(new B.MaterialRippleComponent_closure0(this));
        t1 = this._element;
        t2 = J.getInterceptor$x(t1);
        t2.addEventListener$2(t1, "mousedown", this._onMouseDown);
        t2.addEventListener$2(t1, "keydown", this._onKeyDown);
      },
      ngOnDestroy$0: function() {
        var t1, t2;
        t1 = this._element;
        t2 = J.getInterceptor$x(t1);
        t2.removeEventListener$2(t1, "mousedown", this._onMouseDown);
        t2.removeEventListener$2(t1, "keydown", this._onKeyDown);
        t1 = $._ripplePool;
        (t1 && C.JSArray_methods).forEach$1(t1, new B.MaterialRippleComponent_ngOnDestroy_closure(this));
      },
      static: {
        MaterialRippleComponent$: function(_element) {
          var t1 = new B.MaterialRippleComponent(_element, false);
          t1.MaterialRippleComponent$1(_element);
          return t1;
        }
      }
    },
    MaterialRippleComponent_closure: {
      "^": "Closure:11;$this",
      call$1: [function(e) {
        var t1, t2;
        e = H.interceptedTypeCast(H.interceptedTypeCheck(e, "$isEvent"), "$isMouseEvent");
        t1 = e.clientX;
        t2 = e.clientY;
        B._createRipple(H.intTypeCheck(t1), H.intTypeCheck(t2), this.$this._element, false);
      }, null, null, 4, 0, null, 6, "call"]
    },
    MaterialRippleComponent_closure0: {
      "^": "Closure:11;$this",
      call$1: [function(e) {
        e = H.interceptedTypeCheck(H.interceptedTypeCheck(e, "$isEvent"), "$isKeyboardEvent");
        if (!(e.keyCode === 13 || Z.isSpaceKey(e)))
          return;
        B._createRipple(0, 0, this.$this._element, true);
      }, null, null, 4, 0, null, 6, "call"]
    },
    MaterialRippleComponent_ngOnDestroy_closure: {
      "^": "Closure:87;$this",
      call$1: function(ripple) {
        var t1, t2;
        H.interceptedTypeCheck(ripple, "$isDivElement");
        t1 = ripple == null ? null : ripple.parentElement;
        t2 = this.$this._element;
        if (t1 == null ? t2 == null : t1 === t2)
          (ripple && C.DivElement_methods).remove$0(ripple);
      }
    }
  }], ["asset_angular_components_lib_material_ripple_material_ripple.scss.css.dart", "package:angular_components/material_ripple/material_ripple.scss.css.dart",, O, {}], ["", "package:angular_components/material_ripple/material_ripple.template.dart",, L, {
    "^": "",
    ViewMaterialRippleComponent0: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.initViewRoot$1(this.rootEl);
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [B.MaterialRippleComponent];
      },
      static: {
        ViewMaterialRippleComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new L.ViewMaterialRippleComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, B.MaterialRippleComponent));
          t2 = document.createElement("material-ripple");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewMaterialRippleComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_1, $.$get$styles$MaterialRippleComponent());
            $.ViewMaterialRippleComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/material_select/activation_handler.dart",, Z, {
    "^": "",
    ActivationHandler: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/material_select/dropdown_button.dart",, Q, {
    "^": "",
    DropdownButtonComponent: {
      "^": "_DropdownButtonComponent_Object_FocusableMixin_MaterialButtonWrapper;0_role,0_ariaRole,0_button,popupType,0error,0ariaOwns,0ariaExpanded,0ariaActiveDescendant,uuid,0_ariaLabelledBy,0ariaDescribedBy,0_showButtonBorder,_dropdown_button$_blur,tabbable,MaterialButtonWrapper_buttonText,MaterialButtonWrapper_buttonAriaLabel,MaterialButtonWrapper_disabled,MaterialButtonWrapper_icon,MaterialButtonWrapper_iconName,MaterialButtonWrapper_raised,MaterialButtonWrapper__buttonIcon,FocusableMixin__onFocus,FocusableMixin__focusable,FocusableMixin__focusPending",
      set$button: function(_, b) {
        this._button = b;
        this.FocusableMixin__focusable = b;
        if (this.FocusableMixin__focusPending && true) {
          this.FocusableMixin__focusPending = false;
          b.focus$0(0);
        }
      },
      get$role: function(_) {
        return this._role;
      },
      get$ariaRole: function() {
        return this._ariaRole;
      },
      get$showButtonBorder: function() {
        var t1 = this._showButtonBorder;
        if (t1 != null)
          return t1;
        return false;
      },
      get$onBlur: function(_) {
        var t1 = this._dropdown_button$_blur;
        return new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      handleBlur$1: function($event) {
        this._dropdown_button$_blur.add$1(0, $event);
      },
      $isFocusable: 1
    },
    _DropdownButtonComponent_Object_FocusableMixin: {
      "^": "Object+FocusableMixin;"
    },
    _DropdownButtonComponent_Object_FocusableMixin_MaterialButtonWrapper: {
      "^": "_DropdownButtonComponent_Object_FocusableMixin+MaterialButtonWrapper;disabled:MaterialButtonWrapper_disabled>"
    }
  }], ["asset_angular_components_lib_material_select_dropdown_button.scss.css.shim.dart", "package:angular_components/material_select/dropdown_button.scss.css.shim.dart",, Y, {}], ["", "package:angular_components/material_select/dropdown_button.template.dart",, Z, {
    "^": "",
    viewFactory_DropdownButtonComponent1: [function(parentView, parentIndex) {
      var t1 = new Z._ViewDropdownButtonComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.DropdownButtonComponent));
      t1.componentType = $.ViewDropdownButtonComponent0__renderType;
      return t1;
    }, "call$2", "dropdown_button_template__viewFactory_DropdownButtonComponent1$closure", 8, 0, 21],
    viewFactory_DropdownButtonComponent2: [function(parentView, parentIndex) {
      var t1 = new Z._ViewDropdownButtonComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.DropdownButtonComponent));
      t1.componentType = $.ViewDropdownButtonComponent0__renderType;
      return t1;
    }, "call$2", "dropdown_button_template__viewFactory_DropdownButtonComponent2$closure", 8, 0, 21],
    viewFactory_DropdownButtonComponent3: [function(parentView, parentIndex) {
      var t1 = new Z._ViewDropdownButtonComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.DropdownButtonComponent));
      t1.componentType = $.ViewDropdownButtonComponent0__renderType;
      return t1;
    }, "call$2", "dropdown_button_template__viewFactory_DropdownButtonComponent3$closure", 8, 0, 21],
    ViewDropdownButtonComponent0: {
      "^": "AppView;0_ButtonDirective_0_5,0_dropdown_button_template$_KeyboardOnlyFocusIndicatorDirective_0_6,0_dropdown_button_template$_appEl_1,0_dropdown_button_template$_NgIf_1_9,0_dropdown_button_template$_appEl_3,0_dropdown_button_template$_NgIf_3_9,0_dropdown_button_template$_appEl_4,0_dropdown_button_template$_NgIf_4_9,0_dropdown_button_template$_expr_1,0_dropdown_button_template$_expr_2,0_dropdown_button_template$_expr_3,0_dropdown_button_template$_expr_4,0_dropdown_button_template$_expr_5,0_dropdown_button_template$_expr_6,0_dropdown_button_template$_expr_7,0_dropdown_button_template$_expr_8,0_dropdown_button_template$_expr_9,0_dropdown_button_template$_expr_10,0_dropdown_button_template$_expr_11,0_dropdown_button_template$_expr_12,0_dropdown_button_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, t1, t2, _anchor_1, _text_2, _anchor_3, _anchor_4, t3;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        t1 = S.createDivAndAppend(doc, parentRenderNode);
        this._dropdown_button_template$_el_0 = t1;
        (t1 && C.DivElement_methods).setAttribute$2(t1, "buttonDecorator", "");
        t1 = this._dropdown_button_template$_el_0;
        t1.className = "button";
        (t1 && C.DivElement_methods).setAttribute$2(t1, "keyboardOnlyFocusIndicator", "");
        this.addShimC$1(this._dropdown_button_template$_el_0);
        t1 = this._dropdown_button_template$_el_0;
        this._ButtonDirective_0_5 = new R.ButtonDirectiveNgCd(T.ButtonDirective$(t1, null), false);
        t2 = H.interceptedTypeCheck(this.parentView.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        this._dropdown_button_template$_KeyboardOnlyFocusIndicatorDirective_0_6 = new O.KeyboardOnlyFocusIndicatorDirective(t1, t2, C._InteractionType_2);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = this._dropdown_button_template$_el_0;
        (t2 && C.DivElement_methods).append$1(t2, _anchor_1);
        t2 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._dropdown_button_template$_appEl_1 = t2;
        this._dropdown_button_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t2, Z.dropdown_button_template__viewFactory_DropdownButtonComponent1$closure()), t2, false);
        _text_2 = doc.createTextNode(" ");
        t2 = this._dropdown_button_template$_el_0;
        (t2 && C.DivElement_methods).append$1(t2, _text_2);
        this.project$2(this._dropdown_button_template$_el_0, 0);
        _anchor_3 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2 = this._dropdown_button_template$_el_0;
        (t2 && C.DivElement_methods).append$1(t2, _anchor_3);
        t2 = new V.ViewContainer(3, 0, this, _anchor_3);
        this._dropdown_button_template$_appEl_3 = t2;
        this._dropdown_button_template$_NgIf_3_9 = new K.NgIf(new D.TemplateRef(t2, Z.dropdown_button_template__viewFactory_DropdownButtonComponent2$closure()), t2, false);
        _anchor_4 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        J.append$1$x(parentRenderNode, _anchor_4);
        t1 = new V.ViewContainer(4, null, this, _anchor_4);
        this._dropdown_button_template$_appEl_4 = t1;
        this._dropdown_button_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t1, Z.dropdown_button_template__viewFactory_DropdownButtonComponent3$closure()), t1, false);
        t1 = this._dropdown_button_template$_el_0;
        t2 = W.Event;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "focus", this.eventHandler1$2$1(this.get$_handle_focus_0_0(), t2, t2));
        t1 = this._dropdown_button_template$_el_0;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "blur", this.eventHandler1$2$1(this.get$_handle_blur_0_1(), t2, t2));
        t1 = this._dropdown_button_template$_el_0;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "click", this.eventHandler1$2$1(this.get$_handle_click_0_2(), t2, t2));
        t1 = this._dropdown_button_template$_el_0;
        t3 = W.KeyboardEvent;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "keypress", this.eventHandler1$2$1(this._ButtonDirective_0_5.instance.get$handleKeyPress(), t2, t3));
        t1 = this._dropdown_button_template$_el_0;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "keydown", this.eventHandler1$2$1(this._dropdown_button_template$_KeyboardOnlyFocusIndicatorDirective_0_6.get$keydown(), t2, t3));
        t3 = this._dropdown_button_template$_el_0;
        (t3 && C.DivElement_methods).addEventListener$2(t3, "mousedown", this.eventHandler0$1$1(this._dropdown_button_template$_KeyboardOnlyFocusIndicatorDirective_0_6.get$onMouseInteraction(), t2));
        J.set$button$z(this.ctx, this._ButtonDirective_0_5.instance);
        this.init$2(C.List_empty, null);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_ButtonDirective_hH0)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1)
          return this._ButtonDirective_0_5.instance;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_10, t2, currVal_4, currVal_6, currVal_7, currVal_8, t3, currVal_0, t4, currVal_1, currVal_2, currVal_3;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        currVal_10 = _ctx._ariaRole;
        t2 = this._dropdown_button_template$_expr_10;
        if (t2 != currVal_10) {
          this._ButtonDirective_0_5.instance.role = currVal_10;
          this._dropdown_button_template$_expr_10 = currVal_10;
        }
        _ctx.MaterialButtonWrapper_disabled;
        t2 = this._dropdown_button_template$_expr_11;
        if (t2 !== false) {
          this._ButtonDirective_0_5.instance.disabled = false;
          this._dropdown_button_template$_expr_11 = false;
        }
        _ctx.tabbable;
        t2 = this._dropdown_button_template$_expr_12;
        if (t2 !== true) {
          this._ButtonDirective_0_5.instance.tabbable = true;
          this._dropdown_button_template$_expr_12 = true;
        }
        t2 = this._dropdown_button_template$_NgIf_1_9;
        _ctx.MaterialButtonWrapper_buttonText;
        t2.set$ngIf(false);
        this._dropdown_button_template$_NgIf_3_9.set$ngIf(_ctx.get$buttonIcon() != null);
        t2 = this._dropdown_button_template$_NgIf_4_9;
        _ctx.error;
        t2.set$ngIf(false);
        this._dropdown_button_template$_appEl_1.detectChangesInNestedViews$0();
        this._dropdown_button_template$_appEl_3.detectChangesInNestedViews$0();
        this._dropdown_button_template$_appEl_4.detectChangesInNestedViews$0();
        if (t1 === 0)
          this.setAttr$3(this._dropdown_button_template$_el_0, "id", _ctx.uuid);
        _ctx._ariaLabelledBy;
        t1 = this._dropdown_button_template$_expr_2;
        if (t1 != null) {
          this.setAttr$3(this._dropdown_button_template$_el_0, "aria-labelledby", null);
          this._dropdown_button_template$_expr_2 = null;
        }
        currVal_4 = _ctx.get$showButtonBorder();
        t1 = this._dropdown_button_template$_expr_4;
        if (t1 != currVal_4) {
          this.updateClass$3(this._dropdown_button_template$_el_0, "border", currVal_4);
          this._dropdown_button_template$_expr_4 = currVal_4;
        }
        t1 = this._dropdown_button_template$_expr_5;
        if (t1 !== false) {
          this.updateClass$3(this._dropdown_button_template$_el_0, "invalid", false);
          this._dropdown_button_template$_expr_5 = false;
        }
        currVal_6 = _ctx.popupType;
        t1 = this._dropdown_button_template$_expr_6;
        if (t1 !== currVal_6) {
          this.setAttr$3(this._dropdown_button_template$_el_0, "aria-haspopup", currVal_6);
          this._dropdown_button_template$_expr_6 = currVal_6;
        }
        currVal_7 = _ctx.ariaOwns;
        t1 = this._dropdown_button_template$_expr_7;
        if (t1 != currVal_7) {
          this.setAttr$3(this._dropdown_button_template$_el_0, "aria-owns", currVal_7);
          this._dropdown_button_template$_expr_7 = currVal_7;
        }
        currVal_8 = _ctx.ariaExpanded;
        t1 = this._dropdown_button_template$_expr_8;
        if (t1 != currVal_8) {
          t1 = this._dropdown_button_template$_el_0;
          this.setAttr$3(t1, "aria-expanded", currVal_8 == null ? null : C.JSBool_methods.toString$0(currVal_8));
          this._dropdown_button_template$_expr_8 = currVal_8;
        }
        t1 = this._ButtonDirective_0_5;
        t2 = this._dropdown_button_template$_el_0;
        t3 = t1.instance;
        currVal_0 = t3.get$tabIndex(t3);
        t4 = t1._button_decorator_template$_expr_0;
        if (t4 != currVal_0) {
          t2.tabIndex = currVal_0;
          t1._button_decorator_template$_expr_0 = currVal_0;
        }
        currVal_1 = t3.role;
        t4 = t1._button_decorator_template$_expr_1;
        if (t4 != currVal_1) {
          t1.setAttr$3(t2, "role", currVal_1);
          t1._button_decorator_template$_expr_1 = currVal_1;
        }
        currVal_2 = "" + t3.disabled;
        t4 = t1._button_decorator_template$_expr_2;
        if (t4 !== currVal_2) {
          t1.setAttr$3(t2, "aria-disabled", currVal_2);
          t1._button_decorator_template$_expr_2 = currVal_2;
        }
        currVal_3 = t3.disabled;
        t3 = t1._button_decorator_template$_expr_3;
        if (t3 !== currVal_3) {
          t1.updateElemClass$3(t2, "is-disabled", currVal_3);
          t1._button_decorator_template$_expr_3 = currVal_3;
        }
      },
      destroyInternal$0: function() {
        this._dropdown_button_template$_appEl_1.destroyNestedViews$0();
        this._dropdown_button_template$_appEl_3.destroyNestedViews$0();
        this._dropdown_button_template$_appEl_4.destroyNestedViews$0();
      },
      _handle_focus_0_0$1: [function($$event) {
        var t1 = this.ctx;
        H.interceptedTypeCheck($$event, "$isFocusEvent");
        t1.handleFocus$1($$event);
        this._dropdown_button_template$_KeyboardOnlyFocusIndicatorDirective_0_6.onFocus$1(0, $$event);
      }, "call$1", "get$_handle_focus_0_0", 4, 0, 2],
      _handle_blur_0_1$1: [function($$event) {
        this.ctx.handleBlur$1(H.interceptedTypeCheck($$event, "$isFocusEvent"));
        this._dropdown_button_template$_KeyboardOnlyFocusIndicatorDirective_0_6.resetOutline$0();
      }, "call$1", "get$_handle_blur_0_1", 4, 0, 2],
      _handle_click_0_2$1: [function($$event) {
        var t1;
        this._ButtonDirective_0_5.instance.handleClick$1(H.interceptedTypeCheck($$event, "$isMouseEvent"));
        t1 = this._dropdown_button_template$_KeyboardOnlyFocusIndicatorDirective_0_6;
        t1._lastInteraction = C._InteractionType_0;
        t1.hideOutline$0();
      }, "call$1", "get$_handle_click_0_2", 4, 0, 2],
      $asAppView: function() {
        return [Q.DropdownButtonComponent];
      }
    },
    _ViewDropdownButtonComponent1: {
      "^": "AppView;0_dropdown_button_template$_expr_0,0_dropdown_button_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1;
        doc = document;
        _el_0 = doc.createElement("span");
        _el_0.className = "button-text";
        this.addShimE$1(_el_0);
        t1 = doc.createTextNode("");
        this._dropdown_button_template$_text_1 = t1;
        J.append$1$x(_el_0, t1);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = Q.interpolate0(this.ctx.MaterialButtonWrapper_buttonText);
        t1 = this._dropdown_button_template$_expr_0;
        if (t1 !== currVal_0) {
          this._dropdown_button_template$_text_1.textContent = currVal_0;
          this._dropdown_button_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [Q.DropdownButtonComponent];
      }
    },
    _ViewDropdownButtonComponent2: {
      "^": "AppView;0_dropdown_button_template$_compView_0,0_dropdown_button_template$_GlyphComponent_0_5,0_dropdown_button_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0;
        t1 = M.ViewGlyphComponent0$(this, 0);
        this._dropdown_button_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "icon";
        this.addShimC$1(_el_0);
        t1 = new L.GlyphComponent(true, _el_0);
        this._dropdown_button_template$_GlyphComponent_0_5 = t1;
        this._dropdown_button_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1, changed;
        currVal_0 = this.ctx.get$buttonIcon();
        t1 = this._dropdown_button_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          this._dropdown_button_template$_GlyphComponent_0_5.set$icon(0, currVal_0);
          this._dropdown_button_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._dropdown_button_template$_compView_0.viewData.set$cdMode(1);
        this._dropdown_button_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._dropdown_button_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [Q.DropdownButtonComponent];
      }
    },
    _ViewDropdownButtonComponent3: {
      "^": "AppView;0_dropdown_button_template$_expr_0,0_dropdown_button_template$_expr_1,0_dropdown_button_template$_expr_2,0_dropdown_button_template$_el_0,0_dropdown_button_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, t1, t2;
        doc = document;
        t1 = doc.createElement("div");
        H.interceptedTypeCheck(t1, "$isDivElement");
        this._dropdown_button_template$_el_0 = t1;
        t1.className = "error-text";
        C.DivElement_methods.setAttribute$2(t1, "role", "alert");
        this.addShimC$1(this._dropdown_button_template$_el_0);
        t1 = doc.createTextNode("");
        this._dropdown_button_template$_text_1 = t1;
        t2 = this._dropdown_button_template$_el_0;
        (t2 && C.DivElement_methods).append$1(t2, t1);
        this.init0$1(this._dropdown_button_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_1;
        _ctx = this.ctx;
        _ctx.error;
        t1 = this._dropdown_button_template$_expr_0;
        if (t1 !== false) {
          this.updateClass$3(this._dropdown_button_template$_el_0, "invalid", false);
          this._dropdown_button_template$_expr_0 = false;
        }
        _ctx.error;
        currVal_1 = Q.interpolate0(true);
        t1 = this._dropdown_button_template$_expr_1;
        if (t1 !== currVal_1) {
          this.setAttr$3(this._dropdown_button_template$_el_0, "aria-hidden", currVal_1);
          this._dropdown_button_template$_expr_1 = currVal_1;
        }
        _ctx.error;
        t1 = this._dropdown_button_template$_expr_2;
        if (t1 !== "") {
          this._dropdown_button_template$_text_1.textContent = "";
          this._dropdown_button_template$_expr_2 = "";
        }
      },
      $asAppView: function() {
        return [Q.DropdownButtonComponent];
      }
    }
  }], ["", "package:angular_components/material_select/material_dropdown_select.dart",, M, {
    "^": "",
    MaterialDropdownSelectComponent: {
      "^": "_MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin_ShiftClickSelectionMixin;trackByIndexFn,activeModel<,listId,buttonAriaRole,0buttonAriaLabelledBy,0_optionsListener,0_selectionListener,_popupSizeDelegate,0deselectLabel<,0error,0showButtonBorder,_deselectOnActivate,0labelFactory,activateFirstOption,popupClassName,0_ariaActiveDescendant,_material_dropdown_select$_changeDetector,0dropdownButton,listAutoFocus,_focus,_blur,ShiftClickSelectionMixin__pivot,ActivateItemOnKeyPressMixin__enteredKeys,KeyboardHandlerMixin_isRtl,TrackLayoutChangesMixin_trackLayoutChanges,MaterialButtonWrapper_buttonText,MaterialButtonWrapper_buttonAriaLabel,MaterialButtonWrapper_disabled,MaterialButtonWrapper_icon,MaterialButtonWrapper_iconName,MaterialButtonWrapper_raised,MaterialButtonWrapper__buttonIcon,SelectionInputAdapter__selectionChangeController,MaterialDropdownBase__visibleStream,MaterialDropdownBase__contentVisible,MaterialDropdownBase_enforceSpaceConstraints,MaterialDropdownBase_constrainToViewport,MaterialDropdownBase_popupMatchInputWidth,MaterialDropdownBase_slide,MaterialDropdownBase_autoDismiss,MaterialDropdownBase__visible,MaterialDropdownBase_preferredPositions,_width,0_selection,0_options,0_itemRenderer,0_componentRenderer,0_factoryRenderer,$ti",
      set$_optionsListener: function(_optionsListener) {
        this._optionsListener = H.assertSubtype(_optionsListener, "$isStreamSubscription", [[P.List, [F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]]], "$asStreamSubscription");
      },
      set$_selectionListener: function(_selectionListener) {
        this._selectionListener = H.assertSubtype(_selectionListener, "$isStreamSubscription", [[P.List, [Z.SelectionChangeRecord, H.getTypeArgumentByIndex(this, 0)]]], "$asStreamSubscription");
      },
      set$dropdownButton: function(dropdownButton) {
        this.dropdownButton = H.interceptedTypeCheck(dropdownButton, "$isDropdownButtonComponent");
      },
      get$ariaActiveDescendant: function() {
        if (!this.MaterialDropdownBase__visible)
          return "";
        if (this.get$options(this) != null) {
          var t1 = this.activeModel;
          return t1.id$1(0, t1.get$activeItem());
        }
        return "";
      },
      set$visible: function(_, value) {
        this._material_dropdown_select$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        this.super$MaterialDropdownBase$visible(0, value);
        this.ActivateItemOnKeyPressMixin__enteredKeys = "";
        if (value)
          this._setInitialActiveItem$1$allowDeactivate(false);
      },
      set$options: function(_, newOptions) {
        var t1;
        H.assertSubtype(newOptions, "$isSelectionOptions", this.$ti, "$asSelectionOptions");
        this._material_dropdown_select$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        this.super$SelectionContainer$options(0, newOptions);
        this._updateActiveModel$0();
        this._setInitialActiveItem$0();
        t1 = this._optionsListener;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this.get$options(this);
        if (t1 == null)
          t1 = null;
        else {
          t1 = t1._selection_options$_controller;
          t1 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
        }
        this.set$_optionsListener(t1 == null ? null : t1.listen$1(new M.MaterialDropdownSelectComponent_options_closure(this)));
      },
      onFocus$1: [function(_, $event) {
        this._focus.add$1(0, H.interceptedTypeCheck($event, "$isFocusEvent"));
      }, "call$1", "get$onFocus", 5, 0, 33],
      onBlur$1: [function(_, $event) {
        this._blur.add$1(0, H.interceptedTypeCheck($event, "$isFocusEvent"));
      }, "call$1", "get$onBlur", 5, 0, 33],
      set$selection: function(newSelection) {
        var t1;
        H.assertSubtype(newSelection, "$isSelectionModel", this.$ti, "$asSelectionModel");
        this._material_dropdown_select$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        this.super$SelectionContainer$selection(newSelection);
        this._setInitialActiveItem$0();
        t1 = this._selectionListener;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this.get$selection();
        t1 = t1 == null ? null : t1.get$selectionChanges();
        this.set$_selectionListener(t1 == null ? null : t1.listen$1(new M.MaterialDropdownSelectComponent_selection_closure(this)));
      },
      _updateActiveModel$0: function() {
        var t1, items;
        t1 = this.get$options(this);
        t1 = t1 == null ? null : t1._flattenedList;
        items = P.List_List$from(t1 == null ? [] : t1, true, null);
        if (this.get$showDeselectItem())
          C.JSArray_methods.insert$2(items, 0, this.deselectLabel);
        this.activeModel.set$items(0, items);
      },
      _setInitialActiveItem$1$allowDeactivate: function(allowDeactivate) {
        var t1, t2;
        if (this.get$selection() == null || J.get$isEmpty$asx(this.get$selection().get$selectedValues())) {
          if (allowDeactivate)
            this.activeModel.activate$1(null);
        } else {
          t1 = this.activeModel;
          if (t1.get$activeItem() != null)
            t2 = this.get$showDeselectItem() && J.$eq$(t1.get$activeItem(), this.deselectLabel) || !this.get$selection().isSelected$1(H.assertSubtypeOfRuntimeType(t1.get$activeItem(), H.getTypeArgumentByIndex(this, 0)));
          else
            t2 = true;
          if (t2)
            t1.activate$1(J.get$first$ax(this.get$selection().get$selectedValues()));
        }
      },
      _setInitialActiveItem$0: function() {
        return this._setInitialActiveItem$1$allowDeactivate(true);
      },
      _handleNavigationKey$2: function($event, activateFunction) {
        var item, t1;
        $event.preventDefault();
        activateFunction.call$0();
        if (!this.MaterialDropdownBase__visible && this.get$selection() != null && !J.getInterceptor$(this.get$selection()).$isMultiSelectionModel) {
          item = this.activeModel.get$activeItem();
          if (J.$eq$(item, this.deselectLabel))
            this.deselectCurrentSelection$0();
          else {
            if (item != null) {
              t1 = H.getTypeArgumentByIndex(this, 0);
              H.assertSubtypeOfRuntimeType(item, t1);
              t1 = E.Selectable__isOptionCheck(this.get$options(this), item, C.SelectableOption_0, true, t1);
            } else
              t1 = false;
            if (t1)
              this.get$selection().select$1(0, H.assertSubtypeOfRuntimeType(item, H.getTypeArgumentByIndex(this, 0)));
          }
        }
      },
      _handleKeyboardTrigger$0: function() {
        var item, t1, t2;
        if (!this.MaterialDropdownBase__visible)
          this.set$visible(0, true);
        else {
          item = this.activeModel.get$activeItem();
          if (item != null && this.get$selection() != null)
            if (J.$eq$(item, this.deselectLabel))
              this.deselectCurrentSelection$0();
            else {
              t1 = this.get$selection();
              t2 = H.getTypeArgumentByIndex(this, 0);
              H.assertSubtypeOfRuntimeType(item, t2);
              if (!t1.isSelected$1(item)) {
                if (E.Selectable__isOptionCheck(this.get$options(this), item, C.SelectableOption_0, true, t2))
                  this.get$selection().select$1(0, item);
              } else {
                this.get$selection();
                this.get$selection().deselect$1(item);
              }
            }
          if (!J.getInterceptor$(this.get$selection()).$isMultiSelectionModel) {
            this.set$visible(0, false);
            this.dropdownButton.focus$0(0);
          }
        }
      },
      handleClick$1: [function($event) {
        if (!J.getInterceptor$(H.interceptedTypeCheck($event, "$isUIEvent")).$isMouseEvent)
          return;
        this.set$visible(0, !this.MaterialDropdownBase__visible);
      }, "call$1", "get$handleClick", 4, 0, 18],
      getMinHeight$2: function(positionY, viewportHeight) {
        var t1 = this._popupSizeDelegate;
        return t1 == null ? null : t1.getMinHeight$2(positionY, viewportHeight);
      },
      getMinWidth$2: function(positionX, viewportWidth) {
        var t1 = this._popupSizeDelegate;
        return t1 == null ? null : t1.getMinWidth$2(positionX, viewportWidth);
      },
      getMaxHeight$2: function(positionY, viewportHeight) {
        var t1 = this._popupSizeDelegate;
        if (t1 != null)
          return t1.getMaxHeight$2(positionY, viewportHeight);
        else
          return 400;
      },
      getMaxWidth$2: function(positionX, viewportWidth) {
        var t1 = this._popupSizeDelegate;
        if (t1 != null)
          return t1.getMaxWidth$2(positionX, viewportWidth);
        else
          return 448;
      },
      get$showDeselectItem: function() {
        !J.getInterceptor$(this.get$selection()).$isMultiSelectionModel;
        return false;
      },
      deselectCurrentSelection$0: [function() {
        var t1 = this.get$selection();
        if (t1.get$isNotEmpty(t1))
          this.get$selection().deselect$1(J.get$single$ax(this.get$selection().get$selectedValues()));
      }, "call$0", "get$deselectCurrentSelection", 0, 0, 1],
      $isActivationHandler: 1,
      $asActivationHandler: Isolate.functionThatReturnsNull,
      $isDropdownHandle: 1,
      $isPopupRef: 1,
      $isPopupSizeProvider: 1,
      static: {
        MaterialDropdownSelectComponent$: function(idGenerator, _popupSizeDelegate, rtl, popupClass, buttonAriaRole, _changeDetector, element, $T) {
          var t1, t2, t3, t4, t5, t6;
          t1 = $.$get$indexIdentityFn();
          t2 = [W.FocusEvent];
          t3 = P.HashMap_HashMap(null, null, null, null, P.String);
          t4 = idGenerator == null;
          t5 = t4 ? new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid(), 0) : idGenerator;
          t5 = new O.ActiveItemModel(new P._SyncBroadcastStreamController(null, null, 0, [null]), t3, t5, -1, [null]);
          t5._loop = false;
          t5.set$_items(C.List_empty1);
          if (t5._items.length !== 0)
            t5._activeIndex = 0;
          element.toString;
          t3 = Q.constructEncapsulatedCss(popupClass, new W._ElementCssClassSet(element));
          t6 = (t4 ? new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid(), 0) : idGenerator).nextId$0();
          t4 = [P.bool];
          t1 = new M.MaterialDropdownSelectComponent(t1, t5, t6, buttonAriaRole, _popupSizeDelegate, true, false, t3, _changeDetector, true, new P._SyncBroadcastStreamController(null, null, 0, t2), new P._SyncBroadcastStreamController(null, null, 0, t2), null, "", null, true, null, null, false, null, null, false, null, null, new P._SyncBroadcastStreamController(null, null, 0, t4), new P._SyncBroadcastStreamController(null, null, 0, t4), false, false, true, null, true, false, C.List_ezW, 0, [$T]);
          t1.KeyboardHandlerMixin_isRtl = rtl;
          t1.MaterialDropdownBase_preferredPositions = C.List_scL;
          t1.MaterialButtonWrapper_iconName = "arrow_drop_down";
          return t1;
        }
      }
    },
    MaterialDropdownSelectComponent_options_closure: {
      "^": "Closure;$this",
      call$1: [function(_) {
        var t1 = this.$this;
        H.assertSubtype(_, "$isList", [[F.OptionGroup, H.getTypeArgumentByIndex(t1, 0)]], "$asList");
        t1._material_dropdown_select$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        t1._updateActiveModel$0();
        t1._setInitialActiveItem$0();
      }, null, null, 4, 0, null, 0, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P.List, [F.OptionGroup, H.getTypeArgumentByIndex(this.$this, 0)]]]};
      }
    },
    MaterialDropdownSelectComponent_selection_closure: {
      "^": "Closure;$this",
      call$1: [function(changes) {
        var t1, t2, added;
        t1 = this.$this;
        H.assertSubtype(changes, "$isList", [[Z.SelectionChangeRecord, H.getTypeArgumentByIndex(t1, 0)]], "$asList");
        t1._material_dropdown_select$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        t2 = J.getInterceptor$ax(changes);
        added = J.get$isNotEmpty$asx(t2.get$last(changes).get$added()) ? J.get$first$ax(t2.get$last(changes).get$added()) : null;
        if (added != null) {
          t2 = t1.activeModel;
          H.assertSubtypeOfRuntimeType(added, H.getTypeArgumentByIndex(t2, 0));
          t2 = !J.$eq$(t2.get$activeItem(), added);
        } else
          t2 = false;
        if (t2)
          t1.activeModel.activate$1(added);
        t1.emitSelectionChange$0();
      }, null, null, 4, 0, null, 59, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P.List, [Z.SelectionChangeRecord, H.getTypeArgumentByIndex(this.$this, 0)]]]};
      }
    },
    ActivateItemOnKeyPressMixin: {
      "^": "Object;$ti",
      activateOnKeyPress$5: function(activeModel, charCode, options, itemRenderer, selection) {
        var key, optionsList, startsWith, maybeSelectOption, t1, keys, _i;
        H.functionTypeCheck(itemRenderer, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(this, 0)]});
        if (options == null)
          return;
        key = $.$get$ActivateItemOnKeyPressMixin__charCodeMap().$index(0, charCode);
        if (key == null) {
          key = H.Primitives_stringFromCharCode(charCode).toLowerCase();
          $.$get$ActivateItemOnKeyPressMixin__charCodeMap().$indexSet(0, charCode, key);
        }
        optionsList = options._flattenedList;
        startsWith = new M.ActivateItemOnKeyPressMixin_activateOnKeyPress_closure(this, P.LinkedHashMap_LinkedHashMap$_empty(null, P.String), itemRenderer);
        maybeSelectOption = new M.ActivateItemOnKeyPressMixin_activateOnKeyPress_closure0(this, options, startsWith, activeModel, selection);
        t1 = this.ActivateItemOnKeyPressMixin__enteredKeys;
        if (t1.length !== 0) {
          keys = t1 + key;
          for (t1 = optionsList.length, _i = 0; _i < optionsList.length; optionsList.length === t1 || (0, H.throwConcurrentModificationError)(optionsList), ++_i)
            if (maybeSelectOption.call$2(optionsList[_i], keys))
              return;
        }
        if (startsWith.call$2(activeModel.get$activeItem(), key))
          if (maybeSelectOption.call$2(activeModel.get$peekNext(), key))
            return;
        for (t1 = optionsList.length, _i = 0; _i < optionsList.length; optionsList.length === t1 || (0, H.throwConcurrentModificationError)(optionsList), ++_i)
          if (maybeSelectOption.call$2(optionsList[_i], key))
            return;
        this.ActivateItemOnKeyPressMixin__enteredKeys = "";
      }
    },
    ActivateItemOnKeyPressMixin_activateOnKeyPress_closure: {
      "^": "Closure:38;$this,searchMap,itemRenderer",
      call$2: function(option, keys) {
        var t1, searchString;
        if (option == null)
          return false;
        t1 = this.searchMap;
        searchString = t1.$index(0, option);
        if (searchString == null) {
          searchString = J.toLowerCase$0$s(this.itemRenderer.call$1(H.assertSubtypeOfRuntimeType(option, H.getTypeArgumentByIndex(this.$this, 0))));
          t1.$indexSet(0, option, searchString);
        }
        return C.JSString_methods.startsWith$1(searchString, keys);
      }
    },
    ActivateItemOnKeyPressMixin_activateOnKeyPress_closure0: {
      "^": "Closure:38;$this,options,startsWith,activeModel,selection",
      call$2: function(option, keys) {
        var t1;
        if (E.Selectable__isOptionCheck(this.options, option, C.SelectableOption_0, true, null) && this.startsWith.call$2(option, keys)) {
          this.activeModel.activate$1(option);
          t1 = this.selection;
          if (!(t1 == null))
            t1.select$1(0, option);
          this.$this.ActivateItemOnKeyPressMixin__enteredKeys = keys;
          return true;
        }
        return false;
      }
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase: {
      "^": "MaterialSelectBase+MaterialDropdownBase;"
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter: {
      "^": "_MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase+SelectionInputAdapter;"
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper: {
      "^": "_MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter+MaterialButtonWrapper;disabled:MaterialButtonWrapper_disabled>"
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin: {
      "^": "_MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper+TrackLayoutChangesMixin;"
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin: {
      "^": "_MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin+KeyboardHandlerMixin;"
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin: {
      "^": "_MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin+ActivateItemOnKeyPressMixin;"
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin_ShiftClickSelectionMixin: {
      "^": "_MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin+ShiftClickSelectionMixin;ShiftClickSelectionMixin__pivot",
      set$_pivot: function(_pivot) {
        this.ShiftClickSelectionMixin__pivot = H.assertSubtypeOfRuntimeType(_pivot, H.getTypeArgumentByIndex(this, 0));
      }
    }
  }], ["asset_angular_components_lib_material_select_material_dropdown_select.scss.css.shim.dart", "package:angular_components/material_select/material_dropdown_select.scss.css.shim.dart",, K, {}], ["", "package:angular_components/material_select/material_dropdown_select.template.dart",, Y, {
    "^": "",
    ViewMaterialDropdownSelectComponent0: {
      "^": "AppView;0_material_dropdown_select_template$_compView_0,0_DropdownButtonComponent_0_5,0_Focusable_0_6,0_PopupSourceDirective_0_7,0_material_dropdown_select_template$_compView_2,0_material_dropdown_select_template$_appEl_2,0_MaterialPopupComponent_2_8,0__PopupRef_2_10,0__PopupHierarchy_2_12,0_material_dropdown_select_template$_appEl_4,0_DeferredContentDirective_4_9,0_material_dropdown_select_template$_expr_0,0_material_dropdown_select_template$_expr_1,0_material_dropdown_select_template$_expr_2,0_material_dropdown_select_template$_expr_3,0_material_dropdown_select_template$_expr_4,0_material_dropdown_select_template$_expr_5,0_material_dropdown_select_template$_expr_7,0_material_dropdown_select_template$_expr_8,0_material_dropdown_select_template$_expr_9,0_material_dropdown_select_template$_expr_11,0_material_dropdown_select_template$_expr_12,0_material_dropdown_select_template$_expr_14,0_expr_16,0_expr_17,0_expr_18,0_expr_19,0_expr_20,0_expr_21,0_material_dropdown_select_template$_el_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      get$_PopupRef_2_10: function() {
        var t1 = this.__PopupRef_2_10;
        if (t1 == null) {
          t1 = this._MaterialPopupComponent_2_8._resolvedPopupRef;
          this.__PopupRef_2_10 = t1;
        }
        return t1;
      },
      build$0: function() {
        var parentRenderNode, t1, t2, t3, t4, _el_0, t5, t6, t7, _text_1, t8, t9, t10, _el_3, _el_5, subscription_0, subscription_1, subscription_2, subscription_3;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = P.String;
        t2 = new Z.ViewDropdownButtonComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 1, C.ViewType_1, 0, Q.DropdownButtonComponent));
        t3 = document;
        t4 = t3.createElement("dropdown-button");
        t2.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewDropdownButtonComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$DropdownButtonComponent());
          $.ViewDropdownButtonComponent0__renderType = t4;
        }
        t2.setupComponentType$1(t4);
        this._material_dropdown_select_template$_compView_0 = t2;
        _el_0 = t2.rootEl;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, _el_0);
        t4 = J.getInterceptor$x(_el_0);
        t4.setAttribute$2(_el_0, "initPopupAriaAttributes", "false");
        t4.setAttribute$2(_el_0, "popupSource", "");
        t4.setAttribute$2(_el_0, "popupType", "listbox");
        this.addShimC$1(_el_0);
        t5 = new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid(), 0).nextId$0();
        t6 = W.FocusEvent;
        t7 = P.StreamController_StreamController(null, null, null, null, true, t6);
        t5 = new Q.DropdownButtonComponent("dialog", t5, t7, true, null, null, false, null, null, false, null, new P._SyncBroadcastStreamController(null, null, 0, [t6]), null, false);
        t5.MaterialButtonWrapper_iconName = "arrow_drop_down";
        this._DropdownButtonComponent_0_5 = t5;
        this._Focusable_0_6 = t5;
        t5 = this.parentView;
        t7 = L.PopupSourceDirective$(H.interceptedTypeCheck(t5.injectorGet$2(C.Type_DomPopupSourceFactory_gmZ, this.viewData.parentIndex), "$isDomPopupSourceFactory"), _el_0, H.interceptedTypeCheck(t5.injectorGet$3(C.Type_ReferenceDirective_i58, this.viewData.parentIndex, null), "$isReferenceDirective"), this._Focusable_0_6, "false");
        this._PopupSourceDirective_0_7 = t7;
        _text_1 = t3.createTextNode(" ");
        t7 = this._material_dropdown_select_template$_compView_0;
        t8 = this._DropdownButtonComponent_0_5;
        t9 = [_text_1];
        t10 = this.viewData.projectableNodes;
        if (0 >= t10.length)
          return H.ioore(t10, 0);
        C.JSArray_methods.addAll$1(t9, t10[0]);
        t7.create$2(0, t8, [t9]);
        t1 = new A.ViewMaterialPopupComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 2, G.MaterialPopupComponent));
        t7 = t3.createElement("material-popup");
        t1.rootEl = H.interceptedTypeCheck(t7, "$isHtmlElement");
        t7 = $.ViewMaterialPopupComponent0__renderType;
        if (t7 == null) {
          t7 = $.appViewUtils;
          t7 = t7.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialPopupComponent());
          $.ViewMaterialPopupComponent0__renderType = t7;
        }
        t1.setupComponentType$1(t7);
        this._material_dropdown_select_template$_compView_2 = t1;
        t1 = t1.rootEl;
        this._material_dropdown_select_template$_el_2 = t1;
        t2.append$1(parentRenderNode, t1);
        J.setAttribute$2$x(this._material_dropdown_select_template$_el_2, "enforceSpaceConstraints", "");
        this.addShimC$1(this._material_dropdown_select_template$_el_2);
        this._material_dropdown_select_template$_appEl_2 = new V.ViewContainer(2, null, this, this._material_dropdown_select_template$_el_2);
        t1 = G.MaterialPopupComponent$(H.interceptedTypeCheck(t5.injectorGet$3(C.Type_PopupHierarchy_7R9, this.viewData.parentIndex, null), "$isPopupHierarchy"), H.interceptedTypeCheck(t5.injectorGet$3(C.Type_MaterialPopupComponent_OpB, this.viewData.parentIndex, null), "$isMaterialPopupComponent"), null, H.interceptedTypeCheck(t5.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone"), H.interceptedTypeCheck(t5.injectorGet$2(C.Type_OverlayService_4iH, this.viewData.parentIndex), "$isOverlayService"), H.interceptedTypeCheck(t5.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService"), H.interceptedTypeCheck(t5.injectorGet$2(C.Type_ZIndexer_ViP, this.viewData.parentIndex), "$isZIndexer"), H.assertSubtype(t5.injectorGet$2(C.OpaqueToken_defaultPopupPositions, this.viewData.parentIndex), "$isList", [K.RelativePosition], "$asList"), H.boolTypeCheck(t5.injectorGet$2(C.OpaqueToken_overlayRepositionLoop, this.viewData.parentIndex)), H.interceptedTypeCheck(t5.injectorGet$3(C.Type_PopupSizeProvider_a5y, this.viewData.parentIndex, null), "$isPopupSizeProvider"), this._material_dropdown_select_template$_compView_2.viewData.ref, this._material_dropdown_select_template$_appEl_2, new Z.ElementRef(this._material_dropdown_select_template$_el_2));
        this._MaterialPopupComponent_2_8 = t1;
        _el_3 = t3.createElement("div");
        t1 = J.getInterceptor$x(_el_3);
        t1.setAttribute$2(_el_3, "header", "");
        H.interceptedTypeCheck(_el_3, "$isHtmlElement");
        this.addShimC$1(_el_3);
        this.project$2(_el_3, 1);
        t2 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(4, 2, this, H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment"));
        this._material_dropdown_select_template$_appEl_4 = t2;
        this._DeferredContentDirective_4_9 = K.DeferredContentDirective$(t2, new D.TemplateRef(t2, new Y.ViewMaterialDropdownSelectComponent0_build_closure(this)), this._MaterialPopupComponent_2_8);
        _el_5 = t3.createElement("div");
        t2 = J.getInterceptor$x(_el_5);
        t2.setAttribute$2(_el_5, "footer", "");
        H.interceptedTypeCheck(_el_5, "$isHtmlElement");
        this.addShimC$1(_el_5);
        this.project$2(_el_5, 5);
        t3 = [W.Element];
        this._material_dropdown_select_template$_compView_2.create$2(0, this._MaterialPopupComponent_2_8, [H.setRuntimeTypeInfo([_el_3], t3), H.setRuntimeTypeInfo([this._material_dropdown_select_template$_appEl_4], [V.ViewContainer]), H.setRuntimeTypeInfo([_el_5], t3)]);
        t3 = W.Event;
        t5 = W.KeyboardEvent;
        t4.addEventListener$2(_el_0, "keydown", this.eventHandler1$2$1(J.get$onKeyDown$z(this.ctx), t3, t5));
        t4.addEventListener$2(_el_0, "keypress", this.eventHandler1$2$1(J.get$onKeyPress$z(this.ctx), t3, t5));
        t4 = this._DropdownButtonComponent_0_5.FocusableMixin__onFocus;
        subscription_0 = new P._BroadcastStream(t4, [H.getTypeArgumentByIndex(t4, 0)]).listen$1(this.eventHandler1$2$1(J.get$onFocus$z(this.ctx), t6, t6));
        t4 = this._DropdownButtonComponent_0_5._dropdown_button$_blur;
        subscription_1 = new P._ControllerStream(t4, [H.getTypeArgumentByIndex(t4, 0)]).listen$1(this.eventHandler1$2$1(J.get$onBlur$z(this.ctx), t6, t6));
        t6 = this._DropdownButtonComponent_0_5._button._trigger;
        t4 = W.UIEvent;
        subscription_2 = new P._BroadcastStream(t6, [H.getTypeArgumentByIndex(t6, 0)]).listen$1(this.eventHandler1$2$1(this.ctx.get$handleClick(), t4, t4));
        t4 = this._MaterialPopupComponent_2_8.PopupEvents_onVisibleController;
        t6 = P.bool;
        subscription_3 = new P._BroadcastStream(t4, [H.getTypeArgumentByIndex(t4, 0)]).listen$1(this.eventHandler1$2$1(this.ctx.get$onVisible(), t6, t6));
        t1.addEventListener$2(_el_3, "keydown", this.eventHandler1$2$1(J.get$onKeyDown$z(this.ctx), t3, t5));
        t1.addEventListener$2(_el_3, "keypress", this.eventHandler1$2$1(J.get$onKeyPress$z(this.ctx), t3, t5));
        t1.addEventListener$2(_el_3, "keyup", this.eventHandler1$2$1(J.get$onKeyUp$x(this.ctx), t3, t5));
        t2.addEventListener$2(_el_5, "keydown", this.eventHandler1$2$1(J.get$onKeyDown$z(this.ctx), t3, t5));
        t2.addEventListener$2(_el_5, "keypress", this.eventHandler1$2$1(J.get$onKeyPress$z(this.ctx), t3, t5));
        t2.addEventListener$2(_el_5, "keyup", this.eventHandler1$2$1(J.get$onKeyUp$x(this.ctx), t3, t5));
        this.ctx.set$dropdownButton(this._DropdownButtonComponent_0_5);
        this.init$2(C.List_empty, [subscription_0, subscription_1, subscription_2, subscription_3]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._DropdownButtonComponent_0_5;
        if (token === C.Type_Focusable_adc)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._Focusable_0_6;
        if ((token === C.Type_MaterialPopupComponent_OpB || token === C.Type_DeferredContentAware_BCk || token === C.Type_DropdownHandle_YMM) && 2 <= nodeIndex && nodeIndex <= 5)
          return this._MaterialPopupComponent_2_8;
        if (token === C.Type_PopupRef_AWk && 2 <= nodeIndex && nodeIndex <= 5)
          return this.get$_PopupRef_2_10();
        if (token === C.Type_PopupHierarchy_7R9 && 2 <= nodeIndex && nodeIndex <= 5) {
          t1 = this.__PopupHierarchy_2_12;
          if (t1 == null) {
            t1 = this._MaterialPopupComponent_2_8.get$hierarchy();
            this.__PopupHierarchy_2_12 = t1;
          }
          return t1;
        }
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, local_source, changed, t1, currVal_3, currVal_4, currVal_8, currVal_9, currVal_12, currVal_17, t2, currVal_20, t3, t4, hostClass, contentClass, currVal_0, t5, t6;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        local_source = this._PopupSourceDirective_0_7;
        if (firstCheck) {
          this._DropdownButtonComponent_0_5.popupType = "listbox";
          changed = true;
        } else
          changed = false;
        _ctx.MaterialButtonWrapper_disabled;
        t1 = this._material_dropdown_select_template$_expr_2;
        if (t1 !== false) {
          this._DropdownButtonComponent_0_5.MaterialButtonWrapper_disabled = false;
          this._material_dropdown_select_template$_expr_2 = false;
          changed = true;
        }
        currVal_3 = _ctx.MaterialButtonWrapper_icon;
        t1 = this._material_dropdown_select_template$_expr_3;
        if (t1 == null ? currVal_3 != null : t1 !== currVal_3) {
          this._DropdownButtonComponent_0_5.MaterialButtonWrapper_icon = currVal_3;
          this._material_dropdown_select_template$_expr_3 = currVal_3;
          changed = true;
        }
        currVal_4 = _ctx.MaterialButtonWrapper_iconName;
        t1 = this._material_dropdown_select_template$_expr_4;
        if (t1 != currVal_4) {
          this._DropdownButtonComponent_0_5.MaterialButtonWrapper_iconName = currVal_4;
          this._material_dropdown_select_template$_expr_4 = currVal_4;
          changed = true;
        }
        _ctx.MaterialButtonWrapper_raised;
        t1 = this._material_dropdown_select_template$_expr_5;
        if (t1 !== false) {
          this._DropdownButtonComponent_0_5.MaterialButtonWrapper_raised = false;
          this._material_dropdown_select_template$_expr_5 = false;
          changed = true;
        }
        currVal_8 = _ctx.MaterialDropdownBase__visible ? _ctx.listId : null;
        t1 = this._material_dropdown_select_template$_expr_8;
        if (t1 != currVal_8) {
          this._DropdownButtonComponent_0_5.ariaOwns = currVal_8;
          this._material_dropdown_select_template$_expr_8 = currVal_8;
          changed = true;
        }
        currVal_9 = _ctx.MaterialDropdownBase__visible;
        t1 = this._material_dropdown_select_template$_expr_9;
        if (t1 != currVal_9) {
          this._DropdownButtonComponent_0_5.ariaExpanded = currVal_9;
          this._material_dropdown_select_template$_expr_9 = currVal_9;
          changed = true;
        }
        currVal_12 = _ctx.showButtonBorder;
        t1 = this._material_dropdown_select_template$_expr_12;
        if (t1 != currVal_12) {
          this._DropdownButtonComponent_0_5._showButtonBorder = currVal_12;
          this._material_dropdown_select_template$_expr_12 = currVal_12;
          changed = true;
        }
        if (changed)
          this._material_dropdown_select_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._DropdownButtonComponent_0_5;
          t1._ariaRole = "button";
        }
        if (firstCheck) {
          this._MaterialPopupComponent_2_8.state._backingMap.$indexSet(0, C.Symbol_enforceSpaceConstraints, true);
          changed = true;
        } else
          changed = false;
        _ctx.MaterialDropdownBase_autoDismiss;
        t1 = this._material_dropdown_select_template$_expr_14;
        if (t1 !== true) {
          this._MaterialPopupComponent_2_8.state._backingMap.$indexSet(0, C.Symbol_autoDismiss, true);
          this._material_dropdown_select_template$_expr_14 = true;
          changed = true;
        }
        _ctx.MaterialDropdownBase_popupMatchInputWidth;
        t1 = this._expr_16;
        if (t1 !== true) {
          t1 = this._MaterialPopupComponent_2_8;
          t1.super$PopupBase$matchMinSourceWidth(true);
          t1._matchMinSourceWidth = true;
          this._expr_16 = true;
          changed = true;
        }
        currVal_17 = _ctx.MaterialDropdownBase_preferredPositions;
        t1 = this._expr_17;
        if (t1 !== currVal_17) {
          this._MaterialPopupComponent_2_8.state._backingMap.$indexSet(0, C.Symbol_preferredPositions, currVal_17);
          this._expr_17 = currVal_17;
          changed = true;
        }
        t1 = this._expr_18;
        if (t1 == null ? local_source != null : t1 !== local_source) {
          t1 = this._MaterialPopupComponent_2_8;
          t1.super$PopupBase$source(0, local_source);
          t1 = t1._material_popup$_uniqueId;
          local_source._popupId = t1;
          t2 = local_source._popupSource;
          if (!(t2 == null))
            t2.set$popupId(t1);
          this._expr_18 = local_source;
          changed = true;
        }
        _ctx.TrackLayoutChangesMixin_trackLayoutChanges;
        t1 = this._expr_19;
        if (t1 !== true) {
          this._MaterialPopupComponent_2_8.state._backingMap.$indexSet(0, C.Symbol_trackLayoutChanges, true);
          this._expr_19 = true;
          changed = true;
        }
        currVal_20 = _ctx.MaterialDropdownBase__visible;
        t1 = this._expr_20;
        if (t1 != currVal_20) {
          this._MaterialPopupComponent_2_8.set$visible(0, currVal_20);
          this._expr_20 = currVal_20;
          changed = true;
        }
        _ctx.MaterialDropdownBase_slide;
        if (changed)
          this._material_dropdown_select_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._DeferredContentDirective_4_9.preserveDimensions = true;
        this._material_dropdown_select_template$_appEl_2.detectChangesInNestedViews$0();
        this._material_dropdown_select_template$_appEl_4.detectChangesInNestedViews$0();
        if (firstCheck) {
          t1 = this._material_dropdown_select_template$_compView_2;
          t2 = this._material_dropdown_select_template$_el_2;
          t3 = _ctx.popupClassName;
          t4 = t1.rootEl;
          if (t2 == null ? t4 == null : t2 === t4) {
            hostClass = t1.componentType._hostAttr;
            t2.className = hostClass == null ? t3 : t3 + " " + hostClass;
            t1 = t1.parentView;
            if (t1 != null && t1.componentType != null)
              t1.addShimE$1(t2);
          } else {
            contentClass = t1.componentType._viewAttr;
            t2.className = contentClass == null ? t3 : t3 + " " + contentClass;
          }
        }
        t1 = this._material_dropdown_select_template$_compView_2;
        currVal_0 = t1.ctx.get$paneId();
        t2 = t1._material_popup_template$_expr_0;
        if (t2 != currVal_0) {
          t1.setAttr$3(t1.rootEl, "pane-id", currVal_0);
          t1._material_popup_template$_expr_0 = currVal_0;
        }
        this._material_dropdown_select_template$_compView_0.detectChanges$0();
        this._material_dropdown_select_template$_compView_2.detectChanges$0();
        if (firstCheck) {
          t1 = this._PopupSourceDirective_0_7;
          t2 = t1._popup_source_directive$_element;
          t3 = t1._domPopupSourceFactory;
          t4 = t1._popup_source_directive$_alignOriginX;
          t5 = t1._popup_source_directive$_alignOriginY;
          t6 = t1._popup_source_directive$_initAriaAttributes;
          t6 = new K.DomPopupSource(t3.get$_asyncMeasureSize(), t2, t6);
          t6._alignOriginX = t4;
          t6._alignOriginY = t5;
          t1._popupSource = t6;
          t1 = t1._popupId;
          if (t1 != null)
            t6.set$popupId(t1);
          this._MaterialPopupComponent_2_8._updateOverlayCssClass$0();
        }
      },
      destroyInternal$0: function() {
        var t1, t2, t3;
        this._material_dropdown_select_template$_appEl_2.destroyNestedViews$0();
        this._material_dropdown_select_template$_appEl_4.destroyNestedViews$0();
        this._material_dropdown_select_template$_compView_0.destroy$0();
        this._material_dropdown_select_template$_compView_2.destroy$0();
        t1 = this._PopupSourceDirective_0_7;
        t1._popup_source_directive$_element = null;
        t1._popupSource = null;
        t1._referenceDirective = null;
        t1._focusable = null;
        t1 = this._DeferredContentDirective_4_9;
        t1._deferred_content$_disposer.dispose$0();
        t1._deferred_content$_viewContainer = null;
        t1._template = null;
        t1 = this._MaterialPopupComponent_2_8;
        t2 = t1._repositionLoopId;
        if (t2 != null) {
          t3 = window;
          C.Window_methods._ensureRequestAnimationFrame$0(t3);
          C.Window_methods._cancelAnimationFrame$1(t3, t2);
        }
        t2 = t1._layoutInternalSub;
        if (!(t2 == null))
          t2.cancel$0(0);
        t2 = t1._layoutChangeSub;
        if (!(t2 == null))
          t2.cancel$0(0);
        t2 = t1._windowResizeSub;
        if (!(t2 == null))
          t2.cancel$0(0);
        t1._material_popup$_disposer.dispose$0();
        t2 = t1._animationTimer;
        if (!(t2 == null))
          t2.cancel$0(0);
        t1._isVisible = false;
        t1.PopupEvents_onVisibleController.add$1(0, false);
      },
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    ViewMaterialDropdownSelectComponent0_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent1: {
      "^": "AppView;0_material_dropdown_select_template$_compView_0,0_AutoFocusDirective_0_5,0_MaterialListComponent_0_6,0_material_dropdown_select_template$_appEl_2,0_material_dropdown_select_template$_NgIf_2_9,0_material_dropdown_select_template$_expr_1,0_material_dropdown_select_template$_expr_2,0_material_dropdown_select_template$_expr_4,0_material_dropdown_select_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, t2, t3, t4, t5, _text_1;
        t1 = new B.ViewMaterialListComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, B.MaterialListComponent));
        t2 = document;
        t3 = t2.createElement("material-list");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewMaterialListComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialListComponent());
          $.ViewMaterialListComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._material_dropdown_select_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._material_dropdown_select_template$_el_0 = t1;
        t1.className = "options-list";
        J.setAttribute$2$x(t1, "role", "listbox");
        t1 = this._material_dropdown_select_template$_el_0;
        t1.tabIndex = 0;
        this.addShimC$1(t1);
        t1 = this._material_dropdown_select_template$_el_0;
        t3 = this.parentView;
        t4 = t3.parentView;
        t5 = H.interceptedTypeCheck(t4.injectorGet$2(C.Type_DomService_2jN, t3.viewData.parentIndex), "$isDomService");
        t4 = H.interceptedTypeCheck(t4.injectorGet$3(C.Type_ModalComponent_Npb, t3.viewData.parentIndex, null), "$isModalComponent");
        t3 = H.interceptedTypeCheck(t3, "$isViewMaterialDropdownSelectComponent0").get$_PopupRef_2_10();
        this._AutoFocusDirective_0_5 = new E.AutoFocusDirective(new R.Disposer(true, false), null, t5, t4, t3, t1);
        this._MaterialListComponent_0_6 = new B.MaterialListComponent("auto", "list");
        _text_1 = t2.createTextNode(" ");
        t1 = $.$get$_viewContainerAnchor();
        t1 = new V.ViewContainer(2, 0, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._material_dropdown_select_template$_appEl_2 = t1;
        this._material_dropdown_select_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, new Y._ViewMaterialDropdownSelectComponent1_build_closure(this)), t1, false);
        t1 = this._material_dropdown_select_template$_compView_0;
        t2 = this._MaterialListComponent_0_6;
        t3 = this.viewData.projectableNodes;
        if (2 >= t3.length)
          return H.ioore(t3, 2);
        t3 = [t3[2]];
        C.JSArray_methods.addAll$1(t3, [_text_1]);
        t4 = this.viewData.projectableNodes;
        if (3 >= t4.length)
          return H.ioore(t4, 3);
        C.JSArray_methods.addAll$1(t3, t4[3]);
        C.JSArray_methods.addAll$1(t3, [this._material_dropdown_select_template$_appEl_2]);
        t4 = this.viewData.projectableNodes;
        if (4 >= t4.length)
          return H.ioore(t4, 4);
        C.JSArray_methods.addAll$1(t3, t4[4]);
        t1.create$2(0, t2, [t3]);
        t3 = W.Event;
        t2 = W.KeyboardEvent;
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "keydown", this.eventHandler1$2$1(J.get$onKeyDown$z(this.ctx), t3, t2));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "keypress", this.eventHandler1$2$1(J.get$onKeyPress$z(this.ctx), t3, t2));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "keyup", this.eventHandler1$2$1(J.get$onKeyUp$x(this.ctx), t3, t2));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "mouseout", this.eventHandler1$2$1(this.get$_handle_mouseout_0_3(), t3, t3));
        this.init0$1(this._material_dropdown_select_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_4, val, currVal_1, currVal_0, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        _ctx.listAutoFocus;
        t1 = this._material_dropdown_select_template$_expr_2;
        if (t1 !== true) {
          this._AutoFocusDirective_0_5._autoFocus = true;
          this._material_dropdown_select_template$_expr_2 = true;
        }
        if (firstCheck)
          this._AutoFocusDirective_0_5.ngOnInit$0();
        if (firstCheck) {
          this._MaterialListComponent_0_6.role = "listbox";
          changed = true;
        } else
          changed = false;
        currVal_4 = _ctx._width;
        t1 = this._material_dropdown_select_template$_expr_4;
        if (t1 !== currVal_4) {
          t1 = this._MaterialListComponent_0_6;
          t1.toString;
          val = E.getInt(currVal_4, 0);
          if (typeof val !== "number")
            return val.$ge();
          if (val >= 0 && val < 6) {
            if (val < 0 || val >= 6)
              return H.ioore(C.List_huV, val);
            t1.size = C.List_huV[val];
          }
          this._material_dropdown_select_template$_expr_4 = currVal_4;
          changed = true;
        }
        if (changed)
          this._material_dropdown_select_template$_compView_0.viewData.set$cdMode(1);
        this._material_dropdown_select_template$_NgIf_2_9.set$ngIf(_ctx.get$options(_ctx) != null);
        this._material_dropdown_select_template$_appEl_2.detectChangesInNestedViews$0();
        if (firstCheck)
          this.setAttr$3(this._material_dropdown_select_template$_el_0, "id", _ctx.listId);
        currVal_1 = _ctx.get$ariaActiveDescendant();
        t1 = this._material_dropdown_select_template$_expr_1;
        if (t1 != currVal_1) {
          this.setAttr$3(this._material_dropdown_select_template$_el_0, "aria-activedescendant", currVal_1);
          this._material_dropdown_select_template$_expr_1 = currVal_1;
        }
        t1 = this._material_dropdown_select_template$_compView_0;
        currVal_0 = J.get$size$z(t1.ctx);
        t2 = t1._material_list_template$_expr_0;
        if (t2 !== currVal_0) {
          t1.setAttr$3(t1.rootEl, "size", currVal_0);
          t1._material_list_template$_expr_0 = currVal_0;
        }
        currVal_1 = J.get$role$z(t1.ctx);
        t2 = t1._material_list_template$_expr_1;
        if (t2 != currVal_1) {
          t1.setAttr$3(t1.rootEl, "role", currVal_1);
          t1._material_list_template$_expr_1 = currVal_1;
        }
        this._material_dropdown_select_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_dropdown_select_template$_appEl_2.destroyNestedViews$0();
        this._material_dropdown_select_template$_compView_0.destroy$0();
        var t1 = this._AutoFocusDirective_0_5;
        t1.super$RootFocusable$dispose();
        t1._focus$_disposer.dispose$0();
        t1._focus$_focusable = null;
        t1._focus$_domService = null;
        t1._focus$_modal = null;
        t1._focus$_popupRef = null;
      },
      _handle_mouseout_0_3$1: [function($$event) {
        this.ctx.get$activeModel().activate$1(null);
      }, "call$1", "get$_handle_mouseout_0_3", 4, 0, 2],
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    _ViewMaterialDropdownSelectComponent1_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent2: {
      "^": "AppView;0_material_dropdown_select_template$_appEl_1,0_material_dropdown_select_template$_NgIf_1_9,0_material_dropdown_select_template$_appEl_2,0_NgFor_2_9,0_material_dropdown_select_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var _el_0, t1, _anchor_1, t2, t3, _anchor_2;
        _el_0 = document.createElement("div");
        _el_0.className = "options-wrapper";
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = J.getInterceptor$x(_el_0);
        t2.append$1(_el_0, _anchor_1);
        t3 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._material_dropdown_select_template$_appEl_1 = t3;
        this._material_dropdown_select_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t3, new Y._ViewMaterialDropdownSelectComponent2_build_closure(this)), t3, false);
        _anchor_2 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(_el_0, _anchor_2);
        t2 = new V.ViewContainer(2, 0, this, _anchor_2);
        this._material_dropdown_select_template$_appEl_2 = t2;
        this._NgFor_2_9 = new R.NgFor(t2, new D.TemplateRef(t2, new Y._ViewMaterialDropdownSelectComponent2_build_closure0(this)));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, t2, t3, t4, differ, currVal_1;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        this._material_dropdown_select_template$_NgIf_1_9.set$ngIf(_ctx.get$showDeselectItem());
        if (t1 === 0) {
          t1 = this._NgFor_2_9;
          t2 = {func: 1, ret: P.Object, args: [P.int,,]};
          t1.set$_ngForTrackBy(H.functionTypeCheck(_ctx.trackByIndexFn, t2));
          if (t1._ngForOf != null) {
            t3 = t1._differ;
            t4 = t1._ngForTrackBy;
            if (t3 == null)
              t1._differ = R.DefaultIterableDiffer$(t4);
            else {
              differ = R.DefaultIterableDiffer$(H.functionTypeCheck(t4, t2));
              differ._default_iterable_differ$_length = t3._default_iterable_differ$_length;
              differ._collection = t3._collection;
              differ._linkedRecords = t3._linkedRecords;
              differ._unlinkedRecords = t3._unlinkedRecords;
              differ._previousItHead = t3._previousItHead;
              differ._itHead = t3._itHead;
              differ._itTail = t3._itTail;
              differ._default_iterable_differ$_additionsHead = t3._default_iterable_differ$_additionsHead;
              differ._default_iterable_differ$_additionsTail = t3._default_iterable_differ$_additionsTail;
              differ._movesHead = t3._movesHead;
              differ._movesTail = t3._movesTail;
              differ._default_iterable_differ$_removalsHead = t3._default_iterable_differ$_removalsHead;
              differ._removalsTail = t3._removalsTail;
              differ._identityChangesHead = t3._identityChangesHead;
              differ._identityChangesTail = t3._identityChangesTail;
              t1._differ = differ;
            }
          }
        }
        currVal_1 = _ctx.get$options(_ctx)._optionGroups;
        t1 = this._material_dropdown_select_template$_expr_1;
        if (t1 == null ? currVal_1 != null : t1 !== currVal_1) {
          this._NgFor_2_9.set$ngForOf(currVal_1);
          this._material_dropdown_select_template$_expr_1 = currVal_1;
        }
        this._NgFor_2_9.ngDoCheck$0();
        this._material_dropdown_select_template$_appEl_1.detectChangesInNestedViews$0();
        this._material_dropdown_select_template$_appEl_2.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._material_dropdown_select_template$_appEl_1.destroyNestedViews$0();
        this._material_dropdown_select_template$_appEl_2.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    _ViewMaterialDropdownSelectComponent2_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent2_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent4(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null], P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent3: {
      "^": "AppView;0_material_dropdown_select_template$_compView_0,0_ActiveItemDirective_0_5,0_KeyboardOnlyFocusIndicatorDirective_0_6,0_MaterialSelectDropdownItemComponent_0_7,0_material_dropdown_select_template$_expr_0,0_material_dropdown_select_template$_expr_1,0_material_dropdown_select_template$_expr_3,0_material_dropdown_select_template$_expr_4,0_material_dropdown_select_template$_expr_5,0_material_dropdown_select_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      set$_material_dropdown_select_template$_compView_0: function(_compView_0) {
        this._material_dropdown_select_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewMaterialSelectDropdownItemComponent0", [P.String], "$asViewMaterialSelectDropdownItemComponent0");
      },
      set$_MaterialSelectDropdownItemComponent_0_7: function(_MaterialSelectDropdownItemComponent_0_7) {
        this._MaterialSelectDropdownItemComponent_0_7 = H.assertSubtype(_MaterialSelectDropdownItemComponent_0_7, "$isMaterialSelectDropdownItemComponent", [P.String], "$asMaterialSelectDropdownItemComponent");
      },
      build$0: function() {
        var t1, t2, t3, t4, t5, t6, t7, subscription_0;
        t1 = P.String;
        this.set$_material_dropdown_select_template$_compView_0(O.ViewMaterialSelectDropdownItemComponent0$(this, 0, t1));
        t2 = this._material_dropdown_select_template$_compView_0.rootEl;
        this._material_dropdown_select_template$_el_0 = t2;
        J.setAttribute$2$x(t2, "keyboardOnlyFocusIndicator", "");
        this.addShimC$1(this._material_dropdown_select_template$_el_0);
        t2 = this._material_dropdown_select_template$_el_0;
        t3 = this.parentView.parentView.parentView;
        t4 = t3.parentView;
        t5 = H.interceptedTypeCheck(t4.injectorGet$2(C.Type_DomService_2jN, t3.viewData.parentIndex), "$isDomService");
        t6 = H.interceptedTypeCheck(t4.injectorGet$3(C.Type_Modal_OjC, t3.viewData.parentIndex, null), "$isModal");
        H.interceptedTypeCheck(t3, "$isViewMaterialDropdownSelectComponent0");
        t7 = t3.get$_PopupRef_2_10();
        this._ActiveItemDirective_0_5 = new M.ActiveItemDirectiveNgCd(new B.ActiveItemDirective(t2, t5, t6, t7, false, false, false), false);
        t2 = this._material_dropdown_select_template$_el_0;
        t5 = H.interceptedTypeCheck(t4.injectorGet$2(C.Type_DomService_2jN, t3.viewData.parentIndex), "$isDomService");
        this._KeyboardOnlyFocusIndicatorDirective_0_6 = new O.KeyboardOnlyFocusIndicatorDirective(t2, t5, C._InteractionType_2);
        t1 = F.MaterialSelectDropdownItemComponent$(this._material_dropdown_select_template$_el_0, null, t3._MaterialPopupComponent_2_8, H.interceptedTypeCheck(t4.injectorGet$3(C.Type_ActivationHandler_Nm5, t3.viewData.parentIndex, null), "$isActivationHandler"), H.interceptedTypeCheck(t4.injectorGet$3(C.Type_IdGenerator_yLN, t3.viewData.parentIndex, null), "$isIdGenerator"), this._material_dropdown_select_template$_compView_0.viewData.ref, t1);
        this.set$_MaterialSelectDropdownItemComponent_0_7(t1);
        this._material_dropdown_select_template$_compView_0.create$2(0, this._MaterialSelectDropdownItemComponent_0_7, [C.List_empty]);
        t1 = W.Event;
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "mouseenter", this.eventHandler1$2$1(this.get$_handle_mouseenter_0_1(), t1, t1));
        t2 = this._material_dropdown_select_template$_el_0;
        t3 = this._ActiveItemDirective_0_5.instance;
        J.addEventListener$2$x(t2, "mouseleave", this.eventHandler0$1$1(t3.get$onMouseLeave(t3), t1));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "keydown", this.eventHandler1$2$1(this._KeyboardOnlyFocusIndicatorDirective_0_6.get$keydown(), t1, W.KeyboardEvent));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "blur", this.eventHandler0$1$1(this._KeyboardOnlyFocusIndicatorDirective_0_6.get$resetOutline(), t1));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "mousedown", this.eventHandler0$1$1(this._KeyboardOnlyFocusIndicatorDirective_0_6.get$onMouseInteraction(), t1));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "click", this.eventHandler0$1$1(this._KeyboardOnlyFocusIndicatorDirective_0_6.get$onMouseInteraction(), t1));
        t3 = this._material_dropdown_select_template$_el_0;
        t2 = this._KeyboardOnlyFocusIndicatorDirective_0_6;
        J.addEventListener$2$x(t3, "focus", this.eventHandler1$2$1(t2.get$onFocus(t2), t1, t1));
        t1 = this._MaterialSelectDropdownItemComponent_0_7._trigger;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$deselectCurrentSelection(), W.UIEvent));
        this.init$2([this._material_dropdown_select_template$_el_0], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if ((token === C.Type_SelectionItem_uvp || token === C.Type_HasRenderer_wsa) && 0 === nodeIndex)
          return this._MaterialSelectDropdownItemComponent_0_7;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, t2, currVal_1, currVal_3, currVal_4, currVal_5, currVal_0;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (H.interceptedTypeCheck(this.parentView.parentView.parentView, "$isViewMaterialDropdownSelectComponent0")._MaterialPopupComponent_2_8.showPopup) {
          t1 = _ctx.activeModel;
          t2 = H.assertSubtypeOfRuntimeType(_ctx.deselectLabel, H.getTypeArgumentByIndex(t1, 0));
          currVal_1 = J.$eq$(t1.get$activeItem(), t2);
        } else
          currVal_1 = false;
        t1 = this._material_dropdown_select_template$_expr_1;
        if (t1 !== currVal_1) {
          this._ActiveItemDirective_0_5.instance.set$itemActive(currVal_1);
          this._material_dropdown_select_template$_expr_1 = currVal_1;
        }
        if (firstCheck)
          this._MaterialSelectDropdownItemComponent_0_7.tabbable = false;
        currVal_3 = _ctx.deselectLabel;
        t1 = _ctx.get$selection();
        currVal_4 = t1.get$isEmpty(t1);
        t1 = this._material_dropdown_select_template$_expr_4;
        if (t1 !== currVal_4) {
          t1 = this._MaterialSelectDropdownItemComponent_0_7;
          t1.toString;
          t1._selected = E.getBool(currVal_4);
          this._material_dropdown_select_template$_expr_4 = currVal_4;
        }
        currVal_5 = _ctx.activeModel.id$1(0, currVal_3);
        t1 = this._material_dropdown_select_template$_expr_5;
        if (t1 != currVal_5) {
          this._MaterialSelectDropdownItemComponent_0_7._id = currVal_5;
          this._material_dropdown_select_template$_expr_5 = currVal_5;
        }
        currVal_0 = _ctx.get$options(_ctx)._optionGroups.length === 1;
        t1 = this._material_dropdown_select_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateElemClass$3(this._material_dropdown_select_template$_el_0, "empty", currVal_0);
          this._material_dropdown_select_template$_expr_0 = currVal_0;
        }
        this._ActiveItemDirective_0_5.detectHostChanges$2(this._material_dropdown_select_template$_compView_0, this._material_dropdown_select_template$_el_0);
        this._material_dropdown_select_template$_compView_0.detectHostChanges$1(firstCheck);
        this._material_dropdown_select_template$_compView_0.detectChanges$0();
        if (firstCheck) {
          t1 = this._ActiveItemDirective_0_5.instance;
          t1._initialized = true;
          t1._scrollIntoViewIfNecessary$0();
        }
      },
      destroyInternal$0: function() {
        this._material_dropdown_select_template$_compView_0.destroy$0();
        this._ActiveItemDirective_0_5.instance.ngOnDestroy$0();
        this._MaterialSelectDropdownItemComponent_0_7._disposer.dispose$0();
      },
      _handle_mouseenter_0_1$1: [function($$event) {
        this.ctx.get$activeModel().activate$1(this.ctx.get$deselectLabel());
        this._ActiveItemDirective_0_5.instance._hasHover = true;
      }, "call$1", "get$_handle_mouseenter_0_1", 4, 0, 2],
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    _ViewMaterialDropdownSelectComponent4: {
      "^": "AppView;0_material_dropdown_select_template$_appEl_1,0_material_dropdown_select_template$_NgIf_1_9,0_material_dropdown_select_template$_expr_0,0_material_dropdown_select_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, _anchor_1;
        t1 = document.createElement("div");
        H.interceptedTypeCheck(t1, "$isDivElement");
        this._material_dropdown_select_template$_el_0 = t1;
        C.DivElement_methods.setAttribute$2(t1, "group", "");
        this.addShimC$1(this._material_dropdown_select_template$_el_0);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t1 = this._material_dropdown_select_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _anchor_1);
        t1 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._material_dropdown_select_template$_appEl_1 = t1;
        this._material_dropdown_select_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new Y._ViewMaterialDropdownSelectComponent4_build_closure(this)), t1, false);
        this.init0$1(this._material_dropdown_select_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var local_group, t1, t2, currVal_0;
        local_group = H.assertSubtypeOfRuntimeType(this.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]);
        t1 = this._material_dropdown_select_template$_NgIf_1_9;
        t2 = local_group._base;
        t1.set$ngIf(t2.length !== 0 || local_group._emptyLabelFcn != null);
        this._material_dropdown_select_template$_appEl_1.detectChangesInNestedViews$0();
        currVal_0 = t2.length === 0 && local_group._emptyLabelFcn == null;
        t1 = this._material_dropdown_select_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateClass$3(this._material_dropdown_select_template$_el_0, "empty", currVal_0);
          this._material_dropdown_select_template$_expr_0 = currVal_0;
        }
      },
      destroyInternal$0: function() {
        this._material_dropdown_select_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    _ViewMaterialDropdownSelectComponent4_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent5(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent5: {
      "^": "AppView;0_appEl_0,0_NgIf_0_9,0_material_dropdown_select_template$_appEl_1,0_material_dropdown_select_template$_NgIf_1_9,0_material_dropdown_select_template$_appEl_2,0_material_dropdown_select_template$_NgIf_2_9,0_appEl_3,0_NgIf_3_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, t2;
        t1 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(0, null, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._appEl_0 = t2;
        this._NgIf_0_9 = new K.NgIf(new D.TemplateRef(t2, new Y._ViewMaterialDropdownSelectComponent5_build_closure(this)), t2, false);
        t2 = new V.ViewContainer(1, null, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment"));
        this._material_dropdown_select_template$_appEl_1 = t2;
        this._material_dropdown_select_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t2, new Y._ViewMaterialDropdownSelectComponent5_build_closure0(this)), t2, false);
        t2 = new V.ViewContainer(2, null, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment"));
        this._material_dropdown_select_template$_appEl_2 = t2;
        this._material_dropdown_select_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t2, new Y._ViewMaterialDropdownSelectComponent5_build_closure1(this)), t2, false);
        t1 = new V.ViewContainer(3, null, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment"));
        this._appEl_3 = t1;
        this._NgIf_3_9 = new K.NgIf(new D.TemplateRef(t1, new Y._ViewMaterialDropdownSelectComponent5_build_closure2(this)), t1, false);
        this.init$2([this._appEl_0, this._material_dropdown_select_template$_appEl_1, this._material_dropdown_select_template$_appEl_2, t1], null);
      },
      detectChangesInternal$0: function() {
        var _ctx, local_group, t1, t2;
        _ctx = this.ctx;
        local_group = H.assertSubtypeOfRuntimeType(this.parentView.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]);
        t1 = this._NgIf_0_9;
        if (local_group._labelFcn != null) {
          _ctx.labelFactory;
          t2 = true;
        } else
          t2 = false;
        t1.set$ngIf(t2);
        t2 = this._material_dropdown_select_template$_NgIf_1_9;
        _ctx.labelFactory;
        t2.set$ngIf(false);
        t2 = this._material_dropdown_select_template$_NgIf_2_9;
        t1 = local_group._base;
        t2.set$ngIf(t1.length !== 0);
        t2 = this._NgIf_3_9;
        t2.set$ngIf(t1.length === 0 && local_group._emptyLabelFcn != null);
        this._appEl_0.detectChangesInNestedViews$0();
        this._material_dropdown_select_template$_appEl_1.detectChangesInNestedViews$0();
        this._material_dropdown_select_template$_appEl_2.detectChangesInNestedViews$0();
        this._appEl_3.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._appEl_0.destroyNestedViews$0();
        this._material_dropdown_select_template$_appEl_1.destroyNestedViews$0();
        this._material_dropdown_select_template$_appEl_2.destroyNestedViews$0();
        this._appEl_3.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    _ViewMaterialDropdownSelectComponent5_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent6(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent5_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent7(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent5_build_closure1: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent8(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent5_build_closure2: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent10(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent6: {
      "^": "AppView;0_material_dropdown_select_template$_expr_0,0_material_dropdown_select_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var doc, _el_0, t1, t2;
        doc = document;
        _el_0 = doc.createElement("span");
        t1 = J.getInterceptor$x(_el_0);
        t1.setAttribute$2(_el_0, "label", "");
        this.addShimE$1(_el_0);
        t2 = doc.createTextNode("");
        this._material_dropdown_select_template$_text_1 = t2;
        t1.append$1(_el_0, t2);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var t1, currVal_0;
        t1 = H.assertSubtypeOfRuntimeType(this.parentView.parentView.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(this, 0)])._labelFcn;
        currVal_0 = Q.interpolate0(t1 != null ? t1.call$0() : null);
        t1 = this._material_dropdown_select_template$_expr_0;
        if (t1 !== currVal_0) {
          this._material_dropdown_select_template$_text_1.textContent = currVal_0;
          this._material_dropdown_select_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    _ViewMaterialDropdownSelectComponent7: {
      "^": "AppView;0_material_dropdown_select_template$_compView_0,0_appEl_0,0_material_dropdown_select_template$_DynamicComponent_0_8,0_material_dropdown_select_template$_expr_0,0_material_dropdown_select_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, _el_0, t2, t3;
        t1 = Q.ViewDynamicComponent0$(this, 0);
        this._material_dropdown_select_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        this.addShimC$1(_el_0);
        this._appEl_0 = new V.ViewContainer(0, null, this, _el_0);
        t1 = this.parentView.parentView.parentView.parentView.parentView;
        t1 = H.interceptedTypeCheck(t1.parentView.injectorGet$2(C.Type_SlowComponentLoader_qxe, t1.viewData.parentIndex), "$isSlowComponentLoader");
        t2 = this._material_dropdown_select_template$_compView_0;
        t3 = t2.viewData.ref;
        t3 = new Z.DynamicComponent(t1, this._appEl_0, t3, P.StreamController_StreamController(null, null, null, null, false, [D.ComponentRef,,]), false, false, false, false);
        this._material_dropdown_select_template$_DynamicComponent_0_8 = t3;
        t2.create$2(0, t3, []);
        this.init0$1(this._appEl_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, local_group, currVal_0, t1, changed;
        _ctx = this.ctx;
        local_group = H.assertSubtypeOfRuntimeType(this.parentView.parentView.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]);
        currVal_0 = _ctx.labelFactory.call$1(local_group);
        t1 = this._material_dropdown_select_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          this._material_dropdown_select_template$_DynamicComponent_0_8.set$componentFactory(currVal_0);
          this._material_dropdown_select_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        t1 = this._material_dropdown_select_template$_expr_1;
        if (t1 == null ? local_group != null : t1 !== local_group) {
          t1 = this._material_dropdown_select_template$_DynamicComponent_0_8;
          t1._dynamic_component$_value = local_group;
          t1._valueChanged = true;
          this._material_dropdown_select_template$_expr_1 = local_group;
          changed = true;
        }
        if (changed)
          this._material_dropdown_select_template$_DynamicComponent_0_8.ngAfterChanges$0();
        this._appEl_0.detectChangesInNestedViews$0();
        this._material_dropdown_select_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._appEl_0.destroyNestedViews$0();
        this._material_dropdown_select_template$_compView_0.destroy$0();
        var t1 = this._material_dropdown_select_template$_DynamicComponent_0_8;
        t1._disposeChildComponent$0();
        t1._viewContainerRef = null;
      },
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    _ViewMaterialDropdownSelectComponent8: {
      "^": "AppView;0_appEl_0,0_NgFor_0_9,0_material_dropdown_select_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1 = $.$get$_viewContainerAnchor();
        t1 = new V.ViewContainer(0, null, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._appEl_0 = t1;
        this._NgFor_0_9 = new R.NgFor(t1, new D.TemplateRef(t1, new Y._ViewMaterialDropdownSelectComponent8_build_closure(this)));
        this.init0$1(t1);
      },
      detectChangesInternal$0: function() {
        var local_group, t1;
        local_group = H.assertSubtypeOfRuntimeType(this.parentView.parentView.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]);
        t1 = this._material_dropdown_select_template$_expr_0;
        if (t1 == null ? local_group != null : t1 !== local_group) {
          this._NgFor_0_9.set$ngForOf(local_group);
          this._material_dropdown_select_template$_expr_0 = local_group;
        }
        this._NgFor_0_9.ngDoCheck$0();
        this._appEl_0.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._appEl_0.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    _ViewMaterialDropdownSelectComponent8_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new Y._ViewMaterialDropdownSelectComponent9(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null], P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [M.MaterialDropdownSelectComponent, t1]));
        t2.componentType = $.ViewMaterialDropdownSelectComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [M.MaterialDropdownSelectComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialDropdownSelectComponent9: {
      "^": "AppView;0_material_dropdown_select_template$_compView_0,0_ActiveItemDirective_0_5,0_KeyboardOnlyFocusIndicatorDirective_0_6,0_MaterialSelectDropdownItemComponent_0_7,0_material_dropdown_select_template$_expr_0,0_material_dropdown_select_template$_expr_1,0_material_dropdown_select_template$_expr_3,0_material_dropdown_select_template$_expr_4,0_material_dropdown_select_template$_expr_5,0_material_dropdown_select_template$_expr_6,0_material_dropdown_select_template$_expr_7,0_material_dropdown_select_template$_expr_8,0_material_dropdown_select_template$_expr_9,0_material_dropdown_select_template$_expr_10,0_material_dropdown_select_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      set$_material_dropdown_select_template$_compView_0: function(_compView_0) {
        this._material_dropdown_select_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewMaterialSelectDropdownItemComponent0", this.$ti, "$asViewMaterialSelectDropdownItemComponent0");
      },
      set$_MaterialSelectDropdownItemComponent_0_7: function(_MaterialSelectDropdownItemComponent_0_7) {
        this._MaterialSelectDropdownItemComponent_0_7 = H.assertSubtype(_MaterialSelectDropdownItemComponent_0_7, "$isMaterialSelectDropdownItemComponent", this.$ti, "$asMaterialSelectDropdownItemComponent");
      },
      build$0: function() {
        var t1, t2, t3, t4, t5, t6, t7;
        t1 = H.getTypeArgumentByIndex(this, 0);
        this.set$_material_dropdown_select_template$_compView_0(O.ViewMaterialSelectDropdownItemComponent0$(this, 0, t1));
        t2 = this._material_dropdown_select_template$_compView_0.rootEl;
        this._material_dropdown_select_template$_el_0 = t2;
        J.setAttribute$2$x(t2, "keyboardOnlyFocusIndicator", "");
        this.addShimC$1(this._material_dropdown_select_template$_el_0);
        t2 = this._material_dropdown_select_template$_el_0;
        t3 = this.parentView.parentView.parentView.parentView.parentView.parentView;
        t4 = t3.parentView;
        t5 = H.interceptedTypeCheck(t4.injectorGet$2(C.Type_DomService_2jN, t3.viewData.parentIndex), "$isDomService");
        t6 = H.interceptedTypeCheck(t4.injectorGet$3(C.Type_Modal_OjC, t3.viewData.parentIndex, null), "$isModal");
        H.interceptedTypeCheck(t3, "$isViewMaterialDropdownSelectComponent0");
        t7 = t3.get$_PopupRef_2_10();
        this._ActiveItemDirective_0_5 = new M.ActiveItemDirectiveNgCd(new B.ActiveItemDirective(t2, t5, t6, t7, false, false, false), false);
        t2 = this._material_dropdown_select_template$_el_0;
        t5 = H.interceptedTypeCheck(t4.injectorGet$2(C.Type_DomService_2jN, t3.viewData.parentIndex), "$isDomService");
        this._KeyboardOnlyFocusIndicatorDirective_0_6 = new O.KeyboardOnlyFocusIndicatorDirective(t2, t5, C._InteractionType_2);
        t1 = F.MaterialSelectDropdownItemComponent$(this._material_dropdown_select_template$_el_0, null, t3._MaterialPopupComponent_2_8, H.interceptedTypeCheck(t4.injectorGet$3(C.Type_ActivationHandler_Nm5, t3.viewData.parentIndex, null), "$isActivationHandler"), H.interceptedTypeCheck(t4.injectorGet$3(C.Type_IdGenerator_yLN, t3.viewData.parentIndex, null), "$isIdGenerator"), this._material_dropdown_select_template$_compView_0.viewData.ref, t1);
        this.set$_MaterialSelectDropdownItemComponent_0_7(t1);
        this._material_dropdown_select_template$_compView_0.create$2(0, this._MaterialSelectDropdownItemComponent_0_7, [C.List_empty]);
        t1 = W.Event;
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "mouseenter", this.eventHandler1$2$1(this.get$_handle_mouseenter_0_0(), t1, t1));
        t2 = this._material_dropdown_select_template$_el_0;
        t3 = this._ActiveItemDirective_0_5.instance;
        J.addEventListener$2$x(t2, "mouseleave", this.eventHandler0$1$1(t3.get$onMouseLeave(t3), t1));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "keydown", this.eventHandler1$2$1(this._KeyboardOnlyFocusIndicatorDirective_0_6.get$keydown(), t1, W.KeyboardEvent));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "blur", this.eventHandler0$1$1(this._KeyboardOnlyFocusIndicatorDirective_0_6.get$resetOutline(), t1));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "mousedown", this.eventHandler0$1$1(this._KeyboardOnlyFocusIndicatorDirective_0_6.get$onMouseInteraction(), t1));
        J.addEventListener$2$x(this._material_dropdown_select_template$_el_0, "click", this.eventHandler0$1$1(this._KeyboardOnlyFocusIndicatorDirective_0_6.get$onMouseInteraction(), t1));
        t3 = this._material_dropdown_select_template$_el_0;
        t2 = this._KeyboardOnlyFocusIndicatorDirective_0_6;
        J.addEventListener$2$x(t3, "focus", this.eventHandler1$2$1(t2.get$onFocus(t2), t1, t1));
        this.init0$1(this._material_dropdown_select_template$_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if ((token === C.Type_SelectionItem_uvp || token === C.Type_HasRenderer_wsa) && 0 === nodeIndex)
          return this._MaterialSelectDropdownItemComponent_0_7;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, local_popup, local_item, t1, currVal_0, t2, currVal_1, t3, currVal_5, currVal_7, currVal_9, currVal_10;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        local_popup = H.interceptedTypeCheck(this.parentView.parentView.parentView.parentView.parentView.parentView, "$isViewMaterialDropdownSelectComponent0")._MaterialPopupComponent_2_8;
        local_item = this.locals.$index(0, "$implicit");
        if (local_popup.showPopup) {
          t1 = _ctx.activeModel;
          H.assertSubtypeOfRuntimeType(local_item, H.getTypeArgumentByIndex(t1, 0));
          currVal_0 = J.$eq$(t1.get$activeItem(), local_item);
        } else
          currVal_0 = false;
        t1 = this._material_dropdown_select_template$_expr_0;
        if (t1 !== currVal_0) {
          this._ActiveItemDirective_0_5.instance.set$itemActive(currVal_0);
          this._material_dropdown_select_template$_expr_0 = currVal_0;
        }
        if (firstCheck)
          this._MaterialSelectDropdownItemComponent_0_7.tabbable = false;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.assertSubtypeOfRuntimeType(local_item, t1);
        _ctx.toString;
        t2 = H.getTypeArgumentByIndex(_ctx, 0);
        H.assertSubtypeOfRuntimeType(local_item, t2);
        currVal_1 = !E.Selectable__isOptionCheck(_ctx.get$options(_ctx), local_item, C.SelectableOption_0, true, t2);
        t3 = this._material_dropdown_select_template$_expr_1;
        if (t3 !== currVal_1) {
          this._MaterialSelectDropdownItemComponent_0_7.disabled = currVal_1;
          this._material_dropdown_select_template$_expr_1 = currVal_1;
        }
        currVal_5 = E.Selectable__isOptionCheck(_ctx.get$options(_ctx), local_item, C.SelectableOption_2, false, t2);
        t2 = this._material_dropdown_select_template$_expr_5;
        if (t2 !== currVal_5) {
          t2 = this._MaterialSelectDropdownItemComponent_0_7;
          t2.toString;
          t2._isHidden = E.getBool(currVal_5);
          this._material_dropdown_select_template$_expr_5 = currVal_5;
        }
        t2 = this._material_dropdown_select_template$_expr_6;
        if (t2 == null ? local_item != null : t2 !== local_item) {
          t2 = this._MaterialSelectDropdownItemComponent_0_7;
          t2.toString;
          t2.set$_material_select_item$_value(H.assertSubtypeOfRuntimeType(local_item, H.getTypeArgumentByIndex(t2, 0)));
          this._material_dropdown_select_template$_expr_6 = local_item;
        }
        currVal_7 = H.functionTypeCheck(_ctx.get$itemRenderer(), {func: 1, ret: P.String, args: [t1]});
        t1 = this._material_dropdown_select_template$_expr_7;
        if (t1 !== currVal_7) {
          t1 = this._MaterialSelectDropdownItemComponent_0_7;
          t1.toString;
          t1.set$_material_select_item$_itemRenderer(H.functionTypeCheck(currVal_7, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(t1, 0)]}));
          this._material_dropdown_select_template$_expr_7 = currVal_7;
        }
        _ctx.get$selection();
        t1 = this._material_dropdown_select_template$_expr_8;
        if (t1 !== true) {
          t1 = this._MaterialSelectDropdownItemComponent_0_7;
          t1.toString;
          t1._material_select_item$_deselectOnActivate = E.getBool(true);
          this._material_dropdown_select_template$_expr_8 = true;
        }
        currVal_9 = _ctx.get$selection();
        t1 = this._material_dropdown_select_template$_expr_9;
        if (t1 == null ? currVal_9 != null : t1 !== currVal_9) {
          this._MaterialSelectDropdownItemComponent_0_7.set$selection(currVal_9);
          this._material_dropdown_select_template$_expr_9 = currVal_9;
        }
        currVal_10 = _ctx.activeModel.id$1(0, local_item);
        t1 = this._material_dropdown_select_template$_expr_10;
        if (t1 != currVal_10) {
          this._MaterialSelectDropdownItemComponent_0_7._id = currVal_10;
          this._material_dropdown_select_template$_expr_10 = currVal_10;
        }
        this._ActiveItemDirective_0_5.detectHostChanges$2(this._material_dropdown_select_template$_compView_0, this._material_dropdown_select_template$_el_0);
        this._material_dropdown_select_template$_compView_0.detectHostChanges$1(firstCheck);
        this._material_dropdown_select_template$_compView_0.detectChanges$0();
        if (firstCheck) {
          t1 = this._ActiveItemDirective_0_5.instance;
          t1._initialized = true;
          t1._scrollIntoViewIfNecessary$0();
        }
      },
      destroyInternal$0: function() {
        this._material_dropdown_select_template$_compView_0.destroy$0();
        this._ActiveItemDirective_0_5.instance.ngOnDestroy$0();
        this._MaterialSelectDropdownItemComponent_0_7._disposer.dispose$0();
      },
      _handle_mouseenter_0_0$1: [function($$event) {
        var local_item = this.locals.$index(0, "$implicit");
        this.ctx.get$activeModel().activate$1(local_item);
        this._ActiveItemDirective_0_5.instance._hasHover = true;
      }, "call$1", "get$_handle_mouseenter_0_0", 4, 0, 2],
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    },
    _ViewMaterialDropdownSelectComponent10: {
      "^": "AppView;0_material_dropdown_select_template$_compView_0,0_KeyboardOnlyFocusIndicatorDirective_0_5,0_MaterialSelectDropdownItemComponent_0_6,0_material_dropdown_select_template$_expr_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      set$_material_dropdown_select_template$_compView_0: function(_compView_0) {
        this._material_dropdown_select_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewMaterialSelectDropdownItemComponent0", [P.String], "$asViewMaterialSelectDropdownItemComponent0");
      },
      set$_MaterialSelectDropdownItemComponent_0_6: function(_MaterialSelectDropdownItemComponent_0_6) {
        this._MaterialSelectDropdownItemComponent_0_6 = H.assertSubtype(_MaterialSelectDropdownItemComponent_0_6, "$isMaterialSelectDropdownItemComponent", [P.String], "$asMaterialSelectDropdownItemComponent");
      },
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5;
        t1 = P.String;
        this.set$_material_dropdown_select_template$_compView_0(O.ViewMaterialSelectDropdownItemComponent0$(this, 0, t1));
        _el_0 = this._material_dropdown_select_template$_compView_0.rootEl;
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "keyboardOnlyFocusIndicator", "");
        this.addShimC$1(_el_0);
        t3 = this.parentView.parentView.parentView.parentView.parentView;
        t4 = t3.parentView;
        t5 = H.interceptedTypeCheck(t4.injectorGet$2(C.Type_DomService_2jN, t3.viewData.parentIndex), "$isDomService");
        this._KeyboardOnlyFocusIndicatorDirective_0_5 = new O.KeyboardOnlyFocusIndicatorDirective(_el_0, t5, C._InteractionType_2);
        H.interceptedTypeCheck(t3, "$isViewMaterialDropdownSelectComponent0");
        t1 = F.MaterialSelectDropdownItemComponent$(_el_0, null, t3._MaterialPopupComponent_2_8, H.interceptedTypeCheck(t4.injectorGet$3(C.Type_ActivationHandler_Nm5, t3.viewData.parentIndex, null), "$isActivationHandler"), H.interceptedTypeCheck(t4.injectorGet$3(C.Type_IdGenerator_yLN, t3.viewData.parentIndex, null), "$isIdGenerator"), this._material_dropdown_select_template$_compView_0.viewData.ref, t1);
        this.set$_MaterialSelectDropdownItemComponent_0_6(t1);
        this._material_dropdown_select_template$_compView_0.create$2(0, this._MaterialSelectDropdownItemComponent_0_6, [C.List_empty]);
        t1 = W.Event;
        t2.addEventListener$2(_el_0, "keydown", this.eventHandler1$2$1(this._KeyboardOnlyFocusIndicatorDirective_0_5.get$keydown(), t1, W.KeyboardEvent));
        t2.addEventListener$2(_el_0, "blur", this.eventHandler0$1$1(this._KeyboardOnlyFocusIndicatorDirective_0_5.get$resetOutline(), t1));
        t2.addEventListener$2(_el_0, "mousedown", this.eventHandler0$1$1(this._KeyboardOnlyFocusIndicatorDirective_0_5.get$onMouseInteraction(), t1));
        t2.addEventListener$2(_el_0, "click", this.eventHandler0$1$1(this._KeyboardOnlyFocusIndicatorDirective_0_5.get$onMouseInteraction(), t1));
        t3 = this._KeyboardOnlyFocusIndicatorDirective_0_5;
        t2.addEventListener$2(_el_0, "focus", this.eventHandler1$2$1(t3.get$onFocus(t3), t1, t1));
        this.init0$1(_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if ((token === C.Type_SelectionItem_uvp || token === C.Type_HasRenderer_wsa) && 0 === nodeIndex)
          return this._MaterialSelectDropdownItemComponent_0_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, local_group, t1, t2;
        firstCheck = this.viewData._cdState === 0;
        local_group = H.assertSubtypeOfRuntimeType(this.parentView.parentView.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]);
        if (firstCheck) {
          t1 = this._MaterialSelectDropdownItemComponent_0_6;
          t1.disabled = true;
          t1.tabbable = false;
        }
        t1 = local_group._emptyLabelFcn;
        t1 = t1 != null ? t1.call$0() : null;
        t2 = this._material_dropdown_select_template$_expr_2;
        if (t2 != t1) {
          t2 = this._MaterialSelectDropdownItemComponent_0_6;
          t2.toString;
          t2.set$_material_select_item$_value(H.assertSubtypeOfRuntimeType(t1, H.getTypeArgumentByIndex(t2, 0)));
          this._material_dropdown_select_template$_expr_2 = t1;
        }
        this._material_dropdown_select_template$_compView_0.detectHostChanges$1(firstCheck);
        this._material_dropdown_select_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_dropdown_select_template$_compView_0.destroy$0();
        this._MaterialSelectDropdownItemComponent_0_6._disposer.dispose$0();
      },
      $asAppView: function($T) {
        return [[M.MaterialDropdownSelectComponent, $T]];
      }
    }
  }], ["", "package:angular_components/material_select/material_select_base.dart",, V, {
    "^": "",
    MaterialSelectBase: {
      "^": "SelectionContainer;",
      get$width: function(_) {
        return this._width;
      },
      get$itemRenderer: function() {
        var t1 = L.SelectionContainer.prototype.get$itemRenderer.call(this);
        return t1 == null ? G.has_renderer__defaultItemRenderer$closure() : t1;
      }
    }
  }], ["", "package:angular_components/material_select/material_select_dropdown_item.dart",, F, {
    "^": "",
    MaterialSelectDropdownItemComponent: {
      "^": "MaterialSelectItemComponent;_generatedId,0_id,_customAriaHandling,_disposer,_activationHandler,_cdRef,_dropdown,element,0_selectionChangeStreamSub,_isHidden,0_material_select_item$_value,_supportsMultiSelect,_hideCheckbox,_material_select_item$_itemRenderer,0componentRenderer,0factoryRenderer,_useCheckMarks,_selectOnActivate,_material_select_item$_deselectOnActivate,0_material_select_item$_selection,_selected,_closeOnActivate,_trigger,0_hostTabIndex,role,disabled,tabbable,HasTabIndex__tabIndex,_focus$_root,$ti",
      get$id: function(_) {
        var t1;
        if (this._customAriaHandling)
          t1 = null;
        else {
          t1 = this._id;
          if (t1 == null)
            t1 = this._generatedId;
        }
        return t1;
      },
      get$isSelected: function() {
        return B.MaterialSelectItemComponent.prototype.get$isSelected.call(this);
      },
      preventTextSelectionIfShiftKey$1: [function(e) {
        H.interceptedTypeCheck(e, "$isMouseEvent");
        if (e.shiftKey)
          e.preventDefault();
      }, "call$1", "get$preventTextSelectionIfShiftKey", 4, 0, 17],
      onLoadCustomComponent$1: [function(ref) {
        H.interceptedTypeCheck(ref, "$isComponentRef");
        this._customAriaHandling = false;
      }, "call$1", "get$onLoadCustomComponent", 4, 0, 39],
      static: {
        MaterialSelectDropdownItemComponent$: function(element, role, dropdown, activationHandler, idGenerator, cdRef, $T) {
          var t1, t2;
          t1 = (idGenerator == null ? new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid(), 0) : idGenerator).nextId$0();
          t2 = "option";
          t2 = new F.MaterialSelectDropdownItemComponent(t1, false, new R.Disposer(true, false), activationHandler, cdRef, dropdown, element, false, false, false, G.has_renderer___nullRenderer$closure(), false, true, true, false, true, new P._SyncBroadcastStreamController(null, null, 0, [W.UIEvent]), t2, false, true, null, element, [$T]);
          t2.MaterialSelectItemComponent$5(element, dropdown, activationHandler, cdRef, "option", $T);
          t2.set$_material_select_item$_itemRenderer(H.functionTypeCheck(G.has_renderer__defaultItemRenderer$closure(), {func: 1, ret: P.String, args: [$T]}));
          return t2;
        }
      }
    }
  }], ["asset_angular_components_lib_material_select_material_select_dropdown_item.scss.css.shim.dart", "package:angular_components/material_select/material_select_dropdown_item.scss.css.shim.dart",, B, {}], ["", "package:angular_components/material_select/material_select_dropdown_item.template.dart",, O, {
    "^": "",
    ViewMaterialSelectDropdownItemComponent0: {
      "^": "AppView;0_material_select_dropdown_item_template$_appEl_2,0_material_select_dropdown_item_template$_NgIf_2_9,0_material_select_dropdown_item_template$_appEl_4,0_material_select_dropdown_item_template$_NgIf_4_9,0_appEl_6,0_NgIf_6_9,_material_select_dropdown_item_template$_expr_0,0_material_select_dropdown_item_template$_expr_4,0_material_select_dropdown_item_template$_expr_5,0_material_select_dropdown_item_template$_expr_6,0_material_select_dropdown_item_template$_expr_7,0_material_select_dropdown_item_template$_expr_8,0_material_select_dropdown_item_template$_expr_9,0_material_select_dropdown_item_template$_expr_10,0_expr_11,0_expr_12,0_expr_13,0_expr_14,0_anchor_0,0_el_0_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, t1, t2, t3, _anchor_2, t4, _anchor_4, _anchor_6;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        t1 = $.$get$_viewContainerAnchor();
        t2 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        this._anchor_0 = t2;
        t3 = J.getInterceptor$x(parentRenderNode);
        t3.append$1(parentRenderNode, t2);
        t2 = document;
        t3.append$1(parentRenderNode, t2.createTextNode(" "));
        _anchor_2 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t3.append$1(parentRenderNode, _anchor_2);
        t4 = new V.ViewContainer(2, null, this, _anchor_2);
        this._material_select_dropdown_item_template$_appEl_2 = t4;
        this._material_select_dropdown_item_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t4, new O.ViewMaterialSelectDropdownItemComponent0_build_closure(this)), t4, false);
        t3.append$1(parentRenderNode, t2.createTextNode("\n \n"));
        _anchor_4 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t3.append$1(parentRenderNode, _anchor_4);
        t4 = new V.ViewContainer(4, null, this, _anchor_4);
        this._material_select_dropdown_item_template$_appEl_4 = t4;
        this._material_select_dropdown_item_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t4, new O.ViewMaterialSelectDropdownItemComponent0_build_closure0(this)), t4, false);
        t3.append$1(parentRenderNode, t2.createTextNode("\n "));
        _anchor_6 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t3.append$1(parentRenderNode, _anchor_6);
        t3 = new V.ViewContainer(6, null, this, _anchor_6);
        this._appEl_6 = t3;
        this._NgIf_6_9 = new K.NgIf(new D.TemplateRef(t3, new O.ViewMaterialSelectDropdownItemComponent0_build_closure1(this)), t3, false);
        this.project$2(parentRenderNode, 0);
        this.init$2([], null);
        t3 = W.Event;
        t1 = W.MouseEvent;
        t2 = J.getInterceptor$x(_rootEl);
        t2.addEventListener$2(_rootEl, "click", this.eventHandler1$2$1(_ctx.get$handleClick(), t3, t1));
        t2.addEventListener$2(_rootEl, "keypress", this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t3, W.KeyboardEvent));
        t2.addEventListener$2(_rootEl, "mousedown", this.eventHandler1$2$1(_ctx.get$preventTextSelectionIfShiftKey(), t3, t1));
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, t2;
        _ctx = this.ctx;
        currVal_0 = !_ctx._supportsMultiSelect && B.MaterialSelectItemComponent.prototype.get$isSelected.call(_ctx);
        t1 = this._material_select_dropdown_item_template$_expr_0;
        if (t1 !== currVal_0) {
          if (currVal_0) {
            t1 = document.createElement("div");
            H.interceptedTypeCheck(t1, "$isDivElement");
            this._el_0_0 = t1;
            t1.className = "selected-accent mixin";
            this.addShimC$1(t1);
            t1 = this._anchor_0;
            t2 = [W.Node];
            t2 = H.assertSubtype(H.setRuntimeTypeInfo([this._el_0_0], t2), "$isList", t2, "$asList");
            S._moveNodesAfterSibling(t1, t2);
            t1 = this.viewData.rootNodesOrViewContainers;
            (t1 && C.JSArray_methods).addAll$1(t1, t2);
          } else
            this.removeInlinedNodes$2(H.setRuntimeTypeInfo([this._el_0_0], [W.Node]), true);
          this._material_select_dropdown_item_template$_expr_0 = currVal_0;
        }
        t1 = this._material_select_dropdown_item_template$_NgIf_2_9;
        if (_ctx._supportsMultiSelect) {
          _ctx._hideCheckbox;
          t2 = true;
        } else
          t2 = false;
        t1.set$ngIf(t2);
        this._material_select_dropdown_item_template$_NgIf_4_9.set$ngIf(_ctx.get$valueLabel() != null);
        t2 = this._NgIf_6_9;
        t2.set$ngIf(_ctx.get$componentType() != null || _ctx.get$componentFactory() != null);
        this._material_select_dropdown_item_template$_appEl_2.detectChangesInNestedViews$0();
        this._material_select_dropdown_item_template$_appEl_4.detectChangesInNestedViews$0();
        this._appEl_6.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._material_select_dropdown_item_template$_appEl_2.destroyNestedViews$0();
        this._material_select_dropdown_item_template$_appEl_4.destroyNestedViews$0();
        this._appEl_6.destroyNestedViews$0();
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_4, t1, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, t2;
        currVal_4 = J.get$tabIndex$x(this.ctx);
        t1 = this._material_select_dropdown_item_template$_expr_4;
        if (t1 != currVal_4) {
          this.rootEl.tabIndex = currVal_4;
          this._material_select_dropdown_item_template$_expr_4 = currVal_4;
        }
        currVal_5 = this.ctx.get$ariaRole();
        t1 = this._material_select_dropdown_item_template$_expr_5;
        if (t1 != currVal_5) {
          this.setAttr$3(this.rootEl, "role", currVal_5);
          this._material_select_dropdown_item_template$_expr_5 = currVal_5;
        }
        currVal_6 = this.ctx.get$disabledStr();
        t1 = this._material_select_dropdown_item_template$_expr_6;
        if (t1 !== currVal_6) {
          this.setAttr$3(this.rootEl, "aria-disabled", currVal_6);
          this._material_select_dropdown_item_template$_expr_6 = currVal_6;
        }
        currVal_7 = J.get$disabled$z(this.ctx);
        t1 = this._material_select_dropdown_item_template$_expr_7;
        if (t1 !== currVal_7) {
          this.updateElemClass$3(this.rootEl, "is-disabled", currVal_7);
          this._material_select_dropdown_item_template$_expr_7 = currVal_7;
        }
        currVal_8 = J.get$disabled$z(this.ctx);
        t1 = this._material_select_dropdown_item_template$_expr_8;
        if (t1 !== currVal_8) {
          this.updateElemClass$3(this.rootEl, "disabled", currVal_8);
          this._material_select_dropdown_item_template$_expr_8 = currVal_8;
        }
        currVal_9 = this.ctx.get$isHidden();
        t1 = this._material_select_dropdown_item_template$_expr_9;
        if (t1 !== currVal_9) {
          this.updateElemClass$3(this.rootEl, "hidden", currVal_9);
          this._material_select_dropdown_item_template$_expr_9 = currVal_9;
        }
        currVal_10 = this.ctx.get$supportsMultiSelect();
        t1 = this._material_select_dropdown_item_template$_expr_10;
        if (t1 !== currVal_10) {
          this.updateElemClass$3(this.rootEl, "multiselect", currVal_10);
          this._material_select_dropdown_item_template$_expr_10 = currVal_10;
        }
        currVal_11 = this.ctx.get$isAriaChecked();
        t1 = this._expr_11;
        if (t1 != currVal_11) {
          t1 = this.rootEl;
          this.setAttr$3(t1, "aria-checked", currVal_11 == null ? null : String(currVal_11));
          this._expr_11 = currVal_11;
        }
        currVal_12 = this.ctx.get$isSelected();
        t1 = this._expr_12;
        if (t1 !== currVal_12) {
          this.updateElemClass$3(this.rootEl, "selected", currVal_12);
          this._expr_12 = currVal_12;
        }
        currVal_13 = J.get$id$x(this.ctx);
        t1 = this._expr_13;
        if (t1 != currVal_13) {
          this.setAttr$3(this.rootEl, "id", currVal_13);
          this._expr_13 = currVal_13;
        }
        currVal_14 = this.ctx.get$isSelected();
        t1 = this._expr_14;
        if (t1 !== currVal_14) {
          t1 = this.rootEl;
          t2 = String(currVal_14);
          this.setAttr$3(t1, "aria-selected", t2);
          this._expr_14 = currVal_14;
        }
      },
      $asAppView: function($T) {
        return [[F.MaterialSelectDropdownItemComponent, $T]];
      },
      static: {
        ViewMaterialSelectDropdownItemComponent0$: function(parentView, parentIndex, $T) {
          var t1, t2;
          t1 = new O.ViewMaterialSelectDropdownItemComponent0(false, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [$T]);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, parentIndex, [F.MaterialSelectDropdownItemComponent, $T]));
          t2 = document.createElement("material-select-dropdown-item");
          H.interceptedTypeCheck(t2, "$isHtmlElement");
          t1.rootEl = t2;
          t2.className = "item";
          t2.tabIndex = 0;
          t2 = $.ViewMaterialSelectDropdownItemComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialSelectDropdownItemComponent());
            $.ViewMaterialSelectDropdownItemComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    ViewMaterialSelectDropdownItemComponent0_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new O._ViewMaterialSelectDropdownItemComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [F.MaterialSelectDropdownItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectDropdownItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [F.MaterialSelectDropdownItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    ViewMaterialSelectDropdownItemComponent0_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new O._ViewMaterialSelectDropdownItemComponent6(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [F.MaterialSelectDropdownItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectDropdownItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [F.MaterialSelectDropdownItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    ViewMaterialSelectDropdownItemComponent0_build_closure1: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new O._ViewMaterialSelectDropdownItemComponent7(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [F.MaterialSelectDropdownItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectDropdownItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [F.MaterialSelectDropdownItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialSelectDropdownItemComponent2: {
      "^": "AppView;0_material_select_dropdown_item_template$_appEl_0,0_material_select_dropdown_item_template$_NgIf_0_9,0_material_select_dropdown_item_template$_appEl_2,0_material_select_dropdown_item_template$_NgIf_2_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, t2, _text_1;
        t1 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(0, null, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._material_select_dropdown_item_template$_appEl_0 = t2;
        this._material_select_dropdown_item_template$_NgIf_0_9 = new K.NgIf(new D.TemplateRef(t2, new O._ViewMaterialSelectDropdownItemComponent2_build_closure(this)), t2, false);
        _text_1 = document.createTextNode("  ");
        t1 = new V.ViewContainer(2, null, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment"));
        this._material_select_dropdown_item_template$_appEl_2 = t1;
        this._material_select_dropdown_item_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, new O._ViewMaterialSelectDropdownItemComponent2_build_closure0(this)), t1, false);
        this.init$2([this._material_select_dropdown_item_template$_appEl_0, _text_1, t1], null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1;
        _ctx = this.ctx;
        t1 = this._material_select_dropdown_item_template$_NgIf_0_9;
        _ctx._useCheckMarks;
        t1.set$ngIf(true);
        this._material_select_dropdown_item_template$_NgIf_2_9.set$ngIf(false);
        this._material_select_dropdown_item_template$_appEl_0.detectChangesInNestedViews$0();
        this._material_select_dropdown_item_template$_appEl_2.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._material_select_dropdown_item_template$_appEl_0.destroyNestedViews$0();
        this._material_select_dropdown_item_template$_appEl_2.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[F.MaterialSelectDropdownItemComponent, $T]];
      }
    },
    _ViewMaterialSelectDropdownItemComponent2_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new O._ViewMaterialSelectDropdownItemComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [F.MaterialSelectDropdownItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectDropdownItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [F.MaterialSelectDropdownItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialSelectDropdownItemComponent2_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new O._ViewMaterialSelectDropdownItemComponent4(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [F.MaterialSelectDropdownItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectDropdownItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [F.MaterialSelectDropdownItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialSelectDropdownItemComponent3: {
      "^": "AppView;0_material_select_dropdown_item_template$_compView_0,0_MaterialCheckboxComponent_0_5,0_material_select_dropdown_item_template$_expr_0,0_material_select_dropdown_item_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, _el_0;
        t1 = G.ViewMaterialCheckboxComponent0$(this, 0);
        this._material_select_dropdown_item_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.tabIndex = -1;
        this.addShimC$1(_el_0);
        t1 = B.MaterialCheckboxComponent$(_el_0, this._material_select_dropdown_item_template$_compView_0.viewData.ref, null, "-1", null);
        this._MaterialCheckboxComponent_0_5 = t1;
        this._material_select_dropdown_item_template$_compView_0.create$2(0, t1, [C.List_empty]);
        this.init0$1(_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_HasDisabled_qzc && 0 === nodeIndex)
          return this._MaterialCheckboxComponent_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, t2, t3, changed, currVal_1;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        t2 = _ctx.disabled;
        t3 = this._material_select_dropdown_item_template$_expr_0;
        if (t3 != t2) {
          this._MaterialCheckboxComponent_0_5.disabled = t2;
          this._material_select_dropdown_item_template$_expr_0 = t2;
          changed = true;
        } else
          changed = false;
        currVal_1 = B.MaterialSelectItemComponent.prototype.get$isSelected.call(_ctx);
        t2 = this._material_select_dropdown_item_template$_expr_1;
        if (t2 !== currVal_1) {
          this._MaterialCheckboxComponent_0_5.set$checked(0, currVal_1);
          this._material_select_dropdown_item_template$_expr_1 = currVal_1;
          changed = true;
        }
        if (changed)
          this._material_select_dropdown_item_template$_compView_0.viewData.set$cdMode(1);
        this._material_select_dropdown_item_template$_compView_0.detectHostChanges$1(t1 === 0);
        this._material_select_dropdown_item_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_select_dropdown_item_template$_compView_0.destroy$0();
        this._MaterialCheckboxComponent_0_5.toString;
      },
      $asAppView: function($T) {
        return [[F.MaterialSelectDropdownItemComponent, $T]];
      }
    },
    _ViewMaterialSelectDropdownItemComponent4: {
      "^": "AppView;0_material_select_dropdown_item_template$_appEl_1,0_material_select_dropdown_item_template$_NgIf_1_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var _el_0, t1, _anchor_1;
        _el_0 = document.createElement("span");
        _el_0.className = "check-container";
        this.addShimE$1(_el_0);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(_el_0, _anchor_1);
        t1 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._material_select_dropdown_item_template$_appEl_1 = t1;
        this._material_select_dropdown_item_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new O._ViewMaterialSelectDropdownItemComponent4_build_closure(this)), t1, false);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx = this.ctx;
        this._material_select_dropdown_item_template$_NgIf_1_9.set$ngIf(B.MaterialSelectItemComponent.prototype.get$isSelected.call(_ctx));
        this._material_select_dropdown_item_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._material_select_dropdown_item_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[F.MaterialSelectDropdownItemComponent, $T]];
      }
    },
    _ViewMaterialSelectDropdownItemComponent4_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new O._ViewMaterialSelectDropdownItemComponent5(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [F.MaterialSelectDropdownItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectDropdownItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [F.MaterialSelectDropdownItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialSelectDropdownItemComponent5: {
      "^": "AppView;0_material_select_dropdown_item_template$_compView_0,0_GlyphComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, _el_0;
        t1 = M.ViewGlyphComponent0$(this, 0);
        this._material_select_dropdown_item_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(_el_0);
        t1.setAttribute$2(_el_0, "baseline", "");
        _el_0.className = "check";
        t1.setAttribute$2(_el_0, "icon", "check");
        this.addShimC$1(_el_0);
        t1 = new L.GlyphComponent(true, _el_0);
        this._GlyphComponent_0_5 = t1;
        this._material_select_dropdown_item_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        if (this.viewData._cdState === 0) {
          this._GlyphComponent_0_5.set$icon(0, "check");
          var changed = true;
        } else
          changed = false;
        if (changed)
          this._material_select_dropdown_item_template$_compView_0.viewData.set$cdMode(1);
        this._material_select_dropdown_item_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_select_dropdown_item_template$_compView_0.destroy$0();
      },
      $asAppView: function($T) {
        return [[F.MaterialSelectDropdownItemComponent, $T]];
      }
    },
    _ViewMaterialSelectDropdownItemComponent6: {
      "^": "AppView;0_material_select_dropdown_item_template$_expr_0,0_material_select_dropdown_item_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var doc, _el_0, t1;
        doc = document;
        _el_0 = doc.createElement("span");
        _el_0.className = "label";
        this.addShimE$1(_el_0);
        t1 = doc.createTextNode("");
        this._material_select_dropdown_item_template$_text_1 = t1;
        J.append$1$x(_el_0, t1);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = Q.interpolate0(this.ctx.get$valueLabel());
        t1 = this._material_select_dropdown_item_template$_expr_0;
        if (t1 !== currVal_0) {
          this._material_select_dropdown_item_template$_text_1.textContent = currVal_0;
          this._material_select_dropdown_item_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function($T) {
        return [[F.MaterialSelectDropdownItemComponent, $T]];
      }
    },
    _ViewMaterialSelectDropdownItemComponent7: {
      "^": "AppView;0_material_select_dropdown_item_template$_compView_0,0_material_select_dropdown_item_template$_appEl_0,0_DynamicComponent_0_8,0_material_select_dropdown_item_template$_expr_0,0_material_select_dropdown_item_template$_expr_1,0_material_select_dropdown_item_template$_expr_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, subscription_0;
        t1 = Q.ViewDynamicComponent0$(this, 0);
        this._material_select_dropdown_item_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "dynamic-item";
        this.addShimC$1(_el_0);
        this._material_select_dropdown_item_template$_appEl_0 = new V.ViewContainer(0, null, this, _el_0);
        t1 = H.interceptedTypeCheck(this.parentView.injectorGet$2(C.Type_SlowComponentLoader_qxe, this.viewData.parentIndex), "$isSlowComponentLoader");
        t2 = this._material_select_dropdown_item_template$_compView_0;
        t3 = t2.viewData.ref;
        t4 = [D.ComponentRef,,];
        t3 = new Z.DynamicComponent(t1, this._material_select_dropdown_item_template$_appEl_0, t3, P.StreamController_StreamController(null, null, null, null, false, t4), false, false, false, false);
        this._DynamicComponent_0_8 = t3;
        t2.create$2(0, t3, []);
        t1 = this._DynamicComponent_0_8._onLoadController;
        subscription_0 = new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.ctx.get$onLoadCustomComponent(), t4, t4));
        this.init$2([this._material_select_dropdown_item_template$_appEl_0], [subscription_0]);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, changed, currVal_1, currVal_2;
        _ctx = this.ctx;
        currVal_0 = _ctx.get$componentType();
        t1 = this._material_select_dropdown_item_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          t1 = this._DynamicComponent_0_8;
          if (!J.$eq$(t1._componentType, currVal_0))
            t1._typeChanged = true;
          t1._componentType = currVal_0;
          this._material_select_dropdown_item_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        currVal_1 = _ctx.get$componentFactory();
        t1 = this._material_select_dropdown_item_template$_expr_1;
        if (t1 == null ? currVal_1 != null : t1 !== currVal_1) {
          this._DynamicComponent_0_8.set$componentFactory(currVal_1);
          this._material_select_dropdown_item_template$_expr_1 = currVal_1;
          changed = true;
        }
        currVal_2 = _ctx._material_select_item$_value;
        t1 = this._material_select_dropdown_item_template$_expr_2;
        if (t1 == null ? currVal_2 != null : t1 !== currVal_2) {
          t1 = this._DynamicComponent_0_8;
          t1._dynamic_component$_value = currVal_2;
          t1._valueChanged = true;
          this._material_select_dropdown_item_template$_expr_2 = currVal_2;
          changed = true;
        }
        if (changed)
          this._DynamicComponent_0_8.ngAfterChanges$0();
        this._material_select_dropdown_item_template$_appEl_0.detectChangesInNestedViews$0();
        this._material_select_dropdown_item_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_select_dropdown_item_template$_appEl_0.destroyNestedViews$0();
        this._material_select_dropdown_item_template$_compView_0.destroy$0();
        var t1 = this._DynamicComponent_0_8;
        t1._disposeChildComponent$0();
        t1._viewContainerRef = null;
      },
      $asAppView: function($T) {
        return [[F.MaterialSelectDropdownItemComponent, $T]];
      }
    }
  }], ["", "package:angular_components/material_select/material_select_item.dart",, B, {
    "^": "",
    MaterialSelectItemComponent: {
      "^": "ButtonDirective;0_material_select_item$_value,_material_select_item$_itemRenderer,0_material_select_item$_selection,$ti",
      set$_material_select_item$_value: function(_value) {
        this._material_select_item$_value = H.assertSubtypeOfRuntimeType(_value, H.getTypeArgumentByIndex(this, 0));
      },
      set$_material_select_item$_itemRenderer: function(_itemRenderer) {
        this._material_select_item$_itemRenderer = H.functionTypeCheck(_itemRenderer, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(this, 0)]});
      },
      set$_material_select_item$_selection: function(_selection) {
        this._material_select_item$_selection = H.assertSubtype(_selection, "$isSelectionModel", this.$ti, "$asSelectionModel");
      },
      MaterialSelectItemComponent$5: function(element, _dropdown, _activationHandler, _cdRef, role, $T) {
        var t1, t2;
        t1 = this._disposer;
        t2 = this._trigger;
        t1.addStreamSubscription$1$1(new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.get$handleActivate()), W.UIEvent);
        t1.addFunction$1(new B.MaterialSelectItemComponent_closure(this));
      },
      get$disabled: function(_) {
        return this.disabled;
      },
      get$isHidden: function() {
        return this._isHidden;
      },
      get$supportsMultiSelect: function() {
        return this._supportsMultiSelect;
      },
      get$itemRenderer: function() {
        return this._material_select_item$_itemRenderer;
      },
      get$valueLabel: function() {
        var t1, t2;
        t1 = this._material_select_item$_value;
        if (t1 == null)
          return;
        else {
          t2 = this._material_select_item$_itemRenderer !== G.has_renderer___nullRenderer$closure();
          if (t2)
            return this.itemRenderer$1(t1);
        }
        return;
      },
      set$selection: function(sel) {
        var t1 = this.$ti;
        H.assertSubtype(sel, "$isSelectionModel", t1, "$asSelectionModel");
        this.set$_material_select_item$_selection(sel);
        this._supportsMultiSelect = H.checkSubtype(sel, "$isMultiSelectionModel", t1, "$asMultiSelectionModel");
        t1 = this._selectionChangeStreamSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        this._selectionChangeStreamSub = sel.get$selectionChanges().listen$1(new B.MaterialSelectItemComponent_selection_closure(this));
      },
      get$componentType: function() {
        return;
      },
      get$componentFactory: function() {
        return;
      },
      get$isAriaChecked: function() {
        return !this._supportsMultiSelect || false ? null : B.MaterialSelectItemComponent.prototype.get$isSelected.call(this);
      },
      get$isSelected: function() {
        var t1, t2;
        t1 = this._selected;
        if (!t1) {
          t1 = this._material_select_item$_value;
          if (t1 != null) {
            t2 = this._material_select_item$_selection;
            t1 = t2 == null ? null : t2.isSelected$1(t1);
            if (t1 == null)
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = true;
        return t1;
      },
      handleActivate$1: [function(e) {
        var hasCheckbox, t1;
        H.interceptedTypeCheck(e, "$isUIEvent");
        hasCheckbox = this._supportsMultiSelect && true;
        if (!hasCheckbox) {
          t1 = this._dropdown;
          if (!(t1 == null))
            t1.set$visible(0, false);
        }
        t1 = this._activationHandler;
        t1 = t1 == null ? null : t1.handle$2(e, this._material_select_item$_value);
        if (t1 == null ? false : t1)
          return;
        t1 = this._material_select_item$_selection != null && this._material_select_item$_value != null;
        if (t1)
          if (!this._material_select_item$_selection.isSelected$1(this._material_select_item$_value))
            this._material_select_item$_selection.select$1(0, this._material_select_item$_value);
          else if (this._material_select_item$_deselectOnActivate)
            this._material_select_item$_selection.deselect$1(this._material_select_item$_value);
      }, "call$1", "get$handleActivate", 4, 0, 18, 6],
      onLoadCustomComponent$1: [function(ref) {
        H.interceptedTypeCheck(ref, "$isComponentRef");
      }, "call$1", "get$onLoadCustomComponent", 4, 0, 39],
      itemRenderer$1: function(arg0) {
        return this.get$itemRenderer().call$1(arg0);
      }
    },
    MaterialSelectItemComponent_closure: {
      "^": "Closure:14;$this",
      call$0: function() {
        var t1 = this.$this._selectionChangeStreamSub;
        return t1 == null ? null : t1.cancel$0(0);
      }
    },
    MaterialSelectItemComponent_selection_closure: {
      "^": "Closure;$this",
      call$1: [function(_) {
        var t1 = this.$this;
        H.assertSubtype(_, "$isList", [[Z.SelectionChangeRecord, H.getTypeArgumentByIndex(t1, 0)]], "$asList");
        t1._cdRef.appView.markPathToRootAsCheckOnce$0();
      }, null, null, 4, 0, null, 0, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P.List, [Z.SelectionChangeRecord, H.getTypeArgumentByIndex(this.$this, 0)]]]};
      }
    }
  }], ["", "package:angular_components/material_select/shift_click_selection.dart",, X, {
    "^": "",
    ShiftClickSelectionMixin: {
      "^": "Object;ShiftClickSelectionMixin__pivot,$ti",
      set$_pivot: function(_pivot) {
        this.ShiftClickSelectionMixin__pivot = H.assertSubtypeOfRuntimeType(_pivot, H.getTypeArgumentByIndex(this, 0));
      },
      handle$2: function($event, activatedValue) {
        var t1, toggleSelection, optionValues, clickedIndex, pivotIndex;
        if (!J.getInterceptor$(this.get$selection()).$isMultiSelectionModel || !J.getInterceptor$($event).$isMouseEvent)
          return false;
        t1 = H.getTypeArgumentByIndex(this, 0);
        activatedValue = H.assertSubtypeOfRuntimeType(H.subtypeOfRuntimeTypeCast(activatedValue, t1), t1);
        if (this.get$selection().isSelected$1(activatedValue))
          toggleSelection = this.get$selection().get$deselect();
        else {
          t1 = this.get$selection();
          toggleSelection = t1.get$select(t1);
        }
        if (this.ShiftClickSelectionMixin__pivot == null || !$event.shiftKey)
          toggleSelection.call$1(activatedValue);
        else {
          optionValues = this.get$options(this)._flattenedList;
          clickedIndex = (optionValues && C.JSArray_methods).indexOf$1(optionValues, activatedValue);
          pivotIndex = C.JSArray_methods.indexOf$1(optionValues, this.ShiftClickSelectionMixin__pivot);
          if (pivotIndex === -1)
            H.throwExpression(P.StateError$("pivot item is no longer in the model: " + H.S(this.ShiftClickSelectionMixin__pivot)));
          H.SubListIterable$(optionValues, H.intTypeCheck(Math.min(pivotIndex, clickedIndex)), null, H.getTypeArgumentByIndex(optionValues, 0)).take$1(0, Math.abs(pivotIndex - clickedIndex) + 1).forEach$1(0, toggleSelection);
        }
        this.set$_pivot(activatedValue);
        return true;
      }
    }
  }], ["", "package:angular_components/mixins/button_wrapper.dart",, U, {
    "^": "",
    MaterialButtonWrapper: {
      "^": "Object;disabled:MaterialButtonWrapper_disabled>",
      get$buttonIcon: function() {
        var t1, t2;
        t1 = this.MaterialButtonWrapper_icon;
        if (t1 != null)
          return t1;
        t1 = this.MaterialButtonWrapper__buttonIcon;
        if (t1 == null) {
          t2 = this.MaterialButtonWrapper_iconName;
          t2 = t2 != null && t2.length !== 0;
        } else
          t2 = false;
        if (t2) {
          t1 = new L.Icon(this.MaterialButtonWrapper_iconName);
          this.MaterialButtonWrapper__buttonIcon = t1;
        }
        return t1;
      }
    }
  }], ["", "package:angular_components/mixins/focusable_mixin.dart",, O, {
    "^": "",
    FocusableMixin: {
      "^": "Object;",
      get$onFocus: function(_) {
        var t1 = this.FocusableMixin__onFocus;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      focus$0: function(_) {
        var t1 = this.FocusableMixin__focusable;
        if (t1 == null)
          this.FocusableMixin__focusPending = true;
        else
          t1.focus$0(0);
      },
      handleFocus$1: function($event) {
        this.FocusableMixin__onFocus.add$1(0, $event);
      }
    }
  }], ["", "package:angular_components/mixins/has_tab_index.dart",, B, {
    "^": "",
    HasTabIndex: {
      "^": "Object;",
      get$tabIndex: function(_) {
        var t1 = this._computeTabIndex$0();
        return t1;
      },
      _computeTabIndex$0: function() {
        if (this.get$disabled(this))
          return "-1";
        else {
          var t1 = this.tabbable && !this.get$disabled(this) ? this._hostTabIndex : "-1";
          if (!(t1 == null || C.JSString_methods.trim$0(t1).length === 0))
            return this.tabbable && !this.get$disabled(this) ? this._hostTabIndex : "-1";
          else
            return "0";
        }
      }
    }
  }], ["", "package:angular_components/mixins/material_dropdown_base.dart",, M, {
    "^": "",
    DropdownHandle: {
      "^": "Object;"
    },
    MaterialDropdownBase: {
      "^": "Object;",
      set$visible: ["super$MaterialDropdownBase$visible", function(_, value) {
        if (value && this.MaterialDropdownBase__visible !== true)
          this.MaterialDropdownBase__contentVisible.add$1(0, true);
        this.MaterialDropdownBase__visible = value;
      }],
      onVisible$1: [function(vis) {
        H.boolTypeCheck(vis);
        this.MaterialDropdownBase__visibleStream.add$1(0, vis);
        this.set$visible(0, vis);
        if (!vis)
          this.MaterialDropdownBase__contentVisible.add$1(0, false);
      }, "call$1", "get$onVisible", 4, 0, 35],
      open$0: [function(_) {
        this.set$visible(0, true);
      }, "call$0", "get$open", 1, 0, 1]
    }
  }], ["", "package:angular_components/mixins/selection_input_adapter.dart",, K, {
    "^": "",
    SelectionInputAdapter: {
      "^": "Object;$ti",
      emitSelectionChange$0: function() {
        return;
      },
      set$selectionInput: function(value) {
        var t1, t2, t3, t4, t5;
        t1 = H.getTypeArgumentByIndex(this, 0);
        if (H.checkSubtype(value, "$isSelectionModel", [t1], "$asSelectionModel")) {
          this.set$selection(value);
          return;
        }
        if (this.get$selection() == null) {
          t2 = H.setRuntimeTypeInfo([], [t1]);
          t3 = Y.ChangeRecord;
          t4 = new H.TypeImpl(t3).get$_typeName();
          t5 = C.Type_dynamic_0Rz.get$_typeName();
          if (t4 !== t5)
            t4 = new H.TypeImpl(t3).get$_typeName() === C.Type_ChangeRecord_INA.get$_typeName();
          else
            t4 = true;
          this.set$selection(new Z._SingleSelectionModelImpl(Z.selection_model___defaultKeyProvider$closure(), t2, null, null, new B.ChangeNotifier(false, [t3]), t4, [t1]));
        }
        this.get$selection().select$1(0, H.assertSubtypeOfRuntimeType(value, t1));
      },
      set$optionsInput: ["super$SelectionInputAdapter$optionsInput", function(value) {
        var t1, t2, t3;
        t1 = H.getTypeArgumentByIndex(this, 0);
        t2 = [t1];
        t3 = H.checkSubtype(value, "$isSelectionOptions", t2, "$asSelectionOptions");
        if (t3)
          this.set$options(0, H.assertSubtype(value, "$isSelectionOptions", t2, "$asSelectionOptions"));
        else if (H.checkSubtype(value, "$isList", [t1], "$asList")) {
          t2 = this.get$itemRenderer();
          t3 = H.setRuntimeTypeInfo([new F.OptionGroup(null, null, value, [t1])], [[F.OptionGroup, t1]]);
          t1 = new R.StringSelectionOptions(-1, t2, R.string_selection_options___stringFormatSuggestion$closure(), false, true, new P._SyncBroadcastStreamController(null, null, 0, [[P.List, [F.OptionGroup, t1]]]), [t1]);
          t1.set$optionGroups(t3);
          t1.set$_suggestionFilter(t1.get$filterOption());
          this.set$options(0, t1);
        } else
          throw H.wrapException(P.ArgumentError$("Unsupported selection options type; value must be null, SelectionOptions<" + H.TypeImpl$(t1).toString$0(0) + ">, or List<" + H.TypeImpl$(t1).toString$0(0) + ">, but is " + H.getRuntimeType(value).toString$0(0)));
      }]
    }
  }], ["", "package:angular_components/mixins/track_layout_changes.dart",, F, {
    "^": "",
    TrackLayoutChangesMixin: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/model/a11y/active_item.dart",, O, {
    "^": "",
    ActiveItemModel: {
      "^": "Object;_modelChanged,_ids,_idGenerator,0_items,0_loop,_activeIndex,$ti",
      set$_items: function(_items) {
        this._items = H.assertSubtype(_items, "$isList", this.$ti, "$asList");
      },
      set$items: function(_, itemList) {
        var _lastActive, last;
        H.assertSubtype(itemList, "$isList", this.$ti, "$asList");
        if (C.ListEquality_DefaultEquality0.equals$2(itemList, this._items))
          return;
        this._ids.clear$0(0);
        _lastActive = this.get$activeItem();
        this.set$_items(P.List_List$unmodifiable(itemList, H.getTypeArgumentByIndex(this, 0)));
        if (_lastActive != null) {
          last = C.JSArray_methods.indexOf$1(this._items, _lastActive);
          if (last !== -1) {
            this._activeIndex = last;
            return;
          }
        }
        this._activeIndex = 0;
        this._modelChanged.add$1(0, null);
      },
      get$activeItem: function() {
        var t1, t2, t3;
        t1 = this._items;
        t2 = t1.length;
        if (t2 === 0 || this._activeIndex === -1)
          t1 = null;
        else {
          t3 = this._activeIndex;
          if (t3 < 0 || t3 >= t2)
            return H.ioore(t1, t3);
          t3 = t1[t3];
          t1 = t3;
        }
        return t1;
      },
      activateNext$0: [function() {
        var t1, t2;
        t1 = this._items.length;
        if (t1 === 0)
          this._activeIndex = -1;
        else {
          t2 = this._activeIndex;
          if (t2 < t1 - 1)
            this._activeIndex = t2 + 1;
        }
        this._modelChanged.add$1(0, null);
      }, "call$0", "get$activateNext", 0, 0, 1],
      get$peekNext: function() {
        var t1, t2, t3;
        t1 = this._items;
        t2 = t1.length;
        if (t2 !== 0 && this._activeIndex < t2 - 1) {
          t3 = this._activeIndex + 1;
          if (t3 < 0 || t3 >= t2)
            return H.ioore(t1, t3);
          return t1[t3];
        } else
          return;
      },
      activatePrevious$0: [function() {
        if (this._items.length === 0)
          this._activeIndex = -1;
        else {
          var t1 = this._activeIndex;
          if (t1 > 0)
            this._activeIndex = t1 - 1;
        }
        this._modelChanged.add$1(0, null);
      }, "call$0", "get$activatePrevious", 0, 0, 1],
      activateFirst$0: [function() {
        this._activeIndex = this._items.length === 0 ? -1 : 0;
        this._modelChanged.add$1(0, null);
      }, "call$0", "get$activateFirst", 0, 0, 1],
      activateLast$0: [function() {
        var t1 = this._items.length;
        this._activeIndex = t1 === 0 ? -1 : t1 - 1;
        this._modelChanged.add$1(0, null);
      }, "call$0", "get$activateLast", 0, 0, 1],
      activate$1: function(value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        this._activeIndex = C.JSArray_methods.indexOf$1(this._items, value);
        this._modelChanged.add$1(0, null);
      },
      id$1: [function(_, item) {
        var t1;
        H.assertSubtypeOfRuntimeType(item, H.getTypeArgumentByIndex(this, 0));
        if (item == null)
          return;
        t1 = this._ids;
        if (!t1.containsKey$1(0, item))
          t1.$indexSet(0, item, this._idGenerator.nextId$0());
        return t1.$index(0, item);
      }, "call$1", "get$id", 5, 0, 91, 27]
    }
  }], ["", "package:angular_components/model/a11y/active_item_directive.dart",, B, {
    "^": "",
    ActiveItemDirective: {
      "^": "Object;_active_item_directive$_element,_active_item_directive$_domService,_modal,_popupRef,_active,_initialized,0_visibilitySubscription,_hasHover",
      ngOnDestroy$0: function() {
        var t1 = this._visibilitySubscription;
        if (!(t1 == null))
          t1.cancel$0(0);
        this._visibilitySubscription = null;
      },
      set$itemActive: function(value) {
        if (value === this._active)
          return;
        this._active = value;
        this._scrollIntoViewIfNecessary$0();
      },
      _scrollIntoViewIfNecessary$0: function() {
        var t1, t2, isVisible, onVisibleChanged;
        t1 = this._visibilitySubscription;
        if (!(t1 == null))
          t1.cancel$0(0);
        if (this._initialized && this._active && !this._hasHover) {
          t1 = this._popupRef;
          t2 = t1 != null;
          if (t2)
            isVisible = t1._popupComponent._isVisible;
          else
            isVisible = true;
          if (isVisible)
            this._scrollIntoView$0(0);
          else {
            if (t2) {
              t1 = t1._popupComponent.PopupEvents_onVisibleController;
              onVisibleChanged = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
            } else
              onVisibleChanged = this._modal.get$onVisibleChanged();
            this._visibilitySubscription = onVisibleChanged.listen$1(new B.ActiveItemDirective__scrollIntoViewIfNecessary_closure(this));
          }
        }
      },
      _scrollIntoView$0: function(_) {
        this._active_item_directive$_domService.scheduleWrite$1(new B.ActiveItemDirective__scrollIntoView_closure(this));
      },
      onMouseLeave$0: [function(_) {
        this._hasHover = false;
      }, "call$0", "get$onMouseLeave", 1, 0, 1]
    },
    ActiveItemDirective__scrollIntoViewIfNecessary_closure: {
      "^": "Closure:24;$this",
      call$1: [function(isVisible) {
        var t1, t2;
        if (H.boolTypeCheck(isVisible)) {
          t1 = this.$this;
          t2 = t1._visibilitySubscription;
          if (!(t2 == null))
            t2.cancel$0(0);
          if (t1._initialized && t1._active && !t1._hasHover)
            t1._scrollIntoView$0(0);
        }
      }, null, null, 4, 0, null, 31, "call"]
    },
    ActiveItemDirective__scrollIntoView_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        var options, t1, exception, hasScrollIntoViewIfNeeded;
        try {
          options = {};
          options.block = "nearest";
          options.inline = "nearest";
          t1 = this.$this._active_item_directive$_element;
          t1.scrollIntoView.apply(t1, [options]);
        } catch (exception) {
          H.unwrapException(exception);
          t1 = this.$this._active_item_directive$_element;
          hasScrollIntoViewIfNeeded = !!t1.scrollIntoViewIfNeeded;
          if (hasScrollIntoViewIfNeeded)
            t1.scrollIntoViewIfNeeded();
          else
            t1.scrollIntoView();
        }
      }
    }
  }], ["", "package:angular_components/model/a11y/active_item_directive.template.dart",, M, {
    "^": "",
    ActiveItemDirectiveNgCd: {
      "^": "DirectiveChangeDetector;instance,0_active_item_directive_template$_expr_0,0directive,0view,0el,_hasHostChanges",
      detectHostChanges$2: function(view, el) {
        var currVal_0, t1;
        currVal_0 = this.instance._active;
        t1 = this._active_item_directive_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateElemClass$3(el, "active", currVal_0);
          this._active_item_directive_template$_expr_0 = currVal_0;
        }
      }
    }
  }], ["", "package:angular_components/model/a11y/keyboard_handler_mixin.dart",, R, {
    "^": "",
    KeyboardHandlerMixin: {
      "^": "Object;",
      onKeyPress$1: [function(_, $event) {
        var t1, t2, t3, t4;
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        if ($event.keyCode === 13)
          this._handleKeyboardTrigger$0();
        else if (Z.isSpaceKey($event)) {
          if (!($event == null))
            $event.preventDefault();
          this._handleKeyboardTrigger$0();
        } else if ($event.charCode !== 0) {
          this.get$itemRenderer();
          t1 = this.get$options(this) != null && true;
          if (t1) {
            t1 = $event.charCode;
            t2 = this.get$options(this);
            t3 = this.get$itemRenderer();
            t4 = !this.MaterialDropdownBase__visible && !J.getInterceptor$(this.get$selection()).$isMultiSelectionModel ? this.get$selection() : null;
            this.activateOnKeyPress$5(this.activeModel, t1, t2, t3, t4);
          }
        }
      }, "call$1", "get$onKeyPress", 5, 0, 5],
      onKeyDown$1: [function(_, $event) {
        var t1;
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        switch ($event.keyCode) {
          case 38:
            this._handleNavigationKey$2($event, this.activeModel.get$activatePrevious());
            break;
          case 40:
            this._handleNavigationKey$2($event, this.activeModel.get$activateNext());
            break;
          case 37:
            t1 = this.activeModel;
            if (this.KeyboardHandlerMixin_isRtl === true)
              this._handleNavigationKey$2($event, t1.get$activateNext());
            else
              this._handleNavigationKey$2($event, t1.get$activatePrevious());
            break;
          case 39:
            t1 = this.activeModel;
            if (this.KeyboardHandlerMixin_isRtl === true)
              this._handleNavigationKey$2($event, t1.get$activatePrevious());
            else
              this._handleNavigationKey$2($event, t1.get$activateNext());
            break;
          case 33:
            this._handleNavigationKey$2($event, this.activeModel.get$activateFirst());
            break;
          case 34:
            this._handleNavigationKey$2($event, this.activeModel.get$activateLast());
            break;
          case 36:
            break;
          case 35:
            break;
          case 8:
            break;
          case 46:
            break;
        }
      }, "call$1", "get$onKeyDown", 5, 0, 5],
      onKeyUp$1: [function(_, $event) {
        H.interceptedTypeCheck($event, "$isKeyboardEvent").keyCode;
      }, "call$1", "get$onKeyUp", 5, 0, 5]
    }
  }], ["", "package:angular_components/model/collection/labeled_list.dart",, G, {
    "^": "",
    LabeledList: {
      "^": "DelegatingList;$ti"
    }
  }], ["", "package:angular_components/model/selection/selection_container.dart",, L, {
    "^": "",
    SelectionContainer: {
      "^": "Object;0_selection,0_options,0_itemRenderer,$ti",
      set$_selection: function(_selection) {
        this._selection = H.assertSubtype(_selection, "$isSelectionModel", this.$ti, "$asSelectionModel");
      },
      set$_options: function(_options) {
        this._options = H.assertSubtype(_options, "$isSelectionOptions", this.$ti, "$asSelectionOptions");
      },
      set$_itemRenderer: function(_itemRenderer) {
        this._itemRenderer = H.functionTypeCheck(_itemRenderer, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(this, 0)]});
      },
      get$selection: function() {
        return this._selection;
      },
      set$selection: ["super$SelectionContainer$selection", function(value) {
        this.set$_selection(H.assertSubtype(value, "$isSelectionModel", this.$ti, "$asSelectionModel"));
      }],
      get$options: function(_) {
        return this._options;
      },
      set$options: ["super$SelectionContainer$options", function(_, value) {
        this.set$_options(H.assertSubtype(value, "$isSelectionOptions", this.$ti, "$asSelectionOptions"));
      }],
      get$itemRenderer: function() {
        return this._itemRenderer;
      },
      set$itemRenderer: ["super$SelectionContainer$itemRenderer", function(value) {
        this.set$_itemRenderer(H.functionTypeCheck(value, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(this, 0)]}));
      }]
    },
    SelectionItem: {
      "^": "Object;"
    }
  }], ["angular_components.model.selection.selection_model", "package:angular_components/model/selection/selection_model.dart",, Z, {
    "^": "",
    _defaultKeyProvider: [function(o) {
      return o;
    }, "call$1", "selection_model___defaultKeyProvider$closure", 4, 0, 164, 12],
    CastIterable: {
      "^": "Object;"
    },
    SelectionChangeRecord: {
      "^": "ChangeRecord;$ti"
    },
    _MultiSelectionModelImpl: {
      "^": "__MultiSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable;selectedValues<,SelectionChangeNotifier__selectionChangeController,SelectionChangeNotifier__selectionChangeRecords,_observable$_delegate,_isNotGeneric,$ti",
      deselect$1: [function(value) {
        var t1;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (value == null)
          throw H.wrapException(P.ArgumentError$(null));
        t1 = this.selectedValues;
        if (t1.remove$1(0, value)) {
          if (t1._collection$_length === 0) {
            t1 = P.bool;
            this.notifyPropertyChange$1$3(C.Symbol_isEmpty, false, true, t1);
            this.notifyPropertyChange$1$3(C.Symbol_isNotEmpty, true, false, t1);
          }
          this.notifySelectionChange$1$removed(H.setRuntimeTypeInfo([value], this.$ti));
          return true;
        }
        return false;
      }, "call$1", "get$deselect", 4, 0, 9],
      select$1: [function(_, value) {
        var t1;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (value == null)
          throw H.wrapException(P.ArgumentError$(null));
        t1 = this.selectedValues;
        if (t1.add$1(0, value)) {
          if (t1._collection$_length === 1) {
            t1 = P.bool;
            this.notifyPropertyChange$1$3(C.Symbol_isEmpty, true, false, t1);
            this.notifyPropertyChange$1$3(C.Symbol_isNotEmpty, false, true, t1);
          }
          this.notifySelectionChange$1$added(H.setRuntimeTypeInfo([value], this.$ti));
          return true;
        } else
          return false;
      }, "call$1", "get$select", 5, 0, 9],
      isSelected$1: [function(value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (value == null)
          throw H.wrapException(P.ArgumentError$(null));
        return this.selectedValues.contains$1(0, value);
      }, "call$1", "get$isSelected", 4, 0, 9, 1],
      get$isEmpty: function(_) {
        return this.selectedValues._collection$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this.selectedValues._collection$_length !== 0;
      },
      $isSelectionModel: 1,
      $isMultiSelectionModel: 1,
      $asObservable: function($T) {
        return [Y.ChangeRecord];
      },
      static: {
        _MultiSelectionModelImpl$: function(initialSelection, keyProvider, $T) {
          var t1, t2, t3, t4;
          t1 = P.LinkedHashSet_LinkedHashSet(new Z._MultiSelectionModelImpl_closure(keyProvider, $T), new Z._MultiSelectionModelImpl_closure0(keyProvider, $T), null, $T);
          t1.addAll$1(0, initialSelection);
          t2 = Y.ChangeRecord;
          t3 = new H.TypeImpl(t2).get$_typeName();
          t4 = C.Type_dynamic_0Rz.get$_typeName();
          if (t3 !== t4)
            t3 = new H.TypeImpl(t2).get$_typeName() === C.Type_ChangeRecord_INA.get$_typeName();
          else
            t3 = true;
          return new Z._MultiSelectionModelImpl(t1, null, null, new B.ChangeNotifier(false, [t2]), t3, [$T]);
        }
      }
    },
    _MultiSelectionModelImpl_closure: {
      "^": "Closure;keyProvider,T",
      call$2: [function(a, b) {
        var t1 = this.T;
        H.assertSubtypeOfRuntimeType(a, t1);
        H.assertSubtypeOfRuntimeType(b, t1);
        t1 = this.keyProvider;
        return J.$eq$(t1.call$1(a), t1.call$1(b));
      }, null, null, 8, 0, null, 13, 15, "call"],
      $signature: function() {
        var t1 = this.T;
        return {func: 1, ret: P.bool, args: [t1, t1]};
      }
    },
    _MultiSelectionModelImpl_closure0: {
      "^": "Closure;keyProvider,T",
      call$1: [function(o) {
        return J.get$hashCode$(this.keyProvider.call$1(H.assertSubtypeOfRuntimeType(o, this.T)));
      }, null, null, 4, 0, null, 12, "call"],
      $signature: function() {
        return {func: 1, ret: P.int, args: [this.T]};
      }
    },
    SelectionChangeNotifier: {
      "^": "Object;SelectionChangeNotifier__selectionChangeController,SelectionChangeNotifier__selectionChangeRecords,$ti",
      set$_selectionChangeController: function(_selectionChangeController) {
        this.SelectionChangeNotifier__selectionChangeController = H.assertSubtype(_selectionChangeController, "$isStreamController", [[P.List, [Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]]], "$asStreamController");
      },
      set$_selectionChangeRecords: function(_selectionChangeRecords) {
        this.SelectionChangeNotifier__selectionChangeRecords = H.assertSubtype(_selectionChangeRecords, "$isList", [[Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]], "$asList");
      },
      deliverSelectionChanges$0: [function() {
        if (this.get$hasSelectionObservers()) {
          var t1 = this.SelectionChangeNotifier__selectionChangeRecords;
          t1 = t1 != null && t1.length !== 0;
        } else
          t1 = false;
        if (t1) {
          t1 = this.SelectionChangeNotifier__selectionChangeRecords;
          this.set$_selectionChangeRecords(null);
          this.SelectionChangeNotifier__selectionChangeController.add$1(0, new P.UnmodifiableListView(t1, [[Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]]));
          return true;
        } else
          return false;
      }, "call$0", "get$deliverSelectionChanges", 0, 0, 23],
      notifySelectionChange$2$added$removed: function(added, removed) {
        var t1, t2, t3;
        t1 = H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0);
        t2 = [t1];
        H.assertSubtype(added, "$isIterable", t2, "$asIterable");
        H.assertSubtype(removed, "$isIterable", t2, "$asIterable");
        if (this.get$hasSelectionObservers()) {
          t3 = [t1];
          added = H.assertSubtype(new P.UnmodifiableListView(added, t3), "$isIterable", t2, "$asIterable");
          removed = H.assertSubtype(new P.UnmodifiableListView(removed, t3), "$isIterable", t2, "$asIterable");
          if (this.SelectionChangeNotifier__selectionChangeRecords == null) {
            this.set$_selectionChangeRecords(H.setRuntimeTypeInfo([], [[Z.SelectionChangeRecord, t1]]));
            P.scheduleMicrotask(this.get$deliverSelectionChanges());
          }
          t2 = this.SelectionChangeNotifier__selectionChangeRecords;
          (t2 && C.JSArray_methods).add$1(t2, new Z._SelectionChangeRecordImpl(added, removed, [t1]));
        }
      },
      notifySelectionChange$1$removed: function(removed) {
        return this.notifySelectionChange$2$added$removed(C.List_empty1, removed);
      },
      notifySelectionChange$1$added: function(added) {
        return this.notifySelectionChange$2$added$removed(added, C.List_empty1);
      },
      get$hasSelectionObservers: function() {
        var t1 = this.SelectionChangeNotifier__selectionChangeController;
        return t1 != null && t1._firstSubscription != null;
      },
      get$selectionChanges: function() {
        if (this.SelectionChangeNotifier__selectionChangeController == null)
          this.set$_selectionChangeController(new P._SyncBroadcastStreamController(null, null, 0, [[P.List, [Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]]]));
        var t1 = this.SelectionChangeNotifier__selectionChangeController;
        t1.toString;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      }
    },
    _SelectionChangeRecordImpl: {
      "^": "ChangeRecord;added<,removed,$ti",
      toString$0: function(_) {
        return "SelectionChangeRecord{added: " + H.S(this.added) + ", removed: " + H.S(this.removed) + "}";
      },
      $isSelectionChangeRecord: 1
    },
    _SingleSelectionModelImpl: {
      "^": "__SingleSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable;_keyOf,_selectedValues,0_selectedKey,SelectionChangeNotifier__selectionChangeController,SelectionChangeNotifier__selectionChangeRecords,_observable$_delegate,_isNotGeneric,$ti",
      select$1: [function(_, value) {
        var newKey, t1, previousValue, removedItems;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (value == null)
          throw H.wrapException(P.ArgumentError$notNull("value"));
        newKey = this._keyOf.call$1(value);
        if (J.$eq$(newKey, this._selectedKey))
          return false;
        t1 = this._selectedValues;
        previousValue = t1.length === 0 ? null : C.JSArray_methods.get$first(t1);
        this._selectedKey = newKey;
        C.JSArray_methods.set$length(t1, 0);
        C.JSArray_methods.add$1(t1, value);
        if (previousValue == null) {
          t1 = P.bool;
          this.notifyPropertyChange$1$3(C.Symbol_isEmpty, true, false, t1);
          this.notifyPropertyChange$1$3(C.Symbol_isNotEmpty, false, true, t1);
          removedItems = C.List_empty1;
        } else
          removedItems = H.setRuntimeTypeInfo([previousValue], this.$ti);
        this.notifySelectionChange$2$added$removed(H.setRuntimeTypeInfo([value], this.$ti), removedItems);
        return true;
      }, "call$1", "get$select", 5, 0, 9],
      deselect$1: [function(value) {
        var t1, previousValue, removedItems;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (value == null)
          throw H.wrapException(P.ArgumentError$notNull("value"));
        t1 = this._selectedValues;
        if (t1.length === 0 || !J.$eq$(this._keyOf.call$1(value), this._selectedKey))
          return false;
        previousValue = t1.length === 0 ? null : C.JSArray_methods.get$first(t1);
        this._selectedKey = null;
        C.JSArray_methods.set$length(t1, 0);
        if (previousValue != null) {
          t1 = P.bool;
          this.notifyPropertyChange$1$3(C.Symbol_isEmpty, false, true, t1);
          this.notifyPropertyChange$1$3(C.Symbol_isNotEmpty, true, false, t1);
          removedItems = H.setRuntimeTypeInfo([previousValue], this.$ti);
        } else
          removedItems = C.List_empty1;
        this.notifySelectionChange$2$added$removed(H.setRuntimeTypeInfo([], this.$ti), removedItems);
        return true;
      }, "call$1", "get$deselect", 4, 0, 9],
      isSelected$1: [function(value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (value == null)
          throw H.wrapException(P.ArgumentError$notNull("value"));
        return J.$eq$(this._keyOf.call$1(value), this._selectedKey);
      }, "call$1", "get$isSelected", 4, 0, 9, 1],
      get$isEmpty: function(_) {
        return this._selectedValues.length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._selectedValues.length !== 0;
      },
      get$selectedValues: function() {
        return this._selectedValues;
      },
      $isSelectionModel: 1,
      $asObservable: function($T) {
        return [Y.ChangeRecord];
      }
    },
    __MultiSelectionModelImpl_Observable_SelectionChangeNotifier: {
      "^": "Observable+SelectionChangeNotifier;SelectionChangeNotifier__selectionChangeController,SelectionChangeNotifier__selectionChangeRecords",
      set$_selectionChangeController: function(_selectionChangeController) {
        this.SelectionChangeNotifier__selectionChangeController = H.assertSubtype(_selectionChangeController, "$isStreamController", [[P.List, [Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]]], "$asStreamController");
      },
      set$_selectionChangeRecords: function(_selectionChangeRecords) {
        this.SelectionChangeNotifier__selectionChangeRecords = H.assertSubtype(_selectionChangeRecords, "$isList", [[Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]], "$asList");
      }
    },
    __MultiSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable: {
      "^": "__MultiSelectionModelImpl_Observable_SelectionChangeNotifier+CastIterable;"
    },
    __SingleSelectionModelImpl_Observable_SelectionChangeNotifier: {
      "^": "Observable+SelectionChangeNotifier;SelectionChangeNotifier__selectionChangeController,SelectionChangeNotifier__selectionChangeRecords",
      set$_selectionChangeController: function(_selectionChangeController) {
        this.SelectionChangeNotifier__selectionChangeController = H.assertSubtype(_selectionChangeController, "$isStreamController", [[P.List, [Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]]], "$asStreamController");
      },
      set$_selectionChangeRecords: function(_selectionChangeRecords) {
        this.SelectionChangeNotifier__selectionChangeRecords = H.assertSubtype(_selectionChangeRecords, "$isList", [[Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]], "$asList");
      }
    },
    __SingleSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable: {
      "^": "__SingleSelectionModelImpl_Observable_SelectionChangeNotifier+CastIterable;"
    }
  }], ["angular_components.model.selection.selection_options", "package:angular_components/model/selection/selection_options.dart",, F, {
    "^": "",
    OptionGroup: {
      "^": "LabeledList;_emptyLabelFcn,_labelFcn,_base,$ti",
      static: {
        OptionGroup$withLabel: function(items, label, emptyLabel, $T) {
          return new F.OptionGroup(null, null, items, [$T]);
        }
      }
    },
    GroupedOptions: {
      "^": "Object;$ti",
      $isDisposable: 1
    },
    SelectionOptions: {
      "^": "GroupedOptions;_selection_options$_controller,0_flattenedList,0_optionGroups,$ti",
      set$_flattenedList: function(_flattenedList) {
        this._flattenedList = H.assertSubtype(_flattenedList, "$isList", this.$ti, "$asList");
      },
      set$_optionGroups: function(_optionGroups) {
        this._optionGroups = H.assertSubtype(_optionGroups, "$isList", [[F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]], "$asList");
      },
      set$optionGroups: ["super$SelectionOptions$optionGroups", function(value) {
        var t1, t2, t3;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.assertSubtype(value, "$isList", [[F.OptionGroup, t1]], "$asList");
        if (this._optionGroups !== value) {
          this.set$_optionGroups(value);
          t2 = this._optionGroups;
          if (t2 != null) {
            t3 = H.getTypeArgumentByIndex(t2, 0);
            t1 = P.List_List$from(new H.ExpandIterable(t2, H.functionTypeCheck(new F.SelectionOptions_optionGroups_closure(this), {func: 1, ret: [P.Iterable, t1], args: [t3]}), [t3, t1]), true, t1);
          } else
            t1 = H.setRuntimeTypeInfo([], this.$ti);
          this.set$_flattenedList(t1);
          this._selection_options$_controller.add$1(0, this._optionGroups);
        }
      }]
    },
    SelectionOptions_optionGroups_closure: {
      "^": "Closure;$this",
      call$1: function(i) {
        return H.assertSubtype(i, "$isOptionGroup", [H.getTypeArgumentByIndex(this.$this, 0)], "$asOptionGroup");
      },
      $signature: function() {
        var t1 = H.getTypeArgumentByIndex(this.$this, 0);
        return {func: 1, ret: [F.OptionGroup, t1], args: [[F.OptionGroup, t1]]};
      }
    }
  }], ["", "package:angular_components/model/selection/string_selection_options.dart",, R, {
    "^": "",
    _stringFormatSuggestion: [function(value) {
      H.stringTypeCheck(value);
      value.toString;
      return H.stringReplaceAllUnchecked(value, " ", "").toLowerCase();
    }, "call$1", "string_selection_options___stringFormatSuggestion$closure", 4, 0, 13, 1],
    StringSelectionOptions: {
      "^": "SelectionOptions;0_currentQuery,_currentLimit,0_string_selection_options$_optionGroups,_toFilterableString,0_suggestionFilter,_sanitizeString,_shouldSort,_shouldFilterEmpty,_selection_options$_controller,0_flattenedList,0_optionGroups,$ti",
      set$_string_selection_options$_optionGroups: function(_optionGroups) {
        this._string_selection_options$_optionGroups = H.assertSubtype(_optionGroups, "$isList", [[F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]], "$asList");
      },
      set$_suggestionFilter: function(_suggestionFilter) {
        this._suggestionFilter = H.functionTypeCheck(_suggestionFilter, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0), P.String]});
      },
      filterOption$2: [function(option, filterQuery) {
        H.assertSubtypeOfRuntimeType(option, H.getTypeArgumentByIndex(this, 0));
        H.stringTypeCheck(filterQuery);
        return J.contains$1$asx(this._sanitizeString.call$1(this._toFilterableString.call$1(option)), filterQuery);
      }, "call$2", "get$filterOption", 8, 0, 93, 60, 61],
      set$optionGroups: function(value) {
        H.assertSubtype(value, "$isList", [[F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]], "$asList");
        this.set$_string_selection_options$_optionGroups(value);
        this.super$SelectionOptions$optionGroups(value);
      }
    }
  }], ["", "package:angular_components/model/ui/has_factory.dart",, O, {
    "^": "",
    HasFactoryRenderer: {
      "^": "Object;$ti"
    }
  }], ["", "package:angular_components/model/ui/has_renderer.dart",, G, {
    "^": "",
    defaultItemRenderer: [function(value) {
      return H.S(value);
    }, "call$1", "has_renderer__defaultItemRenderer$closure", 4, 0, 28, 1],
    _nullRenderer: [function(value) {
      return H.throwExpression(P.StateError$("nullRenderer should never be called"));
    }, "call$1", "has_renderer___nullRenderer$closure", 4, 0, 28, 1],
    HasRenderer: {
      "^": "Object;"
    },
    RendersValue: {
      "^": "Object;$ti"
    }
  }], ["", "package:angular_components/model/ui/icon.dart",, L, {
    "^": "",
    Icon: {
      "^": "Object;name>"
    }
  }], ["", "package:angular_components/model/ui/template_support.dart",, T, {
    "^": "",
    closure: {
      "^": "Closure:94;",
      call$2: [function(index, _) {
        return H.numTypeCheck(index);
      }, null, null, 8, 0, null, 23, 0, "call"]
    }
  }], ["", "package:angular_components/src/laminate/overlay/overlay_ref.dart",, B, {
    "^": "",
    OverlayRef: {
      "^": "Object;state,containerElement,overlayElement,_asyncApplyState,_overlay_ref$_asyncMeasureSize,_delegatePortalHost,_runOutsideAngular,_lastVisible,0_onVisibleController,0_stateUpdateListener",
      measureSizeChanges$0: function() {
        var $async$measureSizeChanges$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          switch ($async$errorCode) {
            case 2:
              $async$next = $async$nextWhenCanceled;
              $async$goto = $async$next.pop();
              break;
            case 1:
              $async$currentError = $async$result;
              $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.state;
                if (t1._visibility === C.Visibility_None_display_none)
                  t1.set$visibility(0, C.Visibility_Hidden_visibility_hidden);
                $async$goto = 3;
                return P._asyncStarHelper($async$self._applyChanges$0(), $async$measureSizeChanges$0, $async$controller);
              case 3:
                // returning from await.
                $async$goto = 4;
                $async$nextWhenCanceled = [1];
                return P._asyncStarHelper(P._IterationMarker_yieldStar(H.subtypeCast($async$self._runOutsideAngular.call$1(new B.OverlayRef_measureSizeChanges_closure($async$self)), "$isStream", [[P.Rectangle, P.num]], "$asStream")), $async$measureSizeChanges$0, $async$controller);
              case 4:
                // after yield
              case 1:
                // return
                return P._asyncStarHelper(null, 0, $async$controller);
              case 2:
                // rethrow
                return P._asyncStarHelper($async$currentError, 1, $async$controller);
            }
        });
        var $async$goto = 0,
          $async$controller = P._makeAsyncStarStreamController($async$measureSizeChanges$0, [P.Rectangle, P.num]),
          $async$nextWhenCanceled, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1;
        return P._streamOfController($async$controller);
      },
      dispose$0: [function() {
        C.DivElement_methods.remove$0(this.overlayElement);
        var t1 = this._onVisibleController;
        if (t1 != null)
          t1.close$0(0);
        this._stateUpdateListener.cancel$0(0);
      }, "call$0", "get$dispose", 0, 0, 1],
      _applyChanges$0: function() {
        var t1, t2, t3;
        t1 = this._lastVisible;
        t2 = this.state;
        t3 = t2._visibility !== C.Visibility_None_display_none;
        if (t1 !== t3) {
          this._lastVisible = t3;
          t1 = this._onVisibleController;
          if (t1 != null)
            t1.add$1(0, t3);
        }
        return this._asyncApplyState.call$2(t2, this.overlayElement);
      },
      OverlayRef$7$state: function(_asyncApplyState, _asyncMeasureSize, _delegatePortalHost, containerElement, overlayElement, _runOutsideAngular, state) {
        var t1, t2;
        t1 = this.state._asyncScheduler;
        t2 = t1._onUpdateStreamController;
        if (t2 == null) {
          t2 = new P._SyncBroadcastStreamController(null, null, 0, [null]);
          t1._onUpdateStreamController = t2;
          t1 = t2;
        } else
          t1 = t2;
        this._stateUpdateListener = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new B.OverlayRef_closure(this));
      },
      $isPortalHost: 1,
      $isDisposable: 1,
      static: {
        OverlayRef__isEqualSize: [function(a, b) {
          var t1, t2;
          t1 = [P.num];
          H.assertSubtype(a, "$isRectangle", t1, "$asRectangle");
          H.assertSubtype(b, "$isRectangle", t1, "$asRectangle");
          t1 = J.getInterceptor$x(a);
          t2 = J.getInterceptor$x(b);
          return t1.get$width(a) == t2.get$width(b) && t1.get$height(a) == t2.get$height(b);
        }, "call$2", "overlay_ref_OverlayRef__isEqualSize$closure", 8, 0, 42],
        OverlayRef$: function(_asyncApplyState, _asyncMeasureSize, _delegatePortalHost, containerElement, overlayElement, _runOutsideAngular, state) {
          var t1 = new B.OverlayRef(Z.MutableOverlayState_MutableOverlayState$from(state), containerElement, overlayElement, _asyncApplyState, _asyncMeasureSize, _delegatePortalHost, _runOutsideAngular, false);
          t1.OverlayRef$7$state(_asyncApplyState, _asyncMeasureSize, _delegatePortalHost, containerElement, overlayElement, _runOutsideAngular, state);
          return t1;
        }
      }
    },
    OverlayRef_measureSizeChanges_closure: {
      "^": "Closure:95;$this",
      call$0: [function() {
        var t1 = this.$this;
        return t1._overlay_ref$_asyncMeasureSize.call$2$track(t1.overlayElement, true).distinct$1(B.overlay_ref_OverlayRef__isEqualSize$closure());
      }, null, null, 0, 0, null, "call"]
    },
    OverlayRef_closure: {
      "^": "Closure:96;$this",
      call$1: [function(_) {
        return this.$this._applyChanges$0();
      }, null, null, 4, 0, null, 0, "call"]
    }
  }], ["", "package:angular_components/src/laminate/overlay/overlay_service.dart",, X, {
    "^": "",
    OverlayService: {
      "^": "Object;_overlay_service$_useDomSynchronously,_overlay_service$_ngZone,_renderService",
      _measurePane$2$track: [function(pane, track) {
        return this._renderService.measureSize$3$sync$track(pane, this._overlay_service$_useDomSynchronously, true);
      }, function(pane) {
        return this._measurePane$2$track(pane, false);
      }, "_measurePane$1", "call$2$track", "call$1", "get$_measurePane", 4, 3, 41]
    }
  }], ["", "package:angular_components/src/laminate/overlay/overlay_state.dart",, Z, {
    "^": "",
    _stateEquals: function(a, b) {
      var t1;
      if (a === b)
        return true;
      a.get$captureEvents();
      b.get$captureEvents();
      if (a.get$left(a) == b.get$left(b))
        if (a.get$top(a) == b.get$top(b)) {
          a.get$right(a);
          b.get$right(b);
          a.get$bottom(a);
          b.get$bottom(b);
          a.get$width(a);
          b.get$width(b);
          if (a.get$minWidth(a) == b.get$minWidth(b)) {
            a.get$height(a);
            b.get$height(b);
            a.get$zIndex(a);
            b.get$zIndex(b);
            a.get$position(a);
            b.get$position(b);
            t1 = true;
          } else
            t1 = false;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    _stateHashCode: function(a) {
      a.get$captureEvents();
      return X.hashObjects([false, a.get$left(a), a.get$top(a), a.get$right(a), a.get$bottom(a), a.get$width(a), a.get$minWidth(a), a.get$height(a), a.get$zIndex(a), a.get$position(a)]);
    },
    OverlayState: {
      "^": "Object;"
    },
    _ImmutableOverlayState: {
      "^": "Object;captureEvents<,left>,top>,right>,bottom>,width>,minWidth>,height>,visibility>,zIndex>,position>",
      $eq: function(_, o) {
        if (o == null)
          return false;
        return !!J.getInterceptor$(o).$isOverlayState && Z._stateEquals(this, o);
      },
      get$hashCode: function(_) {
        return Z._stateHashCode(this);
      },
      toString$0: function(_) {
        return "ImmutableOverlayState " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["captureEvents", false, "left", this.left, "top", this.top, "right", this.right, "bottom", this.bottom, "width", this.width, "height", this.height, "visibility", this.visibility, "zIndex", this.zIndex, "position", this.position], P.String, P.Object));
      },
      $isOverlayState: 1
    },
    MutableOverlayState: {
      "^": "Object;_asyncScheduler,0_captureEvents,0_left,0_top,0_right,0_bottom,0_overlay_state$_width,0_minWidth,0_overlay_state$_height,0_overlay_state$_zIndex,0_visibility,0_overlay_state$_position",
      $eq: function(_, o) {
        if (o == null)
          return false;
        return !!J.getInterceptor$(o).$isOverlayState && Z._stateEquals(this, o);
      },
      get$hashCode: function(_) {
        return Z._stateHashCode(this);
      },
      get$captureEvents: function() {
        return false;
      },
      get$left: function(_) {
        return this._left;
      },
      set$left: function(_, left) {
        if (this._left !== left) {
          this._left = left;
          this._asyncScheduler.scheduleUpdate$0();
        }
      },
      get$top: function(_) {
        return this._top;
      },
      set$top: function(_, $top) {
        if (this._top !== $top) {
          this._top = $top;
          this._asyncScheduler.scheduleUpdate$0();
        }
      },
      get$right: function(_) {
        return this._right;
      },
      get$bottom: function(_) {
        return this._bottom;
      },
      get$width: function(_) {
        return this._overlay_state$_width;
      },
      get$minWidth: function(_) {
        return this._minWidth;
      },
      get$height: function(_) {
        return this._overlay_state$_height;
      },
      get$zIndex: function(_) {
        return this._overlay_state$_zIndex;
      },
      get$visibility: function(_) {
        return this._visibility;
      },
      set$visibility: function(_, visibility) {
        if (this._visibility !== visibility) {
          this._visibility = visibility;
          this._asyncScheduler.scheduleUpdate$0();
        }
      },
      get$position: function(_) {
        return this._overlay_state$_position;
      },
      toString$0: function(_) {
        return "MutableOverlayState " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["captureEvents", false, "left", this._left, "top", this._top, "right", this._right, "bottom", this._bottom, "width", this._overlay_state$_width, "minWidth", this._minWidth, "height", this._overlay_state$_height, "zIndex", this._overlay_state$_zIndex, "visibility", this._visibility, "position", this._overlay_state$_position], P.String, P.Object));
      },
      $isOverlayState: 1,
      static: {
        MutableOverlayState_MutableOverlayState$from: function(other) {
          return Z.MutableOverlayState$(other.bottom, false, other.height, other.left, other.minWidth, other.position, other.right, other.top, other.visibility, other.width, other.zIndex);
        },
        MutableOverlayState$: function(bottom, $captureEvents, height, left, minWidth, position, right, $top, visibility, width, zIndex) {
          var t1 = new Z.MutableOverlayState(new Z.AsyncUpdateScheduler(null, false));
          t1._captureEvents = false;
          t1._left = left;
          t1._top = $top;
          t1._right = right;
          t1._bottom = bottom;
          t1._overlay_state$_width = width;
          t1._minWidth = minWidth;
          t1._overlay_state$_height = height;
          t1._overlay_state$_zIndex = zIndex;
          t1._visibility = visibility;
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/src/laminate/overlay/render/overlay_dom_render_service.dart",, K, {
    "^": "",
    OverlayDomRenderService: {
      "^": "Object;containerElement,_containerName,_domRuler,_overlay_dom_render_service$_domService,_imperativeViewUtils,_useDomSynchronously,_overlay_dom_render_service$_useRepositionLoop,_overlay_dom_render_service$_zIndexer,0_lastZIndex,_uniqueId",
      applyState$2: [function(state, pane) {
        return this.applyState$body$OverlayDomRenderService(H.interceptedTypeCheck(state, "$isOverlayState"), H.interceptedTypeCheck(pane, "$isHtmlElement"));
      }, "call$2", "get$applyState", 8, 0, 98, 62, 63],
      applyState$body$OverlayDomRenderService: function(state, pane) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$returnValue, $async$self = this;
        var $async$applyState$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                if (!$async$self._useDomSynchronously) {
                  $async$returnValue = $async$self._overlay_dom_render_service$_domService.onWrite$0(0).then$1$1(new K.OverlayDomRenderService_applyState_closure($async$self, state, pane), null);
                  // goto return
                  $async$goto = 1;
                  break;
                } else
                  $async$self.applyStateSync$2(state, pane);
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$applyState$2, $async$completer);
      },
      applyStateSync$2: function(state, pane) {
        var cssClasses, t1, t2, t3, t4, t5, t6, t7, t8;
        cssClasses = H.setRuntimeTypeInfo([], [P.String]);
        state.get$captureEvents();
        if (state.get$visibility(state) === C.Visibility_Visible_null_null)
          C.JSArray_methods.add$1(cssClasses, "visible");
        t1 = this._domRuler;
        t2 = state.get$width(state);
        t3 = state.get$height(state);
        t4 = state.get$top(state);
        t5 = state.get$left(state);
        t6 = state.get$bottom(state);
        t7 = state.get$right(state);
        t8 = state.get$visibility(state);
        t1.updateSync$11$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width(pane, t6, cssClasses, t3, t5, state.get$position(state), t7, t4, !this._overlay_dom_render_service$_useRepositionLoop, t8, t2);
        if (state.get$minWidth(state) != null) {
          t2 = pane.style;
          t3 = H.S(state.get$minWidth(state)) + "px";
          t2.minWidth = t3;
        }
        state.get$zIndex(state);
        if (pane.parentElement != null) {
          t2 = this._lastZIndex;
          this._overlay_dom_render_service$_zIndexer.toString;
          if (t2 != self.acxZIndex) {
            t2 = J.$add$ansx(self.acxZIndex, 1);
            self.acxZIndex = t2;
            this._lastZIndex = t2;
          }
          t1.updateSync$2$zIndex(pane.parentElement, this._lastZIndex);
        }
      },
      measureSize$3$sync$track: function(pane, sync, track) {
        var t1 = this._domRuler.track$1(0, pane);
        return t1;
      },
      measureContainer$0: function() {
        var t1, t2;
        t1 = [P.Rectangle, P.num];
        if (!this._useDomSynchronously)
          return this._overlay_dom_render_service$_domService.onWrite$0(0).then$1$1(new K.OverlayDomRenderService_measureContainer_closure(this), t1);
        else {
          t2 = this.containerElement.getBoundingClientRect();
          t1 = new P._Future(0, $.Zone__current, [t1]);
          t1._asyncComplete$1(t2);
          return t1;
        }
      }
    },
    OverlayDomRenderService_applyState_closure: {
      "^": "Closure:3;$this,state,pane",
      call$1: [function(_) {
        this.$this.applyStateSync$2(this.state, this.pane);
      }, null, null, 4, 0, null, 0, "call"]
    },
    OverlayDomRenderService_measureContainer_closure: {
      "^": "Closure:99;$this",
      call$1: [function(_) {
        return this.$this.containerElement.getBoundingClientRect();
      }, null, null, 4, 0, null, 0, "call"]
    }
  }], ["", "package:angular_components/src/laminate/overlay/render/overlay_style_config.dart",, R, {
    "^": "",
    OverlayStyleConfig: {
      "^": "Object;_styleHost,_stylesRegistered,_overlay_style_config$_document",
      registerStyles$0: function() {
        var t1, t2;
        if (this.get$stylesRegistered())
          return;
        t1 = this._styleHost;
        t2 = document.createElement("style");
        t2.id = "__overlay_styles";
        t2.textContent = "  #default-acx-overlay-container,\n  .acx-overlay-container {\n    position: absolute;\n\n    /* Disable event captures. This is an invisible container! */\n    pointer-events: none;\n\n    /* Make this full width and height in the viewport. */\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n\n    /* TODO(google): Use the ACX z-index guide instead. */\n    z-index: 10;\n  }\n\n  .acx-overlay-container > .pane {\n    display: flex;\n    /* TODO(google): verify prefixing flexbox fixes popups in IE */\n    display: -ms-flexbox;\n    position: absolute;\n\n    /* TODO(google): Use the ACX z-index guide instead. */\n    z-index: 11;\n\n    /* Disable event captures. This is an invisible container!\n       Panes that would like to capture events can enable this with .modal. */\n    pointer-events: none;\n  }\n\n  /* Children should have normal events. */\n  .acx-overlay-container > .pane > * { pointer-events: auto; }\n\n  .acx-overlay-container > .pane.modal {\n    justify-content: center;\n    align-items: center;\n    background: rgba(33,33,33,.4);\n    pointer-events: auto;\n\n    /* TODO(google): Pull out into a .fixed class instead. */\n    position: fixed;\n\n    /* Promote the .modal element to its own layer to fix scrolling issues.\n       will-change: transform is preferred, but not yet supported by Edge. */\n    -webkit-backface-visibility: hidden;  /* Safari 9/10 */\n    backface-visibility: hidden;\n  }\n\n  .acx-overlay-container > .pane,\n  .acx-overlay-container > .pane > * {\n    display: flex;\n    display: -ms-flexbox;\n  }\n\n  /* Optional debug mode that highlights the container and individual panes.\n     TODO(google): Pull this into a mixin so it won't get auto-exported. */\n  .acx-overlay-container.debug {\n    background: rgba(255, 0, 0, 0.15);\n  }\n\n  .acx-overlay-container.debug > .pane {\n    background: rgba(0, 0, 2555, 0.15);\n  }\n\n  .acx-overlay-container.debug > .pane.modal {\n    background: rgba(0, 0, 0, 0.30);\n  }\n";
        (t1 && C.HeadElement_methods).append$1(t1, t2);
        this._stylesRegistered = true;
      },
      get$stylesRegistered: function() {
        if (this._stylesRegistered)
          return true;
        var t1 = this._overlay_style_config$_document;
        if ((t1 && C.HtmlDocument_methods).querySelector$1(t1, "#__overlay_styles") != null)
          this._stylesRegistered = true;
        return this._stylesRegistered;
      }
    }
  }], ["", "package:angular_components/src/laminate/popup/dom_popup_source.dart",, K, {
    "^": "",
    DomPopupSourceFactory: {
      "^": "Object;_dom_popup_source$_domRuler",
      _asyncMeasureSize$2$track: [function(element, track) {
        var t1;
        H.interceptedTypeCheck(element, "$isHtmlElement");
        t1 = this._dom_popup_source$_domRuler;
        if (H.boolTypeCheck(track))
          return t1.track$1(0, element);
        else
          return t1.measure$1(0, element).asStream$0();
      }, function(element) {
        return this._asyncMeasureSize$2$track(element, false);
      }, "_asyncMeasureSize$1", "call$2$track", "call$1", "get$_asyncMeasureSize", 4, 3, 41, 64, 17, 65]
    },
    DomPopupSource: {
      "^": "Object;_asyncMeasureSize,sourceElement<,_initAriaAttributes,0_alignOriginX,0_alignOriginY,0_dom_popup_source$_id",
      get$alignOriginX: function() {
        return this._alignOriginX;
      },
      get$alignOriginY: function() {
        return this._alignOriginY;
      },
      onDimensionsChanged$1$track: function(track) {
        return this._asyncMeasureSize.call$2$track(this.sourceElement, track);
      },
      get$dimensions: function() {
        return this.sourceElement.getBoundingClientRect();
      },
      get$isRtl: function() {
        return $.$get$DomPopupSource__isRtl();
      },
      set$popupId: function(id) {
        this._dom_popup_source$_id = id;
        if (id == null || !this._initAriaAttributes)
          return;
        J.setAttribute$2$x(this.sourceElement, "aria-haspopup", "true");
      },
      focus$0: function(_) {
        this.sourceElement.focus();
      },
      toString$0: function(_) {
        return "DomPopupSource " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["alignOriginX", this._alignOriginX, "alignOriginY", this._alignOriginY], P.String, K.Alignment));
      },
      onOpen$0: function(_) {
        var t1 = this._dom_popup_source$_id;
        if (t1 == null || !this._initAriaAttributes)
          return;
        J.setAttribute$2$x(this.sourceElement, "aria-owns", t1);
      },
      onClose$0: function(_) {
        var t1;
        if (this._dom_popup_source$_id == null || !this._initAriaAttributes)
          return;
        t1 = this.sourceElement;
        t1.toString;
        new W._ElementAttributeMap(t1).remove$1(0, "aria-owns");
      },
      $isFocusable: 1,
      $isPopupSource: 1,
      $isElementPopupSource: 1
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_hierarchy.dart",, Z, {
    "^": "",
    PopupHierarchy: {
      "^": "Object;_visiblePopupStack,0_rootPane,0_triggerListener,0_keyUpListener,0_lastTriggerEvent",
      _isInHiddenModal$0: function() {
        var t1, t2, modalPanes;
        t1 = document;
        t2 = W.Element;
        H.assertIsSubtype(t2, t2, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'T' in 'querySelectorAll'.");
        t1 = C.HtmlDocument_methods._querySelectorAll$1(t1, ".acx-overlay-container .pane.modal.visible");
        modalPanes = new W._FrozenElementList(t1, [t2]);
        if (!modalPanes.get$isEmpty(modalPanes)) {
          t2 = this._rootPane;
          if (t2 != null)
            t1 = t2 !== H.interceptedTypeCheck(C.NodeList_methods.get$last(t1), "$isElement") && modalPanes.contains$1(modalPanes, this._rootPane);
          else
            t1 = true;
          if (t1)
            return true;
        }
        return false;
      },
      _onTrigger$1: [function($event) {
        var t1, i, t2, current, t3, t4, _i;
        H.interceptedTypeCheck($event, "$isEvent");
        if (($event == null ? null : J.get$target$x($event)) == null)
          return;
        this._lastTriggerEvent = $event;
        if (this._isInHiddenModal$0())
          return;
        for (t1 = this._visiblePopupStack, i = t1.length - 1, t2 = J.getInterceptor$x($event); i >= 0; --i) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          current = t1[i];
          t3 = current._overlayRef;
          t4 = t3 == null ? null : t3.overlayElement;
          if (t4 == null)
            continue;
          t3 = t3 == null ? null : t3.overlayElement;
          if (Z.isParentOf(t3, H.interceptedTypeCheck(t2.get$target($event), "$isNode")))
            return;
          for (t3 = current.get$autoDismissBlockers(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
            if (Z.isParentOf(t3[_i], H.interceptedTypeCheck(t2.get$target($event), "$isNode")))
              return;
          if (H.boolTypeCheck(current.state._backingMap._observable_map$_map.$index(0, C.Symbol_autoDismiss))) {
            current.set$visible(0, false);
            t3 = current._onAutoDismissed;
            H.assertSubtypeOfRuntimeType($event, H.getTypeArgumentByIndex(t3, 0));
            if (!t3.get$_mayAddEvent())
              H.throwExpression(t3._addEventError$0());
            t3._sendData$1($event);
          }
        }
      }, "call$1", "get$_onTrigger", 4, 0, 26, 7],
      _onKeyUp$1: [function($event) {
        var t1, i, current, t2, t3, _i;
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        if (($event == null ? null : W._convertNativeToDart_EventTarget($event.target)) == null)
          return;
        this._lastTriggerEvent = $event;
        if (this._isInHiddenModal$0())
          return;
        if ($event.keyCode === 27)
          for (t1 = this._visiblePopupStack, i = t1.length - 1; i >= 0; --i) {
            if (i >= t1.length)
              return H.ioore(t1, i);
            current = t1[i];
            t2 = current._overlayRef;
            t3 = t2 == null ? null : t2.overlayElement;
            if (t3 == null)
              continue;
            t2 = t2 == null ? null : t2.overlayElement;
            if (Z.isParentOf(t2, H.interceptedTypeCheck(W._convertNativeToDart_EventTarget($event.target), "$isNode"))) {
              $event.stopPropagation();
              current.set$visible(0, false);
              return;
            }
            for (t2 = current.get$autoDismissBlockers(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
              if (Z.isParentOf(t2[_i], H.interceptedTypeCheck(W._convertNativeToDart_EventTarget($event.target), "$isNode"))) {
                $event.stopPropagation();
                current.set$visible(0, false);
                return;
              }
          }
      }, "call$1", "get$_onKeyUp", 4, 0, 5]
    },
    PopupHierarchyElement: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_interface.dart",, L, {
    "^": "",
    PopupEvents: {
      "^": "Object;",
      get$onVisible: function() {
        var t1 = this.PopupEvents_onVisibleController;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      }
    },
    PopupBase: {
      "^": "Object;",
      set$matchMinSourceWidth: ["super$PopupBase$matchMinSourceWidth", function(matchMinSourceWidth) {
        this.state._backingMap.$indexSet(0, C.Symbol_matchMinSourceWidth, true);
      }],
      set$source: ["super$PopupBase$source", function(_, source) {
        this.state._backingMap.$indexSet(0, C.Symbol_source, source);
      }]
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_ref.dart",, V, {
    "^": "",
    PopupRef: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_size_provider.dart",, F, {
    "^": "",
    PopupSizeProvider: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_source_directive.dart",, L, {
    "^": "",
    PopupSourceDirective: {
      "^": "Object;_domPopupSourceFactory,_popup_source_directive$_initAriaAttributes,_popup_source_directive$_element,_referenceDirective,_focusable,_popup_source_directive$_alignOriginX,_popup_source_directive$_alignOriginY,0_popupSource,0_popupId",
      get$sourceElement: function() {
        return this._popup_source_directive$_element;
      },
      get$alignOriginX: function() {
        return this._popupSource._alignOriginX;
      },
      get$alignOriginY: function() {
        return this._popupSource._alignOriginY;
      },
      onDimensionsChanged$1$track: function(track) {
        var t1, t2;
        t1 = this._popupSource;
        if (t1 == null)
          t1 = null;
        else {
          t2 = t1.sourceElement;
          t2 = t1._asyncMeasureSize.call$2$track(t2, track);
          t1 = t2;
        }
        return t1 == null ? null : new P._DistinctStream(null, t1, [H.getRuntimeTypeArgument(t1, "Stream", 0)]);
      },
      get$dimensions: function() {
        var t1 = this._popupSource;
        return t1 == null ? null : t1.sourceElement.getBoundingClientRect();
      },
      get$isRtl: function() {
        this._popupSource.toString;
        return $.$get$DomPopupSource__isRtl();
      },
      focus$0: function(_) {
        var t1 = this._focusable;
        if (t1 != null)
          t1.focus$0(0);
        else {
          t1 = this._popup_source_directive$_element;
          if (!(t1 == null))
            t1.focus();
        }
      },
      onOpen$0: function(_) {
        var t1 = this._popupSource;
        if (!(t1 == null))
          t1.onOpen$0(0);
      },
      onClose$0: function(_) {
        var t1 = this._popupSource;
        if (!(t1 == null))
          t1.onClose$0(0);
      },
      $isFocusable: 1,
      $isPopupSource: 1,
      $isElementPopupSource: 1,
      static: {
        PopupSourceDirective$: function(_domPopupSourceFactory, _element, _referenceDirective, _focusable, initAriaAttributes) {
          return new L.PopupSourceDirective(_domPopupSourceFactory, E.attributeToBool(initAriaAttributes, true), _element, _referenceDirective, _focusable, C.Alignment_dMH, C.Alignment_dMH);
        }
      }
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_state.dart",, F, {
    "^": "",
    PopupState: {
      "^": "Observable;_backingMap,_observable$_delegate,_isNotGeneric",
      $eq: function(_, o) {
        var t1, t2, t3, t4;
        if (o == null)
          return false;
        if (o instanceof F.PopupState) {
          t1 = o._backingMap._observable_map$_map;
          t2 = this._backingMap._observable_map$_map;
          if (H.boolTypeCheck(t1.$index(0, C.Symbol_autoDismiss)) == H.boolTypeCheck(t2.$index(0, C.Symbol_autoDismiss)))
            if (H.boolTypeCheck(t1.$index(0, C.Symbol_enforceSpaceConstraints)) == H.boolTypeCheck(t2.$index(0, C.Symbol_enforceSpaceConstraints)))
              if (H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth)) == H.boolTypeCheck(t2.$index(0, C.Symbol_matchMinSourceWidth))) {
                t3 = H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource");
                t4 = H.interceptedTypeCheck(t2.$index(0, C.Symbol_source), "$isPopupSource");
                t1 = (t3 == null ? t4 == null : t3 === t4) && H.intTypeCheck(t1.$index(0, C.Symbol_offsetX)) == H.intTypeCheck(t2.$index(0, C.Symbol_offsetX)) && H.intTypeCheck(t1.$index(0, C.Symbol_offsetY)) == H.intTypeCheck(t2.$index(0, C.Symbol_offsetY)) && J.$eq$(H.listSuperNativeTypeCheck(t1.$index(0, C.Symbol_preferredPositions), "$isIterable"), H.listSuperNativeTypeCheck(t2.$index(0, C.Symbol_preferredPositions), "$isIterable")) && H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)) == H.boolTypeCheck(t2.$index(0, C.Symbol_trackLayoutChanges)) && H.boolTypeCheck(t1.$index(0, C.Symbol_constrainToViewport)) == H.boolTypeCheck(t2.$index(0, C.Symbol_constrainToViewport));
              } else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        } else
          t1 = false;
        return t1;
      },
      get$hashCode: function(_) {
        var t1 = this._backingMap._observable_map$_map;
        return X.hashObjects([H.boolTypeCheck(t1.$index(0, C.Symbol_autoDismiss)), H.boolTypeCheck(t1.$index(0, C.Symbol_enforceSpaceConstraints)), H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth)), H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource"), H.intTypeCheck(t1.$index(0, C.Symbol_offsetX)), H.intTypeCheck(t1.$index(0, C.Symbol_offsetY)), H.listSuperNativeTypeCheck(t1.$index(0, C.Symbol_preferredPositions), "$isIterable"), H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)), H.boolTypeCheck(t1.$index(0, C.Symbol_constrainToViewport))]);
      },
      toString$0: function(_) {
        return "PopupState " + P.MapBase_mapToString(this._backingMap);
      },
      $asObservable: function() {
        return [Y.ChangeRecord];
      }
    }
  }], ["", "package:angular_components/src/laminate/ruler/ruler_interface.dart",, L, {
    "^": "",
    RulerBase: {
      "^": "Object;$ti",
      measure$2$offset: ["super$RulerBase$measure", function(_, element, offset) {
        var t1, t2, completer;
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(this, "RulerBase", 0));
        t1 = this._dom_ruler$_domService;
        t2 = new P._Future(0, $.Zone__current, [null]);
        completer = new P._SyncCompleter(t2, [null]);
        t1.scheduleRead$1(completer.get$complete(completer));
        return new E.ZonedFuture(t2, H.instantiate1(t1._ngZone.get$runOutsideAngular(), null), [null]).then$1$1(new L.RulerBase_measure_closure(this, element, false), [P.Rectangle, P.num]);
      }],
      track$1: ["super$RulerBase$track", function(_, element) {
        var t1, controller;
        t1 = {};
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(this, "RulerBase", 0));
        t1.controller = null;
        t1.subscription = null;
        controller = P.StreamController_StreamController(new L.RulerBase_track_closure(t1), new L.RulerBase_track_closure0(t1, this, element), null, null, true, [P.Rectangle, P.num]);
        t1.controller = controller;
        t1 = H.getTypeArgumentByIndex(controller, 0);
        return new P._DistinctStream(H.functionTypeCheck(new L.RulerBase_track_closure1(), {func: 1, ret: P.bool, args: [t1, t1]}), new P._ControllerStream(controller, [t1]), [t1]);
      }],
      updateSync$12$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width$zIndex: function(element, bottom, cssClasses, height, left, position, right, $top, useCssTransform, visibility, width, zIndex) {
        var setProperty, t1, t2, lastCssClasses, t3;
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(this, "RulerBase", 0));
        H.assertSubtype(cssClasses, "$isList", [P.String], "$asList");
        setProperty = new L.RulerBase_updateSync_closure(this, element);
        setProperty.call$2("display", null);
        setProperty.call$2("visibility", null);
        t1 = visibility != null;
        if (t1 && visibility !== C.Visibility_Visible_null_null)
          visibility.apply$1(setProperty);
        if (cssClasses != null) {
          t2 = this._addedCssClasses;
          lastCssClasses = t2.$index(0, element);
          if (lastCssClasses != null)
            this.removeCssClassesSync$2(element, lastCssClasses);
          this.addCssClassesSync$2(element, cssClasses);
          t2.$indexSet(0, element, cssClasses);
        }
        setProperty.call$2("width", null);
        setProperty.call$2("height", null);
        if (useCssTransform) {
          if (left != null) {
            setProperty.call$2("left", "0");
            t2 = "translateX(" + C.JSNumber_methods.round$0(left) + "px) ";
          } else {
            setProperty.call$2("left", null);
            t2 = "";
          }
          if ($top != null) {
            setProperty.call$2("top", "0");
            t2 += "translateY(" + C.JSNumber_methods.round$0($top) + "px)";
          } else
            setProperty.call$2("top", null);
          t3 = t2.charCodeAt(0) == 0 ? t2 : t2;
          setProperty.call$2("transform", t3);
          setProperty.call$2("-webkit-transform", t3);
          if (t2.length !== 0) {
            setProperty.call$2("transform", t3);
            setProperty.call$2("-webkit-transform", t3);
          }
        } else {
          if (left != null)
            setProperty.call$2("left", left === 0 ? "0" : H.S(left) + "px");
          else
            setProperty.call$2("left", null);
          if ($top != null)
            setProperty.call$2("top", $top === 0 ? "0" : H.S($top) + "px");
          else
            setProperty.call$2("top", null);
          setProperty.call$2("transform", null);
          setProperty.call$2("-webkit-transform", null);
        }
        setProperty.call$2("right", null);
        setProperty.call$2("bottom", null);
        if (zIndex != null)
          setProperty.call$2("z-index", H.S(zIndex));
        else
          setProperty.call$2("z-index", null);
        if (t1 && visibility === C.Visibility_Visible_null_null)
          visibility.apply$1(setProperty);
      },
      updateSync$11$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width: function(element, bottom, cssClasses, height, left, position, right, $top, useCssTransform, visibility, width) {
        return this.updateSync$12$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width$zIndex(element, bottom, cssClasses, height, left, position, right, $top, useCssTransform, visibility, width, null);
      },
      updateSync$2$zIndex: function(element, zIndex) {
        return this.updateSync$12$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width$zIndex(element, null, null, null, null, null, null, null, true, null, null, zIndex);
      }
    },
    RulerBase_measure_closure: {
      "^": "Closure:100;$this,element,offset",
      call$1: [function(_) {
        return this.$this.measureSync$2$offset(this.element, this.offset);
      }, null, null, 4, 0, null, 0, "call"]
    },
    RulerBase_track_closure0: {
      "^": "Closure:0;_box_0,$this,element",
      call$0: function() {
        var t1, t2, t3, t4, t5;
        t1 = this.$this;
        t2 = this.element;
        t3 = t1.measure$1(0, t2);
        t4 = this._box_0;
        t5 = t4.controller;
        t3.then$1$1(t5.get$add(t5), -1);
        t4.subscription = t1._dom_ruler$_domService.get$onLayoutChanged().listen$2$onDone(new L.RulerBase_track__closure(t4, t1, t2), new L.RulerBase_track__closure0(t4));
      }
    },
    RulerBase_track__closure: {
      "^": "Closure:3;_box_0,$this,element",
      call$1: [function(_) {
        this._box_0.controller.add$1(0, this.$this.measureSync$1(this.element));
      }, null, null, 4, 0, null, 0, "call"]
    },
    RulerBase_track__closure0: {
      "^": "Closure:0;_box_0",
      call$0: [function() {
        this._box_0.controller.close$0(0);
      }, null, null, 0, 0, null, "call"]
    },
    RulerBase_track_closure: {
      "^": "Closure:0;_box_0",
      call$0: [function() {
        this._box_0.subscription.cancel$0(0);
      }, null, null, 0, 0, null, "call"]
    },
    RulerBase_track_closure1: {
      "^": "Closure:42;",
      call$2: function(previous, next) {
        var t1, t2, t3;
        t1 = [P.num];
        H.assertSubtype(previous, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(next, "$isRectangle", t1, "$asRectangle");
        if (previous == null || next == null)
          return previous == null ? next == null : previous === next;
        t1 = new L.RulerBase_track_closure_withinEpsilon();
        t2 = J.getInterceptor$x(previous);
        t3 = J.getInterceptor$x(next);
        return t1.call$2(t2.get$top(previous), t3.get$top(next)) && t1.call$2(t2.get$left(previous), t3.get$left(next)) && t1.call$2(t2.get$width(previous), t3.get$width(next)) && t1.call$2(t2.get$height(previous), t3.get$height(next));
      }
    },
    RulerBase_track_closure_withinEpsilon: {
      "^": "Closure:102;",
      call$2: function(a, b) {
        if (typeof a !== "number")
          return a.$sub();
        if (typeof b !== "number")
          return H.iae(b);
        return Math.abs(a - b) < 0.01;
      }
    },
    RulerBase_updateSync_closure: {
      "^": "Closure:34;$this,element",
      call$2: function($name, value) {
        var t1 = this.element.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, $name), value, null);
      }
    }
  }], ["", "package:angular_components/src/model/selection/interfaces/selectable.dart",, E, {
    "^": "",
    Selectable__isOptionCheck: function(isMaybeModel, item, option, defaultIfMissingInterface, $T) {
      H.assertSubtypeOfRuntimeType(item, $T);
      if (H.checkSubtype(isMaybeModel, "$isSelectable", [$T], null)) {
        isMaybeModel.getSelectable$1(item);
        return false;
      }
      return defaultIfMissingInterface;
    },
    SelectableOption: {
      "^": "Object;index,_selectable$_name",
      toString$0: function(_) {
        return this._selectable$_name;
      }
    }
  }], ["", "package:angular_components/src/utils/angular/managed_zone/managed_zone.dart",, V, {
    "^": "",
    ManagedZone: {
      "^": "Object;",
      $isDisposable: 1
    },
    ManagedZoneBase: {
      "^": "ManagedZone;",
      capturedTurnStart$1: [function($event) {
        this._managed_zone$_isRunning = true;
      }, "call$1", "get$capturedTurnStart", 4, 0, 2, 7],
      capturedTurnDone$1: ["super$ManagedZoneBase$capturedTurnDone", function($event) {
        this._managed_zone$_isRunning = false;
      }],
      capturedEventDone$1: ["super$ManagedZoneBase$capturedEventDone", function($event) {
      }],
      toString$0: function(_) {
        var t1, t2;
        t1 = $.Zone__current;
        t2 = this.outerZone;
        t2 = t1 == null ? t2 == null : t1 === t2;
        return "ManagedZone " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["inInnerZone", !t2, "inOuterZone", t2], P.String, P.bool));
      }
    }
  }], ["", "package:angular_components/src/utils/async/async_update_scheduler.dart",, Z, {
    "^": "",
    AsyncUpdateScheduler: {
      "^": "Object;_updateCallback,_isUpdateScheduled,0_onUpdateStreamController",
      scheduleUpdate$0: function() {
        if (!this._isUpdateScheduled) {
          this._isUpdateScheduled = true;
          P.scheduleMicrotask(new Z.AsyncUpdateScheduler_scheduleUpdate_closure(this));
        }
      }
    },
    AsyncUpdateScheduler_scheduleUpdate_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._isUpdateScheduled = false;
        t1 = t1._onUpdateStreamController;
        if (t1 != null)
          t1.add$1(0, null);
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular_components/src/utils/async/rate_limit.dart",, R, {
    "^": "",
    _RateLimitSink: {
      "^": "Object;_outputSink,_rate_limit$_duration,_rateLimitStrategy,0_addEvent",
      set$_addEvent: function(_addEvent) {
        this._addEvent = H.functionTypeCheck(_addEvent, {func: 1, ret: -1, args: [,]});
      },
      add$1: [function(_, $event) {
        this._addEvent.call$1($event);
      }, null, "get$add", 5, 0, null, 7],
      addError$2: function(error, stackTrace) {
        var t1 = this._outputSink._sink;
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_addError(error, stackTrace);
      },
      close$0: function(_) {
        var t1 = this._outputSink._sink;
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_close();
      },
      $isEventSink: 1,
      $asEventSink: Isolate.functionThatReturnsNull
    },
    RateLimitTransformer: {
      "^": "StreamTransformerBase;_rate_limit$_duration,_rateLimitStrategy,$ti",
      bind$1: function(stream) {
        return new P._BoundSinkStream(new R.RateLimitTransformer_bind_closure(this), H.assertSubtype(stream, "$isStream", [H.getTypeArgumentByIndex(this, 0)], "$asStream"), [null, H.getTypeArgumentByIndex(this, 1)]);
      }
    },
    RateLimitTransformer_bind_closure: {
      "^": "Closure:103;$this",
      call$1: function(sink) {
        var t1, t2, t3;
        t1 = this.$this;
        t2 = t1._rate_limit$_duration;
        t1 = t1._rateLimitStrategy;
        t3 = new R._RateLimitSink(sink, t2, t1);
        t3.set$_addEvent(t1.call$2(sink.get$add(sink), t2));
        return t3;
      }
    }
  }], ["", "package:angular_components/src/utils/async/zoned_async.dart",, E, {
    "^": "",
    _ZoneRunner: {
      "^": "Object;"
    },
    ZonedFuture: {
      "^": "_ZoneRunner;_innerFuture,_runInZoneFn,$ti",
      asStream$0: function() {
        var t1 = this._innerFuture;
        return new E.ZonedStream(P.Stream_Stream$fromFuture(t1, H.getTypeArgumentByIndex(t1, 0)), this._runInZoneFn, this.$ti);
      },
      then$1$2$onError: function(onValue, onError, $S) {
        var t1 = [P.Future, $S];
        return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedFuture_then_closure(this, H.functionTypeCheck(onValue, {func: 1, ret: {futureOr: 1, type: $S}, args: [H.getTypeArgumentByIndex(this, 0)]}), onError, $S), {func: 1, ret: t1})), t1);
      },
      then$1$1: function(onValue, $S) {
        return this.then$1$2$onError(onValue, null, $S);
      },
      whenComplete$1: function(action) {
        var t1 = [P.Future, H.getTypeArgumentByIndex(this, 0)];
        return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedFuture_whenComplete_closure(this, H.functionTypeCheck(action, {func: 1})), {func: 1, ret: t1})), t1);
      },
      $isFuture: 1
    },
    ZonedFuture_then_closure: {
      "^": "Closure;$this,onValue,onError,S",
      call$0: [function() {
        return this.$this._innerFuture.then$1$2$onError(this.onValue, this.onError, this.S);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: [P.Future, this.S]};
      }
    },
    ZonedFuture_whenComplete_closure: {
      "^": "Closure;$this,action",
      call$0: [function() {
        return this.$this._innerFuture.whenComplete$1(this.action);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: [P.Future, H.getTypeArgumentByIndex(this.$this, 0)]};
      }
    },
    ZonedStream: {
      "^": "_ZonedStream_Stream__ZoneRunner;_innerStream,_runInZoneFn,$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this, 0);
        t2 = [P.StreamSubscription, t1];
        return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedStream_listen_closure(this, H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError), {func: 1, ret: t2})), t2);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
      }
    },
    ZonedStream_listen_closure: {
      "^": "Closure;$this,onData,onError,onDone,cancelOnError",
      call$0: [function() {
        return this.$this._innerStream.listen$4$cancelOnError$onDone$onError(this.onData, this.cancelOnError, this.onDone, this.onError);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: [P.StreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]};
      }
    },
    _ZonedStream_Stream__ZoneRunner: {
      "^": "Stream+_ZoneRunner;"
    }
  }], ["", "package:angular_components/theme/dark_theme.dart",, F, {
    "^": "",
    AcxDarkTheme: {
      "^": "Object;isDarkTheme",
      static: {
        AcxDarkTheme$: function(dark) {
          return new F.AcxDarkTheme(dark == null ? false : dark);
        }
      }
    }
  }], ["", "package:angular_components/utils/angular/css/css.dart",, Q, {
    "^": "",
    constructEncapsulatedCss: function(className, classes) {
      var t1, result, t2;
      for (t1 = classes.readClasses$0(), t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H.getTypeArgumentByIndex(t1, 0)), result = ""; t1.moveNext$0();) {
        t2 = t1._collection$_current;
        if (J.startsWith$1$s(t2, "_"))
          result += " " + t2;
      }
      return result;
    }
  }], ["", "package:angular_components/utils/angular/imperative_view/imperative_view.dart",, O, {
    "^": "",
    AcxImperativeViewUtils: {
      "^": "Object;_imperative_view$_componentLoader,_imperative_view$_domService"
    }
  }], ["", "package:angular_components/utils/angular/managed_zone/angular_2.dart",, T, {
    "^": "",
    Angular2ManagedZone: {
      "^": "ManagedZoneBase;_angular_2$_ngZone,_angular_2$_isDisposed,0innerZone,0outerZone,0_onTurnDoneController,0_onTurnStartController,0_onEventDoneController,_managed_zone$_isRunning",
      Angular2ManagedZone$1: function(_ngZone) {
        var t1, t2, t3;
        t1 = this._angular_2$_ngZone;
        t2 = P.Null;
        t1.toString;
        t3 = H.functionTypeCheck(new T.Angular2ManagedZone_closure(this), {func: 1, ret: t2});
        t1._outerZone.run$1$1(t3, t2);
      },
      capturedTurnDone$1: [function($event) {
        if (this._angular_2$_isDisposed)
          return;
        this.super$ManagedZoneBase$capturedTurnDone($event);
      }, "call$1", "get$capturedTurnDone", 4, 0, 2, 7],
      capturedEventDone$1: [function($event) {
        if (this._angular_2$_isDisposed)
          return;
        this.super$ManagedZoneBase$capturedEventDone($event);
      }, "call$1", "get$capturedEventDone", 4, 0, 2, 7],
      static: {
        Angular2ManagedZone$: function(_ngZone) {
          var t1 = new T.Angular2ManagedZone(_ngZone, false, false);
          t1.Angular2ManagedZone$1(_ngZone);
          return t1;
        }
      }
    },
    Angular2ManagedZone_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2, t3;
        t1 = this.$this;
        t1.outerZone = $.Zone__current;
        t2 = t1._angular_2$_ngZone;
        t3 = t2._onTurnStart;
        new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(t1.get$capturedTurnStart());
        t3 = t2._onMicrotaskEmpty;
        new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(t1.get$capturedTurnDone());
        t2 = t2._onTurnDone;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(t1.get$capturedEventDone());
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular_components/utils/angular/properties/properties.dart",, E, {
    "^": "",
    _parseBool: function(strValue) {
      switch (strValue) {
        case "":
          return true;
        case "true":
          return true;
        case "false":
          return false;
        default:
          throw H.wrapException(P.ArgumentError$value(strValue, "strValue", 'Only "", "true", and "false" are acceptable values for parseBool. Found: '));
      }
    },
    getBool: function(inputValue) {
      return inputValue;
    },
    attributeToBool: function(inputValue, defaultValue) {
      return E._parseBool(inputValue);
    },
    getInt: function(inputValue, defaultValue) {
      return inputValue;
    }
  }], ["", "package:angular_components/utils/angular/reference/reference.dart",, F, {
    "^": "",
    ReferenceDirective: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/utils/browser/dom_service/angular_2.dart",, T, {
    "^": "",
    createDomService: function(service, disposer, zone, $window) {
      var t1;
      if (service != null)
        return service;
      t1 = $._singletonService;
      if (t1 != null)
        return t1;
      t1 = [{func: 1, ret: -1}];
      t1 = new F.DomService(H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), zone, $window, C.C__RootZone, false, false, -1, C.DomServiceState_0, false, 4000, false, false);
      $._singletonService = t1;
      M.createDomServiceWebdriverTestability(t1).register$0(0);
      if (!(disposer == null))
        disposer.addFunction$1(new T.createDomService_closure());
      return $._singletonService;
    },
    createDomService_closure: {
      "^": "Closure:0;",
      call$0: function() {
        $._singletonService = null;
      }
    }
  }], ["", "package:angular_components/utils/browser/dom_service/dom_service.dart",, F, {
    "^": "",
    DomService: {
      "^": "Object;_domReadQueue,_domWriteQueue,_ngZone,_dom_service$_window,_rootZone,_insideDigest,0_layoutObserveRead,_scheduledProcessQueue,0_onLayoutChangedController,0_onLayoutChangedStream,0_onQueuesProcessedController,0_onQueuesProcessedStream,_nextFrameId,0_nextFrameCompleter,0_nextFrameFuture,_dom_service$_state,_crossAppInitialized,0_onIdleController,0_onIdleStream,_idleTimerMillis,0_idleTimer,_inDispatchTurnDoneEvent,0isDomMutatedPredicate,0resetIsDomMutated,_writeQueueChangedLayout",
      set$_nextFrameFuture: function(_nextFrameFuture) {
        this._nextFrameFuture = H.assertSubtype(_nextFrameFuture, "$isFuture", [P.num], "$asFuture");
      },
      init$0: function() {
        var t1, t2, t3;
        if (this._crossAppInitialized)
          return;
        this._crossAppInitialized = true;
        t1 = this._ngZone;
        t2 = P.Null;
        t1.toString;
        t3 = H.functionTypeCheck(new F.DomService_init_closure(this), {func: 1, ret: t2});
        t1._outerZone.run$1$1(t3, t2);
      },
      get$nextFrame: function() {
        var t1, t2, completer, t3, t4, t5;
        if (this._nextFrameFuture == null) {
          t1 = P.num;
          t2 = new P._Future(0, $.Zone__current, [t1]);
          completer = new P._SyncCompleter(t2, [t1]);
          this._nextFrameCompleter = completer;
          t3 = this._ngZone;
          t4 = P.Null;
          t3.toString;
          t5 = H.functionTypeCheck(new F.DomService_nextFrame_closure(this, completer), {func: 1, ret: t4});
          t3._outerZone.run$1$1(t5, t4);
          this.set$_nextFrameFuture(new E.ZonedFuture(t2, H.instantiate1(t3.get$runOutsideAngular(), null), [t1]));
        }
        return this._nextFrameFuture;
      },
      scheduleRead$1: function(fn) {
        var callback;
        H.functionTypeCheck(fn, {func: 1, ret: -1});
        if (this._dom_service$_state === C.DomServiceState_2) {
          fn.call$0();
          return C.C__NoopDisposable;
        }
        callback = new X.DisposableCallback();
        callback._callback = fn;
        this._scheduleInQueue$2(callback.get$$call(), this._domReadQueue);
        return callback;
      },
      scheduleWrite$1: function(fn) {
        var callback;
        H.functionTypeCheck(fn, {func: 1, ret: -1});
        if (this._dom_service$_state === C.DomServiceState_1) {
          fn.call$0();
          return C.C__NoopDisposable;
        }
        callback = new X.DisposableCallback();
        callback._callback = fn;
        this._scheduleInQueue$2(callback.get$$call(), this._domWriteQueue);
        return callback;
      },
      _scheduleInQueue$2: function(fn, queue) {
        var t1 = {func: 1, ret: -1};
        H.functionTypeCheck(fn, t1);
        H.assertSubtype(queue, "$isList", [t1], "$asList");
        C.JSArray_methods.add$1(queue, $.DomService_maintainZoneOnCallbacks ? $.Zone__current.bindCallback$1$1(fn, -1) : fn);
        this._scheduleProcessQueue$0();
      },
      onWrite$0: function(_) {
        var t1, completer;
        t1 = new P._Future(0, $.Zone__current, [null]);
        completer = new P._SyncCompleter(t1, [null]);
        this.scheduleWrite$1(completer.get$complete(completer));
        return new E.ZonedFuture(t1, H.instantiate1(this._ngZone.get$runOutsideAngular(), null), [null]);
      },
      _processQueues$0: function() {
        var t1, t2, t3;
        t1 = this._domReadQueue;
        if (t1.length === 0 && this._domWriteQueue.length === 0) {
          this._scheduledProcessQueue = false;
          return;
        }
        this._dom_service$_state = C.DomServiceState_2;
        this._processQueue$1(t1);
        this._dom_service$_state = C.DomServiceState_1;
        t2 = this._domWriteQueue;
        t3 = this._processQueue$1(t2) > 0;
        this._writeQueueChangedLayout = t3;
        this._dom_service$_state = C.DomServiceState_0;
        if (t3)
          this._scheduleOnLayoutChanged$0();
        this._scheduledProcessQueue = false;
        if (t1.length !== 0 || t2.length !== 0)
          this._scheduleProcessQueue$0();
        else {
          t1 = this._onQueuesProcessedController;
          if (t1 != null)
            t1.add$1(0, this);
        }
      },
      _processQueue$1: function(queue) {
        var previousLength, i, fn;
        H.assertSubtype(queue, "$isList", [{func: 1, ret: -1}], "$asList");
        previousLength = queue.length;
        for (i = 0; i < queue.length; ++i) {
          fn = queue[i];
          fn.call$0();
        }
        C.JSArray_methods.set$length(queue, 0);
        return previousLength;
      },
      get$onLayoutChanged: function() {
        var t1, t2, t3;
        if (this._onLayoutChangedStream == null) {
          t1 = new P._SyncBroadcastStreamController(null, null, 0, [null]);
          this._onLayoutChangedController = t1;
          t2 = this._ngZone;
          this._onLayoutChangedStream = new E.ZonedStream(new P._BroadcastStream(t1, [null]), H.instantiate1(t2.get$runOutsideAngular(), null), [null]);
          t1 = P.Null;
          t3 = H.functionTypeCheck(new F.DomService_onLayoutChanged_closure(this), {func: 1, ret: t1});
          t2._outerZone.run$1$1(t3, t1);
        }
        return this._onLayoutChangedStream;
      },
      _listenOnLayoutEvents$1: function(events) {
        var t1 = H.getTypeArgumentByIndex(events, 0);
        W._EventStreamSubscription$(events._html$_target, events._eventType, H.functionTypeCheck(new F.DomService__listenOnLayoutEvents_closure(this), {func: 1, ret: -1, args: [t1]}), false, t1);
      },
      _scheduleProcessQueue$0: function() {
        if (!this._scheduledProcessQueue) {
          this._scheduledProcessQueue = true;
          this.get$nextFrame().then$1$1(new F.DomService__scheduleProcessQueue_closure(this), -1);
        }
      },
      _scheduleOnLayoutChanged$0: function() {
        if (this._layoutObserveRead != null)
          return;
        var t1 = this._onLayoutChangedController;
        t1 = t1 == null ? null : t1._firstSubscription != null;
        if (t1 !== true && true)
          return;
        if (this._dom_service$_state === C.DomServiceState_2) {
          this.scheduleWrite$1(new F.DomService__scheduleOnLayoutChanged_closure());
          return;
        }
        this._layoutObserveRead = this.scheduleRead$1(new F.DomService__scheduleOnLayoutChanged_closure0(this));
      },
      _resetIdleTimer$0: function() {
        return;
      }
    },
    DomService_init_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._ngZone._onMicrotaskEmpty;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new F.DomService_init__closure(t1));
      }, null, null, 0, 0, null, "call"]
    },
    DomService_init__closure: {
      "^": "Closure:12;$this",
      call$1: [function(_) {
        var t1, t2, e;
        t1 = this.$this;
        t1._inDispatchTurnDoneEvent = true;
        t2 = t1._dom_service$_window;
        e = C.HtmlDocument_methods._createEvent$1(document, "Event");
        J._initEvent$3$x(e, "doms-turn", true, true);
        (t2 && C.Window_methods).dispatchEvent$1(t2, e);
        t1._inDispatchTurnDoneEvent = false;
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService_nextFrame_closure: {
      "^": "Closure:0;$this,completer",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t1.init$0();
        t2 = t1._dom_service$_window;
        t1._nextFrameId = (t2 && C.Window_methods).requestAnimationFrame$1(t2, new F.DomService_nextFrame__closure(t1, this.completer));
      }, null, null, 0, 0, null, "call"]
    },
    DomService_nextFrame__closure: {
      "^": "Closure:104;$this,completer",
      call$1: [function(highResTimer) {
        var t1, t2;
        H.numTypeCheck(highResTimer);
        t1 = this.completer;
        if (t1.future._state !== 0)
          return;
        t2 = this.$this;
        if (t1 === t2._nextFrameCompleter) {
          t2.set$_nextFrameFuture(null);
          t2._nextFrameCompleter = null;
        }
        t1.complete$1(0, highResTimer);
      }, null, null, 4, 0, null, 66, "call"]
    },
    DomService_onLayoutChanged_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2, t3;
        t1 = this.$this;
        t2 = t1._ngZone;
        t3 = t2._onTurnStart;
        new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(new F.DomService_onLayoutChanged__closure(t1));
        t2 = t2._onMicrotaskEmpty;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new F.DomService_onLayoutChanged__closure0(t1));
        t2 = t1._dom_service$_window;
        t2.toString;
        t1._listenOnLayoutEvents$1(new W._EventStream(t2, "webkitAnimationEnd", false, [W.AnimationEvent]));
        t1._listenOnLayoutEvents$1(new W._EventStream(t2, "resize", false, [W.Event]));
        t1._listenOnLayoutEvents$1(new W._EventStream(t2, H.stringTypeCheck(W.Element__determineTransitionEventType(t2)), false, [W.TransitionEvent]));
        (t2 && C.Window_methods).addEventListener$2(t2, "doms-turn", new F.DomService_onLayoutChanged__closure1(t1));
      }, null, null, 0, 0, null, "call"]
    },
    DomService_onLayoutChanged__closure: {
      "^": "Closure:12;$this",
      call$1: [function(_) {
        var t1 = this.$this;
        if (t1._dom_service$_state !== C.DomServiceState_0)
          return;
        t1._insideDigest = true;
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService_onLayoutChanged__closure0: {
      "^": "Closure:12;$this",
      call$1: [function(_) {
        var t1 = this.$this;
        if (t1._dom_service$_state !== C.DomServiceState_0)
          return;
        t1._insideDigest = false;
        t1._scheduleOnLayoutChanged$0();
        t1._writeQueueChangedLayout = false;
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService_onLayoutChanged__closure1: {
      "^": "Closure:11;$this",
      call$1: [function(_) {
        var t1;
        H.interceptedTypeCheck(_, "$isEvent");
        t1 = this.$this;
        if (!t1._inDispatchTurnDoneEvent)
          t1._scheduleOnLayoutChanged$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService__listenOnLayoutEvents_closure: {
      "^": "Closure:2;$this",
      call$1: function(_) {
        return this.$this._scheduleOnLayoutChanged$0();
      }
    },
    DomService__scheduleProcessQueue_closure: {
      "^": "Closure:105;$this",
      call$1: [function(_) {
        H.numTypeCheck(_);
        return this.$this._processQueues$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService__scheduleOnLayoutChanged_closure: {
      "^": "Closure:0;",
      call$0: function() {
      }
    },
    DomService__scheduleOnLayoutChanged_closure0: {
      "^": "Closure:0;$this",
      call$0: function() {
        var t1, t2;
        t1 = this.$this;
        t1._layoutObserveRead = null;
        t2 = t1._onLayoutChangedController;
        if (t2 != null)
          t2.add$1(0, t1);
        t1._resetIdleTimer$0();
      }
    },
    DomServiceState: {
      "^": "Object;index,_dom_service$_name",
      toString$0: function(_) {
        return this._dom_service$_name;
      }
    }
  }], ["", "package:angular_components/utils/browser/dom_service/dom_service_webdriver_testability.dart",, M, {
    "^": "",
    createDomServiceWebdriverTestability: function(domService) {
      if ($.$get$testabilitiesEnabled())
        return M.DomServiceWebdriverTestability$_(domService);
      return new D.NullTestability();
    },
    DomServiceWebdriverTestability: {
      "^": "AbstractTestability;_dom_service_webdriver_testability$_domService,_callbacks",
      DomServiceWebdriverTestability$_$1: function(_domService) {
        var t1, t2;
        t1 = this._dom_service_webdriver_testability$_domService;
        t2 = t1._onQueuesProcessedStream;
        if (t2 == null) {
          t2 = new P._SyncBroadcastStreamController(null, null, 0, [null]);
          t1._onQueuesProcessedController = t2;
          t2 = new E.ZonedStream(new P._BroadcastStream(t2, [null]), H.instantiate1(t1._ngZone.get$runOutsideAngular(), null), [null]);
          t1._onQueuesProcessedStream = t2;
          t1 = t2;
        } else
          t1 = t2;
        t1.listen$1(new M.DomServiceWebdriverTestability$__closure(this));
      },
      static: {
        DomServiceWebdriverTestability$_: function(_domService) {
          var t1 = new M.DomServiceWebdriverTestability(_domService, H.setRuntimeTypeInfo([], [{func: 1, ret: -1, args: [P.bool, P.String]}]));
          t1.DomServiceWebdriverTestability$_$1(_domService);
          return t1;
        }
      }
    },
    DomServiceWebdriverTestability$__closure: {
      "^": "Closure:2;$this",
      call$1: [function(_) {
        this.$this._runCallbacksIfStable$0();
        return;
      }, null, null, 4, 0, null, 0, "call"]
    }
  }], ["events", "package:angular_components/utils/browser/events/events.dart",, Z, {
    "^": "",
    isSpaceKey: function($event) {
      var t1 = $event.keyCode;
      return t1 !== 0 ? t1 === 32 : $event.key === " ";
    },
    triggersOutside: function(element) {
      var t1 = {};
      t1.element = element;
      return Z.triggersOutsideAny(new Z.triggersOutside_closure(t1));
    },
    triggersOutsideAny: function(checkNodeInside) {
      var t1, t2, controller;
      t1 = {};
      H.functionTypeCheck(checkNodeInside, {func: 1, ret: P.bool, args: [W.Node]});
      t1.controller = null;
      t1.clickListener = null;
      t1.mouseDownListener = null;
      t1.mouseUpListener = null;
      t1.listener = null;
      if ($.enableNewTriggerLogic == null)
        $.enableNewTriggerLogic = false;
      t2 = W.Event;
      controller = new P._SyncBroadcastStreamController(new Z.triggersOutsideAny_closure(t1, checkNodeInside), new Z.triggersOutsideAny_closure0(t1), 0, [t2]);
      t1.controller = controller;
      return new P._BroadcastStream(controller, [t2]);
    },
    closestWithClass: function(target, className) {
      for (; target != null;) {
        if (J._hasAttribute$1$x(target, "class") && J.get$classes$x(target).contains$1(0, className))
          return target;
        target = target.parentElement;
      }
      return;
    },
    isParentOf: function(element, node) {
      for (; node != null;)
        if (node === element)
          return true;
        else
          node = node.parentElement;
      return false;
    },
    triggersOutside_closure: {
      "^": "Closure:37;_box_0",
      call$1: function(node) {
        return false;
      }
    },
    triggersOutsideAny_closure: {
      "^": "Closure:0;_box_1,checkNodeInside",
      call$0: function() {
        var t1, t2, t3, t4, t5;
        t1 = {};
        t1.lastEvent = null;
        t1.lastDownEvent = null;
        t2 = this._box_1;
        t2.listener = new Z.triggersOutsideAny__closure(t1, t2, this.checkNodeInside);
        if ($.enableNewTriggerLogic) {
          t3 = W.MouseEvent;
          t2.mouseDownListener = W._EventStreamSubscription$(document, "mousedown", H.functionTypeCheck(new Z.triggersOutsideAny__closure0(t1), {func: 1, ret: -1, args: [t3]}), false, t3);
        }
        t3 = document;
        t4 = W.MouseEvent;
        t5 = {func: 1, ret: -1, args: [t4]};
        t2.mouseUpListener = W._EventStreamSubscription$(t3, "mouseup", H.functionTypeCheck(new Z.triggersOutsideAny__closure1(t1, t2), t5), false, t4);
        t2.clickListener = W._EventStreamSubscription$(t3, "click", H.functionTypeCheck(new Z.triggersOutsideAny__closure2(t1, t2), t5), false, t4);
        C.HtmlDocument_methods.addEventListener$3(t3, "focus", t2.listener, true);
        C.HtmlDocument_methods.addEventListener$2(t3, "touchend", t2.listener);
      }
    },
    triggersOutsideAny__closure: {
      "^": "Closure:11;_box_0,_box_1,checkNodeInside",
      call$1: [function(e) {
        var node, t1;
        H.interceptedTypeCheck(e, "$isEvent");
        this._box_0.lastEvent = e;
        node = H.interceptedTypeCast(J.get$target$x(e), "$isNode");
        for (t1 = this.checkNodeInside; node != null;)
          if (t1.call$1(node))
            return;
          else
            node = node.parentElement;
        this._box_1.controller.add$1(0, e);
      }, null, null, 4, 0, null, 6, "call"]
    },
    triggersOutsideAny__closure0: {
      "^": "Closure:27;_box_0",
      call$1: function(e) {
        this._box_0.lastDownEvent = H.interceptedTypeCheck(e, "$isMouseEvent");
      }
    },
    triggersOutsideAny__closure1: {
      "^": "Closure:27;_box_0,_box_1",
      call$1: function(e) {
        var t1, t2, t3;
        H.interceptedTypeCheck(e, "$isMouseEvent");
        t1 = this._box_0;
        t2 = t1.lastDownEvent;
        if (t2 != null) {
          t3 = W._convertNativeToDart_EventTarget(e.target);
          t2 = W._convertNativeToDart_EventTarget(t2.target);
          t2 = t3 == null ? t2 == null : t3 === t2;
        } else
          t2 = true;
        if (t2)
          this._box_1.listener.call$1(e);
        t1.lastEvent = e;
      }
    },
    triggersOutsideAny__closure2: {
      "^": "Closure:27;_box_0,_box_1",
      call$1: function(e) {
        var t1, t2, t3, t4;
        H.interceptedTypeCheck(e, "$isMouseEvent");
        t1 = this._box_0;
        t2 = t1.lastEvent;
        t3 = t2 == null;
        if ((t3 ? null : t2.type) === "mouseup") {
          t4 = W._convertNativeToDart_EventTarget(e.target);
          t2 = t4 == null ? (t3 ? null : J.get$target$x(t2)) == null : t4 === (t3 ? null : J.get$target$x(t2));
        } else
          t2 = false;
        if (t2)
          return;
        t2 = t1.lastDownEvent;
        if (t2 != null) {
          t3 = W._convertNativeToDart_EventTarget(e.target);
          t2 = W._convertNativeToDart_EventTarget(t2.target);
          t2 = t3 == null ? t2 == null : t3 === t2;
        } else
          t2 = true;
        if (t2)
          this._box_1.listener.call$1(e);
        t1.lastDownEvent = null;
      }
    },
    triggersOutsideAny_closure0: {
      "^": "Closure:0;_box_1",
      call$0: function() {
        var t1, t2;
        t1 = this._box_1;
        t1.clickListener.cancel$0(0);
        t1.clickListener = null;
        t2 = t1.mouseDownListener;
        if (!(t2 == null))
          t2.cancel$0(0);
        t1.mouseDownListener = null;
        t1.mouseUpListener.cancel$0(0);
        t1.mouseUpListener = null;
        t2 = document;
        C.HtmlDocument_methods.removeEventListener$3(t2, "focus", t1.listener, true);
        C.HtmlDocument_methods.removeEventListener$2(t2, "touchend", t1.listener);
      }
    }
  }], ["", "package:angular_components/utils/browser/feature_detector/feature_detector.dart",, S, {}], ["", "package:angular_components/utils/disposer/disposable_callback.dart",, X, {
    "^": "",
    DisposableCallbackBase: {
      "^": "Object;",
      $isDisposable: 1
    },
    DisposableCallback: {
      "^": "DisposableCallbackBase;0_callback",
      call$0: [function() {
        var t1 = this._callback;
        if (t1 != null)
          t1.call$0();
      }, "call$0", "get$$call", 0, 0, 107]
    }
  }], ["", "package:angular_components/utils/disposer/disposer.dart",, R, {
    "^": "",
    Disposable: {
      "^": "Object;"
    },
    _NoopDisposable: {
      "^": "Object;",
      $isDisposable: 1
    },
    Disposer: {
      "^": "Object;0_disposeFunctions,0_disposeSubs,0_disposeSinks,0_disposeDisposables,_oneShot,_disposeCalled",
      set$_disposeFunctions: function(_disposeFunctions) {
        this._disposeFunctions = H.assertSubtype(_disposeFunctions, "$isList", [{func: 1, ret: -1}], "$asList");
      },
      set$_disposeSubs: function(_disposeSubs) {
        this._disposeSubs = H.assertSubtype(_disposeSubs, "$isList", [[P.StreamSubscription,,]], "$asList");
      },
      set$_disposeSinks: function(_disposeSinks) {
        this._disposeSinks = H.assertSubtype(_disposeSinks, "$isList", [[P.EventSink,,]], "$asList");
      },
      addStreamSubscription$1$1: function(disposable, $T) {
        var t1;
        H.assertSubtype(disposable, "$isStreamSubscription", [$T], "$asStreamSubscription");
        if (this._disposeSubs == null)
          this.set$_disposeSubs(H.setRuntimeTypeInfo([], [[P.StreamSubscription,,]]));
        t1 = this._disposeSubs;
        (t1 && C.JSArray_methods).add$1(t1, disposable);
        return disposable;
      },
      addEventSink$1$1: function(disposable, $T) {
        var t1;
        H.assertSubtype(disposable, "$isEventSink", [$T], "$asEventSink");
        if (this._disposeSinks == null)
          this.set$_disposeSinks(H.setRuntimeTypeInfo([], [[P.EventSink,,]]));
        t1 = this._disposeSinks;
        (t1 && C.JSArray_methods).add$1(t1, disposable);
        return disposable;
      },
      addFunction$1: function(disposable) {
        var t1 = {func: 1, ret: -1};
        H.functionTypeCheck(disposable, t1);
        if (this._disposeFunctions == null)
          this.set$_disposeFunctions(H.setRuntimeTypeInfo([], [t1]));
        t1 = this._disposeFunctions;
        (t1 && C.JSArray_methods).add$1(t1, disposable);
        return disposable;
      },
      dispose$0: function() {
        var t1, len, i;
        t1 = this._disposeSubs;
        if (t1 != null) {
          len = t1.length;
          for (i = 0; i < len; ++i) {
            t1 = this._disposeSubs;
            if (i >= t1.length)
              return H.ioore(t1, i);
            t1[i].cancel$0(0);
          }
          this.set$_disposeSubs(null);
        }
        t1 = this._disposeSinks;
        if (t1 != null) {
          len = t1.length;
          for (i = 0; i < len; ++i) {
            t1 = this._disposeSinks;
            if (i >= t1.length)
              return H.ioore(t1, i);
            t1[i].close$0(0);
          }
          this.set$_disposeSinks(null);
        }
        t1 = this._disposeFunctions;
        if (t1 != null) {
          len = t1.length;
          for (i = 0; i < len; ++i) {
            t1 = this._disposeFunctions;
            if (i >= t1.length)
              return H.ioore(t1, i);
            t1[i].call$0();
          }
          this.set$_disposeFunctions(null);
        }
        this._disposeCalled = true;
      },
      $isDisposable: 1
    }
  }], ["", "package:angular_components/utils/id_generator/id_generator.dart",, R, {
    "^": "",
    IdGenerator: {
      "^": "Object;"
    },
    SequentialIdGenerator: {
      "^": "Object;_prefix,_seq",
      nextId$0: function() {
        return this._prefix + "--" + this._seq++;
      },
      $isIdGenerator: 1,
      static: {
        SequentialIdGenerator$fromUUID: function() {
          return new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid(), 0);
        },
        SequentialIdGenerator__createUuid: function() {
          var bytes, t1, t2, chars;
          bytes = P.List_List$generate(16, new R.SequentialIdGenerator__createUuid_closure(), true, P.int);
          if (6 >= bytes.length)
            return H.ioore(bytes, 6);
          C.JSArray_methods.$indexSet(bytes, 6, J.$or$n(J.$and$bn(bytes[6], 15), 64));
          if (8 >= bytes.length)
            return H.ioore(bytes, 8);
          C.JSArray_methods.$indexSet(bytes, 8, J.$or$n(J.$and$bn(bytes[8], 63), 128));
          t1 = P.String;
          t2 = H.getTypeArgumentByIndex(bytes, 0);
          chars = new H.MappedListIterable(bytes, H.functionTypeCheck(new R.SequentialIdGenerator__createUuid_closure0(), {func: 1, ret: t1, args: [t2]}), [t2, t1]).join$0(0).toUpperCase();
          return C.JSString_methods.substring$2(chars, 0, 8) + "-" + C.JSString_methods.substring$2(chars, 8, 12) + "-" + C.JSString_methods.substring$2(chars, 12, 16) + "-" + C.JSString_methods.substring$2(chars, 16, 20) + "-" + C.JSString_methods.substring$2(chars, 20, 32);
        }
      }
    },
    SequentialIdGenerator__createUuid_closure: {
      "^": "Closure:44;",
      call$1: function(_) {
        return $.$get$SequentialIdGenerator__rnd().nextInt$1(256);
      }
    },
    SequentialIdGenerator__createUuid_closure0: {
      "^": "Closure:20;",
      call$1: [function(b) {
        return C.JSString_methods.padLeft$2(J.toRadixString$1$n(H.intTypeCheck(b), 16), 2, "0");
      }, null, null, 4, 0, null, 15, "call"]
    }
  }], ["", "package:angular_components/utils/rate_limit_utils/rate_limit_utils.dart",, R, {
    "^": "",
    debounce: [function(delegate, delay, $T) {
      var t1 = {};
      H.functionTypeCheck(delegate, {func: 1, args: [$T]});
      t1.timer = null;
      t1.completer = null;
      return new R.debounce_closure(t1, delay, delegate, $T);
    }, function(delegate, delay) {
      return R.debounce(delegate, delay, null);
    }, "call$1$2", "call$2", "rate_limit_utils__debounce$closure", 8, 0, 165],
    throttleGuaranteeLast: [function(delegate, interval, $T) {
      return R._throttle(H.functionTypeCheck(delegate, {func: 1, args: [$T]}), interval, true, $T);
    }, function(delegate, interval) {
      return R.throttleGuaranteeLast(delegate, interval, null);
    }, "call$1$2", "call$2", "rate_limit_utils__throttleGuaranteeLast$closure", 8, 0, 166],
    _throttle: function(delegate, interval, guaranteeLast, $T) {
      var t1, $self;
      t1 = {};
      H.functionTypeCheck(delegate, {func: 1, args: [$T]});
      t1.onCooldown = false;
      t1.hasLastArg = false;
      t1.lastArg = null;
      t1.self = null;
      $self = new R._throttle_closure(t1, interval, delegate, guaranteeLast, $T);
      t1.self = $self;
      return $self;
    },
    debounce_closure: {
      "^": "Closure;_box_0,delay,delegate,T",
      call$1: [function(argument) {
        var t1, t2;
        H.assertSubtypeOfRuntimeType(argument, this.T);
        t1 = this._box_0;
        t2 = t1.timer;
        if (!(t2 == null))
          t2.cancel$0(0);
        if (t1.completer == null)
          t1.completer = new P._AsyncCompleter(new P._Future(0, $.Zone__current, [null]), [null]);
        t1.timer = P.Timer_Timer(this.delay, new R.debounce__closure(t1, this.delegate, argument));
        return t1.completer.future;
      }, null, null, 4, 0, null, 32, "call"],
      $signature: function() {
        return {func: 1, ret: [P.Future,,], args: [this.T]};
      }
    },
    debounce__closure: {
      "^": "Closure:0;_box_0,delegate,argument",
      call$0: [function() {
        var t1 = this._box_0;
        t1.completer.complete$1(0, this.delegate.call$1(this.argument));
        t1.completer = null;
        t1.timer = null;
      }, null, null, 0, 0, null, "call"]
    },
    _throttle_closure: {
      "^": "Closure;_box_0,interval,delegate,guaranteeLast,T",
      call$1: [function(argument) {
        var t1, t2;
        t1 = this.T;
        H.assertSubtypeOfRuntimeType(argument, t1);
        t2 = this._box_0;
        if (!t2.onCooldown) {
          t2.onCooldown = true;
          P.Timer_Timer(this.interval, new R._throttle__closure(t2, t1));
          this.delegate.call$1(argument);
        } else if (this.guaranteeLast) {
          t2.lastArg = argument;
          t2.hasLastArg = true;
        }
      }, null, null, 4, 0, null, 32, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.T]};
      }
    },
    _throttle__closure: {
      "^": "Closure:0;_box_0,T",
      call$0: [function() {
        var t1 = this._box_0;
        t1.onCooldown = false;
        if (t1.hasLastArg) {
          t1.self.call$1(H.assertSubtypeOfRuntimeType(t1.lastArg, this.T));
          t1.hasLastArg = false;
        }
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:collection/src/equality.dart",, U, {
    "^": "",
    DefaultEquality: {
      "^": "Object;$ti",
      $isEquality: 1
    },
    ListEquality: {
      "^": "Object;_elementEquality,$ti",
      equals$2: function(list1, list2) {
        var t1, $length, i;
        t1 = this.$ti;
        H.assertSubtype(list1, "$isList", t1, "$asList");
        H.assertSubtype(list2, "$isList", t1, "$asList");
        if (list1 == null ? list2 == null : list1 === list2)
          return true;
        if (list1 == null || list2 == null)
          return false;
        $length = list1.length;
        if ($length !== list2.length)
          return false;
        for (i = 0; i < $length; ++i) {
          if (i >= list1.length)
            return H.ioore(list1, i);
          t1 = list1[i];
          if (i >= list2.length)
            return H.ioore(list2, i);
          if (!J.$eq$(t1, list2[i]))
            return false;
        }
        return true;
      },
      $isEquality: 1,
      $asEquality: function($E) {
        return [[P.List, $E]];
      }
    }
  }], ["", "package:collection/src/wrappers.dart",, M, {
    "^": "",
    _DelegatingIterableBase: {
      "^": "Object;$ti",
      contains$1: function(_, element) {
        var t1 = this._base;
        return (t1 && C.JSArray_methods).contains$1(t1, element);
      },
      elementAt$1: function(_, index) {
        var t1 = this._base;
        return (t1 && C.JSArray_methods).$index(t1, index);
      },
      every$1: function(_, test) {
        var t1 = this._base;
        return (t1 && C.JSArray_methods).every$1(t1, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]}));
      },
      forEach$1: function(_, f) {
        var t1 = this._base;
        return (t1 && C.JSArray_methods).forEach$1(t1, H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}));
      },
      get$isEmpty: function(_) {
        return this._base.length === 0;
      },
      get$iterator: function(_) {
        var t1 = this._base;
        return new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      join$1: function(_, separator) {
        var t1 = this._base;
        return (t1 && C.JSArray_methods).join$1(t1, separator);
      },
      get$last: function(_) {
        var t1 = this._base;
        return (t1 && C.JSArray_methods).get$last(t1);
      },
      get$length: function(_) {
        return this._base.length;
      },
      map$1$1: function(_, f, $T) {
        var t1, t2;
        H.functionTypeCheck(f, {func: 1, ret: $T, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = this._base;
        t1.toString;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        return new H.MappedListIterable(t1, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t2]}), [t2, $T]);
      },
      skip$1: function(_, n) {
        var t1 = this._base;
        t1.toString;
        return H.SubListIterable$(t1, n, null, H.getTypeArgumentByIndex(t1, 0));
      },
      where$1: function(_, test) {
        var t1, t2;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = this._base;
        t1.toString;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        return new H.WhereIterable(t1, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t2]}), [t2]);
      },
      toString$0: function(_) {
        return J.toString$0$(this._base);
      },
      $isIterable: 1
    },
    DelegatingIterable: {
      "^": "_DelegatingIterableBase;$ti"
    },
    DelegatingList: {
      "^": "DelegatingIterable;$ti",
      $index: function(_, index) {
        var t1 = H.assertSubtype(this._base, "$isList", this.$ti, "$asList");
        return (t1 && C.JSArray_methods).$index(t1, index);
      },
      $indexSet: function(_, index, value) {
        var t1;
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = H.assertSubtype(this._base, "$isList", this.$ti, "$asList");
        (t1 && C.JSArray_methods).$indexSet(t1, index, value);
      },
      $add: function(_, other) {
        var t1 = this.$ti;
        H.assertSubtype(other, "$isList", t1, "$asList");
        t1 = H.assertSubtype(this._base, "$isList", t1, "$asList");
        return (t1 && C.JSArray_methods).$add(t1, other);
      },
      add$1: function(_, value) {
        var t1;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = H.assertSubtype(this._base, "$isList", this.$ti, "$asList");
        (t1 && C.JSArray_methods).add$1(t1, value);
      },
      sort$1: [function(_, compare) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [t1, t1]});
        t1 = H.assertSubtype(this._base, "$isList", this.$ti, "$asList");
        (t1 && C.JSArray_methods).sort$1(t1, compare);
      }, function($receiver) {
        return this.sort$1($receiver, null);
      }, "sort$0", "call$1", "call$0", "get$sort", 1, 2, function() {
        return H.computeSignature(function(E) {
          return {func: 1, ret: -1, opt: [{func: 1, ret: P.int, args: [E, E]}]};
        }, this.$receiver, "DelegatingList");
      }],
      $isEfficientLengthIterable: 1,
      $isList: 1
    }
  }], ["intl", "package:intl/intl.dart",, T, {
    "^": "",
    Bidi_estimateDirectionOfText: function(text, isHtml) {
      var t1, t2, rtlCount, total, hasWeaklyLtr, _i, token, t3, t4;
      for (t1 = C.JSString_methods.split$1(text, P.RegExp_RegExp("\\s+", true, false)), t2 = t1.length, rtlCount = 0, total = 0, hasWeaklyLtr = false, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        token = t1[_i];
        t3 = P.RegExp_RegExp("^[^A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF]*[\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC]", true, false);
        t4 = typeof token !== "string";
        if (t4)
          H.throwExpression(H.argumentErrorValue(token));
        if (t3._nativeRegExp.test(token)) {
          ++rtlCount;
          ++total;
        } else {
          t3 = P.RegExp_RegExp("^http://", true, false);
          if (t4)
            H.throwExpression(H.argumentErrorValue(token));
          if (t3._nativeRegExp.test(token))
            hasWeaklyLtr = true;
          else {
            t3 = P.RegExp_RegExp("[A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF]", true, false);
            if (t4)
              H.throwExpression(H.argumentErrorValue(token));
            if (t3._nativeRegExp.test(token))
              ++total;
            else {
              t3 = P.RegExp_RegExp("\\d", true, false);
              if (t4)
                H.throwExpression(H.argumentErrorValue(token));
              if (t3._nativeRegExp.test(token))
                hasWeaklyLtr = true;
            }
          }
        }
      }
      if (total === 0)
        return hasWeaklyLtr ? C.TextDirection_LTR_ltr : C.TextDirection_UNKNOWN_ltr;
      else if (rtlCount > $.Bidi__RTL_DETECTION_THRESHOLD * total)
        return C.TextDirection_RTL_rtl;
      else
        return C.TextDirection_LTR_ltr;
    },
    TextDirection: {
      "^": "Object;value,spanText"
    }
  }], ["", "package:markdown/src/ast.dart",, U, {
    "^": "",
    Node0: {
      "^": "Object;"
    },
    Element0: {
      "^": "Object;tag,children>,attributes,0generatedId",
      accept$1: function(_, visitor) {
        var t1, t2, _i;
        if (visitor.visitElementBefore$1(this)) {
          t1 = this.children;
          if (t1 != null)
            for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
              J.accept$1$z(t1[_i], visitor);
          visitor.buffer._contents += "</" + H.S(this.tag) + ">";
        }
      },
      get$textContent: function() {
        var t1, t2, t3;
        t1 = this.children;
        if (t1 == null)
          t1 = "";
        else {
          t2 = P.String;
          t3 = H.getTypeArgumentByIndex(t1, 0);
          t2 = new H.MappedListIterable(t1, H.functionTypeCheck(new U.Element_textContent_closure(), {func: 1, ret: t2, args: [t3]}), [t3, t2]).join$1(0, "");
          t1 = t2;
        }
        return t1;
      },
      $isNode0: 1
    },
    Element_textContent_closure: {
      "^": "Closure:45;",
      call$1: [function(child) {
        return H.interceptedTypeCheck(child, "$isNode0").get$textContent();
      }, null, null, 4, 0, null, 29, "call"]
    },
    Text0: {
      "^": "Object;text",
      accept$1: function(_, visitor) {
        var t1 = visitor.buffer;
        t1.toString;
        t1._contents += H.S(this.text);
        return;
      },
      get$textContent: function() {
        return this.text;
      },
      $isNode0: 1
    },
    UnparsedContent: {
      "^": "Object;textContent<",
      accept$1: function(_, visitor) {
        return;
      },
      $isNode0: 1
    }
  }], ["", "package:markdown/src/block_parser.dart",, K, {
    "^": "",
    BlockSyntax_isAtBlockEnd: function(parser) {
      if (parser._pos >= parser.lines.length)
        return true;
      return C.JSArray_methods.any$1(parser.blockSyntaxes, new K.BlockSyntax_isAtBlockEnd_closure(parser));
    },
    ListSyntax__expandedTabLength: function(input) {
      var t1, $length;
      for (input.toString, t1 = new H.CodeUnits(input), t1 = new H.ListIterator(t1, t1.get$length(t1), 0, [P.int]), $length = 0; t1.moveNext$0();)
        $length += t1.__internal$_current === 9 ? 4 - C.JSInt_methods.$mod($length, 4) : 1;
      return $length;
    },
    BlockParser: {
      "^": "Object;lines,document,blockSyntaxes,_pos,encounteredBlankLine,standardBlockSyntaxes",
      get$next: function(_) {
        var t1, t2;
        t1 = this._pos;
        t2 = this.lines;
        if (t1 >= t2.length - 1)
          return;
        return t2[t1 + 1];
      },
      peek$1: function(linesAhead) {
        var t1, t2, t3;
        t1 = this._pos;
        t2 = this.lines;
        t3 = t2.length;
        if (t1 >= t3 - linesAhead)
          return;
        t1 += linesAhead;
        if (t1 >= t3)
          return H.ioore(t2, t1);
        return t2[t1];
      },
      matches$1: function(_, regex) {
        var t1, t2;
        t1 = this._pos;
        t2 = this.lines;
        if (t1 >= t2.length)
          return false;
        return regex.firstMatch$1(t2[t1]) != null;
      },
      parseLines$0: function() {
        var blocks, t1, t2, t3, _i, syntax, block;
        blocks = H.setRuntimeTypeInfo([], [U.Node0]);
        for (t1 = this.lines, t2 = this.blockSyntaxes; this._pos < t1.length;)
          for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
            syntax = t2[_i];
            if (syntax.canParse$1(this)) {
              block = J.parse$1$z(syntax, this);
              if (block != null)
                C.JSArray_methods.add$1(blocks, block);
              break;
            }
          }
        return blocks;
      },
      static: {
        BlockParser$: function(lines, $document) {
          var t1, t2;
          t1 = [K.BlockSyntax];
          t2 = H.setRuntimeTypeInfo([], t1);
          t1 = H.setRuntimeTypeInfo([C.C_EmptyBlockSyntax, C.C_BlockTagBlockHtmlSyntax, new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<pre(?:\\s|>|$)", true, false), P.RegExp_RegExp("</pre>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<script(?:\\s|>|$)", true, false), P.RegExp_RegExp("</script>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<style(?:\\s|>|$)", true, false), P.RegExp_RegExp("</style>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<!--", true, false), P.RegExp_RegExp("-->", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<\\?", true, false), P.RegExp_RegExp("\\?>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<![A-Z]", true, false), P.RegExp_RegExp(">", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<!\\[CDATA\\[", true, false), P.RegExp_RegExp("\\]\\]>", true, false)), C.C_OtherTagBlockHtmlSyntax, C.C_SetextHeaderSyntax, C.C_HeaderSyntax, C.C_CodeBlockSyntax, C.C_BlockquoteSyntax, C.C_HorizontalRuleSyntax, C.C_UnorderedListSyntax, C.C_OrderedListSyntax, C.C_ParagraphSyntax], t1);
          C.JSArray_methods.addAll$1(t2, $document._blockSyntaxes);
          C.JSArray_methods.addAll$1(t2, t1);
          return new K.BlockParser(lines, $document, t2, 0, false, t1);
        }
      }
    },
    BlockSyntax: {
      "^": "Object;",
      get$pattern: function(_) {
        return;
      },
      get$canEndBlock: function() {
        return true;
      },
      canParse$1: function(parser) {
        var t1, t2, t3;
        t1 = this.get$pattern(this);
        t2 = parser.lines;
        t3 = parser._pos;
        if (t3 >= t2.length)
          return H.ioore(t2, t3);
        return t1.firstMatch$1(t2[t3]) != null;
      }
    },
    BlockSyntax_isAtBlockEnd_closure: {
      "^": "Closure:60;parser",
      call$1: function(s) {
        H.interceptedTypeCheck(s, "$isBlockSyntax");
        return s.canParse$1(this.parser) && s.get$canEndBlock();
      }
    },
    EmptyBlockSyntax: {
      "^": "BlockSyntax;",
      get$pattern: function(_) {
        return $.$get$_emptyPattern();
      },
      parse$1: function(_, parser) {
        parser.encounteredBlankLine = true;
        ++parser._pos;
        return;
      }
    },
    SetextHeaderSyntax: {
      "^": "BlockSyntax;",
      canParse$1: function(parser) {
        var t1, t2, i, nextLine;
        t1 = parser.lines;
        t2 = parser._pos;
        if (t2 >= t1.length)
          return H.ioore(t1, t2);
        if (!this._interperableAsParagraph$1(t1[t2]))
          return false;
        for (i = 1; true;) {
          nextLine = parser.peek$1(i);
          if (nextLine == null)
            return false;
          t1 = $.$get$_setextPattern()._nativeRegExp;
          if (t1.test(nextLine))
            return true;
          if (!this._interperableAsParagraph$1(nextLine))
            return false;
          ++i;
        }
      },
      parse$1: function(_, parser) {
        var t1, lines, tag, t2, t3, t4, t5, match;
        t1 = P.String;
        lines = H.setRuntimeTypeInfo([], [t1]);
        t2 = parser.lines;
        while (true) {
          t3 = parser._pos;
          t4 = t2.length;
          if (!(t3 < t4)) {
            tag = null;
            break;
          }
          c$0: {
            t5 = $.$get$_setextPattern();
            if (t3 >= t4)
              return H.ioore(t2, t3);
            match = t5.firstMatch$1(t2[t3]);
            if (match == null) {
              t3 = parser._pos;
              if (t3 >= t2.length)
                return H.ioore(t2, t3);
              C.JSArray_methods.add$1(lines, t2[t3]);
              ++parser._pos;
              break c$0;
            } else {
              t2 = match._match;
              if (1 >= t2.length)
                return H.ioore(t2, 1);
              t2 = t2[1];
              if (0 >= t2.length)
                return H.ioore(t2, 0);
              tag = t2[0] === "=" ? "h1" : "h2";
              ++parser._pos;
              break;
            }
          }
        }
        return new U.Element0(tag, H.setRuntimeTypeInfo([new U.UnparsedContent(C.JSArray_methods.join$1(lines, "\n"))], [U.Node0]), P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
      },
      _interperableAsParagraph$1: function(line) {
        var t1, t2;
        t1 = $.$get$_indentPattern()._nativeRegExp;
        t2 = typeof line !== "string";
        if (t2)
          H.throwExpression(H.argumentErrorValue(line));
        if (!t1.test(line)) {
          t1 = $.$get$_codePattern()._nativeRegExp;
          if (t2)
            H.throwExpression(H.argumentErrorValue(line));
          if (!t1.test(line)) {
            t1 = $.$get$_headerPattern()._nativeRegExp;
            if (t2)
              H.throwExpression(H.argumentErrorValue(line));
            if (!t1.test(line)) {
              t1 = $.$get$_blockquotePattern()._nativeRegExp;
              if (t2)
                H.throwExpression(H.argumentErrorValue(line));
              if (!t1.test(line)) {
                t1 = $.$get$_hrPattern()._nativeRegExp;
                if (t2)
                  H.throwExpression(H.argumentErrorValue(line));
                if (!t1.test(line)) {
                  t1 = $.$get$_ulPattern()._nativeRegExp;
                  if (t2)
                    H.throwExpression(H.argumentErrorValue(line));
                  if (!t1.test(line)) {
                    t1 = $.$get$_olPattern()._nativeRegExp;
                    if (t2)
                      H.throwExpression(H.argumentErrorValue(line));
                    if (!t1.test(line)) {
                      t1 = $.$get$_emptyPattern()._nativeRegExp;
                      if (t2)
                        H.throwExpression(H.argumentErrorValue(line));
                      t1 = t1.test(line);
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
          } else
            t1 = true;
        } else
          t1 = true;
        return !t1;
      }
    },
    HeaderSyntax: {
      "^": "BlockSyntax;",
      get$pattern: function(_) {
        return $.$get$_headerPattern();
      },
      parse$1: function(_, parser) {
        var t1, t2, t3, match, level;
        t1 = $.$get$_headerPattern();
        t2 = parser.lines;
        t3 = parser._pos;
        if (t3 >= t2.length)
          return H.ioore(t2, t3);
        match = t1.firstMatch$1(t2[t3]);
        ++parser._pos;
        t3 = match._match;
        t2 = t3.length;
        if (1 >= t2)
          return H.ioore(t3, 1);
        level = t3[1].length;
        if (2 >= t2)
          return H.ioore(t3, 2);
        t3 = J.trim$0$s(t3[2]);
        t2 = P.String;
        return new U.Element0("h" + level, H.setRuntimeTypeInfo([new U.UnparsedContent(t3)], [U.Node0]), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
      }
    },
    BlockquoteSyntax: {
      "^": "BlockSyntax;",
      get$pattern: function(_) {
        return $.$get$_blockquotePattern();
      },
      parseChildLines$1: function(parser) {
        var childLines, t1, t2, t3, t4, t5, match;
        childLines = H.setRuntimeTypeInfo([], [P.String]);
        for (t1 = parser.lines, t2 = parser.blockSyntaxes; t3 = parser._pos, t4 = t1.length, t3 < t4;) {
          t5 = $.$get$_blockquotePattern();
          if (t3 >= t4)
            return H.ioore(t1, t3);
          match = t5.firstMatch$1(t1[t3]);
          if (match != null) {
            t3 = match._match;
            if (1 >= t3.length)
              return H.ioore(t3, 1);
            C.JSArray_methods.add$1(childLines, t3[1]);
            ++parser._pos;
            continue;
          }
          if (C.JSArray_methods.firstWhere$1(t2, new K.BlockquoteSyntax_parseChildLines_closure(parser)) instanceof K.ParagraphSyntax) {
            t3 = parser._pos;
            if (t3 >= t1.length)
              return H.ioore(t1, t3);
            C.JSArray_methods.add$1(childLines, t1[t3]);
            ++parser._pos;
          } else
            break;
        }
        return childLines;
      },
      parse$1: function(_, parser) {
        var t1 = P.String;
        return new U.Element0("blockquote", K.BlockParser$(this.parseChildLines$1(parser), parser.document).parseLines$0(), P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
      }
    },
    BlockquoteSyntax_parseChildLines_closure: {
      "^": "Closure:60;parser",
      call$1: function(s) {
        return H.interceptedTypeCheck(s, "$isBlockSyntax").canParse$1(this.parser);
      }
    },
    CodeBlockSyntax: {
      "^": "BlockSyntax;",
      get$pattern: function(_) {
        return $.$get$_indentPattern();
      },
      get$canEndBlock: function() {
        return false;
      },
      parseChildLines$1: function(parser) {
        var childLines, t1, t2, t3, t4, match, nextMatch;
        childLines = H.setRuntimeTypeInfo([], [P.String]);
        for (t1 = parser.lines; t2 = parser._pos, t3 = t1.length, t2 < t3;) {
          t4 = $.$get$_indentPattern();
          if (t2 >= t3)
            return H.ioore(t1, t2);
          match = t4.firstMatch$1(t1[t2]);
          if (match != null) {
            t2 = match._match;
            if (1 >= t2.length)
              return H.ioore(t2, 1);
            C.JSArray_methods.add$1(childLines, t2[1]);
            ++parser._pos;
          } else {
            nextMatch = parser.get$next(parser) != null ? t4.firstMatch$1(parser.get$next(parser)) : null;
            t2 = parser._pos;
            if (t2 >= t1.length)
              return H.ioore(t1, t2);
            if (J.trim$0$s(t1[t2]) === "" && nextMatch != null) {
              C.JSArray_methods.add$1(childLines, "");
              t2 = nextMatch._match;
              if (1 >= t2.length)
                return H.ioore(t2, 1);
              C.JSArray_methods.add$1(childLines, t2[1]);
              parser._pos = ++parser._pos + 1;
            } else
              break;
          }
        }
        return childLines;
      },
      parse$1: function(_, parser) {
        var childLines, t1, t2;
        childLines = this.parseChildLines$1(parser);
        C.JSArray_methods.add$1(childLines, "");
        t1 = [U.Node0];
        t2 = P.String;
        return new U.Element0("pre", H.setRuntimeTypeInfo([new U.Element0("code", H.setRuntimeTypeInfo([new U.Text0(C.HtmlEscape_uMl.convert$1(C.JSArray_methods.join$1(childLines, "\n")))], t1), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2))], t1), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
      }
    },
    FencedCodeBlockSyntax: {
      "^": "BlockSyntax;",
      get$pattern: function(_) {
        return $.$get$_codePattern();
      },
      parseChildLines$2: function(parser, endBlock) {
        var childLines, t1, t2, t3, t4, match;
        if (endBlock == null)
          endBlock = "";
        childLines = H.setRuntimeTypeInfo([], [P.String]);
        t1 = ++parser._pos;
        for (t2 = parser.lines; t3 = t2.length, t1 < t3;) {
          t4 = $.$get$_codePattern();
          if (t1 < 0 || t1 >= t3)
            return H.ioore(t2, t1);
          match = t4.firstMatch$1(t2[t1]);
          if (match != null) {
            t1 = match._match;
            if (1 >= t1.length)
              return H.ioore(t1, 1);
            t1 = !J.startsWith$1$s(t1[1], endBlock);
          } else
            t1 = true;
          t3 = parser._pos;
          if (t1) {
            if (t3 >= t2.length)
              return H.ioore(t2, t3);
            C.JSArray_methods.add$1(childLines, t2[t3]);
            t1 = ++parser._pos;
          } else {
            parser._pos = t3 + 1;
            break;
          }
        }
        return childLines;
      },
      parse$1: function(_, parser) {
        var t1, t2, t3, childLines, t4, t5, infoString;
        t1 = $.$get$_codePattern();
        t2 = parser.lines;
        t3 = parser._pos;
        if (t3 >= t2.length)
          return H.ioore(t2, t3);
        t3 = t1.firstMatch$1(t2[t3])._match;
        t2 = t3.length;
        if (1 >= t2)
          return H.ioore(t3, 1);
        t1 = t3[1];
        if (2 >= t2)
          return H.ioore(t3, 2);
        t3 = t3[2];
        childLines = this.parseChildLines$2(parser, t1);
        C.JSArray_methods.add$1(childLines, "");
        t1 = [U.Node0];
        t2 = H.setRuntimeTypeInfo([new U.Text0(C.HtmlEscape_uMl.convert$1(C.JSArray_methods.join$1(childLines, "\n")))], t1);
        t4 = P.String;
        t5 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t4);
        infoString = J.trim$0$s(t3);
        if (infoString.length !== 0)
          t5.$indexSet(0, "class", "language-" + H.S(C.JSArray_methods.get$first(infoString.split(" "))));
        return new U.Element0("pre", H.setRuntimeTypeInfo([new U.Element0("code", t2, t5)], t1), P.LinkedHashMap_LinkedHashMap$_empty(t4, t4));
      }
    },
    HorizontalRuleSyntax: {
      "^": "BlockSyntax;",
      get$pattern: function(_) {
        return $.$get$_hrPattern();
      },
      parse$1: function(_, parser) {
        var t1;
        ++parser._pos;
        t1 = P.String;
        return new U.Element0("hr", null, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
      }
    },
    BlockHtmlSyntax: {
      "^": "BlockSyntax;",
      get$canEndBlock: function() {
        return true;
      }
    },
    BlockTagBlockHtmlSyntax: {
      "^": "BlockHtmlSyntax;",
      get$pattern: function(_) {
        return $.$get$BlockTagBlockHtmlSyntax__pattern();
      },
      parse$1: function(_, parser) {
        var childLines, t1, t2;
        childLines = H.setRuntimeTypeInfo([], [P.String]);
        t1 = parser.lines;
        while (true) {
          if (!(parser._pos < t1.length && !parser.matches$1(0, $.$get$_emptyPattern())))
            break;
          t2 = parser._pos;
          if (t2 >= t1.length)
            return H.ioore(t1, t2);
          C.JSArray_methods.add$1(childLines, t1[t2]);
          ++parser._pos;
        }
        return new U.Text0(C.JSArray_methods.join$1(childLines, "\n"));
      }
    },
    OtherTagBlockHtmlSyntax: {
      "^": "BlockTagBlockHtmlSyntax;",
      get$canEndBlock: function() {
        return false;
      },
      get$pattern: function(_) {
        return P.RegExp_RegExp("^ {0,3}</?\\w+(?:>|\\s+[^>]*>)\\s*$", true, false);
      }
    },
    LongBlockHtmlSyntax: {
      "^": "BlockHtmlSyntax;pattern>,_endPattern",
      parse$1: function(_, parser) {
        var childLines, t1, t2, t3, t4;
        childLines = H.setRuntimeTypeInfo([], [P.String]);
        for (t1 = parser.lines, t2 = this._endPattern; t3 = parser._pos, t4 = t1.length, t3 < t4;) {
          if (t3 >= t4)
            return H.ioore(t1, t3);
          C.JSArray_methods.add$1(childLines, t1[t3]);
          if (parser.matches$1(0, t2))
            break;
          ++parser._pos;
        }
        ++parser._pos;
        return new U.Text0(C.JSArray_methods.join$1(childLines, "\n"));
      }
    },
    ListItem: {
      "^": "Object;forceBlock,lines"
    },
    ListSyntax: {
      "^": "BlockSyntax;",
      get$canEndBlock: function() {
        return true;
      },
      parse$1: function(_, parser) {
        var _box_0, items, t1, endItem, tryMatch, t2, listMarker, indent, startNumber, t3, t4, t5, leadingSpace, leadingExpandedTabLength, line, precedingWhitespace, digits, marker, firstWhitespace, restWhitespace, $content, markerAsSpaces, itemNodes, anyEmptyLines, anyEmptyLinesBetweenBlocks, _i, item, t6, t7, itemParser, i, child;
        _box_0 = {};
        items = H.setRuntimeTypeInfo([], [K.ListItem]);
        t1 = P.String;
        _box_0.childLines = H.setRuntimeTypeInfo([], [t1]);
        endItem = new K.ListSyntax_parse_endItem(_box_0, items);
        _box_0.match = null;
        tryMatch = new K.ListSyntax_parse_tryMatch(_box_0, parser);
        for (t2 = parser.lines, listMarker = null, indent = null, startNumber = null; t3 = parser._pos, t4 = t2.length, t3 < t4;) {
          t5 = $.$get$ListSyntax__whitespaceRe();
          if (t3 >= t4)
            return H.ioore(t2, t3);
          t3 = t2[t3];
          t5.toString;
          t3.length;
          t3 = t5._execAnchored$2(t3, 0)._match;
          if (0 >= t3.length)
            return H.ioore(t3, 0);
          leadingSpace = t3[0];
          leadingExpandedTabLength = K.ListSyntax__expandedTabLength(leadingSpace);
          t3 = $.$get$_emptyPattern();
          if (tryMatch.call$1(t3)) {
            t4 = parser.get$next(parser);
            if (t3.firstMatch$1(t4 == null ? "" : t4) != null)
              break;
            C.JSArray_methods.add$1(_box_0.childLines, "");
          } else if (indent != null && indent.length <= leadingExpandedTabLength) {
            t3 = parser._pos;
            if (t3 >= t2.length)
              return H.ioore(t2, t3);
            t3 = t2[t3];
            t4 = C.JSString_methods.$mul(" ", leadingExpandedTabLength);
            t3.length;
            t3 = H.stringReplaceFirstUnchecked(t3, leadingSpace, t4, 0);
            line = H.stringReplaceFirstUnchecked(t3, indent, "", 0);
            C.JSArray_methods.add$1(_box_0.childLines, line);
          } else if (tryMatch.call$1($.$get$_hrPattern()))
            break;
          else if (tryMatch.call$1($.$get$_ulPattern()) || tryMatch.call$1($.$get$_olPattern())) {
            t3 = _box_0.match._match;
            t4 = t3.length;
            if (1 >= t4)
              return H.ioore(t3, 1);
            precedingWhitespace = t3[1];
            if (2 >= t4)
              return H.ioore(t3, 2);
            digits = t3[2];
            if (digits == null)
              digits = "";
            if (startNumber == null && digits.length !== 0)
              startNumber = P.int_parse(digits, null, null);
            t3 = _box_0.match._match;
            t4 = t3.length;
            if (3 >= t4)
              return H.ioore(t3, 3);
            marker = t3[3];
            if (5 >= t4)
              return H.ioore(t3, 5);
            firstWhitespace = t3[5];
            if (firstWhitespace == null)
              firstWhitespace = "";
            if (6 >= t4)
              return H.ioore(t3, 6);
            restWhitespace = t3[6];
            if (restWhitespace == null)
              restWhitespace = "";
            if (7 >= t4)
              return H.ioore(t3, 7);
            $content = t3[7];
            if ($content == null)
              $content = "";
            if (listMarker != null && listMarker !== marker)
              break;
            markerAsSpaces = C.JSString_methods.$mul(" ", digits.length + marker.length);
            if ($content.length === 0)
              indent = J.$add$ansx(precedingWhitespace, markerAsSpaces) + " ";
            else {
              t3 = J.getInterceptor$ansx(precedingWhitespace);
              indent = restWhitespace.length >= 4 ? t3.$add(precedingWhitespace, markerAsSpaces) + firstWhitespace : t3.$add(precedingWhitespace, markerAsSpaces) + firstWhitespace + restWhitespace;
            }
            endItem.call$0();
            C.JSArray_methods.add$1(_box_0.childLines, restWhitespace + $content);
            listMarker = marker;
          } else if (K.BlockSyntax_isAtBlockEnd(parser))
            break;
          else {
            t3 = _box_0.childLines;
            if (t3.length !== 0 && C.JSArray_methods.get$last(t3) === "") {
              parser.encounteredBlankLine = true;
              break;
            }
            t3 = _box_0.childLines;
            t4 = parser._pos;
            if (t4 >= t2.length)
              return H.ioore(t2, t4);
            C.JSArray_methods.add$1(t3, t2[t4]);
          }
          ++parser._pos;
        }
        endItem.call$0();
        itemNodes = H.setRuntimeTypeInfo([], [U.Element0]);
        C.JSArray_methods.forEach$1(items, this.get$removeLeadingEmptyLine());
        anyEmptyLines = this.removeTrailingEmptyLines$1(items);
        for (t2 = items.length, t3 = parser.document, t4 = [K.BlockSyntax], t5 = t3._blockSyntaxes, anyEmptyLinesBetweenBlocks = false, _i = 0; _i < items.length; items.length === t2 || (0, H.throwConcurrentModificationError)(items), ++_i) {
          item = items[_i];
          t6 = H.setRuntimeTypeInfo([], t4);
          t7 = H.setRuntimeTypeInfo([C.C_EmptyBlockSyntax, C.C_BlockTagBlockHtmlSyntax, new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<pre(?:\\s|>|$)", true, false), P.RegExp_RegExp("</pre>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<script(?:\\s|>|$)", true, false), P.RegExp_RegExp("</script>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<style(?:\\s|>|$)", true, false), P.RegExp_RegExp("</style>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<!--", true, false), P.RegExp_RegExp("-->", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<\\?", true, false), P.RegExp_RegExp("\\?>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<![A-Z]", true, false), P.RegExp_RegExp(">", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<!\\[CDATA\\[", true, false), P.RegExp_RegExp("\\]\\]>", true, false)), C.C_OtherTagBlockHtmlSyntax, C.C_SetextHeaderSyntax, C.C_HeaderSyntax, C.C_CodeBlockSyntax, C.C_BlockquoteSyntax, C.C_HorizontalRuleSyntax, C.C_UnorderedListSyntax, C.C_OrderedListSyntax, C.C_ParagraphSyntax], t4);
          itemParser = new K.BlockParser(item.lines, t3, t6, 0, false, t7);
          C.JSArray_methods.addAll$1(t6, t5);
          C.JSArray_methods.addAll$1(t6, t7);
          C.JSArray_methods.add$1(itemNodes, new U.Element0("li", itemParser.parseLines$0(), P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
          anyEmptyLinesBetweenBlocks = anyEmptyLinesBetweenBlocks || itemParser.encounteredBlankLine;
        }
        if (!anyEmptyLines && !anyEmptyLinesBetweenBlocks)
          for (t2 = itemNodes.length, _i = 0; _i < itemNodes.length; itemNodes.length === t2 || (0, H.throwConcurrentModificationError)(itemNodes), ++_i) {
            item = itemNodes[_i];
            for (t3 = J.getInterceptor$x(item), i = 0; i < t3.get$children(item).length; ++i) {
              child = J.$index$asx(t3.get$children(item), i);
              if (child instanceof U.Element0 && child.tag === "p") {
                J.removeAt$1$ax(t3.get$children(item), i);
                J.insertAll$2$ax(t3.get$children(item), i, child.get$children(child));
              }
            }
          }
        if (this.get$listTag() === "ol" && startNumber !== 1) {
          t2 = this.get$listTag();
          t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          t1.$indexSet(0, "start", H.S(startNumber));
          return new U.Element0(t2, itemNodes, t1);
        } else
          return new U.Element0(this.get$listTag(), itemNodes, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
      },
      removeLeadingEmptyLine$1: [function(item) {
        var t1, t2, t3;
        t1 = H.interceptedTypeCheck(item, "$isListItem").lines;
        if (t1.length !== 0) {
          t2 = $.$get$_emptyPattern();
          t3 = C.JSArray_methods.get$first(t1);
          t2 = t2._nativeRegExp;
          if (typeof t3 !== "string")
            H.throwExpression(H.argumentErrorValue(t3));
          t2 = t2.test(t3);
        } else
          t2 = false;
        if (t2)
          C.JSArray_methods.removeAt$1(t1, 0);
      }, "call$1", "get$removeLeadingEmptyLine", 4, 0, 111],
      removeTrailingEmptyLines$1: function(items) {
        var anyEmpty, i, t1, t2;
        H.assertSubtype(items, "$isList", [K.ListItem], "$asList");
        for (anyEmpty = false, i = 0; i < items.length; ++i) {
          if (items[i].lines.length === 1)
            continue;
          while (true) {
            if (i >= items.length)
              return H.ioore(items, i);
            t1 = items[i].lines;
            if (t1.length !== 0) {
              t2 = $.$get$_emptyPattern();
              t1 = C.JSArray_methods.get$last(t1);
              t2 = t2._nativeRegExp;
              if (typeof t1 !== "string")
                H.throwExpression(H.argumentErrorValue(t1));
              t1 = t2.test(t1);
            } else
              t1 = false;
            if (!t1)
              break;
            t1 = items.length;
            if (i < t1 - 1)
              anyEmpty = true;
            if (i >= t1)
              return H.ioore(items, i);
            t1 = items[i].lines;
            if (0 >= t1.length)
              return H.ioore(t1, -1);
            t1.pop();
          }
        }
        return anyEmpty;
      }
    },
    ListSyntax_parse_endItem: {
      "^": "Closure:1;_box_0,items",
      call$0: function() {
        var t1, t2;
        t1 = this._box_0;
        t2 = t1.childLines;
        if (t2.length > 0) {
          C.JSArray_methods.add$1(this.items, new K.ListItem(false, t2));
          t1.childLines = H.setRuntimeTypeInfo([], [P.String]);
        }
      }
    },
    ListSyntax_parse_tryMatch: {
      "^": "Closure:112;_box_0,parser",
      call$1: function(pattern) {
        var t1, t2, match;
        t1 = this.parser;
        t2 = t1.lines;
        t1 = t1._pos;
        if (t1 >= t2.length)
          return H.ioore(t2, t1);
        match = pattern.firstMatch$1(t2[t1]);
        this._box_0.match = match;
        return match != null;
      }
    },
    UnorderedListSyntax: {
      "^": "ListSyntax;",
      get$pattern: function(_) {
        return $.$get$_ulPattern();
      },
      get$listTag: function() {
        return "ul";
      }
    },
    OrderedListSyntax: {
      "^": "ListSyntax;",
      get$pattern: function(_) {
        return $.$get$_olPattern();
      },
      get$listTag: function() {
        return "ol";
      }
    },
    ParagraphSyntax: {
      "^": "BlockSyntax;",
      get$canEndBlock: function() {
        return false;
      },
      canParse$1: function(parser) {
        return true;
      },
      parse$1: function(_, parser) {
        var t1, childLines, t2, t3, paragraphLines;
        t1 = P.String;
        childLines = H.setRuntimeTypeInfo([], [t1]);
        for (t2 = parser.lines; !K.BlockSyntax_isAtBlockEnd(parser);) {
          t3 = parser._pos;
          if (t3 >= t2.length)
            return H.ioore(t2, t3);
          C.JSArray_methods.add$1(childLines, t2[t3]);
          ++parser._pos;
        }
        paragraphLines = this._extractReflinkDefinitions$2(parser, childLines);
        if (paragraphLines == null)
          return new U.Text0("");
        else
          return new U.Element0("p", H.setRuntimeTypeInfo([new U.UnparsedContent(C.JSArray_methods.join$1(paragraphLines, "\n"))], [U.Node0]), P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
      },
      _extractReflinkDefinitions$2: function(parser, lines) {
        var lineStartsReflinkDefinition, i, contents, j, t1;
        H.assertSubtype(lines, "$isList", [P.String], "$asList");
        lineStartsReflinkDefinition = new K.ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition(lines);
        $label0$0:
          for (i = 0; true; i = j) {
            if (!lineStartsReflinkDefinition.call$1(i))
              break $label0$0;
            if (i < 0 || i >= lines.length)
              return H.ioore(lines, i);
            contents = lines[i];
            j = i + 1;
            for (; j < lines.length;)
              if (lineStartsReflinkDefinition.call$1(j))
                if (this._parseReflinkDefinition$2(parser, contents))
                  continue $label0$0;
                else
                  break;
              else {
                t1 = J.$add$ansx(contents, "\n");
                if (j >= lines.length)
                  return H.ioore(lines, j);
                contents = C.JSString_methods.$add(t1, lines[j]);
                ++j;
              }
            if (this._parseReflinkDefinition$2(parser, contents)) {
              i = j;
              break $label0$0;
            }
            for (t1 = H.getTypeArgumentByIndex(lines, 0); j >= i;) {
              P.RangeError_checkValidRange(i, j, lines.length, null, null, null);
              if (this._parseReflinkDefinition$2(parser, H.SubListIterable$(lines, i, j, t1).join$1(0, "\n"))) {
                i = j;
                break;
              }
              --j;
            }
            break $label0$0;
          }
        if (i === lines.length)
          return;
        else
          return C.JSArray_methods.sublist$1(lines, i);
      },
      _parseReflinkDefinition$2: function(parser, contents) {
        var t1, match, t2, t3, label, destination, title;
        t1 = {};
        match = P.RegExp_RegExp("^[ ]{0,3}\\[((?:\\\\\\]|[^\\]])+)\\]:\\s*(?:<(\\S+)>|(\\S+))\\s*(\"[^\"]+\"|'[^']+'|\\([^)]+\\)|)\\s*$", true, true).firstMatch$1(contents);
        if (match == null)
          return false;
        t2 = match._match;
        t3 = t2.length;
        if (0 >= t3)
          return H.ioore(t2, 0);
        if (t2[0].length < contents.length)
          return false;
        if (1 >= t3)
          return H.ioore(t2, 1);
        label = t2[1];
        t1.label = label;
        if (2 >= t3)
          return H.ioore(t2, 2);
        destination = t2[2];
        if (destination == null) {
          if (3 >= t3)
            return H.ioore(t2, 3);
          destination = t2[3];
        }
        if (4 >= t3)
          return H.ioore(t2, 4);
        title = t2[4];
        t1.title = title;
        t2 = $.$get$ParagraphSyntax__whitespacePattern()._nativeRegExp;
        if (typeof label !== "string")
          H.throwExpression(H.argumentErrorValue(label));
        if (t2.test(label))
          return false;
        if (title === "")
          t1.title = null;
        else
          t1.title = J.substring$2$s(title, 1, title.length - 1);
        t2 = C.JSString_methods.trim$0(label.toLowerCase());
        t3 = $.$get$_oneOrMoreWhitespacePattern();
        label = H.stringReplaceAllUnchecked(t2, t3, " ");
        t1.label = label;
        parser.document.linkReferences.putIfAbsent$2(0, label, new K.ParagraphSyntax__parseReflinkDefinition_closure(t1, destination));
        return true;
      }
    },
    ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition: {
      "^": "Closure:47;lines",
      call$1: function(i) {
        var t1 = this.lines;
        if (i < 0 || i >= t1.length)
          return H.ioore(t1, i);
        return J.startsWith$1$s(t1[i], $.$get$ParagraphSyntax__reflinkDefinitionStart());
      }
    },
    ParagraphSyntax__parseReflinkDefinition_closure: {
      "^": "Closure:114;_box_0,destination",
      call$0: function() {
        var t1 = this._box_0;
        return new S.LinkReference(t1.label, this.destination, t1.title);
      }
    }
  }], ["", "package:markdown/src/document.dart",, S, {
    "^": "",
    Document0: {
      "^": "Object;linkReferences,extensionSet,linkResolver,imageLinkResolver,encodeHtml,_blockSyntaxes,_inlineSyntaxes",
      _parseInlineContent$1: function(nodes) {
        var i, t1, node, inlineNodes;
        H.assertSubtype(nodes, "$isList", [U.Node0], "$asList");
        for (i = 0; t1 = nodes.length, i < t1; ++i) {
          if (i < 0)
            return H.ioore(nodes, i);
          node = nodes[i];
          t1 = J.getInterceptor$(node);
          if (!!t1.$isUnparsedContent) {
            inlineNodes = R.InlineParser$(node.textContent, this).parse$0(0);
            C.JSArray_methods.removeAt$1(nodes, i);
            C.JSArray_methods.insertAll$2(nodes, i, inlineNodes);
            i += inlineNodes.length - 1;
          } else if (!!t1.$isElement0 && node.children != null)
            this._parseInlineContent$1(node.get$children(node));
        }
      }
    },
    LinkReference: {
      "^": "Object;label>,destination,title"
    }
  }], ["", "package:markdown/src/extension_set.dart",, E, {
    "^": "",
    ExtensionSet: {
      "^": "Object;blockSyntaxes,inlineSyntaxes"
    }
  }], ["", "package:markdown/src/html_renderer.dart",, X, {
    "^": "",
    markdownToHtml: function(markdown, blockSyntaxes, extensionSet, imageLinkResolver, inlineOnly, inlineSyntaxes, linkResolver) {
      var t1, t2, t3, t4, t5, t6, $document, nodes;
      t1 = P.String;
      t2 = K.BlockSyntax;
      t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, t2);
      t4 = R.InlineSyntax;
      t5 = P.LinkedHashSet_LinkedHashSet(null, null, null, t4);
      t6 = $.$get$ExtensionSet_commonMark();
      $document = new S.Document0(P.LinkedHashMap_LinkedHashMap$_empty(t1, S.LinkReference), t6, linkResolver, imageLinkResolver, true, t3, t5);
      t2 = H.setRuntimeTypeInfo([], [t2]);
      t3.addAll$1(0, t2);
      t3.addAll$1(0, t6.blockSyntaxes);
      t2 = H.setRuntimeTypeInfo([], [t4]);
      t5.addAll$1(0, t2);
      t5.addAll$1(0, t6.inlineSyntaxes);
      markdown.toString;
      nodes = K.BlockParser$(H.assertSubtype(H.setRuntimeTypeInfo(H.stringReplaceAllUnchecked(markdown, "\r\n", "\n").split("\n"), [t1]), "$isList", [t1], "$asList"), $document).parseLines$0();
      $document._parseInlineContent$1(nodes);
      return new X.HtmlRenderer().render$1(nodes) + "\n";
    },
    HtmlRenderer: {
      "^": "Object;0buffer,0uniqueIds",
      set$uniqueIds: function(uniqueIds) {
        this.uniqueIds = H.assertSubtype(uniqueIds, "$isSet", [P.String], "$asSet");
      },
      render$1: function(nodes) {
        var t1, _i;
        H.assertSubtype(nodes, "$isList", [U.Node0], "$asList");
        this.buffer = new P.StringBuffer("");
        this.set$uniqueIds(P.LinkedHashSet_LinkedHashSet(null, null, null, P.String));
        for (t1 = nodes.length, _i = 0; _i < nodes.length; nodes.length === t1 || (0, H.throwConcurrentModificationError)(nodes), ++_i)
          J.accept$1$z(nodes[_i], this);
        return J.toString$0$(this.buffer);
      },
      visitElementBefore$1: function(element) {
        var t1, t2, t3, attributeNames, _i, $name;
        if (this.buffer._contents.length !== 0 && $.$get$HtmlRenderer__blockTags().firstMatch$1(element.tag) != null)
          this.buffer._contents += "\n";
        t1 = element.tag;
        this.buffer._contents += "<" + H.S(t1);
        t2 = element.attributes;
        t3 = t2.get$keys(t2);
        attributeNames = P.List_List$from(t3, true, H.getRuntimeTypeArgument(t3, "Iterable", 0));
        C.JSArray_methods.sort$1(attributeNames, new X.HtmlRenderer_visitElementBefore_closure());
        for (t3 = attributeNames.length, _i = 0; _i < attributeNames.length; attributeNames.length === t3 || (0, H.throwConcurrentModificationError)(attributeNames), ++_i) {
          $name = attributeNames[_i];
          this.buffer._contents += " " + H.S($name) + '="' + H.S(t2.$index(0, $name)) + '"';
        }
        t2 = this.buffer;
        if (element.children == null) {
          t3 = t2._contents += " />";
          if (t1 === "br")
            t2._contents = t3 + "\n";
          return false;
        } else {
          t2._contents += ">";
          return true;
        }
      },
      $isNodeVisitor: 1
    },
    HtmlRenderer_visitElementBefore_closure: {
      "^": "Closure:115;",
      call$2: function(a, b) {
        return J.compareTo$1$ns(H.stringTypeCheck(a), H.stringTypeCheck(b));
      }
    }
  }], ["", "package:markdown/src/inline_parser.dart",, R, {
    "^": "",
    InlineParser: {
      "^": "Object;source,document,syntaxes,pos,start,_stack",
      InlineParser$2: function(source, $document) {
        var t1, t2, t3;
        t1 = this.syntaxes;
        t2 = this.document;
        t3 = t2._inlineSyntaxes;
        C.JSArray_methods.addAll$1(t1, t3);
        if (t3.any$1(0, new R.InlineParser_closure(this)))
          C.JSArray_methods.add$1(t1, new R.TextSyntax(null, P.RegExp_RegExp("[A-Za-z0-9]+(?=\\s)", true, true)));
        else
          C.JSArray_methods.add$1(t1, new R.TextSyntax(null, P.RegExp_RegExp("[ \\tA-Za-z0-9]*[A-Za-z0-9](?=\\s)", true, true)));
        C.JSArray_methods.addAll$1(t1, $.$get$InlineParser__defaultSyntaxes());
        C.JSArray_methods.addAll$1(t1, $.$get$InlineParser__htmlSyntaxes());
        t2 = R.LinkSyntax$(t2.linkResolver, "\\[");
        C.JSArray_methods.insertAll$2(t1, 1, H.setRuntimeTypeInfo([t2, new R.ImageSyntax(new R.LinkSyntax_closure(), true, P.RegExp_RegExp("\\]", true, true), false, P.RegExp_RegExp("!\\[", true, true))], [R.InlineSyntax]));
      },
      parse$0: function(_) {
        var t1, t2, t3, t4;
        t1 = this._stack;
        C.JSArray_methods.add$1(t1, new R.TagState(0, 0, null, H.setRuntimeTypeInfo([], [U.Node0]), null));
        for (t2 = this.source.length, t3 = this.syntaxes, t4 = [H.getTypeArgumentByIndex(t1, 0)]; this.pos !== t2;) {
          if (new H.ReversedListIterable(t1, t4).any$1(0, new R.InlineParser_parse_closure(this)))
            continue;
          if (C.JSArray_methods.any$1(t3, new R.InlineParser_parse_closure0(this)))
            continue;
          ++this.pos;
        }
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        return t1[0].close$2(0, this, null);
      },
      writeText$0: function(_) {
        this.writeTextRange$2(this.start, this.pos);
        this.start = this.pos;
      },
      writeTextRange$2: function(start, end) {
        var text, nodes, textNode;
        if (end <= start)
          return;
        text = J.substring$2$s(this.source, start, end);
        nodes = C.JSArray_methods.get$last(this._stack).children;
        if (nodes.length > 0 && C.JSArray_methods.get$last(nodes) instanceof U.Text0) {
          textNode = H.interceptedTypeCast(C.JSArray_methods.get$last(nodes), "$isText0");
          C.JSArray_methods.$indexSet(nodes, nodes.length - 1, new U.Text0(H.S(textNode.text) + text));
        } else
          C.JSArray_methods.add$1(nodes, new U.Text0(text));
      },
      consume$1: function($length) {
        var t1 = this.pos += $length;
        this.start = t1;
      },
      static: {
        InlineParser$: function(source, $document) {
          var t1 = new R.InlineParser(source, $document, H.setRuntimeTypeInfo([], [R.InlineSyntax]), 0, 0, H.setRuntimeTypeInfo([], [R.TagState]));
          t1.InlineParser$2(source, $document);
          return t1;
        }
      }
    },
    InlineParser_closure: {
      "^": "Closure:48;$this",
      call$1: function(s) {
        H.interceptedTypeCheck(s, "$isInlineSyntax");
        return !C.JSArray_methods.contains$1(this.$this.document.extensionSet.inlineSyntaxes, s);
      }
    },
    InlineParser_parse_closure: {
      "^": "Closure:176;$this",
      call$1: function(state) {
        H.interceptedTypeCheck(state, "$isTagState");
        return state.syntax != null && state.tryMatch$1(this.$this);
      }
    },
    InlineParser_parse_closure0: {
      "^": "Closure:48;$this",
      call$1: function(syntax) {
        return H.interceptedTypeCheck(syntax, "$isInlineSyntax").tryMatch$1(this.$this);
      }
    },
    InlineSyntax: {
      "^": "Object;",
      tryMatch$2: function(parser, startMatchPos) {
        var startMatch, t1;
        startMatchPos = parser.pos;
        startMatch = this.pattern.matchAsPrefix$2(0, parser.source, startMatchPos);
        if (startMatch == null)
          return false;
        parser.writeText$0(0);
        if (this.onMatch$2(parser, startMatch)) {
          t1 = startMatch._match;
          if (0 >= t1.length)
            return H.ioore(t1, 0);
          parser.consume$1(t1[0].length);
        }
        return true;
      },
      tryMatch$1: function(parser) {
        return this.tryMatch$2(parser, null);
      }
    },
    LineBreakSyntax: {
      "^": "InlineSyntax;pattern",
      onMatch$2: function(parser, match) {
        var t1 = P.String;
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("br", null, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
        return true;
      }
    },
    TextSyntax: {
      "^": "InlineSyntax;substitute,pattern",
      onMatch$2: function(parser, match) {
        var t1 = this.substitute;
        if (t1 == null) {
          t1 = match._match;
          if (0 >= t1.length)
            return H.ioore(t1, 0);
          parser.pos += t1[0].length;
          return false;
        }
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Text0(t1));
        return true;
      },
      static: {
        TextSyntax$: function(pattern, sub) {
          return new R.TextSyntax(sub, P.RegExp_RegExp(pattern, true, true));
        }
      }
    },
    EscapeSyntax: {
      "^": "InlineSyntax;pattern",
      onMatch$2: function(parser, match) {
        var t1 = match._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1 = t1[0];
        if (1 >= t1.length)
          return H.ioore(t1, 1);
        t1 = t1[1];
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Text0(t1));
        return true;
      }
    },
    InlineHtmlSyntax: {
      "^": "TextSyntax;substitute,pattern"
    },
    EmailAutolinkSyntax: {
      "^": "InlineSyntax;pattern",
      onMatch$2: function(parser, match) {
        var t1, url, t2;
        t1 = match._match;
        if (1 >= t1.length)
          return H.ioore(t1, 1);
        url = t1[1];
        t1 = H.setRuntimeTypeInfo([new U.Text0(C.HtmlEscape_uMl.convert$1(url))], [U.Node0]);
        t2 = P.String;
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        t2.$indexSet(0, "href", P._Uri__uriEncode(C.List_gnE, "mailto:" + H.S(url), C.Utf8Codec_false, false));
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("a", t1, t2));
        return true;
      }
    },
    AutolinkSyntax: {
      "^": "InlineSyntax;pattern",
      onMatch$2: function(parser, match) {
        var t1, url, t2;
        t1 = match._match;
        if (1 >= t1.length)
          return H.ioore(t1, 1);
        url = t1[1];
        t1 = H.setRuntimeTypeInfo([new U.Text0(C.HtmlEscape_uMl.convert$1(url))], [U.Node0]);
        t2 = P.String;
        t2 = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        t2.$indexSet(0, "href", P._Uri__uriEncode(C.List_gnE, url, C.Utf8Codec_false, false));
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("a", t1, t2));
        return true;
      }
    },
    _DelimiterRun: {
      "^": "Object;char,length>,isLeftFlanking,isRightFlanking,isPrecededByPunctuation,isFollowedByPunctuation",
      toString$0: function(_) {
        return "<char: " + this.char + ", length: " + this.length + ", isLeftFlanking: " + this.isLeftFlanking + ", isRightFlanking: " + this.isRightFlanking + ">";
      },
      get$canOpen: function() {
        if (this.isLeftFlanking)
          var t1 = this.char === 42 || !this.isRightFlanking || this.isPrecededByPunctuation;
        else
          t1 = false;
        return t1;
      },
      get$canClose: function() {
        if (this.isRightFlanking)
          var t1 = this.char === 42 || !this.isLeftFlanking || this.isFollowedByPunctuation;
        else
          t1 = false;
        return t1;
      },
      static: {
        _DelimiterRun_tryParse: function(parser, runStart, runEnd) {
          var preceding, precededByPunctuation, t1, following, followedByPunctuation, t2, leftFlanking, rightFlanking;
          preceding = runStart === 0 ? "\n" : J.substring$2$s(parser.source, runStart - 1, runStart);
          precededByPunctuation = C.JSString_methods.contains$1("!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~", preceding);
          t1 = parser.source;
          following = runEnd === t1.length - 1 ? "\n" : J.substring$2$s(t1, runEnd + 1, runEnd + 2);
          followedByPunctuation = C.JSString_methods.contains$1("!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~", following);
          t2 = C.JSString_methods.contains$1(" \t\r\n", following);
          if (t2)
            leftFlanking = false;
          else
            leftFlanking = !followedByPunctuation || C.JSString_methods.contains$1(" \t\r\n", preceding) || precededByPunctuation;
          if (C.JSString_methods.contains$1(" \t\r\n", preceding))
            rightFlanking = false;
          else
            rightFlanking = !precededByPunctuation || t2 || followedByPunctuation;
          if (!leftFlanking && !rightFlanking)
            return;
          return new R._DelimiterRun(J.codeUnitAt$1$s(t1, runStart), runEnd - runStart + 1, leftFlanking, rightFlanking, precededByPunctuation, followedByPunctuation);
        }
      }
    },
    TagSyntax: {
      "^": "InlineSyntax;endPattern,requiresDelimiterRun,pattern",
      onMatch$2: ["super$TagSyntax$onMatch", function(parser, match) {
        var t1, runLength, matchStart, matchEnd, delimiterRun, t2;
        t1 = match._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        runLength = t1[0].length;
        matchStart = parser.pos;
        matchEnd = matchStart + runLength - 1;
        if (!this.requiresDelimiterRun) {
          C.JSArray_methods.add$1(parser._stack, new R.TagState(matchStart, matchEnd + 1, this, H.setRuntimeTypeInfo([], [U.Node0]), null));
          return true;
        }
        delimiterRun = R._DelimiterRun_tryParse(parser, matchStart, matchEnd);
        t1 = delimiterRun != null && delimiterRun.get$canOpen();
        t2 = parser.pos;
        if (t1) {
          C.JSArray_methods.add$1(parser._stack, new R.TagState(t2, matchEnd + 1, this, H.setRuntimeTypeInfo([], [U.Node0]), delimiterRun));
          return true;
        } else {
          parser.pos = t2 + runLength;
          return false;
        }
      }],
      onMatchEnd$3: function(parser, match, state) {
        var t1, runLength, matchStart, t2, openingRunLength, delimiterRun, t3;
        t1 = match._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        runLength = t1[0].length;
        matchStart = parser.pos;
        t1 = state.endPos;
        t2 = state.startPos;
        openingRunLength = t1 - t2;
        delimiterRun = R._DelimiterRun_tryParse(parser, matchStart, matchStart + runLength - 1);
        t3 = openingRunLength === 1;
        if (t3 && runLength === 1) {
          t1 = P.String;
          C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("em", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
        } else if (t3 && runLength > 1) {
          t1 = P.String;
          C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("em", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
          t1 = parser.pos - (runLength - 1);
          parser.pos = t1;
          parser.start = t1;
        } else if (openingRunLength > 1 && runLength === 1) {
          t3 = parser._stack;
          C.JSArray_methods.add$1(t3, new R.TagState(t2, t1 - 1, this, H.setRuntimeTypeInfo([], [U.Node0]), delimiterRun));
          t1 = P.String;
          C.JSArray_methods.add$1(C.JSArray_methods.get$last(t3).children, new U.Element0("em", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
        } else {
          t3 = openingRunLength === 2;
          if (t3 && runLength === 2) {
            t1 = P.String;
            C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("strong", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
          } else if (t3 && runLength > 2) {
            t1 = P.String;
            C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("strong", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
            t1 = parser.pos - (runLength - 2);
            parser.pos = t1;
            parser.start = t1;
          } else {
            t3 = openingRunLength > 2;
            if (t3 && runLength === 2) {
              t3 = parser._stack;
              C.JSArray_methods.add$1(t3, new R.TagState(t2, t1 - 2, this, H.setRuntimeTypeInfo([], [U.Node0]), delimiterRun));
              t1 = P.String;
              C.JSArray_methods.add$1(C.JSArray_methods.get$last(t3).children, new U.Element0("strong", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
            } else if (t3 && runLength > 2) {
              t3 = parser._stack;
              C.JSArray_methods.add$1(t3, new R.TagState(t2, t1 - 2, this, H.setRuntimeTypeInfo([], [U.Node0]), delimiterRun));
              t1 = P.String;
              C.JSArray_methods.add$1(C.JSArray_methods.get$last(t3).children, new U.Element0("strong", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
              t1 = parser.pos - (runLength - 2);
              parser.pos = t1;
              parser.start = t1;
            }
          }
        }
        return true;
      },
      static: {
        TagSyntax$: function(pattern, end, requiresDelimiterRun) {
          return new R.TagSyntax(P.RegExp_RegExp(end != null ? end : pattern, true, true), requiresDelimiterRun, P.RegExp_RegExp(pattern, true, true));
        }
      }
    },
    LinkSyntax: {
      "^": "TagSyntax;linkResolver,_pendingStatesAreActive,endPattern,requiresDelimiterRun,pattern",
      onMatch$2: function(parser, match) {
        if (!this.super$TagSyntax$onMatch(parser, match))
          return false;
        this._pendingStatesAreActive = true;
        return true;
      },
      onMatchEnd$3: function(parser, match, state) {
        var t1, t2, text, t3, char, inlineLink, label;
        if (!this._pendingStatesAreActive)
          return false;
        t1 = parser.source;
        t2 = parser.pos;
        text = J.substring$2$s(t1, state.endPos, t2);
        ++t2;
        t3 = t1.length;
        if (t2 >= t3)
          return this._tryAddReferenceLink$3(parser, state, text);
        char = C.JSString_methods.codeUnitAt$1(t1, t2);
        if (char === 40) {
          parser.pos = t2;
          inlineLink = this._parseInlineLink$1(parser);
          if (inlineLink != null)
            return this._tryAddInlineLink$3(parser, state, inlineLink);
          parser.pos = t2;
          parser.pos = t2 + -1;
          return this._tryAddReferenceLink$3(parser, state, text);
        }
        if (char === 91) {
          parser.pos = t2;
          ++t2;
          if (t2 < t3 && C.JSString_methods.codeUnitAt$1(t1, t2) === 93) {
            parser.pos = t2;
            return this._tryAddReferenceLink$3(parser, state, text);
          }
          label = this._parseReferenceLinkLabel$1(parser);
          if (label != null)
            return this._tryAddReferenceLink$3(parser, state, label);
          return false;
        }
        return this._tryAddReferenceLink$3(parser, state, text);
      },
      _resolveReferenceLink$3: function(label, state, linkReferences) {
        var linkReference, t1;
        linkReference = H.assertSubtype(linkReferences, "$isMap", [P.String, S.LinkReference], "$asMap").$index(0, label.toLowerCase());
        if (linkReference != null)
          return this._createNode$3(state, linkReference.destination, linkReference.title);
        else {
          t1 = H.stringReplaceAllUnchecked(label, "\\\\", "\\");
          t1 = H.stringReplaceAllUnchecked(t1, "\\[", "[");
          return this.linkResolver.call$1(H.stringReplaceAllUnchecked(t1, "\\]", "]"));
        }
      },
      _createNode$3: function(state, destination, title) {
        var t1 = P.String;
        t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        t1.$indexSet(0, "href", M.escapeAttribute(destination));
        if (title != null && title.length !== 0)
          t1.$indexSet(0, "title", M.escapeAttribute(title));
        return new U.Element0("a", state.children, t1);
      },
      _tryAddReferenceLink$3: function(parser, state, label) {
        var element = this._resolveReferenceLink$3(label, state, parser.document.linkReferences);
        if (element == null)
          return false;
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, element);
        parser.start = parser.pos;
        this._pendingStatesAreActive = false;
        return true;
      },
      _tryAddInlineLink$3: function(parser, state, link) {
        var element = this._createNode$3(state, link.destination, link.title);
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, element);
        parser.start = parser.pos;
        this._pendingStatesAreActive = false;
        return true;
      },
      _parseReferenceLinkLabel$1: function(parser) {
        var t1, t2, t3, t4, t5, t0, char, next, label;
        t1 = ++parser.pos;
        t2 = parser.source;
        t3 = t2.length;
        if (t1 === t3)
          return;
        for (t4 = J.getInterceptor$s(t2), t5 = ""; true; t0 = t5, t5 = t1, t1 = t0) {
          char = t4.codeUnitAt$1(t2, t1);
          if (char === 92) {
            ++t1;
            parser.pos = t1;
            next = C.JSString_methods.codeUnitAt$1(t2, t1);
            t1 = next !== 92 && next !== 93 ? t5 + H.Primitives_stringFromCharCode(char) : t5;
            t1 += H.Primitives_stringFromCharCode(next);
          } else if (char === 93)
            break;
          else
            t1 = t5 + H.Primitives_stringFromCharCode(char);
          t5 = ++parser.pos;
          if (t5 === t3)
            return;
        }
        label = t5.charCodeAt(0) == 0 ? t5 : t5;
        t1 = $.$get$LinkSyntax__entirelyWhitespacePattern()._nativeRegExp;
        if (t1.test(label))
          return;
        return label;
      },
      _parseInlineLink$1: function(parser) {
        var t1, t2;
        ++parser.pos;
        this._moveThroughWhitespace$1(parser);
        t1 = parser.pos;
        t2 = parser.source;
        if (t1 === t2.length)
          return;
        if (J.codeUnitAt$1$s(t2, t1) === 60)
          return this._parseInlineBracketedLink$1(parser);
        else
          return this._parseInlineBareDestinationLink$1(parser);
      },
      _parseInlineBracketedLink$1: function(parser) {
        var t1, t2, t3, t4, t0, char, next, destination, title;
        t1 = ++parser.pos;
        for (t2 = parser.source, t3 = J.getInterceptor$s(t2), t4 = ""; true; t0 = t4, t4 = t1, t1 = t0) {
          char = t3.codeUnitAt$1(t2, t1);
          if (char === 92) {
            ++t1;
            parser.pos = t1;
            next = C.JSString_methods.codeUnitAt$1(t2, t1);
            if (char === 32 || char === 10 || char === 13 || char === 12)
              return;
            t1 = next !== 92 && next !== 62 ? t4 + H.Primitives_stringFromCharCode(char) : t4;
            t1 += H.Primitives_stringFromCharCode(next);
          } else if (char === 32 || char === 10 || char === 13 || char === 12)
            return;
          else if (char === 62)
            break;
          else
            t1 = t4 + H.Primitives_stringFromCharCode(char);
          t4 = ++parser.pos;
          if (t4 === t2.length)
            return;
        }
        destination = t4.charCodeAt(0) == 0 ? t4 : t4;
        ++t1;
        parser.pos = t1;
        char = t3.codeUnitAt$1(t2, t1);
        if (char === 32 || char === 10 || char === 13 || char === 12) {
          title = this._parseTitle$1(parser);
          if (title == null && C.JSString_methods.codeUnitAt$1(t2, parser.pos) !== 41)
            return;
          return new R.InlineLink(destination, title);
        } else if (char === 41)
          return new R.InlineLink(destination, null);
        else
          return;
      },
      _parseInlineBareDestinationLink$1: function(parser) {
        var t1, t2, parenCount, t3, t4, char, next, destination, title;
        for (t1 = parser.source, t2 = J.getInterceptor$s(t1), parenCount = 1, t3 = ""; true;) {
          t4 = parser.pos;
          char = t2.codeUnitAt$1(t1, t4);
          switch (char) {
            case 92:
              ++t4;
              parser.pos = t4;
              if (t4 === t1.length)
                return;
              next = C.JSString_methods.codeUnitAt$1(t1, t4);
              if (next !== 92 && next !== 40 && next !== 41)
                t3 += H.Primitives_stringFromCharCode(char);
              t3 += H.Primitives_stringFromCharCode(next);
              break;
            case 32:
            case 10:
            case 13:
            case 12:
              destination = t3.charCodeAt(0) == 0 ? t3 : t3;
              title = this._parseTitle$1(parser);
              if (title == null && C.JSString_methods.codeUnitAt$1(t1, parser.pos) !== 41)
                return;
              --parenCount;
              if (parenCount === 0)
                return new R.InlineLink(destination, title);
              break;
            case 40:
              ++parenCount;
              t3 += H.Primitives_stringFromCharCode(char);
              break;
            case 41:
              --parenCount;
              if (parenCount === 0)
                return new R.InlineLink(t3.charCodeAt(0) == 0 ? t3 : t3, null);
              t3 += H.Primitives_stringFromCharCode(char);
              break;
            default:
              t3 += H.Primitives_stringFromCharCode(char);
          }
          if (++parser.pos === t1.length)
            return;
        }
      },
      _moveThroughWhitespace$1: function(parser) {
        var t1, t2, t3, char;
        for (t1 = parser.source, t2 = J.getInterceptor$s(t1); true;) {
          t3 = parser.pos;
          char = t2.codeUnitAt$1(t1, t3);
          if (char !== 32 && char !== 9 && char !== 10 && char !== 11 && char !== 13 && char !== 12)
            return;
          ++t3;
          parser.pos = t3;
          if (t3 === t1.length)
            return;
        }
      },
      _parseTitle$1: function(parser) {
        var t1, t2, t3, delimiter, closeDelimiter, t4, t0, char, next;
        this._moveThroughWhitespace$1(parser);
        t1 = parser.pos;
        t2 = parser.source;
        t3 = t2.length;
        if (t1 === t3)
          return;
        delimiter = J.codeUnitAt$1$s(t2, t1);
        if (delimiter !== 39 && delimiter !== 34 && delimiter !== 40)
          return;
        closeDelimiter = delimiter === 40 ? 41 : delimiter;
        ++t1;
        parser.pos = t1;
        for (t4 = ""; true; t0 = t4, t4 = t1, t1 = t0) {
          char = C.JSString_methods.codeUnitAt$1(t2, t1);
          if (char === 92) {
            ++t1;
            parser.pos = t1;
            next = C.JSString_methods.codeUnitAt$1(t2, t1);
            t1 = next !== 92 && next !== closeDelimiter ? t4 + H.Primitives_stringFromCharCode(char) : t4;
            t1 += H.Primitives_stringFromCharCode(next);
          } else if (char === closeDelimiter)
            break;
          else
            t1 = t4 + H.Primitives_stringFromCharCode(char);
          t4 = ++parser.pos;
          if (t4 === t3)
            return;
        }
        ++t1;
        parser.pos = t1;
        if (t1 === t3)
          return;
        this._moveThroughWhitespace$1(parser);
        t1 = parser.pos;
        if (t1 === t3)
          return;
        if (C.JSString_methods.codeUnitAt$1(t2, t1) !== 41)
          return;
        return t4.charCodeAt(0) == 0 ? t4 : t4;
      },
      static: {
        LinkSyntax$: function(linkResolver, pattern) {
          return new R.LinkSyntax(new R.LinkSyntax_closure(), true, P.RegExp_RegExp("\\]", true, true), false, P.RegExp_RegExp(pattern, true, true));
        }
      }
    },
    LinkSyntax_closure: {
      "^": "Closure:118;",
      call$2: [function(_, __) {
        H.stringTypeCheck(_);
        H.stringTypeCheck(__);
        return;
      }, function(_) {
        return this.call$2(_, null);
      }, "call$1", null, null, null, 4, 2, null, 3, 0, 69, "call"]
    },
    ImageSyntax: {
      "^": "LinkSyntax;linkResolver,_pendingStatesAreActive,endPattern,requiresDelimiterRun,pattern",
      _createNode$3: function(state, destination, title) {
        var t1, t2;
        t1 = P.String;
        t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        t1.$indexSet(0, "src", C.HtmlEscape_uMl.convert$1(destination));
        t2 = state.get$textContent();
        t1.$indexSet(0, "alt", t2);
        if (title != null && title.length !== 0)
          t1.$indexSet(0, "title", M.escapeAttribute(title));
        return new U.Element0("img", null, t1);
      },
      _tryAddReferenceLink$3: function(parser, state, label) {
        var element = this._resolveReferenceLink$3(label, state, parser.document.linkReferences);
        if (element == null)
          return false;
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, element);
        parser.start = parser.pos;
        return true;
      },
      static: {
        ImageSyntax$: function(linkResolver) {
          return new R.ImageSyntax(new R.LinkSyntax_closure(), true, P.RegExp_RegExp("\\]", true, true), false, P.RegExp_RegExp("!\\[", true, true));
        }
      }
    },
    CodeSyntax: {
      "^": "InlineSyntax;pattern",
      tryMatch$2: function(parser, startMatchPos) {
        var t1, match, t2;
        t1 = parser.pos;
        if (t1 > 0 && J.codeUnitAt$1$s(parser.source, t1 - 1) === 96)
          return false;
        match = this.pattern.matchAsPrefix$2(0, parser.source, t1);
        if (match == null)
          return false;
        parser.writeText$0(0);
        this.onMatch$2(parser, match);
        t1 = match._match;
        t2 = t1.length;
        if (0 >= t2)
          return H.ioore(t1, 0);
        parser.consume$1(t1[0].length);
        return true;
      },
      tryMatch$1: function(parser) {
        return this.tryMatch$2(parser, null);
      },
      onMatch$2: function(parser, match) {
        var t1, t2;
        t1 = match._match;
        if (2 >= t1.length)
          return H.ioore(t1, 2);
        t1 = H.setRuntimeTypeInfo([new U.Text0(C.HtmlEscape_uMl.convert$1(J.trim$0$s(t1[2])))], [U.Node0]);
        t2 = P.String;
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("code", t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, t2)));
        return true;
      }
    },
    TagState: {
      "^": "Object;startPos<,endPos<,syntax,children>,openingDelimiterRun",
      tryMatch$1: function(parser) {
        var t1, endMatch, runLength, closingMatchStart, closingDelimiterRun, oneRunOpensAndCloses;
        t1 = this.syntax;
        endMatch = t1.endPattern.matchAsPrefix$2(0, parser.source, parser.pos);
        if (endMatch == null)
          return false;
        if (!t1.requiresDelimiterRun) {
          this.close$2(0, parser, endMatch);
          return true;
        }
        t1 = endMatch._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        runLength = t1[0].length;
        closingMatchStart = parser.pos;
        closingDelimiterRun = R._DelimiterRun_tryParse(parser, closingMatchStart, closingMatchStart + runLength - 1);
        if (closingDelimiterRun != null && closingDelimiterRun.get$canClose()) {
          t1 = this.openingDelimiterRun;
          if (!(t1.get$canOpen() && t1.get$canClose()))
            oneRunOpensAndCloses = closingDelimiterRun.get$canOpen() && closingDelimiterRun.get$canClose();
          else
            oneRunOpensAndCloses = true;
          if (oneRunOpensAndCloses && C.JSInt_methods.$mod(this.endPos - this.startPos + closingDelimiterRun.length, 3) === 0)
            return false;
          this.close$2(0, parser, endMatch);
          return true;
        } else
          return false;
      },
      close$2: function(_, parser, endMatch) {
        var t1, t2, unmatchedTags, t3, _i, unmatched, endMatchIndex;
        t1 = parser._stack;
        t2 = C.JSArray_methods.indexOf$1(t1, this) + 1;
        unmatchedTags = C.JSArray_methods.sublist$1(t1, t2);
        C.JSArray_methods.removeRange$2(t1, t2, t1.length);
        for (t2 = unmatchedTags.length, t3 = this.children, _i = 0; _i < unmatchedTags.length; unmatchedTags.length === t2 || (0, H.throwConcurrentModificationError)(unmatchedTags), ++_i) {
          unmatched = unmatchedTags[_i];
          parser.writeTextRange$2(unmatched.get$startPos(), unmatched.get$endPos());
          C.JSArray_methods.addAll$1(t3, J.get$children$x(unmatched));
        }
        parser.writeText$0(0);
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
        if (t1.length === 0)
          return t3;
        endMatchIndex = parser.pos;
        if (this.syntax.onMatchEnd$3(parser, endMatch, this)) {
          t1 = endMatch._match;
          if (0 >= t1.length)
            return H.ioore(t1, 0);
          parser.consume$1(t1[0].length);
        } else {
          parser.writeTextRange$2(this.startPos, this.endPos);
          C.JSArray_methods.addAll$1(C.JSArray_methods.get$last(t1).children, t3);
          parser.pos = endMatchIndex;
          t1 = endMatch._match;
          if (0 >= t1.length)
            return H.ioore(t1, 0);
          parser.pos = endMatchIndex + t1[0].length;
        }
        return;
      },
      get$textContent: function() {
        var t1, t2, t3;
        t1 = this.children;
        t2 = P.String;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        return new H.MappedListIterable(t1, H.functionTypeCheck(new R.TagState_textContent_closure(), {func: 1, ret: t2, args: [t3]}), [t3, t2]).join$1(0, "");
      }
    },
    TagState_textContent_closure: {
      "^": "Closure:45;",
      call$1: [function(child) {
        return H.interceptedTypeCheck(child, "$isNode0").get$textContent();
      }, null, null, 4, 0, null, 29, "call"]
    },
    InlineLink: {
      "^": "Object;destination,title"
    }
  }], ["", "package:markdown/src/util.dart",, M, {
    "^": "",
    escapeAttribute: function(value) {
      var t1, t2, i, t3, ch;
      t1 = J.getInterceptor$s(value);
      t2 = value.length;
      i = 0;
      t3 = "";
      while (true) {
        if (!(i < t2)) {
          t1 = t3;
          break;
        }
        ch = t1._codeUnitAt$1(value, i);
        if (ch === 92) {
          ++i;
          if (i === t2) {
            t1 = t3 + H.Primitives_stringFromCharCode(ch);
            break;
          }
          ch = C.JSString_methods._codeUnitAt$1(value, i);
          switch (ch) {
            case 34:
              t3 += "&quot;";
              break;
            case 33:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 123:
            case 124:
            case 125:
            case 126:
              t3 += H.Primitives_stringFromCharCode(ch);
              break;
            default:
              t3 = t3 + "%5C" + H.Primitives_stringFromCharCode(ch);
          }
        } else
          t3 = ch === 34 ? t3 + "%22" : t3 + H.Primitives_stringFromCharCode(ch);
        ++i;
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  }], ["", "package:observable/src/change_notifier.dart",, B, {
    "^": "",
    ChangeNotifier: {
      "^": "Object;0_changes,_scheduled,0_queue,$ti",
      set$_queue: function(_queue) {
        this._queue = H.assertSubtype(_queue, "$isList", this.$ti, "$asList");
      },
      deliverChanges$0: [function() {
        var t1, t2, changes;
        if (this._scheduled && this.get$hasObservers()) {
          t1 = this._queue;
          t2 = this.$ti;
          if (t1 == null)
            changes = new Y.ChangeRecords(true, C.List_empty1, C.List_empty1, t2);
          else {
            t1 = G.freezeInDevMode(t1, H.getTypeArgumentByIndex(this, 0));
            changes = new Y.ChangeRecords(false, t1, t1, t2);
          }
          this.set$_queue(null);
          this._scheduled = false;
          C.JSNull_methods.add$1(this._changes, changes);
          return true;
        }
        return false;
      }, "call$0", "get$deliverChanges", 0, 0, 23],
      get$hasObservers: function() {
        return false;
      },
      notifyChange$1: function(change) {
        var t1;
        H.assertSubtypeOfRuntimeType(change, H.getTypeArgumentByIndex(this, 0));
        if (!this.get$hasObservers())
          return;
        t1 = this._queue;
        if (t1 == null) {
          t1 = H.setRuntimeTypeInfo([], this.$ti);
          this.set$_queue(t1);
        }
        C.JSArray_methods.add$1(t1, change);
        if (!this._scheduled) {
          P.scheduleMicrotask(this.get$deliverChanges());
          this._scheduled = true;
        }
      }
    }
  }], ["", "package:observable/src/internal.dart",, G, {
    "^": "",
    freezeInDevMode: function(list, $E) {
      H.assertSubtype(list, "$isList", [$E], "$asList");
      if (list == null)
        return C.List_empty1;
      return list;
    }
  }], ["observable.src.observable", "package:observable/src/observable.dart",, E, {
    "^": "",
    Observable: {
      "^": "Object;$ti",
      notifyPropertyChange$1$3: function(field, oldValue, newValue, $T) {
        var t1, t2;
        H.assertSubtypeOfRuntimeType(oldValue, $T);
        H.assertSubtypeOfRuntimeType(newValue, $T);
        t1 = this._observable$_delegate;
        if (t1.get$hasObservers() && oldValue !== newValue)
          if (this._isNotGeneric) {
            t2 = H.getRuntimeTypeArgument(this, "Observable", 0);
            t1.notifyChange$1(H.assertSubtypeOfRuntimeType(H.subtypeOfRuntimeTypeCast(new Y.PropertyChangeRecord(this, field, oldValue, newValue, [$T]), t2), t2));
          }
        return newValue;
      }
    }
  }], ["observable.src.observable_map", "package:observable/src/observable_map.dart",, Y, {
    "^": "",
    ObservableMap: {
      "^": "Observable;_observable_map$_map,_observable$_delegate,_isNotGeneric,$ti",
      get$keys: function(_) {
        var t1 = this._observable_map$_map;
        return t1.get$keys(t1);
      },
      get$length: function(_) {
        var t1 = this._observable_map$_map;
        return t1.get$length(t1);
      },
      $index: function(_, key) {
        return this._observable_map$_map.$index(0, key);
      },
      $indexSet: function(_, key, value) {
        var t1, t2, len, oldValue;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        t1 = this._observable$_delegate;
        if (!t1.get$hasObservers()) {
          this._observable_map$_map.$indexSet(0, key, value);
          return;
        }
        t2 = this._observable_map$_map;
        len = t2.get$length(t2);
        oldValue = t2.$index(0, key);
        t2.$indexSet(0, key, value);
        if (len !== t2.get$length(t2)) {
          this.notifyPropertyChange$1$3(C.Symbol_length, len, t2.get$length(t2), P.int);
          t1.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.MapChangeRecord(key, null, value, true, false, this.$ti), H.getRuntimeTypeArgument(this, "Observable", 0)));
          this._notifyKeysValuesChanged$0();
        } else if (!J.$eq$(oldValue, value)) {
          t2 = H.getRuntimeTypeArgument(this, "Observable", 0);
          t1.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.MapChangeRecord(key, oldValue, value, false, false, this.$ti), t2));
          t1.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.PropertyChangeRecord(this, C.Symbol_values, null, null, [P.Null]), t2));
        }
      },
      addAll$1: function(_, other) {
        H.assertSubtype(other, "$isMap", this.$ti, "$asMap").forEach$1(0, new Y.ObservableMap_addAll_closure(this));
      },
      forEach$1: function(_, f) {
        return this._observable_map$_map.forEach$1(0, H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]}));
      },
      toString$0: function(_) {
        return P.MapBase_mapToString(this);
      },
      _notifyKeysValuesChanged$0: function() {
        var t1, t2, t3;
        t1 = [P.Null];
        t2 = H.getRuntimeTypeArgument(this, "Observable", 0);
        t3 = this._observable$_delegate;
        t3.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.PropertyChangeRecord(this, C.Symbol_keys, null, null, t1), t2));
        t3.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.PropertyChangeRecord(this, C.Symbol_values, null, null, t1), t2));
      },
      $isMap: 1,
      $asObservable: function($K, $V) {
        return [Y.ChangeRecord];
      }
    },
    ObservableMap_addAll_closure: {
      "^": "Closure;$this",
      call$2: function(key, value) {
        var t1 = this.$this;
        t1.$indexSet(0, H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(t1, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(t1, 1)));
      },
      $signature: function() {
        var t1 = this.$this;
        return {func: 1, ret: P.Null, args: [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]};
      }
    }
  }], ["observable.src.records", "package:observable/src/records.dart",, Y, {
    "^": "",
    ChangeRecord: {
      "^": "Object;"
    },
    ChangeRecords: {
      "^": "DelegatingList;_isAny<,_records$_delegate<,_base,$ti",
      get$hashCode: function(_) {
        return X._finish(X._combine(X._combine(0, J.get$hashCode$(this._records$_delegate)), C.JSBool_methods.get$hashCode(this._isAny)));
      },
      $eq: function(_, other) {
        var t1;
        if (other == null)
          return false;
        if (this !== other)
          if (H.checkSubtype(other, "$isChangeRecords", [Y.ChangeRecord], null))
            if (new H.TypeImpl(H.getRti(this)).$eq(0, new H.TypeImpl(H.getRti(other)))) {
              t1 = this._isAny;
              if (!(t1 && other.get$_isAny()))
                t1 = !t1 && !other.get$_isAny() && C.ListEquality_DefaultEquality.equals$2(this._records$_delegate, other.get$_records$_delegate());
              else
                t1 = true;
            } else
              t1 = false;
          else
            t1 = false;
        else
          t1 = true;
        return t1;
      },
      toString$0: function(_) {
        return this._isAny ? "ChangeRecords.any" : "ChangeRecords(" + H.S(this._records$_delegate) + ")";
      }
    },
    MapChangeRecord: {
      "^": "Object;key>,oldValue>,newValue>,isInsert<,isRemove<,$ti",
      $eq: function(_, o) {
        var t1;
        if (o == null)
          return false;
        if (H.checkSubtype(o, "$isMapChangeRecord", this.$ti, null)) {
          t1 = J.getInterceptor$x(o);
          return J.$eq$(this.key, t1.get$key(o)) && J.$eq$(this.oldValue, t1.get$oldValue(o)) && J.$eq$(this.newValue, t1.get$newValue(o)) && this.isInsert === o.get$isInsert() && this.isRemove === o.get$isRemove();
        }
        return false;
      },
      get$hashCode: function(_) {
        return X.hashObjects([this.key, this.oldValue, this.newValue, this.isInsert, this.isRemove]);
      },
      toString$0: function(_) {
        var kind;
        if (this.isInsert)
          kind = "insert";
        else
          kind = this.isRemove ? "remove" : "set";
        return "#<MapChangeRecord " + kind + " " + H.S(this.key) + " from " + H.S(this.oldValue) + " to " + H.S(this.newValue);
      },
      $isChangeRecord: 1
    },
    PropertyChangeRecord: {
      "^": "Object;object,name>,oldValue>,newValue>,$ti",
      toString$0: function(_) {
        return "#<" + C.Type_PropertyChangeRecord_8EM.toString$0(0) + " " + this.name.toString$0(0) + " from " + H.S(this.oldValue) + " to: " + H.S(this.newValue);
      },
      $isChangeRecord: 1
    }
  }], ["quiver.collection", "package:quiver/collection.dart",, S, {
    "^": "",
    listsEqual: function(a, b) {
      var t1, t2, i, t3;
      t1 = J.getInterceptor$(a);
      if (t1.$eq(a, b))
        return true;
      if (a == null || b == null)
        return false;
      t2 = J.getInterceptor$asx(b);
      if (t1.get$length(a) != t2.get$length(b))
        return false;
      i = 0;
      while (true) {
        t3 = t1.get$length(a);
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!(i < t3))
          break;
        if (!J.$eq$(t1.$index(a, i), t2.$index(b, i)))
          return false;
        ++i;
      }
      return true;
    }
  }], ["quiver.core", "package:quiver/core.dart",, X, {
    "^": "",
    hashObjects: function(objects) {
      return X._finish(C.JSArray_methods.fold$1$2(objects, 0, new X.hashObjects_closure(), P.int));
    },
    _combine: function(hash, value) {
      if (typeof hash !== "number")
        return hash.$add();
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _finish: function(hash) {
      H.intTypeCheck(hash);
      if (typeof hash !== "number")
        return H.iae(hash);
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    hashObjects_closure: {
      "^": "Closure:119;",
      call$2: function(h, i) {
        return X._combine(H.intTypeCheck(h), J.get$hashCode$(i));
      }
    }
  }], ["quiver.time", "package:quiver/time.dart",, V, {
    "^": "",
    systemTime: [function() {
      return new P.DateTime(Date.now(), false);
    }, "call$0", "time__systemTime$closure", 0, 0, 167],
    Clock: {
      "^": "Object;_time"
    }
  }], ["", "package:skawa_components/ckeditor/ckeditor.dart",, V, {
    "^": "",
    SkawaCkeditorComponent: {
      "^": "Object;_changeController,0_ckeditor,0editorName,0extraPlugins,0content,0configUrl",
      set$extraPlugins: function(extraPlugins) {
        this.extraPlugins = H.assertSubtype(extraPlugins, "$isList", [V.ExtraPlugin], "$asList");
      },
      ngAfterViewInit$0: function() {
        var t1, t2, t3, t4;
        t1 = this._ckeditor;
        if (t1 == null) {
          t1 = this.editorName;
          t2 = this.extraPlugins;
          t3 = this.configUrl;
          t4 = new V._CKEditor();
          t4._maybeAddExtraPlugins$1(t2);
          t2 = P.String;
          t2 = P.LinkedHashMap_LinkedHashMap$_literal(["customConfig", t3], t2, t2);
          t2 = P._convertDataTree(t2);
          t4._jsEditorInstance = H.interceptedTypeCheck(self.CKEDITOR.replace(t1, t2), "$isCKEditorInstance");
          this._ckeditor = t4;
          t1 = t4;
        }
        return t1;
      }
    },
    ExtraPlugin: {
      "^": "Object;name>,path>,entrypoint<"
    },
    _CKEditor: {
      "^": "Object;0_jsEditorInstance",
      _maybeAddExtraPlugins$1: function(extraPlugins) {
        var t1, _i, extraPlugin, t2, t3, t4;
        H.assertSubtype(extraPlugins, "$isIterable", [V.ExtraPlugin], "$asIterable");
        if (extraPlugins == null)
          return;
        for (t1 = extraPlugins.length, _i = 0; _i < extraPlugins.length; extraPlugins.length === t1 || (0, H.throwConcurrentModificationError)(extraPlugins), ++_i) {
          extraPlugin = extraPlugins[_i];
          t2 = J.getInterceptor$x(extraPlugin);
          t3 = t2.get$name(extraPlugin);
          t2 = t2.get$path(extraPlugin);
          t4 = extraPlugin.get$entrypoint();
          self.CKEDITOR.plugins.addExternal(t3, t2, t4);
        }
      }
    }
  }], ["", "package:skawa_components/ckeditor/ckeditor.template.dart",, A, {
    "^": "",
    ViewSkawaCkeditorComponent0: {
      "^": "AppView;0_ckeditor_template$_expr_0,0_ckeditor_template$_expr_1,0_ckeditor_template$_expr_2,0_ckeditor_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode = this.initViewRoot$1(this.rootEl);
        this._ckeditor_template$_el_0 = H.interceptedTypeCheck(S.createAndAppend(document, "textarea", parentRenderNode), "$isTextAreaElement");
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, currVal_1, currVal_2;
        _ctx = this.ctx;
        currVal_0 = _ctx.editorName;
        if (currVal_0 == null)
          currVal_0 = "";
        t1 = this._ckeditor_template$_expr_0;
        if (t1 !== currVal_0) {
          this._ckeditor_template$_el_0.name = currVal_0;
          this._ckeditor_template$_expr_0 = currVal_0;
        }
        currVal_1 = _ctx.editorName;
        if (currVal_1 == null)
          currVal_1 = "";
        t1 = this._ckeditor_template$_expr_1;
        if (t1 !== currVal_1) {
          this._ckeditor_template$_el_0.id = currVal_1;
          this._ckeditor_template$_expr_1 = currVal_1;
        }
        currVal_2 = _ctx.content;
        if (currVal_2 == null)
          currVal_2 = "";
        t1 = this._ckeditor_template$_expr_2;
        if (t1 !== currVal_2) {
          this._ckeditor_template$_el_0.value = currVal_2;
          this._ckeditor_template$_expr_2 = currVal_2;
        }
      },
      $asAppView: function() {
        return [V.SkawaCkeditorComponent];
      },
      static: {
        ViewSkawaCkeditorComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new A.ViewSkawaCkeditorComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, V.SkawaCkeditorComponent));
          t2 = document.createElement("skawa-ckeditor");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaCkeditorComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
            $.ViewSkawaCkeditorComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["ckeditor_interop", "package:skawa_components/ckeditor/ckeditor_interop.dart",, U, {
    "^": "",
    CKEditor: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    CKEditorInstance: {
      "^": "JavaScriptObject;",
      "%": ""
    }
  }], ["", "package:skawa_components/directives/language_direction_directive.dart",, Y, {
    "^": "",
    LanguageDirectionDirective: {
      "^": "Object;_htmlElement,textDirection,0textAlign",
      setLanguageDirection$1: function(value) {
        var t1 = T.Bidi_estimateDirectionOfText(value == null ? "" : value, false).spanText;
        this.textDirection = t1;
        this.textAlign = t1 === "ltr" ? null : "right";
      }
    }
  }], ["", "package:skawa_components/directives/language_direction_directive.template.dart",, X, {
    "^": "",
    LanguageDirectionDirectiveNgCd: {
      "^": "DirectiveChangeDetector;instance,0_language_direction_directive_template$_expr_0,0_language_direction_directive_template$_expr_1,0directive,0view,0el,_hasHostChanges",
      detectHostChanges$2: function(view, el) {
        var t1, currVal_0, t2, currVal_1;
        t1 = this.instance;
        currVal_0 = t1.textDirection;
        t2 = this._language_direction_directive_template$_expr_0;
        if (t2 !== currVal_0) {
          t2 = el.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, (t2 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t2, "direction"), currVal_0, null);
          this._language_direction_directive_template$_expr_0 = currVal_0;
        }
        currVal_1 = t1.textAlign;
        t1 = this._language_direction_directive_template$_expr_1;
        if (t1 != currVal_1) {
          t1 = el.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "text-align"), currVal_1, null);
          this._language_direction_directive_template$_expr_1 = currVal_1;
        }
      }
    }
  }], ["asset_skawa_components_lib_infobar_infobar.css.shim.dart", "package:skawa_components/infobar/infobar.css.shim.dart",, B, {}], ["", "package:skawa_components/infobar/infobar.dart",, O, {
    "^": "",
    SkawaInfobarComponent: {
      "^": "Object;_infobar$_changeDetectorRef,0_icon,0url,0primaryActionButton",
      set$primaryActionButton: function(primaryActionButton) {
        this.primaryActionButton = H.interceptedTypeCheck(primaryActionButton, "$isMaterialButtonComponent");
      },
      get$icon: function(_) {
        var t1 = this._icon;
        if (t1 != null)
          return t1;
        if (this.url != null)
          return "info";
        return;
      },
      navigate$0: [function(_) {
        var t1 = this.url;
        if (t1 != null)
          C.Window_methods.open$2(window, t1, "_blank");
      }, "call$0", "get$navigate", 1, 0, 1]
    }
  }], ["", "package:skawa_components/infobar/infobar.template.dart",, G, {
    "^": "",
    ViewSkawaInfobarComponent0: {
      "^": "AppView;0_infobar_template$_compView_0,0_infobar_template$_AcxDarkTheme_0_5,0_infobar_template$_MaterialButtonComponent_0_6,0_infobar_template$_compView_1,0_MaterialIconComponent_1_5,0_infobar_template$_expr_0,0_infobar_template$_expr_1,0_expr_2,0_infobar_template$_expr_3,0_infobar_template$_expr_4,0_infobar_template$_el_0,0_infobar_template$_el_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_1, doc, _el_3, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = U.ViewMaterialButtonComponent0$(this, 0);
        this._infobar_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._infobar_template$_el_0 = t1;
        J.append$1$x(parentRenderNode, t1);
        J.setAttribute$2$x(this._infobar_template$_el_0, "icon", "");
        this.addShimC$1(this._infobar_template$_el_0);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(this.parentView.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._infobar_template$_AcxDarkTheme_0_5 = t1;
        this._infobar_template$_MaterialButtonComponent_0_6 = B.MaterialButtonComponent$(this._infobar_template$_el_0, t1, this._infobar_template$_compView_0.viewData.ref, null);
        t1 = M.ViewMaterialIconComponent0$(this, 1);
        this._infobar_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        J.setAttribute$2$x(_el_1, "size", "medium");
        this.addShimC$1(_el_1);
        t1 = new Y.MaterialIconComponent(_el_1);
        this._MaterialIconComponent_1_5 = t1;
        this._infobar_template$_compView_1.create$2(0, t1, []);
        this._infobar_template$_compView_0.create$2(0, this._infobar_template$_MaterialButtonComponent_0_6, [H.setRuntimeTypeInfo([_el_1], [W.HtmlElement])]);
        doc = document;
        t1 = S.createDivAndAppend(doc, parentRenderNode);
        this._infobar_template$_el_2 = t1;
        t1.className = "info-text";
        this.addShimC$1(t1);
        _el_3 = S.createSpanAndAppend(doc, this._infobar_template$_el_2);
        _el_3.className = "ws-truncate-fix";
        this.addShimE$1(_el_3);
        this.project$2(_el_3, 0);
        t1 = this._infobar_template$_MaterialButtonComponent_0_6._trigger;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler0$1$1(J.get$navigate$z(this.ctx), W.UIEvent));
        this.ctx.set$primaryActionButton(this._infobar_template$_MaterialButtonComponent_0_6);
        this.init$2(C.List_empty, [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_AcxDarkTheme_Tng)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._infobar_template$_AcxDarkTheme_0_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._infobar_template$_MaterialButtonComponent_0_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_3, t2, changed, currVal_0, currVal_1, currVal_2, currVal_4;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        currVal_3 = _ctx.get$icon(_ctx);
        t2 = this._infobar_template$_expr_3;
        if (t2 != currVal_3) {
          this._MaterialIconComponent_1_5.set$icon(0, currVal_3);
          this._infobar_template$_expr_3 = currVal_3;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._infobar_template$_compView_1.viewData.set$cdMode(1);
        currVal_0 = _ctx.url;
        t2 = this._infobar_template$_expr_0;
        if (t2 != currVal_0) {
          this._infobar_template$_el_0.title = currVal_0;
          this._infobar_template$_expr_0 = currVal_0;
        }
        currVal_1 = _ctx.get$icon(_ctx) == null;
        t2 = this._infobar_template$_expr_1;
        if (t2 !== currVal_1) {
          this.updateElemClass$3(this._infobar_template$_el_0, "hide-without-icon", currVal_1);
          this._infobar_template$_expr_1 = currVal_1;
        }
        currVal_2 = _ctx.url == null;
        t2 = this._expr_2;
        if (t2 !== currVal_2) {
          this.updateElemClass$3(this._infobar_template$_el_0, "without-url", currVal_2);
          this._expr_2 = currVal_2;
        }
        this._infobar_template$_compView_0.detectHostChanges$1(t1 === 0);
        currVal_4 = _ctx.get$icon(_ctx) == null;
        t1 = this._infobar_template$_expr_4;
        if (t1 !== currVal_4) {
          this.updateClass$3(this._infobar_template$_el_2, "without-icon", currVal_4);
          this._infobar_template$_expr_4 = currVal_4;
        }
        this._infobar_template$_compView_0.detectChanges$0();
        this._infobar_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._infobar_template$_compView_0.destroy$0();
        this._infobar_template$_compView_1.destroy$0();
      },
      $asAppView: function() {
        return [O.SkawaInfobarComponent];
      },
      static: {
        ViewSkawaInfobarComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new G.ViewSkawaInfobarComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, O.SkawaInfobarComponent));
          t2 = document.createElement("skawa-infobar");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaInfobarComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaInfobarComponent());
            $.ViewSkawaInfobarComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:skawa_components/markdown_editor/editor_render_target.dart",, Q, {
    "^": "",
    EditorRenderTarget: {
      "^": "Object;htmlElement,renderer,_onRenderController,0_previousRender",
      updateRender$2$classes: function(newTarget, classes) {
        var t1, t2, t3;
        H.assertSubtype(classes, "$isList", [P.String], "$asList");
        this._onRenderController.add$1(0, newTarget);
        t1 = this._previousRender;
        if (newTarget == null ? t1 == null : newTarget === t1)
          return;
        t1 = this.htmlElement;
        (t1 && C.DivElement_methods)._clearChildren$0(t1);
        this.renderer.toString;
        t2 = X.markdownToHtml(newTarget, null, null, null, false, null, null);
        t3 = document.body;
        C.DivElement_methods.append$1(t1, (t3 && C.BodyElement_methods).createFragment$3$treeSanitizer$validator(t3, t2, null, null));
        this._updateElementChildren$2(t1, classes);
      },
      _updateElementChildren$2: function(element, classes) {
        var t1;
        H.assertSubtype(classes, "$isList", [P.String], "$asList");
        if (classes != null)
          if (classes.length !== 0) {
            t1 = J.get$children$x(element);
            t1 = !t1.get$isEmpty(t1);
          } else
            t1 = false;
        else
          t1 = false;
        if (t1) {
          t1 = J.get$children$x(element);
          t1.forEach$1(t1, new Q.EditorRenderTarget__updateElementChildren_closure(this, classes));
        }
      }
    },
    EditorRenderTarget__updateElementChildren_closure: {
      "^": "Closure:120;$this,classes",
      call$1: function(child) {
        var t1;
        H.interceptedTypeCheck(child, "$isElement");
        t1 = this.classes;
        J.get$classes$x(child).addAll$1(0, t1);
        this.$this._updateElementChildren$2(child, t1);
      }
    },
    EditorRenderer: {
      "^": "Object;"
    },
    MarkdownRenderer: {
      "^": "Object;",
      $isEditorRenderer: 1
    }
  }], ["asset_skawa_components_lib_markdown_renderer_markdown_renderer.css.shim.dart", "package:skawa_components/markdown_renderer/markdown_renderer.css.shim.dart",, O, {}], ["", "package:skawa_components/markdown_renderer/markdown_renderer.dart",, L, {
    "^": "",
    SkawaMarkdownRendererComponent: {
      "^": "Object;0_emulatedCssClass,0_markdown_renderer$_source,0editorRenderTarget",
      set$_emulatedCssClass: function(_emulatedCssClass) {
        this._emulatedCssClass = H.assertSubtype(_emulatedCssClass, "$isList", [P.String], "$asList");
      },
      set$editorRenderTarget: function(editorRenderTarget) {
        this.editorRenderTarget = H.interceptedTypeCheck(editorRenderTarget, "$isEditorRenderTarget");
      },
      set$source: function(_, source) {
        this._markdown_renderer$_source = source;
        this.editorRenderTarget.updateRender$2$classes(source, this._emulatedCssClass);
      },
      ngOnInit$0: function() {
        var t1, t2, t3, classes;
        t1 = this.editorRenderTarget.htmlElement;
        t1.toString;
        t2 = H.functionTypeCheck(new L.SkawaMarkdownRendererComponent_ngOnInit_closure(), {func: 1, ret: P.bool, args: [P.String]});
        t1 = new W._ElementCssClassSet(t1).readClasses$0();
        t3 = H.getRuntimeTypeArgument(t1, "SetMixin", 0);
        classes = new H.WhereIterable(t1, H.functionTypeCheck(t2, {func: 1, ret: P.bool, args: [t3]}), [t3]);
        this.set$_emulatedCssClass(!classes.get$isEmpty(classes) ? P.List_List$from(classes, true, t3) : H.setRuntimeTypeInfo([], [P.String]));
        this.editorRenderTarget.updateRender$2$classes(this._markdown_renderer$_source, this._emulatedCssClass);
      }
    },
    SkawaMarkdownRendererComponent_ngOnInit_closure: {
      "^": "Closure:10;",
      call$1: function(cssClass) {
        return !J.contains$1$asx(H.stringTypeCheck(cssClass), "markdown-container");
      }
    }
  }], ["", "package:skawa_components/markdown_renderer/markdown_renderer.template.dart",, A, {
    "^": "",
    ViewSkawaMarkdownRendererComponent0: {
      "^": "AppView;0_EditorRenderTarget_0_5,0_LanguageDirectionDirective_0_6,0_markdown_renderer_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2, t3, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.createDivAndAppend(document, parentRenderNode);
        this._markdown_renderer_template$_el_0 = t1;
        (t1 && C.DivElement_methods).setAttribute$2(t1, "editorRenderTarget", "");
        t1 = this._markdown_renderer_template$_el_0;
        (t1 && C.DivElement_methods).setAttribute$2(t1, "skawaLangugageDirection", "");
        this.addShimC$1(this._markdown_renderer_template$_el_0);
        t1 = this._markdown_renderer_template$_el_0;
        t2 = H.interceptedTypeCheck(this.parentView.injectorGet$2(C.Type_EditorRenderer_wbs, this.viewData.parentIndex), "$isEditorRenderer");
        t3 = P.String;
        t1 = new Q.EditorRenderTarget(t1, t2, new P._AsyncBroadcastStreamController(null, null, 0, [t3]));
        this._EditorRenderTarget_0_5 = t1;
        this._LanguageDirectionDirective_0_6 = new X.LanguageDirectionDirectiveNgCd(new Y.LanguageDirectionDirective(this._markdown_renderer_template$_el_0, "ltr"), false);
        t1 = t1._onRenderController;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_render_0_0(), t3, t3));
        this.ctx.set$editorRenderTarget(this._EditorRenderTarget_0_5);
        this.init$2(C.List_empty, [subscription_0]);
      },
      detectChangesInternal$0: function() {
        this._LanguageDirectionDirective_0_6.detectHostChanges$2(this, this._markdown_renderer_template$_el_0);
      },
      destroyInternal$0: function() {
        this._EditorRenderTarget_0_5._onRenderController.close$0(0);
      },
      _handle_render_0_0$1: [function($$event) {
        this._LanguageDirectionDirective_0_6.instance.setLanguageDirection$1(H.stringTypeCheck($$event));
      }, "call$1", "get$_handle_render_0_0", 4, 0, 2],
      $asAppView: function() {
        return [L.SkawaMarkdownRendererComponent];
      }
    }
  }], ["", "package:skawa_components/markdown_renderer/raw_markdown_renderer.dart",, X, {
    "^": "",
    SkawaRawMarkdownRendererComponent: {
      "^": "SkawaMarkdownRendererComponent;0_emulatedCssClass,0_markdown_renderer$_source,0editorRenderTarget"
    }
  }], ["", "package:skawa_components/markdown_renderer/raw_markdown_renderer.template.dart",, T, {
    "^": "",
    ViewSkawaRawMarkdownRendererComponent0: {
      "^": "AppView;0_raw_markdown_renderer_template$_EditorRenderTarget_0_5,0_raw_markdown_renderer_template$_LanguageDirectionDirective_0_6,0_raw_markdown_renderer_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2, t3, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.createDivAndAppend(document, parentRenderNode);
        this._raw_markdown_renderer_template$_el_0 = t1;
        (t1 && C.DivElement_methods).setAttribute$2(t1, "editorRenderTarget", "");
        t1 = this._raw_markdown_renderer_template$_el_0;
        (t1 && C.DivElement_methods).setAttribute$2(t1, "skawaLangugageDirection", "");
        this.addShimC$1(this._raw_markdown_renderer_template$_el_0);
        t1 = this._raw_markdown_renderer_template$_el_0;
        t2 = H.interceptedTypeCheck(this.parentView.injectorGet$2(C.Type_EditorRenderer_wbs, this.viewData.parentIndex), "$isEditorRenderer");
        t3 = P.String;
        t1 = new Q.EditorRenderTarget(t1, t2, new P._AsyncBroadcastStreamController(null, null, 0, [t3]));
        this._raw_markdown_renderer_template$_EditorRenderTarget_0_5 = t1;
        this._raw_markdown_renderer_template$_LanguageDirectionDirective_0_6 = new X.LanguageDirectionDirectiveNgCd(new Y.LanguageDirectionDirective(this._raw_markdown_renderer_template$_el_0, "ltr"), false);
        t1 = t1._onRenderController;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_raw_markdown_renderer_template$_handle_render_0_0(), t3, t3));
        this.ctx.set$editorRenderTarget(this._raw_markdown_renderer_template$_EditorRenderTarget_0_5);
        this.init$2(C.List_empty, [subscription_0]);
      },
      detectChangesInternal$0: function() {
        this._raw_markdown_renderer_template$_LanguageDirectionDirective_0_6.detectHostChanges$2(this, this._raw_markdown_renderer_template$_el_0);
      },
      destroyInternal$0: function() {
        this._raw_markdown_renderer_template$_EditorRenderTarget_0_5._onRenderController.close$0(0);
      },
      _raw_markdown_renderer_template$_handle_render_0_0$1: [function($$event) {
        this._raw_markdown_renderer_template$_LanguageDirectionDirective_0_6.instance.setLanguageDirection$1(H.stringTypeCheck($$event));
      }, "call$1", "get$_raw_markdown_renderer_template$_handle_render_0_0", 4, 0, 2],
      $asAppView: function() {
        return [X.SkawaRawMarkdownRendererComponent];
      }
    }
  }], ["asset_skawa_components_lib_nav_item_nav_item.css.shim.dart", "package:skawa_components/nav_item/nav_item.css.shim.dart",, F, {}], ["", "package:skawa_components/nav_item/nav_item.dart",, Z, {
    "^": "",
    SkawaNavItemComponent: {
      "^": "_SkawaNavItemComponent_MaterialButtonBase_TextOnlyMixin;_changeDetector,hovering,0icon,0fullWidth<,TextOnlyMixin_textOnly,_focused,_clickFocused,_isMouseDown,raised,_trigger,0_hostTabIndex,role,disabled,tabbable,HasTabIndex__tabIndex,_focus$_root",
      focusedStateChanged$0: function() {
        this._changeDetector.appView.markPathToRootAsCheckOnce$0();
        return;
      },
      onMouseEnter$0: [function(_) {
        this.hovering = true;
        return true;
      }, "call$0", "get$onMouseEnter", 1, 0, 1],
      onMouseOut$0: [function(_) {
        this.hovering = false;
        return false;
      }, "call$0", "get$onMouseOut", 1, 0, 1]
    },
    _SkawaNavItemComponent_MaterialButtonBase_TextOnlyMixin: {
      "^": "MaterialButtonBase+TextOnlyMixin;textOnly:TextOnlyMixin_textOnly<"
    }
  }], ["", "package:skawa_components/nav_item/nav_item.template.dart",, Y, {
    "^": "",
    ViewSkawaNavItemComponent0: {
      "^": "AppView;0_nav_item_template$_compView_0,0_SkawaSidebarItemComponent_0_5,0_NgClass_0_6,0_nav_item_template$_compView_1,0_MaterialRippleComponent_1_5,0_nav_item_template$_expr_0,0_nav_item_template$_expr_1,0_map_0,0_nav_item_template$_expr_3,0_expr_4,0_expr_5,0_expr_6,0_expr_7,0_expr_8,0_expr_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$_map_0: function(_map_0) {
        this._map_0 = H.functionTypeCheck(_map_0, {func: 1, ret: [P.Map, P.String,,], args: [,,]});
      },
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, t1, _el_0, t2, t3, t4, _el_1;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        t1 = K.ViewSkawaSidebarItemComponent0$(this, 0);
        this._nav_item_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        _el_0.className = "content";
        this.addShimC$1(_el_0);
        this._SkawaSidebarItemComponent_0_5 = new E.SkawaSidebarItemComponent(null);
        this._NgClass_0_6 = new Y.NgClass(_el_0, H.setRuntimeTypeInfo([], [P.String]));
        t2 = this._nav_item_template$_compView_0;
        t3 = this._SkawaSidebarItemComponent_0_5;
        t4 = this.viewData.projectableNodes;
        if (0 >= t4.length)
          return H.ioore(t4, 0);
        t2.create$2(0, t3, [t4[0]]);
        t4 = L.ViewMaterialRippleComponent0$(this, 1);
        this._nav_item_template$_compView_1 = t4;
        _el_1 = t4.rootEl;
        t1.append$1(parentRenderNode, _el_1);
        this.addShimC$1(_el_1);
        t1 = B.MaterialRippleComponent$(_el_1);
        this._MaterialRippleComponent_1_5 = t1;
        this._nav_item_template$_compView_1.create$2(0, t1, []);
        this.set$_map_0(Q.pureProxy2(new Y.ViewSkawaNavItemComponent0_build_closure(), [P.Map, P.String,,], null, null));
        t1 = W.Event;
        t4 = J.getInterceptor$x(_el_1);
        t4.addEventListener$2(_el_1, "mousedown", this.eventHandler1$2$1(J.get$onMouseDown$x(this.ctx), t1, t1));
        t4.addEventListener$2(_el_1, "mouseup", this.eventHandler1$2$1(J.get$onMouseUp$x(this.ctx), t1, t1));
        this.init$2(C.List_empty, null);
        t4 = J.getInterceptor$x(_rootEl);
        t4.addEventListener$2(_rootEl, "click", this.eventHandler1$2$1(_ctx.get$handleClick(), t1, W.MouseEvent));
        t4.addEventListener$2(_rootEl, "keypress", this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t1, W.KeyboardEvent));
        t4.addEventListener$2(_rootEl, "mousedown", this.eventHandler1$2$1(_ctx.get$onMouseDown(_ctx), t1, t1));
        t4.addEventListener$2(_rootEl, "mouseup", this.eventHandler1$2$1(_ctx.get$onMouseUp(_ctx), t1, t1));
        t3 = W.UIEvent;
        t4.addEventListener$2(_rootEl, "focus", this.eventHandler1$2$1(_ctx.get$onFocus(_ctx), t1, t3));
        t4.addEventListener$2(_rootEl, "blur", this.eventHandler1$2$1(_ctx.get$onBlur(_ctx), t1, t3));
        t4.addEventListener$2(_rootEl, "mouseenter", this.eventHandler0$1$1(_ctx.get$onMouseEnter(_ctx), t1));
        t4.addEventListener$2(_rootEl, "mouseout", this.eventHandler0$1$1(_ctx.get$onMouseOut(_ctx), t1));
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, currVal_0, t1, changed, currVal_1, t2, currVal_3;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        currVal_0 = _ctx.TextOnlyMixin_textOnly;
        t1 = this._nav_item_template$_expr_0;
        if (t1 != currVal_0) {
          this._SkawaSidebarItemComponent_0_5.TextOnlyMixin_textOnly = currVal_0;
          this._nav_item_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        currVal_1 = _ctx.icon;
        t1 = this._nav_item_template$_expr_1;
        if (t1 != currVal_1) {
          this._SkawaSidebarItemComponent_0_5.icon = currVal_1;
          this._nav_item_template$_expr_1 = currVal_1;
          changed = true;
        }
        if (changed)
          this._nav_item_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._NgClass_0_6.set$initialClasses("content");
        t1 = _ctx.hovering;
        t2 = _ctx.icon;
        currVal_3 = this._map_0.call$2(t1, t2 == null);
        t1 = this._nav_item_template$_expr_3;
        if (t1 == null ? currVal_3 != null : t1 !== currVal_3) {
          this._NgClass_0_6.set$rawClass(currVal_3);
          this._nav_item_template$_expr_3 = currVal_3;
        }
        this._NgClass_0_6.ngDoCheck$0();
        this._nav_item_template$_compView_0.detectHostChanges$1(firstCheck);
        this._nav_item_template$_compView_0.detectChanges$0();
        this._nav_item_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._nav_item_template$_compView_0.destroy$0();
        this._nav_item_template$_compView_1.destroy$0();
        var t1 = this._NgClass_0_6;
        t1._applyClasses$2(t1._rawClass, true);
        t1._applyInitialClasses$1(false);
        this._MaterialRippleComponent_1_5.ngOnDestroy$0();
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_4, t1, currVal_5, currVal_6, currVal_7, currVal_8;
        currVal_4 = J.get$tabIndex$x(this.ctx);
        t1 = this._expr_4;
        if (t1 != currVal_4) {
          this.rootEl.tabIndex = currVal_4;
          this._expr_4 = currVal_4;
        }
        currVal_5 = this.ctx.get$ariaRole();
        t1 = this._expr_5;
        if (t1 != currVal_5) {
          this.setAttr$3(this.rootEl, "role", currVal_5);
          this._expr_5 = currVal_5;
        }
        currVal_6 = this.ctx.get$disabledStr();
        t1 = this._expr_6;
        if (t1 !== currVal_6) {
          this.setAttr$3(this.rootEl, "aria-disabled", currVal_6);
          this._expr_6 = currVal_6;
        }
        currVal_7 = J.get$disabled$z(this.ctx);
        t1 = this._expr_7;
        if (t1 !== currVal_7) {
          this.updateElemClass$3(this.rootEl, "is-disabled", currVal_7);
          this._expr_7 = currVal_7;
        }
        currVal_8 = this.ctx.get$textOnly();
        t1 = this._expr_8;
        if (t1 != currVal_8) {
          this.setAttr$3(this.rootEl, "textOnly", currVal_8);
          this._expr_8 = currVal_8;
        }
        this.ctx.get$fullWidth();
      },
      $asAppView: function() {
        return [Z.SkawaNavItemComponent];
      },
      static: {
        ViewSkawaNavItemComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new Y.ViewSkawaNavItemComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, Z.SkawaNavItemComponent));
          t2 = document.createElement("skawa-nav-item");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaNavItemComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaNavItemComponent());
            $.ViewSkawaNavItemComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    ViewSkawaNavItemComponent0_build_closure: {
      "^": "Closure:121;",
      call$2: function(p0, p1) {
        return P.LinkedHashMap_LinkedHashMap$_literal(["hovering", p0, "icon-padding", p1], P.String, null);
      }
    }
  }], ["", "package:skawa_components/pipes/hex_colorize_pipe.dart",, L, {
    "^": "",
    SkawaHexColorizePipe: {
      "^": "Object;",
      transform$1: [function(_, seed) {
        var t1, hexHash, hash;
        t1 = typeof seed === "string";
        if (!(t1 || typeof seed === "number"))
          throw H.wrapException(K.InvalidPipeArgumentException$(C.Type_SkawaHexColorizePipe_cNQ, seed));
        if (t1) {
          hexHash = H.Primitives_parseInt(seed, 16);
          if (hexHash == null)
            hexHash = C.JSString_methods.get$hashCode(seed);
        } else
          hexHash = J.get$hashCode$(seed);
        hash = C.JSInt_methods.toRadixString$1(hexHash, 16);
        for (; hash.length < C.JSArray_methods.get$first(C.List_3_4_6_8);)
          hash += "0";
        for (; !C.JSArray_methods.contains$1(C.List_3_4_6_8, hash.length);)
          hash = C.JSString_methods.substring$1(hash, 1);
        return "#" + hash;
      }, "call$1", "get$transform", 5, 0, 28]
    }
  }], ["asset_skawa_components_lib_sidebar_item_sidebar_item.css.shim.dart", "package:skawa_components/sidebar_item/sidebar_item.css.shim.dart",, E, {}], ["", "package:skawa_components/sidebar_item/sidebar_item.dart",, E, {
    "^": "",
    SkawaSidebarItemComponent: {
      "^": "_SkawaSidebarItemComponent_Object_TextOnlyMixin;0icon,TextOnlyMixin_textOnly"
    },
    TextOnlyMixin: {
      "^": "Object;textOnly:TextOnlyMixin_textOnly<"
    },
    _SkawaSidebarItemComponent_Object_TextOnlyMixin: {
      "^": "Object+TextOnlyMixin;textOnly:TextOnlyMixin_textOnly<"
    }
  }], ["", "package:skawa_components/sidebar_item/sidebar_item.template.dart",, K, {
    "^": "",
    viewFactory_SkawaSidebarItemComponent1: [function(parentView, parentIndex) {
      var t1 = new K._ViewSkawaSidebarItemComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, E.SkawaSidebarItemComponent));
      t1.componentType = $.ViewSkawaSidebarItemComponent0__renderType;
      return t1;
    }, "call$2", "sidebar_item_template__viewFactory_SkawaSidebarItemComponent1$closure", 8, 0, 168],
    ViewSkawaSidebarItemComponent0: {
      "^": "AppView;0_sidebar_item_template$_appEl_0,0_sidebar_item_template$_NgIf_0_9,0_sidebar_item_template$_expr_1,0_sidebar_item_template$_expr_2,0_sidebar_item_template$_el_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _anchor_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_0 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(parentRenderNode, _anchor_0);
        t1 = new V.ViewContainer(0, null, this, _anchor_0);
        this._sidebar_item_template$_appEl_0 = t1;
        this._sidebar_item_template$_NgIf_0_9 = new K.NgIf(new D.TemplateRef(t1, K.sidebar_item_template__viewFactory_SkawaSidebarItemComponent1$closure()), t1, false);
        t1 = S.createSpanAndAppend(document, parentRenderNode);
        this._sidebar_item_template$_el_1 = t1;
        t1.className = "item-text";
        this.addShimE$1(t1);
        this.project$2(this._sidebar_item_template$_el_1, 0);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_1;
        _ctx = this.ctx;
        t1 = this._sidebar_item_template$_NgIf_0_9;
        t1.set$ngIf(_ctx.TextOnlyMixin_textOnly == null && _ctx.icon != null);
        this._sidebar_item_template$_appEl_0.detectChangesInNestedViews$0();
        currVal_1 = _ctx.TextOnlyMixin_textOnly != null;
        t1 = this._sidebar_item_template$_expr_1;
        if (t1 !== currVal_1) {
          this.updateClass$3(this._sidebar_item_template$_el_1, "text-only", currVal_1);
          this._sidebar_item_template$_expr_1 = currVal_1;
        }
      },
      destroyInternal$0: function() {
        this._sidebar_item_template$_appEl_0.destroyNestedViews$0();
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_2, t1;
        currVal_2 = this.ctx.get$textOnly();
        t1 = this._sidebar_item_template$_expr_2;
        if (t1 != currVal_2) {
          this.setAttr$3(this.rootEl, "textOnly", currVal_2);
          this._sidebar_item_template$_expr_2 = currVal_2;
        }
      },
      $asAppView: function() {
        return [E.SkawaSidebarItemComponent];
      },
      static: {
        ViewSkawaSidebarItemComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new K.ViewSkawaSidebarItemComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, E.SkawaSidebarItemComponent));
          t2 = document.createElement("skawa-sidebar-item");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaSidebarItemComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaSidebarItemComponent());
            $.ViewSkawaSidebarItemComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    _ViewSkawaSidebarItemComponent1: {
      "^": "AppView;0_sidebar_item_template$_compView_0,0_sidebar_item_template$_MaterialIconComponent_0_5,0_sidebar_item_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._sidebar_item_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "item-icon";
        this.addShimC$1(_el_0);
        t1 = new Y.MaterialIconComponent(_el_0);
        this._sidebar_item_template$_MaterialIconComponent_0_5 = t1;
        this._sidebar_item_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1, changed;
        currVal_0 = this.ctx.icon;
        t1 = this._sidebar_item_template$_expr_0;
        if (t1 != currVal_0) {
          this._sidebar_item_template$_MaterialIconComponent_0_5.set$icon(0, currVal_0);
          this._sidebar_item_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._sidebar_item_template$_compView_0.viewData.set$cdMode(1);
        this._sidebar_item_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._sidebar_item_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [E.SkawaSidebarItemComponent];
      }
    }
  }], ["asset_skawa_components_example_lib_app_component.css.shim.dart", "package:skawa_components_example/app_component.css.shim.dart",, K, {}], ["", "package:skawa_components_example/app_component.dart",, Q, {
    "^": "",
    AppComponent: {
      "^": "Object;"
    }
  }], ["", "package:skawa_components_example/app_component.template.dart",, V, {
    "^": "",
    viewFactory_AppComponentHost0: [function(parentView, parentIndex) {
      var t1 = new V._ViewAppComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, Q.AppComponent));
      return t1;
    }, "call$2", "app_component_template__viewFactory_AppComponentHost0$closure", 8, 0, 169],
    ViewAppComponent0: {
      "^": "AppView;0_MaterialPersistentDrawerDirective_0_5,0_compView_1,0_SkawaSidebarItemComponent_1_5,0_compView_3,0_SkawaSidebarItemComponent_3_5,0_compView_6,0_SkawaSidebarItemComponent_6_5,0_compView_9,0_SkawaSidebarItemComponent_9_5,0_compView_12,0_SkawaSidebarItemComponent_12_5,0_compView_15,0_SkawaSidebarItemComponent_15_5,0_compView_17,0_SkawaSidebarItemComponent_17_5,0_compView_20,0_SkawaSidebarItemComponent_20_5,0_compView_23,0_SkawaSidebarItemComponent_23_5,0_compView_26,0_SkawaSidebarItemComponent_26_5,0_compView_29,0_SkawaSidebarItemComponent_29_5,0_compView_32,0_SkawaSidebarItemComponent_32_5,0_compView_35,0_SkawaSidebarItemComponent_35_5,0_compView_38,0_SkawaSidebarItemComponent_38_5,0_compView_41,0_SkawaSidebarItemComponent_41_5,0_compView_44,0_SkawaSidebarItemComponent_44_5,0_compView_47,0_SkawaSidebarItemComponent_47_5,0_compView_54,0_AcxDarkTheme_54_5,0_MaterialButtonComponent_54_6,0_compView_55,0_MaterialIconComponent_55_5,0_compView_61,0_CardDemoComponent_61_5,0_compView_62,0_CkeditorDemoComponent_62_5,0_compView_63,0_DataTableDemoComponent_63_5,0_compView_64,0_GridDemoComponent_64_5,0_compView_65,0_HexColorizePipeDemoComponent_65_5,0_compView_66,0_InfobarDemoComponent_66_5,0_compView_67,0_MarkdownDemoComponent_67_5,0__EditorRenderer_67_6,0_compView_68,0_NavItemDemoComponent_68_5,0_compView_69,0_SidebarItemDemoComponent_69_5,0_compView_70,0_SnackbarService_70_5,0_SnackbarDemoComponent_70_6,0_compView_71,0_ExtendedMaterialIconDemoComponent_71_5,0_app_component_template$_expr_17,0_el_0,0_el_52,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, t1, _el_1, _text_2, t2, _el_3, _el_4, t3, _el_6, _el_7, _el_9, _el_10, _el_12, _el_13, _el_15, _text_16, _el_17, _el_18, _el_20, _el_21, _el_23, _el_24, _el_26, _el_27, _el_29, _el_30, _el_32, _el_33, _el_35, _el_36, _el_38, _el_39, _el_41, _el_42, _el_44, _el_45, _el_47, _el_48, _el_50, _el_51, _el_53, _el_54, _el_55, _el_56, _el_58, _el_59, _el_60, _el_61, t4, _el_62, _el_63, _el_64, _el_65, _el_66, _el_67, _el_68, _el_69, t5, _el_70, _el_71, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        t1 = S.createAndAppend(doc, "material-drawer", parentRenderNode);
        this._el_0 = t1;
        J.setAttribute$2$x(t1, "persistent", "");
        this.addShimE$1(this._el_0);
        this._MaterialPersistentDrawerDirective_0_5 = new O.MaterialPersistentDrawerDirectiveNgCd(new G.MaterialPersistentDrawerDirective(true, new P._SyncBroadcastStreamController(null, null, 0, [P.bool])), false);
        t1 = K.ViewSkawaSidebarItemComponent0$(this, 1);
        this._compView_1 = t1;
        _el_1 = t1.rootEl;
        J.append$1$x(this._el_0, _el_1);
        J.setAttribute$2$x(_el_1, "textOnly", "");
        this.addShimC$1(_el_1);
        t1 = new E.SkawaSidebarItemComponent(null);
        this._SkawaSidebarItemComponent_1_5 = t1;
        _text_2 = doc.createTextNode("Useful links");
        t2 = [W.Text];
        this._compView_1.create$2(0, t1, [H.setRuntimeTypeInfo([_text_2], t2)]);
        t1 = K.ViewSkawaSidebarItemComponent0$(this, 3);
        this._compView_3 = t1;
        _el_3 = t1.rootEl;
        J.append$1$x(this._el_0, _el_3);
        J.setAttribute$2$x(_el_3, "textOnly", "");
        this.addShimC$1(_el_3);
        this._SkawaSidebarItemComponent_3_5 = new E.SkawaSidebarItemComponent(null);
        _el_4 = doc.createElement("a");
        t1 = J.getInterceptor$x(_el_4);
        t1.setAttribute$2(_el_4, "href", "https://github.com/dart-lang/angular_components");
        t1.setAttribute$2(_el_4, "target", "_blank");
        H.interceptedTypeCheck(_el_4, "$isHtmlElement");
        this.addShimC$1(_el_4);
        t1.append$1(_el_4, doc.createTextNode("Angular Components"));
        t1 = [W.Element];
        this._compView_3.create$2(0, this._SkawaSidebarItemComponent_3_5, [H.setRuntimeTypeInfo([_el_4], t1)]);
        t3 = K.ViewSkawaSidebarItemComponent0$(this, 6);
        this._compView_6 = t3;
        _el_6 = t3.rootEl;
        J.append$1$x(this._el_0, _el_6);
        J.setAttribute$2$x(_el_6, "textOnly", "");
        this.addShimC$1(_el_6);
        this._SkawaSidebarItemComponent_6_5 = new E.SkawaSidebarItemComponent(null);
        _el_7 = doc.createElement("a");
        t3 = J.getInterceptor$x(_el_7);
        t3.setAttribute$2(_el_7, "href", "https://github.com/skawa-universe/skawa_components_example/blob/master/lib/non_layout_examples/non_layout_demo.html");
        t3.setAttribute$2(_el_7, "target", "_blank");
        H.interceptedTypeCheck(_el_7, "$isHtmlElement");
        this.addShimC$1(_el_7);
        t3.append$1(_el_7, doc.createTextNode("Template code"));
        this._compView_6.create$2(0, this._SkawaSidebarItemComponent_6_5, [H.setRuntimeTypeInfo([_el_7], t1)]);
        t3 = K.ViewSkawaSidebarItemComponent0$(this, 9);
        this._compView_9 = t3;
        _el_9 = t3.rootEl;
        J.append$1$x(this._el_0, _el_9);
        J.setAttribute$2$x(_el_9, "textOnly", "");
        this.addShimC$1(_el_9);
        this._SkawaSidebarItemComponent_9_5 = new E.SkawaSidebarItemComponent(null);
        _el_10 = doc.createElement("a");
        t3 = J.getInterceptor$x(_el_10);
        t3.setAttribute$2(_el_10, "href", "https://material.io/guidelines/");
        t3.setAttribute$2(_el_10, "target", "_blank");
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        t3.append$1(_el_10, doc.createTextNode("Material design"));
        this._compView_9.create$2(0, this._SkawaSidebarItemComponent_9_5, [H.setRuntimeTypeInfo([_el_10], t1)]);
        t3 = K.ViewSkawaSidebarItemComponent0$(this, 12);
        this._compView_12 = t3;
        _el_12 = t3.rootEl;
        J.append$1$x(this._el_0, _el_12);
        J.setAttribute$2$x(_el_12, "textOnly", "");
        this.addShimC$1(_el_12);
        this._SkawaSidebarItemComponent_12_5 = new E.SkawaSidebarItemComponent(null);
        _el_13 = doc.createElement("a");
        t3 = J.getInterceptor$x(_el_13);
        t3.setAttribute$2(_el_13, "href", "https://material.io/color/");
        t3.setAttribute$2(_el_13, "target", "_blank");
        H.interceptedTypeCheck(_el_13, "$isHtmlElement");
        this.addShimC$1(_el_13);
        t3.append$1(_el_13, doc.createTextNode("Color palette tool"));
        this._compView_12.create$2(0, this._SkawaSidebarItemComponent_12_5, [H.setRuntimeTypeInfo([_el_13], t1)]);
        t3 = K.ViewSkawaSidebarItemComponent0$(this, 15);
        this._compView_15 = t3;
        _el_15 = t3.rootEl;
        J.append$1$x(this._el_0, _el_15);
        J.setAttribute$2$x(_el_15, "textOnly", "");
        this.addShimC$1(_el_15);
        t3 = new E.SkawaSidebarItemComponent(null);
        this._SkawaSidebarItemComponent_15_5 = t3;
        _text_16 = doc.createTextNode("Component Examples");
        this._compView_15.create$2(0, t3, [H.setRuntimeTypeInfo([_text_16], t2)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 17);
        this._compView_17 = t2;
        _el_17 = t2.rootEl;
        J.append$1$x(this._el_0, _el_17);
        J.setAttribute$2$x(_el_17, "textOnly", "");
        this.addShimC$1(_el_17);
        this._SkawaSidebarItemComponent_17_5 = new E.SkawaSidebarItemComponent(null);
        _el_18 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_18);
        t2.setAttribute$2(_el_18, "href", "#card-demo");
        H.interceptedTypeCheck(_el_18, "$isHtmlElement");
        this.addShimC$1(_el_18);
        t2.append$1(_el_18, doc.createTextNode("Card Demo"));
        this._compView_17.create$2(0, this._SkawaSidebarItemComponent_17_5, [H.setRuntimeTypeInfo([_el_18], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 20);
        this._compView_20 = t2;
        _el_20 = t2.rootEl;
        J.append$1$x(this._el_0, _el_20);
        J.setAttribute$2$x(_el_20, "textOnly", "");
        this.addShimC$1(_el_20);
        this._SkawaSidebarItemComponent_20_5 = new E.SkawaSidebarItemComponent(null);
        _el_21 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_21);
        t2.setAttribute$2(_el_21, "href", "#ckeditor-demo");
        H.interceptedTypeCheck(_el_21, "$isHtmlElement");
        this.addShimC$1(_el_21);
        t2.append$1(_el_21, doc.createTextNode("Ckeditor Demo"));
        this._compView_20.create$2(0, this._SkawaSidebarItemComponent_20_5, [H.setRuntimeTypeInfo([_el_21], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 23);
        this._compView_23 = t2;
        _el_23 = t2.rootEl;
        J.append$1$x(this._el_0, _el_23);
        J.setAttribute$2$x(_el_23, "textOnly", "");
        this.addShimC$1(_el_23);
        this._SkawaSidebarItemComponent_23_5 = new E.SkawaSidebarItemComponent(null);
        _el_24 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_24);
        t2.setAttribute$2(_el_24, "href", "#data-table-demo");
        H.interceptedTypeCheck(_el_24, "$isHtmlElement");
        this.addShimC$1(_el_24);
        t2.append$1(_el_24, doc.createTextNode("Data Table Demo"));
        this._compView_23.create$2(0, this._SkawaSidebarItemComponent_23_5, [H.setRuntimeTypeInfo([_el_24], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 26);
        this._compView_26 = t2;
        _el_26 = t2.rootEl;
        J.append$1$x(this._el_0, _el_26);
        J.setAttribute$2$x(_el_26, "textOnly", "");
        this.addShimC$1(_el_26);
        this._SkawaSidebarItemComponent_26_5 = new E.SkawaSidebarItemComponent(null);
        _el_27 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_27);
        t2.setAttribute$2(_el_27, "href", "#grid-demo");
        H.interceptedTypeCheck(_el_27, "$isHtmlElement");
        this.addShimC$1(_el_27);
        t2.append$1(_el_27, doc.createTextNode("Grid Demo"));
        this._compView_26.create$2(0, this._SkawaSidebarItemComponent_26_5, [H.setRuntimeTypeInfo([_el_27], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 29);
        this._compView_29 = t2;
        _el_29 = t2.rootEl;
        J.append$1$x(this._el_0, _el_29);
        J.setAttribute$2$x(_el_29, "textOnly", "");
        this.addShimC$1(_el_29);
        this._SkawaSidebarItemComponent_29_5 = new E.SkawaSidebarItemComponent(null);
        _el_30 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_30);
        t2.setAttribute$2(_el_30, "href", "#hex-colorize-demo");
        H.interceptedTypeCheck(_el_30, "$isHtmlElement");
        this.addShimC$1(_el_30);
        t2.append$1(_el_30, doc.createTextNode("Hex Colorize Pipe Demo"));
        this._compView_29.create$2(0, this._SkawaSidebarItemComponent_29_5, [H.setRuntimeTypeInfo([_el_30], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 32);
        this._compView_32 = t2;
        _el_32 = t2.rootEl;
        J.append$1$x(this._el_0, _el_32);
        J.setAttribute$2$x(_el_32, "textOnly", "");
        this.addShimC$1(_el_32);
        this._SkawaSidebarItemComponent_32_5 = new E.SkawaSidebarItemComponent(null);
        _el_33 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_33);
        t2.setAttribute$2(_el_33, "href", "#infobar-demo");
        H.interceptedTypeCheck(_el_33, "$isHtmlElement");
        this.addShimC$1(_el_33);
        t2.append$1(_el_33, doc.createTextNode("Infobar Demo"));
        this._compView_32.create$2(0, this._SkawaSidebarItemComponent_32_5, [H.setRuntimeTypeInfo([_el_33], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 35);
        this._compView_35 = t2;
        _el_35 = t2.rootEl;
        J.append$1$x(this._el_0, _el_35);
        J.setAttribute$2$x(_el_35, "textOnly", "");
        this.addShimC$1(_el_35);
        this._SkawaSidebarItemComponent_35_5 = new E.SkawaSidebarItemComponent(null);
        _el_36 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_36);
        t2.setAttribute$2(_el_36, "href", "#markdown-demo");
        H.interceptedTypeCheck(_el_36, "$isHtmlElement");
        this.addShimC$1(_el_36);
        t2.append$1(_el_36, doc.createTextNode("Markdown Renderer Demo"));
        this._compView_35.create$2(0, this._SkawaSidebarItemComponent_35_5, [H.setRuntimeTypeInfo([_el_36], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 38);
        this._compView_38 = t2;
        _el_38 = t2.rootEl;
        J.append$1$x(this._el_0, _el_38);
        J.setAttribute$2$x(_el_38, "textOnly", "");
        this.addShimC$1(_el_38);
        this._SkawaSidebarItemComponent_38_5 = new E.SkawaSidebarItemComponent(null);
        _el_39 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_39);
        t2.setAttribute$2(_el_39, "href", "#nav-item-demo");
        H.interceptedTypeCheck(_el_39, "$isHtmlElement");
        this.addShimC$1(_el_39);
        t2.append$1(_el_39, doc.createTextNode("Nav Item Demo"));
        this._compView_38.create$2(0, this._SkawaSidebarItemComponent_38_5, [H.setRuntimeTypeInfo([_el_39], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 41);
        this._compView_41 = t2;
        _el_41 = t2.rootEl;
        J.append$1$x(this._el_0, _el_41);
        J.setAttribute$2$x(_el_41, "textOnly", "");
        this.addShimC$1(_el_41);
        this._SkawaSidebarItemComponent_41_5 = new E.SkawaSidebarItemComponent(null);
        _el_42 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_42);
        t2.setAttribute$2(_el_42, "href", "#sidebar-item-demo");
        H.interceptedTypeCheck(_el_42, "$isHtmlElement");
        this.addShimC$1(_el_42);
        t2.append$1(_el_42, doc.createTextNode("Sidebar Item Demo"));
        this._compView_41.create$2(0, this._SkawaSidebarItemComponent_41_5, [H.setRuntimeTypeInfo([_el_42], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 44);
        this._compView_44 = t2;
        _el_44 = t2.rootEl;
        J.append$1$x(this._el_0, _el_44);
        J.setAttribute$2$x(_el_44, "textOnly", "");
        this.addShimC$1(_el_44);
        this._SkawaSidebarItemComponent_44_5 = new E.SkawaSidebarItemComponent(null);
        _el_45 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_45);
        t2.setAttribute$2(_el_45, "href", "#snackbar-demo");
        H.interceptedTypeCheck(_el_45, "$isHtmlElement");
        this.addShimC$1(_el_45);
        t2.append$1(_el_45, doc.createTextNode("Snackbar Demo"));
        this._compView_44.create$2(0, this._SkawaSidebarItemComponent_44_5, [H.setRuntimeTypeInfo([_el_45], t1)]);
        t2 = K.ViewSkawaSidebarItemComponent0$(this, 47);
        this._compView_47 = t2;
        _el_47 = t2.rootEl;
        J.append$1$x(this._el_0, _el_47);
        J.setAttribute$2$x(_el_47, "textOnly", "");
        this.addShimC$1(_el_47);
        this._SkawaSidebarItemComponent_47_5 = new E.SkawaSidebarItemComponent(null);
        _el_48 = doc.createElement("a");
        t2 = J.getInterceptor$x(_el_48);
        t2.setAttribute$2(_el_48, "href", "#extended-material-icon-demo");
        H.interceptedTypeCheck(_el_48, "$isHtmlElement");
        this.addShimC$1(_el_48);
        t2.append$1(_el_48, doc.createTextNode("Extended Material Icon Demo"));
        this._compView_47.create$2(0, this._SkawaSidebarItemComponent_47_5, [H.setRuntimeTypeInfo([_el_48], t1)]);
        _el_50 = S.createAndAppend(doc, "material-content", parentRenderNode);
        this.addShimE$1(_el_50);
        _el_51 = S.createDivAndAppend(doc, _el_50);
        _el_51.className = "container";
        this.addShimC$1(_el_51);
        t1 = S.createAndAppend(doc, "header", _el_51);
        this._el_52 = t1;
        t1.className = "material-header shadow";
        this.addShimE$1(t1);
        _el_53 = S.createDivAndAppend(doc, this._el_52);
        _el_53.className = "material-header-row";
        this.addShimC$1(_el_53);
        t1 = U.ViewMaterialButtonComponent0$(this, 54);
        this._compView_54 = t1;
        _el_54 = t1.rootEl;
        (_el_53 && C.DivElement_methods).append$1(_el_53, _el_54);
        _el_54.className = "material-drawer-button";
        J.setAttribute$2$x(_el_54, "icon", "");
        this.addShimC$1(_el_54);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(this.parentView.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_54_5 = t1;
        this._MaterialButtonComponent_54_6 = B.MaterialButtonComponent$(_el_54, t1, this._compView_54.viewData.ref, null);
        t1 = M.ViewMaterialIconComponent0$(this, 55);
        this._compView_55 = t1;
        _el_55 = t1.rootEl;
        J.setAttribute$2$x(_el_55, "icon", "menu");
        this.addShimC$1(_el_55);
        t1 = new Y.MaterialIconComponent(_el_55);
        this._MaterialIconComponent_55_5 = t1;
        this._compView_55.create$2(0, t1, []);
        this._compView_54.create$2(0, this._MaterialButtonComponent_54_6, [H.setRuntimeTypeInfo([_el_55], [W.HtmlElement])]);
        _el_56 = S.createSpanAndAppend(doc, _el_53);
        _el_56.className = "material-header-title";
        this.addShimE$1(_el_56);
        (_el_56 && C.SpanElement_methods).append$1(_el_56, doc.createTextNode("Skawa Component Examples"));
        _el_58 = S.createDivAndAppend(doc, _el_51);
        this.addShimC$1(_el_58);
        _el_59 = S.createDivAndAppend(doc, _el_58);
        (_el_59 && C.DivElement_methods).setAttribute$2(_el_59, "style", "position: sticky; top: 0; height: 64px;");
        this.addShimC$1(_el_59);
        _el_60 = S.createAndAppend(doc, "main", _el_58);
        this.addShimE$1(_el_60);
        t1 = P.String;
        t2 = new L.ViewCardDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 1, C.ViewType_1, 61, N.CardDemoComponent));
        t3 = doc.createElement("card-demo");
        t2.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewCardDemoComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$CardDemoComponent());
          $.ViewCardDemoComponent0__renderType = t3;
        }
        t2.setupComponentType$1(t3);
        this._compView_61 = t2;
        _el_61 = t2.rootEl;
        t2 = J.getInterceptor$x(_el_60);
        t2.append$1(_el_60, _el_61);
        _el_61.className = "demo";
        J.setAttribute$2$x(_el_61, "id", "card-demo");
        this.addShimC$1(_el_61);
        t3 = new N.CardDemoComponent();
        this._CardDemoComponent_61_5 = t3;
        this._compView_61.create$2(0, t3, []);
        t3 = new M.ViewCkeditorDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 62, K.CkeditorDemoComponent));
        t4 = doc.createElement("ckeditor-demo");
        t3.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewCkeditorDemoComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewCkeditorDemoComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._compView_62 = t3;
        _el_62 = t3.rootEl;
        t2.append$1(_el_60, _el_62);
        _el_62.className = "demo";
        J.setAttribute$2$x(_el_62, "id", "ckeditor-demo");
        this.addShimC$1(_el_62);
        t3 = new K.CkeditorDemoComponent(H.setRuntimeTypeInfo([new V.ExtraPlugin("dartlogo", "/ckeditor/dartlogo/plugin.js", "")], [V.ExtraPlugin]));
        this._CkeditorDemoComponent_62_5 = t3;
        this._compView_62.create$2(0, t3, []);
        t3 = new E.ViewDataTableDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 63, T.DataTableDemoComponent));
        t4 = doc.createElement("data-table-demo");
        t3.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewDataTableDemoComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewDataTableDemoComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._compView_63 = t3;
        _el_63 = t3.rootEl;
        t2.append$1(_el_60, _el_63);
        _el_63.className = "demo";
        J.setAttribute$2$x(_el_63, "id", "data-table-demo");
        this.addShimC$1(_el_63);
        t3 = new T.DataTableDemoComponent();
        this._DataTableDemoComponent_63_5 = t3;
        this._compView_63.create$2(0, t3, []);
        t3 = new S.ViewGridDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 64, Q.GridDemoComponent));
        t4 = doc.createElement("grid-demo");
        t3.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewGridDemoComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewGridDemoComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._compView_64 = t3;
        _el_64 = t3.rootEl;
        t2.append$1(_el_60, _el_64);
        _el_64.className = "demo";
        J.setAttribute$2$x(_el_64, "id", "grid-demo");
        this.addShimC$1(_el_64);
        t3 = new Q.GridDemoComponent();
        this._GridDemoComponent_64_5 = t3;
        this._compView_64.create$2(0, t3, []);
        t3 = new V.ViewHexColorizePipeDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 65, A.HexColorizePipeDemoComponent));
        t4 = doc.createElement("hex-colorize-pipe-demo");
        t3.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewHexColorizePipeDemoComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$HexColorizePipeDemoComponent());
          $.ViewHexColorizePipeDemoComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._compView_65 = t3;
        _el_65 = t3.rootEl;
        t2.append$1(_el_60, _el_65);
        _el_65.className = "demo";
        J.setAttribute$2$x(_el_65, "id", "hex-colorize-demo");
        this.addShimC$1(_el_65);
        t3 = new A.HexColorizePipeDemoComponent(H.setRuntimeTypeInfo("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.".split(" "), [t1]));
        this._HexColorizePipeDemoComponent_65_5 = t3;
        this._compView_65.create$2(0, t3, []);
        t3 = new O.ViewInfobarDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 66, Q.InfobarDemoComponent));
        t4 = doc.createElement("infobar-demo");
        t3.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewInfobarDemoComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewInfobarDemoComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._compView_66 = t3;
        _el_66 = t3.rootEl;
        t2.append$1(_el_60, _el_66);
        _el_66.className = "demo";
        J.setAttribute$2$x(_el_66, "id", "infobar-demo");
        this.addShimC$1(_el_66);
        t3 = new Q.InfobarDemoComponent();
        this._InfobarDemoComponent_66_5 = t3;
        this._compView_66.create$2(0, t3, []);
        t3 = new Z.ViewMarkdownDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 67, Q.MarkdownDemoComponent));
        t4 = doc.createElement("markdown-demo");
        t3.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewMarkdownDemoComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewMarkdownDemoComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._compView_67 = t3;
        _el_67 = t3.rootEl;
        t2.append$1(_el_60, _el_67);
        _el_67.className = "demo";
        J.setAttribute$2$x(_el_67, "id", "markdown-demo");
        this.addShimC$1(_el_67);
        t3 = new Q.MarkdownDemoComponent("  ## Fuissem ibat manus et negata\n\n  Arduus suus frustra, alite et sociamque spes quique turba faciem. Nos huius\n  populos nostra iamdudum tibi, sic positos numquam parvos umidus *acutis* suae\n  quo maturus frequentant equidem. Ostentare opem arva: Assyrii intellegit dei\n  quies pariter de utinam recognoscit, et sanguine fratres adsimulavit virgo?\n  Pretium Turnus instigant, verba nam actaque virent **altum**, induitur.\n\n  > Segnibus o templis collo. Est tum, et quaeris pulsat mollitaque, puta est\n  > ingens. Puellam luctisono orbem.\n");
        this._MarkdownDemoComponent_67_5 = t3;
        this._compView_67.create$2(0, t3, []);
        t3 = new Z.ViewNavItemDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 68, L.NavItemDemoComponent));
        t4 = doc.createElement("nav-item-demo");
        t3.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewNavItemDemoComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$NavItemDemoComponent());
          $.ViewNavItemDemoComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._compView_68 = t3;
        _el_68 = t3.rootEl;
        t2.append$1(_el_60, _el_68);
        _el_68.className = "demo";
        J.setAttribute$2$x(_el_68, "id", "nav-item-demo");
        this.addShimC$1(_el_68);
        t3 = new L.NavItemDemoComponent();
        this._NavItemDemoComponent_68_5 = t3;
        this._compView_68.create$2(0, t3, []);
        t3 = new Y.ViewSidebarItemDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 69, Q.SidebarItemDemoComponent));
        t4 = doc.createElement("sidebar-item-demo");
        t3.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewSidebarItemDemoComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewSidebarItemDemoComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._compView_69 = t3;
        _el_69 = t3.rootEl;
        t2.append$1(_el_60, _el_69);
        _el_69.className = "demo";
        J.setAttribute$2$x(_el_69, "id", "sidebar-item-demo");
        this.addShimC$1(_el_69);
        t3 = P.Null;
        t4 = new Q.SidebarItemDemoComponent(P.StreamController_StreamController(null, null, null, null, false, t3));
        this._SidebarItemDemoComponent_69_5 = t4;
        this._compView_69.create$2(0, t4, []);
        t4 = new D.ViewSnackbarDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t4.set$viewData(S.AppViewData_AppViewData(t4, 1, C.ViewType_1, 70, T.SnackbarDemoComponent));
        t5 = doc.createElement("snackbar-demo");
        t4.rootEl = H.interceptedTypeCheck(t5, "$isHtmlElement");
        t5 = $.ViewSnackbarDemoComponent0__renderType;
        if (t5 == null) {
          t5 = $.appViewUtils;
          t5 = t5.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewSnackbarDemoComponent0__renderType = t5;
        }
        t4.setupComponentType$1(t5);
        this._compView_70 = t4;
        _el_70 = t4.rootEl;
        t2.append$1(_el_60, _el_70);
        _el_70.className = "demo";
        J.setAttribute$2$x(_el_70, "id", "snackbar-demo");
        this.addShimC$1(_el_70);
        t4 = new T.SnackbarService(P.StreamController_StreamController(null, null, null, null, false, T.SnackMessage));
        this._SnackbarService_70_5 = t4;
        t4 = new T.SnackbarDemoComponent(t4);
        this._SnackbarDemoComponent_70_6 = t4;
        this._compView_70.create$2(0, t4, []);
        t1 = new X.ViewExtendedMaterialIconDemoComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 71, V.ExtendedMaterialIconDemoComponent));
        t4 = doc.createElement("extended-material-icon-demo");
        t1.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewExtendedMaterialIconDemoComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$ExtendedMaterialIconDemoComponent());
          $.ViewExtendedMaterialIconDemoComponent0__renderType = t4;
        }
        t1.setupComponentType$1(t4);
        this._compView_71 = t1;
        _el_71 = t1.rootEl;
        t2.append$1(_el_60, _el_71);
        _el_71.className = "demo";
        J.setAttribute$2$x(_el_71, "id", "extended-material-icon-demo");
        this.addShimC$1(_el_71);
        t2 = new V.ExtendedMaterialIconDemoComponent();
        this._ExtendedMaterialIconDemoComponent_71_5 = t2;
        this._compView_71.create$2(0, t2, []);
        t2 = this._MaterialButtonComponent_54_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_54_0(), t1, t1));
        t1 = this._SidebarItemDemoComponent_69_5._openController;
        this.init$2(C.List_empty, [subscription_0, new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_open_69_0(), t3, t3))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_gkc || token === C.Type_DeferredContentAware_BCk)
          t1 = nodeIndex <= 49;
        else
          t1 = false;
        if (t1)
          return this._MaterialPersistentDrawerDirective_0_5.instance;
        if (token === C.Type_AcxDarkTheme_Tng && 54 <= nodeIndex && nodeIndex <= 55)
          return this._AcxDarkTheme_54_5;
        if ((token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 54 <= nodeIndex && nodeIndex <= 55)
          return this._MaterialButtonComponent_54_6;
        if (token === C.Type_EditorRenderer_wbs && 67 === nodeIndex) {
          t1 = this.__EditorRenderer_67_6;
          if (t1 == null) {
            t1 = new Q.MarkdownRenderer();
            this.__EditorRenderer_67_6 = t1;
          }
          return t1;
        }
        if (token === C.Type_SnackbarService_v1z && 70 === nodeIndex)
          return this._SnackbarService_70_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, local_drawer, changed, t1, t2, t3, currVal_0, t4, currVal_1, currVal_17;
        firstCheck = this.viewData._cdState === 0;
        local_drawer = this._MaterialPersistentDrawerDirective_0_5.instance;
        if (firstCheck)
          local_drawer._visibleChange.add$1(0, local_drawer._visible);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_1_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_1.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_3_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_3.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_6_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_6.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_9_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_9.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_12_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_12.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_15_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_15.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_17_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_17.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_20_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_20.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_23_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_23.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_26_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_26.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_29_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_29.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_32_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_32.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_35_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_35.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_38_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_38.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_41_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_41.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_44_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_44.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaSidebarItemComponent_47_5.TextOnlyMixin_textOnly = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_47.viewData.set$cdMode(1);
        if (firstCheck) {
          this._MaterialIconComponent_55_5.set$icon(0, "menu");
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_55.viewData.set$cdMode(1);
        t1 = this._MaterialPersistentDrawerDirective_0_5;
        t2 = this._el_0;
        t3 = t1.instance;
        currVal_0 = !t3._visible;
        t4 = t1._material_persistent_drawer_template$_expr_0;
        if (t4 !== currVal_0) {
          t1.updateElemClass$3(t2, "mat-drawer-collapsed", currVal_0);
          t1._material_persistent_drawer_template$_expr_0 = currVal_0;
        }
        currVal_1 = t3._visible;
        t3 = t1._material_persistent_drawer_template$_expr_1;
        if (t3 !== currVal_1) {
          t1.updateElemClass$3(t2, "mat-drawer-expanded", currVal_1);
          t1._material_persistent_drawer_template$_expr_1 = currVal_1;
        }
        this._compView_1.detectHostChanges$1(firstCheck);
        this._compView_3.detectHostChanges$1(firstCheck);
        this._compView_6.detectHostChanges$1(firstCheck);
        this._compView_9.detectHostChanges$1(firstCheck);
        this._compView_12.detectHostChanges$1(firstCheck);
        this._compView_15.detectHostChanges$1(firstCheck);
        this._compView_17.detectHostChanges$1(firstCheck);
        this._compView_20.detectHostChanges$1(firstCheck);
        this._compView_23.detectHostChanges$1(firstCheck);
        this._compView_26.detectHostChanges$1(firstCheck);
        this._compView_29.detectHostChanges$1(firstCheck);
        this._compView_32.detectHostChanges$1(firstCheck);
        this._compView_35.detectHostChanges$1(firstCheck);
        this._compView_38.detectHostChanges$1(firstCheck);
        this._compView_41.detectHostChanges$1(firstCheck);
        this._compView_44.detectHostChanges$1(firstCheck);
        this._compView_47.detectHostChanges$1(firstCheck);
        t1 = local_drawer._visible;
        currVal_17 = !t1;
        t1 = this._app_component_template$_expr_17;
        if (t1 !== currVal_17) {
          this.updateClass$3(H.interceptedTypeCheck(this._el_52, "$isHtmlElement"), "no-drawer", currVal_17);
          this._app_component_template$_expr_17 = currVal_17;
        }
        this._compView_54.detectHostChanges$1(firstCheck);
        this._compView_1.detectChanges$0();
        this._compView_3.detectChanges$0();
        this._compView_6.detectChanges$0();
        this._compView_9.detectChanges$0();
        this._compView_12.detectChanges$0();
        this._compView_15.detectChanges$0();
        this._compView_17.detectChanges$0();
        this._compView_20.detectChanges$0();
        this._compView_23.detectChanges$0();
        this._compView_26.detectChanges$0();
        this._compView_29.detectChanges$0();
        this._compView_32.detectChanges$0();
        this._compView_35.detectChanges$0();
        this._compView_38.detectChanges$0();
        this._compView_41.detectChanges$0();
        this._compView_44.detectChanges$0();
        this._compView_47.detectChanges$0();
        this._compView_54.detectChanges$0();
        this._compView_55.detectChanges$0();
        this._compView_61.detectChanges$0();
        this._compView_62.detectChanges$0();
        this._compView_63.detectChanges$0();
        this._compView_64.detectChanges$0();
        this._compView_65.detectChanges$0();
        this._compView_66.detectChanges$0();
        this._compView_67.detectChanges$0();
        this._compView_68.detectChanges$0();
        this._compView_69.detectChanges$0();
        this._compView_70.detectChanges$0();
        this._compView_71.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._compView_1.destroy$0();
        this._compView_3.destroy$0();
        this._compView_6.destroy$0();
        this._compView_9.destroy$0();
        this._compView_12.destroy$0();
        this._compView_15.destroy$0();
        this._compView_17.destroy$0();
        this._compView_20.destroy$0();
        this._compView_23.destroy$0();
        this._compView_26.destroy$0();
        this._compView_29.destroy$0();
        this._compView_32.destroy$0();
        this._compView_35.destroy$0();
        this._compView_38.destroy$0();
        this._compView_41.destroy$0();
        this._compView_44.destroy$0();
        this._compView_47.destroy$0();
        this._compView_54.destroy$0();
        this._compView_55.destroy$0();
        this._compView_61.destroy$0();
        this._compView_62.destroy$0();
        this._compView_63.destroy$0();
        this._compView_64.destroy$0();
        this._compView_65.destroy$0();
        this._compView_66.destroy$0();
        this._compView_67.destroy$0();
        this._compView_68.destroy$0();
        this._compView_69.destroy$0();
        this._compView_70.destroy$0();
        this._compView_71.destroy$0();
        this._SidebarItemDemoComponent_69_5._openController.close$0(0);
      },
      _handle_trigger_54_0$1: [function($$event) {
        var local_drawer = this._MaterialPersistentDrawerDirective_0_5.instance;
        local_drawer.set$visible(0, !local_drawer._visible);
      }, "call$1", "get$_handle_trigger_54_0", 4, 0, 2],
      _handle_open_69_0$1: [function($$event) {
        var local_drawer = this._MaterialPersistentDrawerDirective_0_5.instance;
        local_drawer.set$visible(0, !local_drawer._visible);
      }, "call$1", "get$_handle_open_69_0", 4, 0, 2],
      $asAppView: function() {
        return [Q.AppComponent];
      }
    },
    _ViewAppComponentHost0: {
      "^": "AppView;0_compView_0,0_AppComponent_0_5,0__Document_0_6,0__HtmlDocument_0_7,0__Window_0_8,0__DomService_0_9,0__AcxImperativeViewUtils_0_10,0__DomRuler_0_11,0__ManagedZone_0_12,0__overlayContainerName_0_13,0__overlayContainerParent_0_14,0__overlayContainer_0_15,0__overlaySyncDom_0_16,0__overlayRepositionLoop_0_17,0__OverlayStyleConfig_0_18,0__ZIndexer_0_19,0__OverlayDomRenderService_0_20,0__OverlayService_0_21,0__defaultPopupPositions_0_22,0__DomPopupSourceFactory_0_23,0__Clock_0_24,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$__defaultPopupPositions_0_22: function(__defaultPopupPositions_0_22) {
        this.__defaultPopupPositions_0_22 = H.assertSubtype(__defaultPopupPositions_0_22, "$isList", [K.RelativePosition], "$asList");
      },
      get$_Document_0_6: function() {
        var t1 = this.__Document_0_6;
        if (t1 == null) {
          t1 = document;
          this.__Document_0_6 = t1;
        }
        return t1;
      },
      get$_Window_0_8: function() {
        var t1 = this.__Window_0_8;
        if (t1 == null) {
          t1 = window;
          this.__Window_0_8 = t1;
        }
        return t1;
      },
      get$_DomService_0_9: function() {
        var t1 = this.__DomService_0_9;
        if (t1 == null) {
          t1 = T.createDomService(H.interceptedTypeCheck(this.injectorGet$3(C.Type_DomService_2jN, this.viewData.parentIndex, null), "$isDomService"), H.interceptedTypeCheck(this.injectorGet$3(C.Type_Disposer_k0p, this.viewData.parentIndex, null), "$isDisposer"), H.interceptedTypeCheck(this.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone"), this.get$_Window_0_8());
          this.__DomService_0_9 = t1;
        }
        return t1;
      },
      get$_AcxImperativeViewUtils_0_10: function() {
        var t1 = this.__AcxImperativeViewUtils_0_10;
        if (t1 == null) {
          t1 = new O.AcxImperativeViewUtils(H.interceptedTypeCheck(this.injectorGet$2(C.Type_ComponentLoader_7xV, this.viewData.parentIndex), "$isComponentLoader"), H.interceptedTypeCheck(this.get$_DomService_0_9(), "$isDomService"));
          this.__AcxImperativeViewUtils_0_10 = t1;
        }
        return t1;
      },
      get$_DomRuler_0_11: function() {
        var t1 = this.__DomRuler_0_11;
        if (t1 == null) {
          t1 = new K.DomRulerImpl(this.get$_Document_0_6(), H.interceptedTypeCheck(this.get$_DomService_0_9(), "$isDomService"), P.Expando$(null, [P.List, P.String]));
          this.__DomRuler_0_11 = t1;
        }
        return t1;
      },
      get$_ManagedZone_0_12: function() {
        var t1 = this.__ManagedZone_0_12;
        if (t1 == null) {
          t1 = T.Angular2ManagedZone$(H.interceptedTypeCheck(this.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone"));
          this.__ManagedZone_0_12 = t1;
        }
        return t1;
      },
      get$_overlayContainerName_0_13: function() {
        var t1 = this.__overlayContainerName_0_13;
        if (t1 == null) {
          t1 = G.getDefaultContainerName(this.injectorGet$3(C.OpaqueToken_overlayContainerName, this.viewData.parentIndex, null));
          this.__overlayContainerName_0_13 = t1;
        }
        return t1;
      },
      get$_overlayContainerParent_0_14: function() {
        var t1 = this.__overlayContainerParent_0_14;
        if (t1 == null) {
          t1 = G.getOverlayContainerParent(this.get$_Document_0_6(), this.injectorGet$3(C.OpaqueToken_overlayContainerParent, this.viewData.parentIndex, null));
          this.__overlayContainerParent_0_14 = t1;
        }
        return t1;
      },
      get$_overlayContainer_0_15: function() {
        var t1 = this.__overlayContainer_0_15;
        if (t1 == null) {
          t1 = G.getDefaultContainer(H.stringTypeCheck(this.get$_overlayContainerName_0_13()), H.interceptedTypeCheck(this.get$_overlayContainerParent_0_14(), "$isHtmlElement"), this.injectorGet$3(C.OpaqueToken_overlayContainer, this.viewData.parentIndex, null));
          this.__overlayContainer_0_15 = t1;
        }
        return t1;
      },
      get$_overlaySyncDom_0_16: function() {
        var t1 = this.__overlaySyncDom_0_16;
        if (t1 == null) {
          this.__overlaySyncDom_0_16 = true;
          t1 = true;
        }
        return t1;
      },
      get$_overlayRepositionLoop_0_17: function() {
        var t1 = this.__overlayRepositionLoop_0_17;
        if (t1 == null) {
          this.__overlayRepositionLoop_0_17 = true;
          t1 = true;
        }
        return t1;
      },
      get$_OverlayStyleConfig_0_18: function() {
        var t1 = this.__OverlayStyleConfig_0_18;
        if (t1 == null) {
          t1 = this.get$_Document_0_6();
          t1 = new R.OverlayStyleConfig(H.interceptedTypeCheck((t1 && C.HtmlDocument_methods).querySelector$1(t1, "head"), "$isHeadElement"), false, t1);
          this.__OverlayStyleConfig_0_18 = t1;
        }
        return t1;
      },
      get$_ZIndexer_0_19: function() {
        var t1 = this.__ZIndexer_0_19;
        if (t1 == null) {
          t1 = $.ZIndexer__currentInstance;
          if (t1 == null) {
            t1 = new X.ZIndexer();
            if (self.acxZIndex == null)
              self.acxZIndex = 1000;
            $.ZIndexer__currentInstance = t1;
          }
          this.__ZIndexer_0_19 = t1;
        }
        return t1;
      },
      get$_OverlayDomRenderService_0_20: function() {
        var t1, t2, t3, t4, t5, t6, t7, t8, t9;
        t1 = this.__OverlayDomRenderService_0_20;
        if (t1 == null) {
          t1 = this.get$_OverlayStyleConfig_0_18();
          t2 = H.interceptedTypeCheck(this.get$_overlayContainer_0_15(), "$isHtmlElement");
          t3 = H.stringTypeCheck(this.get$_overlayContainerName_0_13());
          t4 = this.get$_DomRuler_0_11();
          t5 = H.interceptedTypeCheck(this.get$_DomService_0_9(), "$isDomService");
          t6 = H.interceptedTypeCheck(this.get$_AcxImperativeViewUtils_0_10(), "$isAcxImperativeViewUtils");
          t7 = this.get$_overlaySyncDom_0_16();
          t8 = this.get$_overlayRepositionLoop_0_17();
          t9 = this.get$_ZIndexer_0_19();
          t8 = new K.OverlayDomRenderService(t2, t3, t4, t5, t6, t7, t8, t9, 0);
          J.setAttribute$2$x(t2, "name", t3);
          t1.registerStyles$0();
          t9.toString;
          t8._lastZIndex = self.acxZIndex;
          this.__OverlayDomRenderService_0_20 = t8;
          t1 = t8;
        }
        return t1;
      },
      get$_OverlayService_0_21: function() {
        var t1, t2, t3;
        t1 = this.__OverlayService_0_21;
        if (t1 == null) {
          t1 = H.interceptedTypeCheck(this.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
          t2 = this.get$_overlaySyncDom_0_16();
          t3 = this.get$_OverlayDomRenderService_0_20();
          H.interceptedTypeCheck(this.injectorGet$3(C.Type_OverlayService_4iH, this.viewData.parentIndex, null), "$isOverlayService");
          t3 = new X.OverlayService(t2, t1, t3);
          this.__OverlayService_0_21 = t3;
          t1 = t3;
        }
        return t1;
      },
      build$0: function() {
        var t1, t2, t3;
        t1 = new V.ViewAppComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = Q.AppComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, t2));
        t3 = document.createElement("app-cmp");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewAppComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$AppComponent());
          $.ViewAppComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._compView_0 = t1;
        this.rootEl = t1.rootEl;
        t3 = new Q.AppComponent();
        this._AppComponent_0_5 = t3;
        t1.create$2(0, t3, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._AppComponent_0_5, [t2]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_Document_woc && 0 === nodeIndex)
          return this.get$_Document_0_6();
        if (token === C.Type_HtmlDocument_RWm && 0 === nodeIndex) {
          t1 = this.__HtmlDocument_0_7;
          if (t1 == null) {
            t1 = document;
            this.__HtmlDocument_0_7 = t1;
          }
          return t1;
        }
        if (token === C.Type_Window_0H0 && 0 === nodeIndex)
          return this.get$_Window_0_8();
        if (token === C.Type_DomService_2jN && 0 === nodeIndex)
          return this.get$_DomService_0_9();
        if (token === C.Type_AcxImperativeViewUtils_Ucj && 0 === nodeIndex)
          return this.get$_AcxImperativeViewUtils_0_10();
        if (token === C.Type_DomRuler_2Vk && 0 === nodeIndex)
          return this.get$_DomRuler_0_11();
        if (token === C.Type_ManagedZone_s3L && 0 === nodeIndex)
          return this.get$_ManagedZone_0_12();
        if (token === C.OpaqueToken_overlayContainerName && 0 === nodeIndex)
          return this.get$_overlayContainerName_0_13();
        if (token === C.OpaqueToken_overlayContainerParent && 0 === nodeIndex)
          return this.get$_overlayContainerParent_0_14();
        if (token === C.OpaqueToken_overlayContainer && 0 === nodeIndex)
          return this.get$_overlayContainer_0_15();
        if (token === C.OpaqueToken_overlaySyncDom && 0 === nodeIndex)
          return this.get$_overlaySyncDom_0_16();
        if (token === C.OpaqueToken_overlayRepositionLoop && 0 === nodeIndex)
          return this.get$_overlayRepositionLoop_0_17();
        if (token === C.Type_OverlayStyleConfig_rp8 && 0 === nodeIndex)
          return this.get$_OverlayStyleConfig_0_18();
        if (token === C.Type_ZIndexer_ViP && 0 === nodeIndex)
          return this.get$_ZIndexer_0_19();
        if (token === C.Type_OverlayDomRenderService_qUY && 0 === nodeIndex)
          return this.get$_OverlayDomRenderService_0_20();
        if (token === C.Type_OverlayService_4iH && 0 === nodeIndex)
          return this.get$_OverlayService_0_21();
        if (token === C.OpaqueToken_defaultPopupPositions && 0 === nodeIndex) {
          if (this.__defaultPopupPositions_0_22 == null)
            this.set$__defaultPopupPositions_0_22(C.List_ezW);
          return this.__defaultPopupPositions_0_22;
        }
        if (token === C.Type_DomPopupSourceFactory_gmZ && 0 === nodeIndex) {
          t1 = this.__DomPopupSourceFactory_0_23;
          if (t1 == null) {
            t1 = new K.DomPopupSourceFactory(this.get$_DomRuler_0_11());
            this.__DomPopupSourceFactory_0_23 = t1;
          }
          return t1;
        }
        if ((token === C.Type_Clock_MYz || token === C.OpaqueToken_8qt) && 0 === nodeIndex) {
          t1 = this.__Clock_0_24;
          if (t1 == null) {
            this.__Clock_0_24 = C.Clock_systemTime;
            t1 = C.Clock_systemTime;
          }
          return t1;
        }
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        this._compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._compView_0.destroy$0();
      },
      $asAppView: function() {
        return [Q.AppComponent];
      }
    }
  }], ["asset_skawa_components_example_lib_card_demo_card_demo.css.shim.dart", "package:skawa_components_example/card_demo/card_demo.css.shim.dart",, X, {}], ["", "package:skawa_components_example/card_demo/card_demo.dart",, N, {
    "^": "",
    CardDemoComponent: {
      "^": "Object;"
    }
  }], ["", "package:skawa_components_example/card_demo/card_demo.template.dart",, L, {
    "^": "",
    viewFactory_CardDemoComponent1: [function(parentView, parentIndex) {
      var t1 = new L._ViewCardDemoComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, N.CardDemoComponent));
      t1.componentType = $.ViewCardDemoComponent0__renderType;
      return t1;
    }, "call$2", "card_demo_template__viewFactory_CardDemoComponent1$closure", 8, 0, 59],
    viewFactory_CardDemoComponent2: [function(parentView, parentIndex) {
      var t1 = new L._ViewCardDemoComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, N.CardDemoComponent));
      t1.componentType = $.ViewCardDemoComponent0__renderType;
      return t1;
    }, "call$2", "card_demo_template__viewFactory_CardDemoComponent2$closure", 8, 0, 59],
    ViewCardDemoComponent0: {
      "^": "AppView;0_card_demo_template$_compView_0,0_card_demo_template$_DemoHeaderComponent_0_5,0_compView_5,0_SkawaCardComponent_5_5,0_card_demo_template$_compView_6,0_SkawaCardHeaderComponent_6_5,0_SkawaCardHeaderImageDirective_7_5,0_SkawaCardHeaderTitleDirective_10_5,0_card_demo_template$_compView_14,0_SkawaCardComponent_14_5,0_card_demo_template$_compView_15,0_SkawaCardHeaderComponent_15_5,0_SkawaCardHeaderImageDirective_16_5,0_SkawaCardHeaderTitleDirective_19_5,0_SkawaCardHeaderSubheadDirective_21_5,0_card_demo_template$_compView_25,0_SkawaCardComponent_25_5,0_card_demo_template$_compView_26,0_SkawaCardContentComponent_26_5,0_compView_28,0_SkawaCardActionsComponent_28_5,0_card_demo_template$_compView_29,0_AcxDarkTheme_29_5,0_MaterialButtonComponent_29_6,0_card_demo_template$_compView_35,0_SkawaCardComponent_35_5,0_card_demo_template$_compView_36,0_SkawaCardHeaderComponent_36_5,0_SkawaCardHeaderTitleDirective_37_5,0_SkawaCardHeaderSubheadDirective_39_5,0_card_demo_template$_compView_41,0_SkawaCardContentComponent_41_5,0_compView_48,0_SkawaCardComponent_48_5,0_compView_49,0_SkawaCardHeaderComponent_49_5,0_SkawaCardHeaderTitleDirective_50_5,0_compView_52,0_SkawaCardActionsComponent_52_5,0_compView_53,0_AcxDarkTheme_53_5,0_MaterialButtonComponent_53_6,0_card_demo_template$_compView_54,0_MaterialIconComponent_54_5,0_card_demo_template$_compView_55,0_SkawaCardActionsComponent_55_5,0_card_demo_template$_compView_56,0_AcxDarkTheme_56_5,0_MaterialButtonComponent_56_6,0_compView_59,0_AcxDarkTheme_59_5,0_MaterialButtonComponent_59_6,0_appEl_60,0_NgIf_60_9,0_appEl_61,0_NgIf_61_9,0_card_demo_template$_compView_62,0_SkawaCardContentComponent_62_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, doc, _el_1, _el_3, _el_5, _el_6, _el_7, _el_8, _el_10, t3, t4, _el_12, _el_14, _el_15, _el_16, _el_17, _el_19, _el_21, _el_23, _el_25, _el_26, _text_27, t5, _el_28, t6, _el_29, _text_30, _el_31, _el_33, _el_35, _el_36, _el_37, _el_39, _el_41, _el_42, _el_44, _el_46, _el_48, _el_49, _el_50, _el_52, _el_53, _el_54, _el_55, _el_56, _text_57, _el_58, _el_59, _el_62, _text_63;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._card_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/ckeditor_demo");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/card");
        t2.setAttribute$2(_el_0, "title", "Card Demo");
        this.addShimC$1(_el_0);
        t2 = new D.DemoHeaderComponent();
        this._card_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._card_demo_template$_compView_0.create$2(0, t2, []);
        doc = document;
        _el_1 = S.createAndAppend(doc, "h3", parentRenderNode);
        this.addShimE$1(_el_1);
        J.append$1$x(_el_1, doc.createTextNode("Simple cards"));
        _el_3 = S.createAndAppend(doc, "p", parentRenderNode);
        _el_3.className = "sub-options";
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("Simple card with image and title"));
        t2 = E.ViewSkawaCardComponent0$(this, 5);
        this._compView_5 = t2;
        _el_5 = t2.rootEl;
        t1.append$1(parentRenderNode, _el_5);
        this.addShimC$1(_el_5);
        this._SkawaCardComponent_5_5 = new V.SkawaCardComponent();
        t2 = E.ViewSkawaCardHeaderComponent0$(this, 6);
        this._card_demo_template$_compView_6 = t2;
        _el_6 = t2.rootEl;
        this.addShimC$1(_el_6);
        this._SkawaCardHeaderComponent_6_5 = new V.SkawaCardHeaderComponent("transparent");
        _el_7 = doc.createElement("skawa-header-image");
        this.addShimE$1(_el_7);
        this._SkawaCardHeaderImageDirective_7_5 = new F.SkawaCardHeaderImageDirective();
        _el_8 = S.createAndAppend(doc, "i", _el_7);
        _el_8.className = "material-icons";
        t2 = J.getInterceptor$x(_el_8);
        t2.setAttribute$2(_el_8, "style", "font-size: 40px;");
        this.addShimE$1(_el_8);
        t2.append$1(_el_8, doc.createTextNode("account_circle"));
        _el_10 = doc.createElement("skawa-header-title");
        this.addShimE$1(_el_10);
        this._SkawaCardHeaderTitleDirective_10_5 = new F.SkawaCardHeaderTitleDirective();
        J.append$1$x(_el_10, doc.createTextNode("Weee"));
        t2 = this._SkawaCardHeaderComponent_6_5;
        t2.title = this._SkawaCardHeaderTitleDirective_10_5;
        t2.image = this._SkawaCardHeaderImageDirective_7_5;
        t3 = [W.Element];
        this._card_demo_template$_compView_6.create$2(0, t2, [H.setRuntimeTypeInfo([_el_7, _el_10], t3)]);
        t2 = this._SkawaCardComponent_5_5;
        t2.cardHeader = this._SkawaCardHeaderComponent_6_5;
        t4 = [W.HtmlElement];
        this._compView_5.create$2(0, t2, [H.setRuntimeTypeInfo([_el_6], t4)]);
        _el_12 = S.createAndAppend(doc, "p", parentRenderNode);
        _el_12.className = "sub-options";
        this.addShimE$1(_el_12);
        J.append$1$x(_el_12, doc.createTextNode("Simple card with image, title and subtitle"));
        t2 = E.ViewSkawaCardComponent0$(this, 14);
        this._card_demo_template$_compView_14 = t2;
        _el_14 = t2.rootEl;
        t1.append$1(parentRenderNode, _el_14);
        this.addShimC$1(_el_14);
        this._SkawaCardComponent_14_5 = new V.SkawaCardComponent();
        t2 = E.ViewSkawaCardHeaderComponent0$(this, 15);
        this._card_demo_template$_compView_15 = t2;
        _el_15 = t2.rootEl;
        this.addShimC$1(_el_15);
        this._SkawaCardHeaderComponent_15_5 = new V.SkawaCardHeaderComponent("transparent");
        _el_16 = doc.createElement("skawa-header-image");
        this.addShimE$1(_el_16);
        this._SkawaCardHeaderImageDirective_16_5 = new F.SkawaCardHeaderImageDirective();
        _el_17 = S.createAndAppend(doc, "i", _el_16);
        _el_17.className = "material-icons";
        t2 = J.getInterceptor$x(_el_17);
        t2.setAttribute$2(_el_17, "style", "font-size: 40px;");
        this.addShimE$1(_el_17);
        t2.append$1(_el_17, doc.createTextNode("account_circle"));
        _el_19 = doc.createElement("skawa-header-title");
        this.addShimE$1(_el_19);
        this._SkawaCardHeaderTitleDirective_19_5 = new F.SkawaCardHeaderTitleDirective();
        J.append$1$x(_el_19, doc.createTextNode("Weee"));
        _el_21 = doc.createElement("skawa-header-subhead");
        this.addShimE$1(_el_21);
        this._SkawaCardHeaderSubheadDirective_21_5 = new F.SkawaCardHeaderSubheadDirective();
        J.append$1$x(_el_21, doc.createTextNode("Subhead"));
        t2 = this._SkawaCardHeaderComponent_15_5;
        t2.title = this._SkawaCardHeaderTitleDirective_19_5;
        t2.subhead = this._SkawaCardHeaderSubheadDirective_21_5;
        t2.image = this._SkawaCardHeaderImageDirective_16_5;
        this._card_demo_template$_compView_15.create$2(0, t2, [H.setRuntimeTypeInfo([_el_16, _el_19, _el_21], t3)]);
        t2 = this._SkawaCardComponent_14_5;
        t2.cardHeader = this._SkawaCardHeaderComponent_15_5;
        this._card_demo_template$_compView_14.create$2(0, t2, [H.setRuntimeTypeInfo([_el_15], t4)]);
        _el_23 = S.createAndAppend(doc, "p", parentRenderNode);
        _el_23.className = "sub-options";
        this.addShimE$1(_el_23);
        J.append$1$x(_el_23, doc.createTextNode("Simple card with content and with a primary action"));
        t2 = E.ViewSkawaCardComponent0$(this, 25);
        this._card_demo_template$_compView_25 = t2;
        _el_25 = t2.rootEl;
        t1.append$1(parentRenderNode, _el_25);
        this.addShimC$1(_el_25);
        this._SkawaCardComponent_25_5 = new V.SkawaCardComponent();
        t2 = E.ViewSkawaCardContentComponent0$(this, 26);
        this._card_demo_template$_compView_26 = t2;
        _el_26 = t2.rootEl;
        this.addShimC$1(_el_26);
        t2 = new V.SkawaCardContentComponent(this._SkawaCardComponent_25_5);
        this._SkawaCardContentComponent_26_5 = t2;
        _text_27 = doc.createTextNode("In this demo, there is only content and actions below it.");
        t5 = [W.Text];
        this._card_demo_template$_compView_26.create$2(0, t2, [H.setRuntimeTypeInfo([_text_27], t5)]);
        t2 = X.ViewSkawaCardActionsComponent0$(this, 28);
        this._compView_28 = t2;
        _el_28 = t2.rootEl;
        this.addShimC$1(_el_28);
        t2 = this.parentView;
        t6 = H.interceptedTypeCheck(t2.injectorGet$3(C.Type_SkawaCardHeaderComponent_2jN, this.viewData.parentIndex, null), "$isSkawaCardHeaderComponent");
        this._SkawaCardActionsComponent_28_5 = new X.SkawaCardActionsComponent(t6);
        t6 = U.ViewMaterialButtonComponent0$(this, 29);
        this._card_demo_template$_compView_29 = t6;
        _el_29 = t6.rootEl;
        _el_29.className = "color--primary-action";
        this.addShimC$1(_el_29);
        t6 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_29_5 = t6;
        t6 = B.MaterialButtonComponent$(_el_29, t6, this._card_demo_template$_compView_29.viewData.ref, null);
        this._MaterialButtonComponent_29_6 = t6;
        _text_30 = doc.createTextNode("Primary action");
        this._card_demo_template$_compView_29.create$2(0, t6, [H.setRuntimeTypeInfo([_text_30], t5)]);
        this._compView_28.create$2(0, this._SkawaCardActionsComponent_28_5, [H.setRuntimeTypeInfo([_el_29], t4)]);
        t6 = this._SkawaCardComponent_25_5;
        t6.cardContent = this._SkawaCardContentComponent_26_5;
        this._card_demo_template$_compView_25.create$2(0, t6, [H.setRuntimeTypeInfo([_el_26, _el_28], t4)]);
        _el_31 = S.createAndAppend(doc, "h3", parentRenderNode);
        this.addShimE$1(_el_31);
        J.append$1$x(_el_31, doc.createTextNode("Complex cards"));
        _el_33 = S.createAndAppend(doc, "p", parentRenderNode);
        _el_33.className = "sub-options";
        this.addShimE$1(_el_33);
        J.append$1$x(_el_33, doc.createTextNode("Card with custom top box-shadow"));
        t6 = E.ViewSkawaCardComponent0$(this, 35);
        this._card_demo_template$_compView_35 = t6;
        _el_35 = t6.rootEl;
        t1.append$1(parentRenderNode, _el_35);
        this.addShimC$1(_el_35);
        this._SkawaCardComponent_35_5 = new V.SkawaCardComponent();
        t6 = E.ViewSkawaCardHeaderComponent0$(this, 36);
        this._card_demo_template$_compView_36 = t6;
        _el_36 = t6.rootEl;
        J.setAttribute$2$x(_el_36, "statusColor", "rgb(0,127,0)");
        this.addShimC$1(_el_36);
        this._SkawaCardHeaderComponent_36_5 = new V.SkawaCardHeaderComponent("transparent");
        _el_37 = doc.createElement("skawa-header-title");
        this.addShimE$1(_el_37);
        this._SkawaCardHeaderTitleDirective_37_5 = new F.SkawaCardHeaderTitleDirective();
        J.append$1$x(_el_37, doc.createTextNode("Some"));
        _el_39 = doc.createElement("skawa-header-subhead");
        this.addShimE$1(_el_39);
        this._SkawaCardHeaderSubheadDirective_39_5 = new F.SkawaCardHeaderSubheadDirective();
        J.append$1$x(_el_39, doc.createTextNode("subhead"));
        t6 = this._SkawaCardHeaderComponent_36_5;
        t6.title = this._SkawaCardHeaderTitleDirective_37_5;
        t6.subhead = this._SkawaCardHeaderSubheadDirective_39_5;
        this._card_demo_template$_compView_36.create$2(0, t6, [H.setRuntimeTypeInfo([_el_37, _el_39], t3)]);
        t6 = E.ViewSkawaCardContentComponent0$(this, 41);
        this._card_demo_template$_compView_41 = t6;
        _el_41 = t6.rootEl;
        this.addShimC$1(_el_41);
        this._SkawaCardContentComponent_41_5 = new V.SkawaCardContentComponent(this._SkawaCardComponent_35_5);
        _el_42 = doc.createElement("p");
        this.addShimE$1(_el_42);
        J.append$1$x(_el_42, doc.createTextNode("Card components use `transclusion` a lot. Expect to see <ng-content></ng-content> pieces a lot."));
        _el_44 = doc.createElement("p");
        this.addShimE$1(_el_44);
        J.append$1$x(_el_44, doc.createTextNode("There a million different ways a card can look like. Expect to customize it somewhat."));
        this._card_demo_template$_compView_41.create$2(0, this._SkawaCardContentComponent_41_5, [H.setRuntimeTypeInfo([_el_42, _el_44], t3)]);
        t6 = this._SkawaCardComponent_35_5;
        t6.cardHeader = this._SkawaCardHeaderComponent_36_5;
        t6.cardContent = this._SkawaCardContentComponent_41_5;
        this._card_demo_template$_compView_35.create$2(0, t6, [H.setRuntimeTypeInfo([_el_36, _el_41], t4)]);
        _el_46 = S.createAndAppend(doc, "p", parentRenderNode);
        _el_46.className = "sub-options";
        this.addShimE$1(_el_46);
        J.append$1$x(_el_46, doc.createTextNode("Expandable card with a primary action in the header and in the card"));
        t6 = E.ViewSkawaCardComponent0$(this, 48);
        this._compView_48 = t6;
        _el_48 = t6.rootEl;
        t1.append$1(parentRenderNode, _el_48);
        this.addShimC$1(_el_48);
        this._SkawaCardComponent_48_5 = new V.SkawaCardComponent();
        t1 = E.ViewSkawaCardHeaderComponent0$(this, 49);
        this._compView_49 = t1;
        _el_49 = t1.rootEl;
        J.setAttribute$2$x(_el_49, "statusColor", "rgb(127,127,127)");
        this.addShimC$1(_el_49);
        this._SkawaCardHeaderComponent_49_5 = new V.SkawaCardHeaderComponent("transparent");
        _el_50 = doc.createElement("skawa-header-title");
        this.addShimE$1(_el_50);
        this._SkawaCardHeaderTitleDirective_50_5 = new F.SkawaCardHeaderTitleDirective();
        J.append$1$x(_el_50, doc.createTextNode("This could be fun!"));
        t1 = X.ViewSkawaCardActionsComponent0$(this, 52);
        this._compView_52 = t1;
        _el_52 = t1.rootEl;
        this.addShimC$1(_el_52);
        this._SkawaCardActionsComponent_52_5 = new X.SkawaCardActionsComponent(this._SkawaCardHeaderComponent_49_5);
        t1 = U.ViewMaterialButtonComponent0$(this, 53);
        this._compView_53 = t1;
        _el_53 = t1.rootEl;
        t1 = J.getInterceptor$x(_el_53);
        t1.setAttribute$2(_el_53, "align-right", "");
        t1.setAttribute$2(_el_53, "icon", "");
        this.addShimC$1(_el_53);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_53_5 = t1;
        this._MaterialButtonComponent_53_6 = B.MaterialButtonComponent$(_el_53, t1, this._compView_53.viewData.ref, null);
        t1 = M.ViewMaterialIconComponent0$(this, 54);
        this._card_demo_template$_compView_54 = t1;
        _el_54 = t1.rootEl;
        J.setAttribute$2$x(_el_54, "icon", "more_vert");
        this.addShimC$1(_el_54);
        t1 = new Y.MaterialIconComponent(_el_54);
        this._MaterialIconComponent_54_5 = t1;
        this._card_demo_template$_compView_54.create$2(0, t1, []);
        this._compView_53.create$2(0, this._MaterialButtonComponent_53_6, [H.setRuntimeTypeInfo([_el_54], t4)]);
        this._compView_52.create$2(0, this._SkawaCardActionsComponent_52_5, [H.setRuntimeTypeInfo([_el_53], t4)]);
        t1 = this._SkawaCardHeaderComponent_49_5;
        t1.title = this._SkawaCardHeaderTitleDirective_50_5;
        t1.headerActions = this._SkawaCardActionsComponent_52_5;
        this._compView_49.create$2(0, t1, [H.setRuntimeTypeInfo([_el_50, _el_52], t3)]);
        t1 = X.ViewSkawaCardActionsComponent0$(this, 55);
        this._card_demo_template$_compView_55 = t1;
        _el_55 = t1.rootEl;
        this.addShimC$1(_el_55);
        t1 = H.interceptedTypeCheck(t2.injectorGet$3(C.Type_SkawaCardHeaderComponent_2jN, this.viewData.parentIndex, null), "$isSkawaCardHeaderComponent");
        this._SkawaCardActionsComponent_55_5 = new X.SkawaCardActionsComponent(t1);
        t1 = U.ViewMaterialButtonComponent0$(this, 56);
        this._card_demo_template$_compView_56 = t1;
        _el_56 = t1.rootEl;
        _el_56.className = "color--primary-action";
        this.addShimC$1(_el_56);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_56_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_56, t1, this._card_demo_template$_compView_56.viewData.ref, null);
        this._MaterialButtonComponent_56_6 = t1;
        _text_57 = doc.createTextNode("Primary action");
        this._card_demo_template$_compView_56.create$2(0, t1, [H.setRuntimeTypeInfo([_text_57], t5)]);
        _el_58 = doc.createElement("span");
        _el_58.className = "spacer";
        this.addShimE$1(_el_58);
        t1 = U.ViewMaterialButtonComponent0$(this, 59);
        this._compView_59 = t1;
        _el_59 = t1.rootEl;
        J.setAttribute$2$x(_el_59, "icon", "");
        this.addShimC$1(_el_59);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_59_5 = t1;
        this._MaterialButtonComponent_59_6 = B.MaterialButtonComponent$(_el_59, t1, this._compView_59.viewData.ref, null);
        t1 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(60, 59, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._appEl_60 = t2;
        this._NgIf_60_9 = new K.NgIf(new D.TemplateRef(t2, L.card_demo_template__viewFactory_CardDemoComponent1$closure()), t2, false);
        t1 = new V.ViewContainer(61, 59, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment"));
        this._appEl_61 = t1;
        this._NgIf_61_9 = new K.NgIf(new D.TemplateRef(t1, L.card_demo_template__viewFactory_CardDemoComponent2$closure()), t1, false);
        this._compView_59.create$2(0, this._MaterialButtonComponent_59_6, [H.setRuntimeTypeInfo([this._appEl_60, t1], [V.ViewContainer])]);
        this._card_demo_template$_compView_55.create$2(0, this._SkawaCardActionsComponent_55_5, [H.setRuntimeTypeInfo([_el_56, _el_58, _el_59], t3)]);
        t3 = E.ViewSkawaCardContentComponent0$(this, 62);
        this._card_demo_template$_compView_62 = t3;
        _el_62 = t3.rootEl;
        J.setAttribute$2$x(_el_62, "collapsed", "");
        this.addShimC$1(_el_62);
        t3 = new V.SkawaCardContentComponent(this._SkawaCardComponent_48_5);
        this._SkawaCardContentComponent_62_5 = t3;
        _text_63 = doc.createTextNode("Secondary content");
        this._card_demo_template$_compView_62.create$2(0, t3, [H.setRuntimeTypeInfo([_text_63], t5)]);
        t5 = this._SkawaCardComponent_48_5;
        t5.cardHeader = this._SkawaCardHeaderComponent_49_5;
        t5.cardContent = this._SkawaCardContentComponent_62_5;
        this._compView_48.create$2(0, t5, [H.setRuntimeTypeInfo([_el_49, _el_55, _el_62], t4)]);
        t4 = this._MaterialButtonComponent_59_6._trigger;
        t5 = W.UIEvent;
        this.init$2(C.List_empty, [new P._BroadcastStream(t4, [H.getTypeArgumentByIndex(t4, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_59_0(), t5, t5))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3;
        t1 = token === C.Type_SkawaCardComponent_sYn;
        if (t1 && 5 <= nodeIndex && nodeIndex <= 11)
          return this._SkawaCardComponent_5_5;
        if (t1 && 14 <= nodeIndex && nodeIndex <= 22)
          return this._SkawaCardComponent_14_5;
        t2 = token === C.Type_AcxDarkTheme_Tng;
        if (t2 && 29 <= nodeIndex && nodeIndex <= 30)
          return this._AcxDarkTheme_29_5;
        t3 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t3 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 29 <= nodeIndex && nodeIndex <= 30)
          return this._MaterialButtonComponent_29_6;
        if (t1 && 25 <= nodeIndex && nodeIndex <= 30)
          return this._SkawaCardComponent_25_5;
        if (t1 && 35 <= nodeIndex && nodeIndex <= 45)
          return this._SkawaCardComponent_35_5;
        if (t2 && 53 <= nodeIndex && nodeIndex <= 54)
          return this._AcxDarkTheme_53_5;
        if ((!t3 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 53 <= nodeIndex && nodeIndex <= 54)
          return this._MaterialButtonComponent_53_6;
        if (t2 && 56 <= nodeIndex && nodeIndex <= 57)
          return this._AcxDarkTheme_56_5;
        if ((!t3 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 56 <= nodeIndex && nodeIndex <= 57)
          return this._MaterialButtonComponent_56_6;
        if (t2 && 59 <= nodeIndex && nodeIndex <= 61)
          return this._AcxDarkTheme_59_5;
        if ((!t3 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 59 <= nodeIndex && nodeIndex <= 61)
          return this._MaterialButtonComponent_59_6;
        if (t1 && 48 <= nodeIndex && nodeIndex <= 63)
          return this._SkawaCardComponent_48_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, local_secondaryContent, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        local_secondaryContent = this._SkawaCardContentComponent_62_5;
        if (firstCheck) {
          t1 = this._card_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Card Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/card";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/ckeditor_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._card_demo_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaCardHeaderComponent_36_5.statusColor = "rgb(0,127,0)";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._card_demo_template$_compView_36.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaCardHeaderComponent_49_5.statusColor = "rgb(127,127,127)";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_49.viewData.set$cdMode(1);
        if (firstCheck) {
          this._MaterialIconComponent_54_5.set$icon(0, "more_vert");
          changed = true;
        } else
          changed = false;
        if (changed)
          this._card_demo_template$_compView_54.viewData.set$cdMode(1);
        this._NgIf_60_9.set$ngIf(local_secondaryContent.collapsed != null);
        this._NgIf_61_9.set$ngIf(local_secondaryContent.collapsed == null);
        if (firstCheck) {
          this._SkawaCardContentComponent_62_5.collapsed = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._card_demo_template$_compView_62.viewData.set$cdMode(1);
        this._appEl_60.detectChangesInNestedViews$0();
        this._appEl_61.detectChangesInNestedViews$0();
        this._card_demo_template$_compView_6.detectHostChanges$1(firstCheck);
        this._card_demo_template$_compView_15.detectHostChanges$1(firstCheck);
        this._card_demo_template$_compView_26.detectHostChanges$1(firstCheck);
        this._compView_28.detectHostChanges$1(firstCheck);
        this._card_demo_template$_compView_29.detectHostChanges$1(firstCheck);
        this._card_demo_template$_compView_36.detectHostChanges$1(firstCheck);
        this._card_demo_template$_compView_41.detectHostChanges$1(firstCheck);
        this._compView_49.detectHostChanges$1(firstCheck);
        this._compView_52.detectHostChanges$1(firstCheck);
        this._compView_53.detectHostChanges$1(firstCheck);
        this._card_demo_template$_compView_55.detectHostChanges$1(firstCheck);
        this._card_demo_template$_compView_56.detectHostChanges$1(firstCheck);
        this._compView_59.detectHostChanges$1(firstCheck);
        this._card_demo_template$_compView_62.detectHostChanges$1(firstCheck);
        this._card_demo_template$_compView_0.detectChanges$0();
        this._compView_5.detectChanges$0();
        this._card_demo_template$_compView_6.detectChanges$0();
        this._card_demo_template$_compView_14.detectChanges$0();
        this._card_demo_template$_compView_15.detectChanges$0();
        this._card_demo_template$_compView_25.detectChanges$0();
        this._card_demo_template$_compView_26.detectChanges$0();
        this._compView_28.detectChanges$0();
        this._card_demo_template$_compView_29.detectChanges$0();
        this._card_demo_template$_compView_35.detectChanges$0();
        this._card_demo_template$_compView_36.detectChanges$0();
        this._card_demo_template$_compView_41.detectChanges$0();
        this._compView_48.detectChanges$0();
        this._compView_49.detectChanges$0();
        this._compView_52.detectChanges$0();
        this._compView_53.detectChanges$0();
        this._card_demo_template$_compView_54.detectChanges$0();
        this._card_demo_template$_compView_55.detectChanges$0();
        this._card_demo_template$_compView_56.detectChanges$0();
        this._compView_59.detectChanges$0();
        this._card_demo_template$_compView_62.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._appEl_60.destroyNestedViews$0();
        this._appEl_61.destroyNestedViews$0();
        this._card_demo_template$_compView_0.destroy$0();
        this._compView_5.destroy$0();
        this._card_demo_template$_compView_6.destroy$0();
        this._card_demo_template$_compView_14.destroy$0();
        this._card_demo_template$_compView_15.destroy$0();
        this._card_demo_template$_compView_25.destroy$0();
        this._card_demo_template$_compView_26.destroy$0();
        this._compView_28.destroy$0();
        this._card_demo_template$_compView_29.destroy$0();
        this._card_demo_template$_compView_35.destroy$0();
        this._card_demo_template$_compView_36.destroy$0();
        this._card_demo_template$_compView_41.destroy$0();
        this._compView_48.destroy$0();
        this._compView_49.destroy$0();
        this._compView_52.destroy$0();
        this._compView_53.destroy$0();
        this._card_demo_template$_compView_54.destroy$0();
        this._card_demo_template$_compView_55.destroy$0();
        this._card_demo_template$_compView_56.destroy$0();
        this._compView_59.destroy$0();
        this._card_demo_template$_compView_62.destroy$0();
      },
      _handle_trigger_59_0$1: [function($$event) {
        var local_secondaryContent = this._SkawaCardContentComponent_62_5;
        local_secondaryContent.collapsed = local_secondaryContent.collapsed == null ? true : null;
      }, "call$1", "get$_handle_trigger_59_0", 4, 0, 2],
      $asAppView: function() {
        return [N.CardDemoComponent];
      }
    },
    _ViewCardDemoComponent1: {
      "^": "AppView;0_card_demo_template$_compView_0,0_card_demo_template$_MaterialIconComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._card_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "icon", "expand_more");
        this.addShimC$1(_el_0);
        t1 = new Y.MaterialIconComponent(_el_0);
        this._card_demo_template$_MaterialIconComponent_0_5 = t1;
        this._card_demo_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        if (this.viewData._cdState === 0) {
          this._card_demo_template$_MaterialIconComponent_0_5.set$icon(0, "expand_more");
          var changed = true;
        } else
          changed = false;
        if (changed)
          this._card_demo_template$_compView_0.viewData.set$cdMode(1);
        this._card_demo_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._card_demo_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [N.CardDemoComponent];
      }
    },
    _ViewCardDemoComponent2: {
      "^": "AppView;0_card_demo_template$_compView_0,0_card_demo_template$_MaterialIconComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._card_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "icon", "expand_less");
        this.addShimC$1(_el_0);
        t1 = new Y.MaterialIconComponent(_el_0);
        this._card_demo_template$_MaterialIconComponent_0_5 = t1;
        this._card_demo_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        if (this.viewData._cdState === 0) {
          this._card_demo_template$_MaterialIconComponent_0_5.set$icon(0, "expand_less");
          var changed = true;
        } else
          changed = false;
        if (changed)
          this._card_demo_template$_compView_0.viewData.set$cdMode(1);
        this._card_demo_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._card_demo_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [N.CardDemoComponent];
      }
    }
  }], ["", "package:skawa_components_example/ckeditor_demo/ckeditor_demo.dart",, K, {
    "^": "",
    CkeditorDemoComponent: {
      "^": "Object;plugins"
    }
  }], ["", "package:skawa_components_example/ckeditor_demo/ckeditor_demo.template.dart",, M, {
    "^": "",
    ViewCkeditorDemoComponent0: {
      "^": "AppView;0_ckeditor_demo_template$_compView_0,0_ckeditor_demo_template$_DemoHeaderComponent_0_5,0_ckeditor_demo_template$_compView_3,0_SkawaCkeditorComponent_3_5,0_ckeditor_demo_template$_compView_6,0_SkawaCkeditorComponent_6_5,0_ckeditor_demo_template$_expr_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, doc, _el_3, t3, _el_6;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._ckeditor_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/card_demo");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/ckeditor");
        t2.setAttribute$2(_el_0, "title", "Ckeditor Demo");
        t2 = new D.DemoHeaderComponent();
        this._ckeditor_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._ckeditor_demo_template$_compView_0.create$2(0, t2, []);
        doc = document;
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Basic Ckeditor"));
        t2 = A.ViewSkawaCkeditorComponent0$(this, 3);
        this._ckeditor_demo_template$_compView_3 = t2;
        _el_3 = t2.rootEl;
        t1.append$1(parentRenderNode, _el_3);
        t2 = J.getInterceptor$x(_el_3);
        t2.setAttribute$2(_el_3, "configUrl", "/ckeditor/basic_config.js");
        t2.setAttribute$2(_el_3, "editorName", "basic_editor");
        t2 = [P.String];
        t3 = new V.SkawaCkeditorComponent(new P._AsyncBroadcastStreamController(null, null, 0, t2));
        this._SkawaCkeditorComponent_3_5 = t3;
        this._ckeditor_demo_template$_compView_3.create$2(0, t3, []);
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Ckeditor with external plugins"));
        t3 = A.ViewSkawaCkeditorComponent0$(this, 6);
        this._ckeditor_demo_template$_compView_6 = t3;
        _el_6 = t3.rootEl;
        t1.append$1(parentRenderNode, _el_6);
        t1 = J.getInterceptor$x(_el_6);
        t1.setAttribute$2(_el_6, "configUrl", "/ckeditor/config.js");
        t1.setAttribute$2(_el_6, "content", "Cat Dog");
        t1.setAttribute$2(_el_6, "editorName", "editor");
        t1 = new V.SkawaCkeditorComponent(new P._AsyncBroadcastStreamController(null, null, 0, t2));
        this._SkawaCkeditorComponent_6_5 = t1;
        this._ckeditor_demo_template$_compView_6.create$2(0, t1, []);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_6;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._ckeditor_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Ckeditor Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/ckeditor";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/card_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._ckeditor_demo_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._SkawaCkeditorComponent_3_5;
          t1.editorName = "basic_editor";
          t1.configUrl = "/ckeditor/basic_config.js";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._ckeditor_demo_template$_compView_3.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._SkawaCkeditorComponent_6_5;
          t1.editorName = "editor";
          t1.content = "Cat Dog";
          t1.configUrl = "/ckeditor/config.js";
          changed = true;
        } else
          changed = false;
        currVal_6 = _ctx.plugins;
        t1 = this._ckeditor_demo_template$_expr_6;
        if (t1 !== currVal_6) {
          this._SkawaCkeditorComponent_6_5.set$extraPlugins(currVal_6);
          this._ckeditor_demo_template$_expr_6 = currVal_6;
          changed = true;
        }
        if (changed)
          this._ckeditor_demo_template$_compView_6.viewData.set$cdMode(1);
        this._ckeditor_demo_template$_compView_0.detectChanges$0();
        this._ckeditor_demo_template$_compView_3.detectChanges$0();
        this._ckeditor_demo_template$_compView_6.detectChanges$0();
        if (firstCheck) {
          this._SkawaCkeditorComponent_3_5.ngAfterViewInit$0();
          this._SkawaCkeditorComponent_6_5.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._ckeditor_demo_template$_compView_0.destroy$0();
        this._ckeditor_demo_template$_compView_3.destroy$0();
        this._ckeditor_demo_template$_compView_6.destroy$0();
        this._SkawaCkeditorComponent_3_5._changeController.close$0(0);
        this._SkawaCkeditorComponent_6_5._changeController.close$0(0);
      },
      $asAppView: function() {
        return [K.CkeditorDemoComponent];
      }
    }
  }], ["", "package:skawa_components_example/data_table_demo/car_table/car_table.dart",, K, {
    "^": "",
    CarTableComponent: {
      "^": "Object;rowData",
      makeAccessor$1: [function(row) {
        return H.interceptedTypeCheck(row, "$isCarRowData").name;
      }, "call$1", "get$makeAccessor", 4, 0, 51, 2],
      opinionAccessor$1: [function(row) {
        return H.interceptedTypeCheck(row, "$isCarRowData").opinion;
      }, "call$1", "get$opinionAccessor", 4, 0, 51, 2]
    },
    CarRowData: {
      "^": "RowData;name>,opinion,checked,classes"
    }
  }], ["", "package:skawa_components_example/data_table_demo/car_table/car_table.template.dart",, D, {
    "^": "",
    ViewCarTableComponent0: {
      "^": "AppView;0_car_table_template$_compView_2,0_SkawaDataTableComponent_2_5,0_car_table_template$_compView_3,0_car_table_template$_SkawaDataTableColComponent_3_5,0_car_table_template$_compView_4,0_car_table_template$_SkawaDataTableColComponent_4_5,0_car_table_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$_car_table_template$_compView_2: function(_compView_2) {
        this._car_table_template$_compView_2 = H.assertSubtype(_compView_2, "$isViewSkawaDataTableComponent0", [K.CarRowData], "$asViewSkawaDataTableComponent0");
      },
      set$_SkawaDataTableComponent_2_5: function(_SkawaDataTableComponent_2_5) {
        this._SkawaDataTableComponent_2_5 = H.assertSubtype(_SkawaDataTableComponent_2_5, "$isSkawaDataTableComponent", [K.CarRowData], "$asSkawaDataTableComponent");
      },
      set$_car_table_template$_compView_3: function(_compView_3) {
        this._car_table_template$_compView_3 = H.assertSubtype(_compView_3, "$isViewSkawaDataTableColComponent0", [K.CarRowData], "$asViewSkawaDataTableColComponent0");
      },
      set$_car_table_template$_SkawaDataTableColComponent_3_5: function(_SkawaDataTableColComponent_3_5) {
        this._car_table_template$_SkawaDataTableColComponent_3_5 = H.assertSubtype(_SkawaDataTableColComponent_3_5, "$isSkawaDataTableColComponent", [K.CarRowData], "$asSkawaDataTableColComponent");
      },
      set$_car_table_template$_compView_4: function(_compView_4) {
        this._car_table_template$_compView_4 = H.assertSubtype(_compView_4, "$isViewSkawaDataTableColComponent0", [K.CarRowData], "$asViewSkawaDataTableColComponent0");
      },
      set$_car_table_template$_SkawaDataTableColComponent_4_5: function(_SkawaDataTableColComponent_4_5) {
        this._car_table_template$_SkawaDataTableColComponent_4_5 = H.assertSubtype(_SkawaDataTableColComponent_4_5, "$isSkawaDataTableColComponent", [K.CarRowData], "$asSkawaDataTableColComponent");
      },
      build$0: function() {
        var parentRenderNode, doc, t1, _el_3, t2, t3, _el_4;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Simple datatable"));
        t1 = K.CarRowData;
        this.set$_car_table_template$_compView_2(N.ViewSkawaDataTableComponent0$(this, 2, t1));
        J.append$1$x(parentRenderNode, this._car_table_template$_compView_2.rootEl);
        this.set$_SkawaDataTableComponent_2_5(S.SkawaDataTableComponent$(this._car_table_template$_compView_2.viewData.ref, t1));
        this.set$_car_table_template$_compView_3(Y.ViewSkawaDataTableColComponent0$(this, 3, t1));
        _el_3 = this._car_table_template$_compView_3.rootEl;
        _el_3.className = "text-column";
        J.setAttribute$2$x(_el_3, "header", "Car make");
        t2 = [t1];
        t3 = [t1];
        this.set$_car_table_template$_SkawaDataTableColComponent_3_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, 0, t2), null, true, t3));
        this._car_table_template$_compView_3.create$2(0, this._car_table_template$_SkawaDataTableColComponent_3_5, []);
        this.set$_car_table_template$_compView_4(Y.ViewSkawaDataTableColComponent0$(this, 4, t1));
        _el_4 = this._car_table_template$_compView_4.rootEl;
        J.setAttribute$2$x(_el_4, "header", "My strong opinion");
        this.set$_car_table_template$_SkawaDataTableColComponent_4_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, 0, t2), null, true, t3));
        this._car_table_template$_compView_4.create$2(0, this._car_table_template$_SkawaDataTableColComponent_4_5, []);
        this._SkawaDataTableComponent_2_5.set$columns(0, H.setRuntimeTypeInfo([this._car_table_template$_SkawaDataTableColComponent_3_5, this._car_table_template$_SkawaDataTableColComponent_4_5], [[G.SkawaDataTableColComponent, K.CarRowData]]));
        this._car_table_template$_compView_2.create$2(0, this._SkawaDataTableComponent_2_5, [H.setRuntimeTypeInfo([_el_3, _el_4], [W.HtmlElement])]);
        this.init$2(C.List_empty, null);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1 = token === C.Type_SkawaDataTableColComponent_tpI;
        if (t1 && 3 === nodeIndex)
          return this._car_table_template$_SkawaDataTableColComponent_3_5;
        if (t1 && 4 === nodeIndex)
          return this._car_table_template$_SkawaDataTableColComponent_4_5;
        if (token === C.Type_SkawaDataTableComponent_qdG && 2 <= nodeIndex && nodeIndex <= 4)
          return this._SkawaDataTableComponent_2_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, changed, currVal_1, t1;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          this._SkawaDataTableComponent_2_5.selectable = false;
          changed = true;
        } else
          changed = false;
        currVal_1 = _ctx.rowData;
        t1 = this._car_table_template$_expr_1;
        if (t1 !== currVal_1) {
          this._SkawaDataTableComponent_2_5.set$rows(0, currVal_1);
          this._car_table_template$_expr_1 = currVal_1;
          changed = true;
        }
        if (changed)
          this._car_table_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = _ctx.get$makeAccessor();
          this._car_table_template$_SkawaDataTableColComponent_3_5.set$accessor(t1);
          t1 = this._car_table_template$_SkawaDataTableColComponent_3_5;
          t1.header = "Car make";
          t1.classString = "text-column";
        }
        if (firstCheck)
          this._car_table_template$_SkawaDataTableColComponent_3_5.ngOnInit$0();
        if (firstCheck) {
          t1 = _ctx.get$opinionAccessor();
          this._car_table_template$_SkawaDataTableColComponent_4_5.set$accessor(t1);
          this._car_table_template$_SkawaDataTableColComponent_4_5.header = "My strong opinion";
        }
        if (firstCheck)
          this._car_table_template$_SkawaDataTableColComponent_4_5.ngOnInit$0();
        this._car_table_template$_compView_2.detectChanges$0();
        this._car_table_template$_compView_3.detectChanges$0();
        this._car_table_template$_compView_4.detectChanges$0();
        if (firstCheck)
          this._SkawaDataTableComponent_2_5.ngAfterViewInit$0();
      },
      destroyInternal$0: function() {
        this._car_table_template$_compView_2.destroy$0();
        this._car_table_template$_compView_3.destroy$0();
        this._car_table_template$_compView_4.destroy$0();
        this._car_table_template$_SkawaDataTableColComponent_3_5._triggerController.close$0(0);
        this._car_table_template$_SkawaDataTableColComponent_4_5._triggerController.close$0(0);
        this._SkawaDataTableComponent_2_5._data_table$_tearDownDisposer.dispose$0();
      },
      $asAppView: function() {
        return [K.CarTableComponent];
      }
    }
  }], ["", "package:skawa_components_example/data_table_demo/data_table_demo.dart",, T, {
    "^": "",
    DataTableDemoComponent: {
      "^": "Object;"
    }
  }], ["", "package:skawa_components_example/data_table_demo/data_table_demo.template.dart",, E, {
    "^": "",
    ViewDataTableDemoComponent0: {
      "^": "AppView;0_data_table_demo_template$_compView_0,0_data_table_demo_template$_DemoHeaderComponent_0_5,0_data_table_demo_template$_compView_1,0_CarTableComponent_1_5,0_data_table_demo_template$_compView_6,0_SchoolTableComponent_6_5,0_data_table_demo_template$_compView_7,0_WrTableComponent_7_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, t3, t4, t5, _el_4;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._data_table_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/data_table_demo");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/data_table");
        t2.setAttribute$2(_el_0, "title", "Data Table Demo");
        t2 = new D.DemoHeaderComponent();
        this._data_table_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._data_table_demo_template$_compView_0.create$2(0, t2, []);
        t2 = P.String;
        t3 = new D.ViewCarTableComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t2, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 1, K.CarTableComponent));
        t4 = document;
        t5 = t4.createElement("car-table");
        t3.rootEl = H.interceptedTypeCheck(t5, "$isHtmlElement");
        t5 = $.ViewCarTableComponent0__renderType;
        if (t5 == null) {
          t5 = $.appViewUtils;
          t5 = t5.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewCarTableComponent0__renderType = t5;
        }
        t3.setupComponentType$1(t5);
        this._data_table_demo_template$_compView_1 = t3;
        t1.append$1(parentRenderNode, t3.rootEl);
        t3 = new K.CarTableComponent(H.setRuntimeTypeInfo([new K.CarRowData("Trabant", "Eastern delight", false, H.setRuntimeTypeInfo(["trabant"], [t2])), new K.CarRowData("Jaguar", "Hrrrrr", false, null), new K.CarRowData("Ford", "Something for everybody", false, null), new K.CarRowData("Renault", "Well, RedBull F1 team uses them, why not?", false, null)], [K.CarRowData]));
        this._CarTableComponent_1_5 = t3;
        this._data_table_demo_template$_compView_1.create$2(0, t3, []);
        J.append$1$x(S.createAndAppend(t4, "h3", parentRenderNode), t4.createTextNode("Selectable and sortable datatable"));
        _el_4 = S.createAndAppend(t4, "p", parentRenderNode);
        _el_4.className = "sub-options";
        J.append$1$x(_el_4, t4.createTextNode("Sort can be attached to desired columns and can be configured for allowed sort directions."));
        t3 = new V.ViewSchoolTableComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t2, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 6, G.SchoolTableComponent));
        t5 = t4.createElement("school-table");
        t3.rootEl = H.interceptedTypeCheck(t5, "$isHtmlElement");
        t5 = $.ViewSchoolTableComponent0__renderType;
        if (t5 == null) {
          t5 = $.appViewUtils;
          t5 = t5.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewSchoolTableComponent0__renderType = t5;
        }
        t3.setupComponentType$1(t5);
        this._data_table_demo_template$_compView_6 = t3;
        t1.append$1(parentRenderNode, t3.rootEl);
        t3 = new G.SchoolTableComponent(H.setRuntimeTypeInfo([new G.SchoolRowData("2. class", 11, 18, false, C.List_empty0), new G.SchoolRowData("3. class", 13, 13, false, C.List_empty0), new G.SchoolRowData("1. class", 15, 12, false, C.List_empty0), new G.SchoolRowData("4. class", 20, 13, false, C.List_empty0)], [G.SchoolRowData]));
        this._SchoolTableComponent_6_5 = t3;
        this._data_table_demo_template$_compView_6.create$2(0, t3, []);
        t2 = new T.ViewWrTableComponent0(true, P.LinkedHashMap_LinkedHashMap$_empty(t2, null), this);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 1, C.ViewType_1, 7, N.WrTableComponent));
        t3 = t4.createElement("wr-table");
        t2.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewWrTableComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$WrTableComponent());
          $.ViewWrTableComponent0__renderType = t3;
        }
        t2.setupComponentType$1(t3);
        this._data_table_demo_template$_compView_7 = t2;
        t1.append$1(parentRenderNode, t2.rootEl);
        t2 = $.$get$WrTableComponent__columns();
        t1 = [G.SkawaDataTableColComponent, N.WrRowData];
        t3 = Z._MultiSelectionModelImpl$(t2, Z.selection_model___defaultKeyProvider$closure(), t1);
        t4 = H.setRuntimeTypeInfo([F.OptionGroup$withLabel(t2, null, null, t1)], [[F.OptionGroup, [G.SkawaDataTableColComponent, N.WrRowData]]]);
        t1 = new F.SelectionOptions(new P._SyncBroadcastStreamController(null, null, 0, [[P.List, [F.OptionGroup, t1]]]), [t1]);
        t1.set$optionGroups(t4);
        t2 = new N.WrTableComponent(t3, t1, H.setRuntimeTypeInfo([new N.WrRowData("Calvin Johnson", "DET", 122, 1964, 92, false, C.List_empty0), new N.WrRowData("Brandon Marshall", "CHI", 118, 1508, 75, false, C.List_empty0), new N.WrRowData("Wes Welker", "NE", 118, 1354, 72, false, C.List_empty0), new N.WrRowData("Andre Johnson", "HOU", 112, 1598, 79, false, C.List_empty0), new N.WrRowData("Jason Witten", "DAL", 110, 1039, 56, false, C.List_empty0), new N.WrRowData("Reggie Wayne", "IND", 106, 1355, 73, false, C.List_empty0), new N.WrRowData("A.J. Green", "CIN", 97, 1530, 61, false, C.List_empty0), new N.WrRowData("Demaryius Thomas", "DEN", 94, 1434, 60, false, C.List_empty0), new N.WrRowData("Tony Gonzalez", "ATL", 93, 930, 65, false, C.List_empty0), new N.WrRowData("Dez Bryant", "DAL", 92, 1382, 54, false, C.List_empty0)], [N.WrRowData]), t2, new L.Icon("more_vert"));
        this._WrTableComponent_7_5 = t2;
        this._data_table_demo_template$_compView_7.create$2(0, t2, []);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._data_table_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Data Table Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/data_table";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/data_table_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._data_table_demo_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._WrTableComponent_7_5.ngOnInit$0();
        this._data_table_demo_template$_compView_0.detectChanges$0();
        this._data_table_demo_template$_compView_1.detectChanges$0();
        this._data_table_demo_template$_compView_6.detectChanges$0();
        this._data_table_demo_template$_compView_7.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._data_table_demo_template$_compView_0.destroy$0();
        this._data_table_demo_template$_compView_1.destroy$0();
        this._data_table_demo_template$_compView_6.destroy$0();
        this._data_table_demo_template$_compView_7.destroy$0();
      },
      $asAppView: function() {
        return [T.DataTableDemoComponent];
      }
    }
  }], ["", "package:skawa_components_example/data_table_demo/school_table/school_table.dart",, G, {
    "^": "",
    SchoolTableComponent: {
      "^": "Object;selectableRowData",
      categoryAccessor$1: [function(row) {
        return H.interceptedTypeCheck(row, "$isSchoolRowData").category;
      }, "call$1", "get$categoryAccessor", 4, 0, 19, 2],
      maleAccessor$1: [function(row) {
        return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isSchoolRowData").male);
      }, "call$1", "get$maleAccessor", 4, 0, 19, 2],
      femaleAccessor$1: [function(row) {
        return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isSchoolRowData").female);
      }, "call$1", "get$femaleAccessor", 4, 0, 19, 2],
      peopleAccessor$1: [function(row) {
        H.interceptedTypeCheck(row, "$isSchoolRowData");
        return C.JSInt_methods.toString$0(row.female + row.male);
      }, "call$1", "get$peopleAccessor", 4, 0, 19, 2],
      aggregate$1: function(accessor) {
        var t1, t2, t3, mapped;
        H.functionTypeCheck(accessor, {func: 1, ret: P.String, args: [G.SchoolRowData]});
        t1 = this.selectableRowData;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        t3 = P.String;
        mapped = new H.MappedIterable(new H.WhereIterable(t1, H.functionTypeCheck(new G.SchoolTableComponent_aggregate_closure(), {func: 1, ret: P.bool, args: [t2]}), [t2]), H.functionTypeCheck(accessor, {func: 1, ret: t3, args: [t2]}), [t2, t3]);
        return !mapped.get$isEmpty(mapped) ? mapped.reduce$1(0, this.get$_aggregateReducer()) : "-";
      },
      _aggregateReducer$2: [function(a, b) {
        var t1, t2;
        H.stringTypeCheck(a);
        H.stringTypeCheck(b);
        t1 = a == null;
        if (t1 || b == null)
          return t1 ? b : a;
        t1 = P.int_parse(a, null, null);
        t2 = P.int_parse(b, null, null);
        if (typeof t1 !== "number")
          return t1.$add();
        if (typeof t2 !== "number")
          return H.iae(t2);
        return C.JSInt_methods.toString$0(t1 + t2);
      }, "call$2", "get$_aggregateReducer", 8, 0, 125],
      sort$1: [function(_, column) {
        var t1;
        H.assertSubtype(column, "$isSkawaDataTableColComponent", [U.RowData], "$asSkawaDataTableColComponent");
        t1 = this.selectableRowData;
        if (column.sortModel.activeSort == null)
          C.JSArray_methods.sort$1(t1, new G.SchoolTableComponent_sort_closure());
        else
          C.JSArray_methods.sort$1(t1, new G.SchoolTableComponent_sort_closure0(column));
      }, "call$1", "get$sort", 5, 0, 126]
    },
    SchoolTableComponent_aggregate_closure: {
      "^": "Closure:127;",
      call$1: function(row) {
        return H.interceptedTypeCheck(row, "$isSchoolRowData").checked;
      }
    },
    SchoolTableComponent_sort_closure: {
      "^": "Closure:53;",
      call$2: function(a, b) {
        H.interceptedTypeCheck(a, "$isSchoolRowData");
        H.interceptedTypeCheck(b, "$isSchoolRowData");
        return C.JSString_methods.compareTo$1(a.category, b.category);
      }
    },
    SchoolTableComponent_sort_closure0: {
      "^": "Closure:53;column",
      call$2: function(a, b) {
        var t1, t2;
        H.interceptedTypeCheck(a, "$isSchoolRowData");
        H.interceptedTypeCheck(b, "$isSchoolRowData");
        t1 = this.column;
        t2 = t1.header;
        if (t2 === "Male")
          return t1.sortModel.activeSort === C.SortDirection_0 ? a.male - b.male : b.male - a.male;
        else if (t2 === "Female")
          return t1.sortModel.activeSort === C.SortDirection_0 ? a.female - b.female : b.female - a.female;
        else if (t2 === "All")
          return b.male + b.female - (a.male + a.female);
      }
    },
    SchoolRowData: {
      "^": "RowData;category,male,female,checked,classes"
    }
  }], ["", "package:skawa_components_example/data_table_demo/school_table/school_table.template.dart",, V, {
    "^": "",
    ViewSchoolTableComponent0: {
      "^": "AppView;0_school_table_template$_compView_0,0_SkawaDataTableComponent_0_5,0_school_table_template$_compView_1,0_SkawaDataTableColComponent_1_5,0_school_table_template$_compView_2,0_SkawaDataTableColComponent_2_5,0_SkawaDataTableSortDirective_2_6,0_school_table_template$_compView_3,0_SkawaDataTableColComponent_3_5,0_SkawaDataTableSortDirective_3_6,0_school_table_template$_compView_4,0_SkawaDataTableColComponent_4_5,0_SkawaDataTableSortDirective_4_6,0_school_table_template$_expr_1,0_school_table_template$_expr_9,0_expr_15,0_school_table_template$_expr_20,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$_school_table_template$_compView_0: function(_compView_0) {
        this._school_table_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewSkawaDataTableComponent0", [G.SchoolRowData], "$asViewSkawaDataTableComponent0");
      },
      set$_SkawaDataTableComponent_0_5: function(_SkawaDataTableComponent_0_5) {
        this._SkawaDataTableComponent_0_5 = H.assertSubtype(_SkawaDataTableComponent_0_5, "$isSkawaDataTableComponent", [G.SchoolRowData], "$asSkawaDataTableComponent");
      },
      set$_school_table_template$_compView_1: function(_compView_1) {
        this._school_table_template$_compView_1 = H.assertSubtype(_compView_1, "$isViewSkawaDataTableColComponent0", [G.SchoolRowData], "$asViewSkawaDataTableColComponent0");
      },
      set$_SkawaDataTableColComponent_1_5: function(_SkawaDataTableColComponent_1_5) {
        this._SkawaDataTableColComponent_1_5 = H.assertSubtype(_SkawaDataTableColComponent_1_5, "$isSkawaDataTableColComponent", [G.SchoolRowData], "$asSkawaDataTableColComponent");
      },
      set$_school_table_template$_compView_2: function(_compView_2) {
        this._school_table_template$_compView_2 = H.assertSubtype(_compView_2, "$isViewSkawaDataTableColComponent0", [G.SchoolRowData], "$asViewSkawaDataTableColComponent0");
      },
      set$_SkawaDataTableColComponent_2_5: function(_SkawaDataTableColComponent_2_5) {
        this._SkawaDataTableColComponent_2_5 = H.assertSubtype(_SkawaDataTableColComponent_2_5, "$isSkawaDataTableColComponent", [G.SchoolRowData], "$asSkawaDataTableColComponent");
      },
      set$_school_table_template$_compView_3: function(_compView_3) {
        this._school_table_template$_compView_3 = H.assertSubtype(_compView_3, "$isViewSkawaDataTableColComponent0", [G.SchoolRowData], "$asViewSkawaDataTableColComponent0");
      },
      set$_SkawaDataTableColComponent_3_5: function(_SkawaDataTableColComponent_3_5) {
        this._SkawaDataTableColComponent_3_5 = H.assertSubtype(_SkawaDataTableColComponent_3_5, "$isSkawaDataTableColComponent", [G.SchoolRowData], "$asSkawaDataTableColComponent");
      },
      set$_school_table_template$_compView_4: function(_compView_4) {
        this._school_table_template$_compView_4 = H.assertSubtype(_compView_4, "$isViewSkawaDataTableColComponent0", [G.SchoolRowData], "$asViewSkawaDataTableColComponent0");
      },
      set$_SkawaDataTableColComponent_4_5: function(_SkawaDataTableColComponent_4_5) {
        this._SkawaDataTableColComponent_4_5 = H.assertSubtype(_SkawaDataTableColComponent_4_5, "$isSkawaDataTableColComponent", [G.SchoolRowData], "$asSkawaDataTableColComponent");
      },
      build$0: function() {
        var parentRenderNode, t1, _el_1, t2, t3, _el_2, t4, _el_3, _el_4;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = G.SchoolRowData;
        this.set$_school_table_template$_compView_0(N.ViewSkawaDataTableComponent0$(this, 0, t1));
        J.append$1$x(parentRenderNode, this._school_table_template$_compView_0.rootEl);
        this.set$_SkawaDataTableComponent_0_5(S.SkawaDataTableComponent$(this._school_table_template$_compView_0.viewData.ref, t1));
        this.set$_school_table_template$_compView_1(Y.ViewSkawaDataTableColComponent0$(this, 1, t1));
        _el_1 = this._school_table_template$_compView_1.rootEl;
        _el_1.className = "text-column";
        t2 = J.getInterceptor$x(_el_1);
        t2.setAttribute$2(_el_1, "footer", "Total:");
        t2.setAttribute$2(_el_1, "header", "Class");
        t2 = [t1];
        t3 = [t1];
        this.set$_SkawaDataTableColComponent_1_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, 0, t2), null, true, t3));
        this._school_table_template$_compView_1.create$2(0, this._SkawaDataTableColComponent_1_5, []);
        this.set$_school_table_template$_compView_2(Y.ViewSkawaDataTableColComponent0$(this, 2, t1));
        _el_2 = this._school_table_template$_compView_2.rootEl;
        t4 = J.getInterceptor$x(_el_2);
        t4.setAttribute$2(_el_2, "header", "Male");
        t4.setAttribute$2(_el_2, "initialSort", "asc");
        t4.setAttribute$2(_el_2, "sortable", "");
        this.set$_SkawaDataTableColComponent_2_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, 0, t2), null, true, t3));
        t4 = this._SkawaDataTableColComponent_2_5;
        this._SkawaDataTableSortDirective_2_6 = new S.SkawaDataTableSortDirective(t4);
        this._school_table_template$_compView_2.create$2(0, t4, []);
        this.set$_school_table_template$_compView_3(Y.ViewSkawaDataTableColComponent0$(this, 3, t1));
        _el_3 = this._school_table_template$_compView_3.rootEl;
        t4 = J.getInterceptor$x(_el_3);
        t4.setAttribute$2(_el_3, "header", "Female");
        t4.setAttribute$2(_el_3, "sortable", "desc, asc");
        this.set$_SkawaDataTableColComponent_3_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, 0, t2), null, true, t3));
        t4 = this._SkawaDataTableColComponent_3_5;
        this._SkawaDataTableSortDirective_3_6 = new S.SkawaDataTableSortDirective(t4);
        this._school_table_template$_compView_3.create$2(0, t4, []);
        this.set$_school_table_template$_compView_4(Y.ViewSkawaDataTableColComponent0$(this, 4, t1));
        _el_4 = this._school_table_template$_compView_4.rootEl;
        t1 = J.getInterceptor$x(_el_4);
        t1.setAttribute$2(_el_4, "header", "All");
        t1.setAttribute$2(_el_4, "sortable", "desc");
        this.set$_SkawaDataTableColComponent_4_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, 0, t2), null, true, t3));
        t1 = this._SkawaDataTableColComponent_4_5;
        this._SkawaDataTableSortDirective_4_6 = new S.SkawaDataTableSortDirective(t1);
        this._school_table_template$_compView_4.create$2(0, t1, []);
        t1 = [G.SkawaDataTableColComponent, G.SchoolRowData];
        this._SkawaDataTableComponent_0_5.set$columns(0, H.setRuntimeTypeInfo([this._SkawaDataTableColComponent_1_5, this._SkawaDataTableColComponent_2_5, this._SkawaDataTableColComponent_3_5, this._SkawaDataTableColComponent_4_5], [t1]));
        this._school_table_template$_compView_0.create$2(0, this._SkawaDataTableComponent_0_5, [H.setRuntimeTypeInfo([_el_1, _el_2, _el_3, _el_4], [W.HtmlElement])]);
        t2 = this._SkawaDataTableComponent_0_5._sortController;
        this.init$2(C.List_empty, [new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler1$2$1(J.get$sort$ax(this.ctx), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1 = token === C.Type_SkawaDataTableColComponent_tpI;
        if (t1 && 1 === nodeIndex)
          return this._SkawaDataTableColComponent_1_5;
        if (t1 && 2 === nodeIndex)
          return this._SkawaDataTableColComponent_2_5;
        if (t1 && 3 === nodeIndex)
          return this._SkawaDataTableColComponent_3_5;
        if (t1 && 4 === nodeIndex)
          return this._SkawaDataTableColComponent_4_5;
        if (token === C.Type_SkawaDataTableComponent_qdG)
          t1 = nodeIndex <= 4;
        else
          t1 = false;
        if (t1)
          return this._SkawaDataTableComponent_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, changed, currVal_1, t1, currVal_9, currVal_15, currVal_20;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          this._SkawaDataTableComponent_0_5.selectable = true;
          changed = true;
        } else
          changed = false;
        currVal_1 = _ctx.selectableRowData;
        t1 = this._school_table_template$_expr_1;
        if (t1 !== currVal_1) {
          this._SkawaDataTableComponent_0_5.set$rows(0, currVal_1);
          this._school_table_template$_expr_1 = currVal_1;
          changed = true;
        }
        if (changed)
          this._school_table_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = _ctx.get$categoryAccessor();
          this._SkawaDataTableColComponent_1_5.set$accessor(t1);
          t1 = this._SkawaDataTableColComponent_1_5;
          t1.header = "Class";
          t1.footer = "Total:";
          t1.skipFooter = false;
          t1.classString = "text-column";
        }
        if (firstCheck)
          this._SkawaDataTableColComponent_1_5.ngOnInit$0();
        if (firstCheck) {
          t1 = _ctx.get$maleAccessor();
          this._SkawaDataTableColComponent_2_5.set$accessor(t1);
          t1 = this._SkawaDataTableColComponent_2_5;
          t1.header = "Male";
          t1.skipFooter = false;
        }
        currVal_9 = _ctx.aggregate$1(_ctx.get$maleAccessor());
        t1 = this._school_table_template$_expr_9;
        if (t1 != currVal_9) {
          this._SkawaDataTableColComponent_2_5.footer = currVal_9;
          this._school_table_template$_expr_9 = currVal_9;
        }
        if (firstCheck)
          this._SkawaDataTableColComponent_2_5.ngOnInit$0();
        if (firstCheck) {
          this._SkawaDataTableSortDirective_2_6.set$allowedSorts("");
          t1 = this._SkawaDataTableSortDirective_2_6;
          t1.toString;
          if (C.Map_oWtLB.$index(0, "asc") == null)
            H.throwExpression(P.ArgumentError$('SkawaDataTableSortDirective initial sort value can only be "asc" or "desc"'));
          t1.column.sortModel.activeSort = H.interceptedTypeCheck(C.Map_oWtLB.$index(0, "asc"), "$isSortDirection");
          this._SkawaDataTableColComponent_3_5.set$accessor(_ctx.get$femaleAccessor());
          t1 = this._SkawaDataTableColComponent_3_5;
          t1.header = "Female";
          t1.skipFooter = false;
        }
        currVal_15 = _ctx.aggregate$1(_ctx.get$femaleAccessor());
        t1 = this._expr_15;
        if (t1 != currVal_15) {
          this._SkawaDataTableColComponent_3_5.footer = currVal_15;
          this._expr_15 = currVal_15;
        }
        if (firstCheck)
          this._SkawaDataTableColComponent_3_5.ngOnInit$0();
        if (firstCheck) {
          this._SkawaDataTableSortDirective_3_6.set$allowedSorts("desc, asc");
          this._SkawaDataTableColComponent_4_5.set$accessor(_ctx.get$peopleAccessor());
          t1 = this._SkawaDataTableColComponent_4_5;
          t1.header = "All";
          t1.skipFooter = false;
        }
        currVal_20 = _ctx.aggregate$1(_ctx.get$peopleAccessor());
        t1 = this._school_table_template$_expr_20;
        if (t1 != currVal_20) {
          this._SkawaDataTableColComponent_4_5.footer = currVal_20;
          this._school_table_template$_expr_20 = currVal_20;
        }
        if (firstCheck)
          this._SkawaDataTableColComponent_4_5.ngOnInit$0();
        if (firstCheck)
          this._SkawaDataTableSortDirective_4_6.set$allowedSorts("desc");
        this._school_table_template$_compView_0.detectChanges$0();
        this._school_table_template$_compView_1.detectChanges$0();
        this._school_table_template$_compView_2.detectChanges$0();
        this._school_table_template$_compView_3.detectChanges$0();
        this._school_table_template$_compView_4.detectChanges$0();
        if (firstCheck)
          this._SkawaDataTableComponent_0_5.ngAfterViewInit$0();
      },
      destroyInternal$0: function() {
        this._school_table_template$_compView_0.destroy$0();
        this._school_table_template$_compView_1.destroy$0();
        this._school_table_template$_compView_2.destroy$0();
        this._school_table_template$_compView_3.destroy$0();
        this._school_table_template$_compView_4.destroy$0();
        this._SkawaDataTableColComponent_1_5._triggerController.close$0(0);
        this._SkawaDataTableColComponent_2_5._triggerController.close$0(0);
        this._SkawaDataTableColComponent_3_5._triggerController.close$0(0);
        this._SkawaDataTableColComponent_4_5._triggerController.close$0(0);
        this._SkawaDataTableComponent_0_5._data_table$_tearDownDisposer.dispose$0();
      },
      $asAppView: function() {
        return [G.SchoolTableComponent];
      }
    }
  }], ["asset_skawa_components_example_lib_data_table_demo_wr_table_first_down_percent_first_down_percent.css.shim.dart", "package:skawa_components_example/data_table_demo/wr_table/first_down_percent/first_down_percent.css.shim.dart",, E, {}], ["", "package:skawa_components_example/data_table_demo/wr_table/first_down_percent/first_down_percent.dart",, L, {
    "^": "",
    FirstDownPercentComponent: {
      "^": "RendersValue;0value",
      $asRendersValue: function() {
        return [N.WrRowData];
      }
    }
  }], ["", "package:skawa_components_example/data_table_demo/wr_table/first_down_percent/first_down_percent.template.dart",, U, {
    "^": "",
    viewFactory_FirstDownPercentComponentHost0: [function(parentView, parentIndex) {
      var t1 = new U._ViewFirstDownPercentComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, L.FirstDownPercentComponent));
      return t1;
    }, "call$2", "first_down_percent_template__viewFactory_FirstDownPercentComponentHost0$closure", 8, 0, 171],
    ViewFirstDownPercentComponent0: {
      "^": "AppView;0_first_down_percent_template$_compView_0,0_MaterialProgressComponent_0_5,0_first_down_percent_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2, _el_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = new S.ViewMaterialProgressComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, X.MaterialProgressComponent));
        t2 = document.createElement("material-progress");
        t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
        t2 = $.ViewMaterialProgressComponent0__renderType;
        if (t2 == null) {
          t2 = $.appViewUtils;
          t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialProgressComponent());
          $.ViewMaterialProgressComponent0__renderType = t2;
        }
        t1.setupComponentType$1(t2);
        this._first_down_percent_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.append$1$x(parentRenderNode, _el_0);
        this.addShimC$1(_el_0);
        t1 = this._first_down_percent_template$_compView_0;
        t2 = new X.MaterialProgressComponent(t1.viewData.ref, _el_0, true, 0, 0, 0, 100, false, false);
        this._MaterialProgressComponent_0_5 = t2;
        t1.create$2(0, t2, []);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, changed, t1, currVal_0;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          this._MaterialProgressComponent_0_5.max = 10000;
          changed = true;
        } else
          changed = false;
        t1 = _ctx.value;
        currVal_0 = C.JSDouble_methods.toInt$0(t1.firstDowns / t1.rec * 10000);
        t1 = this._first_down_percent_template$_expr_0;
        if (t1 !== currVal_0) {
          this._MaterialProgressComponent_0_5.activeProgress = currVal_0;
          this._first_down_percent_template$_expr_0 = currVal_0;
          changed = true;
        }
        if (changed)
          this._first_down_percent_template$_compView_0.viewData.set$cdMode(1);
        this._first_down_percent_template$_compView_0.detectChanges$0();
        if (firstCheck) {
          t1 = this._MaterialProgressComponent_0_5;
          t1._isInitialized = true;
          t1._material_progress$_indeterminate;
        }
      },
      destroyInternal$0: function() {
        var t1, t2;
        this._first_down_percent_template$_compView_0.destroy$0();
        t1 = this._MaterialProgressComponent_0_5;
        t2 = t1._primaryAnimation;
        if (!(t2 == null))
          t2.cancel();
        t2 = t1._secondaryAnimation;
        if (!(t2 == null))
          t2.cancel();
        t1._primaryAnimation = null;
        t1._secondaryAnimation = null;
        t1._primaryIndicator = null;
        t1._secondaryIndicator = null;
      },
      $asAppView: function() {
        return [L.FirstDownPercentComponent];
      }
    },
    _ViewFirstDownPercentComponentHost0: {
      "^": "AppView;0_first_down_percent_template$_compView_0,0_FirstDownPercentComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new U.ViewFirstDownPercentComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = L.FirstDownPercentComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, t2));
        t3 = document.createElement("first-down-percent");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewFirstDownPercentComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$FirstDownPercentComponent());
          $.ViewFirstDownPercentComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._first_down_percent_template$_compView_0 = t1;
        this.rootEl = t1.rootEl;
        t3 = new L.FirstDownPercentComponent();
        this._FirstDownPercentComponent_0_5 = t3;
        t1.create$2(0, t3, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._FirstDownPercentComponent_0_5, [t2]);
      },
      detectChangesInternal$0: function() {
        this._first_down_percent_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._first_down_percent_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [L.FirstDownPercentComponent];
      }
    }
  }], ["asset_skawa_components_example_lib_data_table_demo_wr_table_wr_table.css.shim.dart", "package:skawa_components_example/data_table_demo/wr_table/wr_table.css.shim.dart",, A, {}], ["", "package:skawa_components_example/data_table_demo/wr_table/wr_table.dart",, N, {
    "^": "",
    WrTableComponent: {
      "^": "Object;columnModel,columnOptions,wrRowData,columns,icon,0dataTableComponent",
      set$columns: function(_, columns) {
        this.columns = H.assertSubtype(columns, "$isList", [[G.SkawaDataTableColComponent, N.WrRowData]], "$asList");
      },
      set$dataTableComponent: function(dataTableComponent) {
        this.dataTableComponent = H.assertSubtype(dataTableComponent, "$isSkawaDataTableComponent", [U.RowData], "$asSkawaDataTableComponent");
      },
      itemRenderer$1: [function(row) {
        return H.assertSubtype(row, "$isSkawaDataTableColComponent", [N.WrRowData], "$asSkawaDataTableColComponent").header;
      }, "call$1", "get$itemRenderer", 4, 0, 129, 2],
      ngOnInit$0: function() {
        return this.columnModel.get$selectionChanges().listen$1(new N.WrTableComponent_ngOnInit_closure(this));
      },
      static: {
        WrTableComponent_nameAccessor: [function(row) {
          return H.interceptedTypeCheck(row, "$isWrRowData").name;
        }, "call$1", "wr_table_WrTableComponent_nameAccessor$closure", 4, 0, 6, 2],
        WrTableComponent_teamAccessor: [function(row) {
          return H.interceptedTypeCheck(row, "$isWrRowData").team;
        }, "call$1", "wr_table_WrTableComponent_teamAccessor$closure", 4, 0, 6, 2],
        WrTableComponent_recAccessor: [function(row) {
          return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isWrRowData").rec);
        }, "call$1", "wr_table_WrTableComponent_recAccessor$closure", 4, 0, 6, 2],
        WrTableComponent_yardsAccessor: [function(row) {
          return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isWrRowData").yards);
        }, "call$1", "wr_table_WrTableComponent_yardsAccessor$closure", 4, 0, 6, 2],
        WrTableComponent_avgAccessor: [function(row) {
          H.interceptedTypeCheck(row, "$isWrRowData");
          return C.JSDouble_methods.toStringAsFixed$1(row.yards / row.rec, 2);
        }, "call$1", "wr_table_WrTableComponent_avgAccessor$closure", 4, 0, 6, 2],
        WrTableComponent_yardPerGameAccessor: [function(row) {
          return C.JSDouble_methods.toStringAsFixed$1(H.interceptedTypeCheck(row, "$isWrRowData").yards / 16, 2);
        }, "call$1", "wr_table_WrTableComponent_yardPerGameAccessor$closure", 4, 0, 6, 2],
        WrTableComponent_firstDownAccessor: [function(row) {
          return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isWrRowData").firstDowns);
        }, "call$1", "wr_table_WrTableComponent_firstDownAccessor$closure", 4, 0, 6, 2]
      }
    },
    WrTableComponent_closure: {
      "^": "Closure:130;",
      call$1: [function(row) {
        H.interceptedTypeCheck(row, "$isRowData");
        return C.ComponentFactory_Ohe;
      }, null, null, 4, 0, null, 2, "call"]
    },
    WrTableComponent_ngOnInit_closure: {
      "^": "Closure:131;$this",
      call$1: [function(_) {
        var t1, t2, t3;
        H.assertSubtype(_, "$isList", [[Z.SelectionChangeRecord, [G.SkawaDataTableColComponent, N.WrRowData]]], "$asList");
        t1 = this.$this;
        t2 = $.$get$WrTableComponent__columns();
        t3 = H.getTypeArgumentByIndex(t2, 0);
        t1.set$columns(0, P.List_List$from(new H.WhereIterable(t2, H.functionTypeCheck(new N.WrTableComponent_ngOnInit__closure(t1), {func: 1, ret: P.bool, args: [t3]}), [t3]), true, t3));
        t1.dataTableComponent.changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    WrTableComponent_ngOnInit__closure: {
      "^": "Closure:132;$this",
      call$1: function(row) {
        return this.$this.columnModel.selectedValues.contains$1(0, H.assertSubtype(row, "$isSkawaDataTableColComponent", [N.WrRowData], "$asSkawaDataTableColComponent"));
      }
    },
    WrRowData: {
      "^": "RowData;name>,team,rec,yards,firstDowns,checked,classes"
    }
  }], ["", "package:skawa_components_example/data_table_demo/wr_table/wr_table.template.dart",, T, {
    "^": "",
    viewFactory_WrTableComponent1: [function(parentView, parentIndex) {
      var t1 = new T._ViewWrTableComponent1(true, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, N.WrTableComponent));
      t1.componentType = $.ViewWrTableComponent0__renderType;
      return t1;
    }, "call$2", "wr_table_template__viewFactory_WrTableComponent1$closure", 8, 0, 40],
    viewFactory_WrTableComponent2: [function(parentView, parentIndex) {
      var t1 = new T._ViewWrTableComponent2(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null], P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, N.WrTableComponent));
      t1.componentType = $.ViewWrTableComponent0__renderType;
      return t1;
    }, "call$2", "wr_table_template__viewFactory_WrTableComponent2$closure", 8, 0, 40],
    ViewWrTableComponent0: {
      "^": "AppView;0_wr_table_template$_compView_3,0_MaterialDropdownSelectComponent_3_5,0__ActiveItemModel_3_13,0_appEl_4,_query_SkawaDataTableComponent_1_0_isDirty,0_NgIf_4_9,0_wr_table_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$_wr_table_template$_compView_3: function(_compView_3) {
        this._wr_table_template$_compView_3 = H.assertSubtype(_compView_3, "$isViewMaterialDropdownSelectComponent0", [[G.SkawaDataTableColComponent, N.WrRowData]], "$asViewMaterialDropdownSelectComponent0");
      },
      set$_MaterialDropdownSelectComponent_3_5: function(_MaterialDropdownSelectComponent_3_5) {
        this._MaterialDropdownSelectComponent_3_5 = H.assertSubtype(_MaterialDropdownSelectComponent_3_5, "$isMaterialDropdownSelectComponent", [[G.SkawaDataTableColComponent, N.WrRowData]], "$asMaterialDropdownSelectComponent");
      },
      build$0: function() {
        var parentRenderNode, doc, _el_0, _el_1, t1, t2, t3, _el_3, _anchor_4;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createAndAppend(doc, "h3", parentRenderNode);
        this.addShimE$1(_el_0);
        _el_1 = S.createSpanAndAppend(doc, _el_0);
        this.addShimE$1(_el_1);
        (_el_1 && C.SpanElement_methods).append$1(_el_1, doc.createTextNode("Datatable with colRenderer"));
        t1 = [G.SkawaDataTableColComponent, N.WrRowData];
        t2 = new Y.ViewMaterialDropdownSelectComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_1, 3, [M.MaterialDropdownSelectComponent, [G.SkawaDataTableColComponent, N.WrRowData]]));
        t3 = doc.createElement("material-dropdown-select");
        t2.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewMaterialDropdownSelectComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialDropdownSelectComponent());
          $.ViewMaterialDropdownSelectComponent0__renderType = t3;
        }
        t2.setupComponentType$1(t3);
        this.set$_wr_table_template$_compView_3(t2);
        _el_3 = this._wr_table_template$_compView_3.rootEl;
        J.append$1$x(_el_0, _el_3);
        this.addShimC$1(_el_3);
        t2 = this.parentView;
        t1 = M.MaterialDropdownSelectComponent$(H.interceptedTypeCheck(t2.injectorGet$3(C.Type_IdGenerator_yLN, this.viewData.parentIndex, null), "$isIdGenerator"), H.interceptedTypeCheck(t2.injectorGet$3(C.Type_PopupSizeProvider_a5y, this.viewData.parentIndex, null), "$isPopupSizeProvider"), H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_isRtl, this.viewData.parentIndex, null)), null, null, this._wr_table_template$_compView_3.viewData.ref, _el_3, t1);
        this.set$_MaterialDropdownSelectComponent_3_5(t1);
        this._wr_table_template$_compView_3.create$2(0, this._MaterialDropdownSelectComponent_3_5, [C.List_empty, C.List_empty, C.List_empty, C.List_empty, C.List_empty, C.List_empty]);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_4 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(parentRenderNode, _anchor_4);
        t1 = new V.ViewContainer(4, null, this, _anchor_4);
        this._appEl_4 = t1;
        this._NgIf_4_9 = new K.NgIf(new D.TemplateRef(t1, T.wr_table_template__viewFactory_WrTableComponent1$closure()), t1, false);
        this.init$2(C.List_empty, null);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if ((token === C.Type_Qkw || token === C.Type_DropdownHandle_YMM || token === C.Type_HasDisabled_qzc || token === C.Type_HasRenderer_wsa || token === C.Type_DeferredContentAware_BCk || token === C.Type_SelectionContainer_yzp || token === C.Type_PopupSizeProvider_a5y || token === C.Type_ActivationHandler_Nm5) && 3 === nodeIndex)
          return this._MaterialDropdownSelectComponent_3_5;
        if (token === C.Type_ActiveItemModel_69t && 3 === nodeIndex) {
          t1 = this.__ActiveItemModel_3_13;
          if (t1 == null) {
            t1 = this._MaterialDropdownSelectComponent_3_5.activeModel;
            this.__ActiveItemModel_3_13 = t1;
          }
          return t1;
        }
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, t2, changes, currVal_0;
        _ctx = this.ctx;
        if (this.viewData._cdState === 0) {
          t1 = this._MaterialDropdownSelectComponent_3_5;
          t2 = _ctx.columnModel;
          t1.set$selectionInput(t2);
          changes = P.LinkedHashMap_LinkedHashMap$_empty(P.String, A.SimpleChange);
          changes.$indexSet(0, "selectionInput", new A.SimpleChange(null, t2));
          this._MaterialDropdownSelectComponent_3_5.showButtonBorder = false;
          changes.$indexSet(0, "showButtonBorder", new A.SimpleChange(null, false));
          t1 = _ctx.get$itemRenderer();
          t2 = this._MaterialDropdownSelectComponent_3_5;
          t2.toString;
          H.functionTypeCheck(t1, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(t2, 0)]});
          t2.super$SelectionContainer$itemRenderer(t1);
          changes.$indexSet(0, "itemRenderer", new A.SimpleChange(null, t1));
          t1 = this._MaterialDropdownSelectComponent_3_5;
          t2 = _ctx.columnOptions;
          t1.super$SelectionInputAdapter$optionsInput(t2);
          changes.$indexSet(0, "optionsInput", new A.SimpleChange(null, t2));
        } else
          changes = null;
        currVal_0 = _ctx.icon;
        t1 = this._wr_table_template$_expr_0;
        if (t1 !== currVal_0) {
          this._MaterialDropdownSelectComponent_3_5.MaterialButtonWrapper_icon = currVal_0;
          if (changes == null)
            changes = P.LinkedHashMap_LinkedHashMap$_empty(P.String, A.SimpleChange);
          changes.$indexSet(0, "icon", new A.SimpleChange(this._wr_table_template$_expr_0, currVal_0));
          this._wr_table_template$_expr_0 = currVal_0;
        }
        if (changes != null) {
          t1 = this._MaterialDropdownSelectComponent_3_5;
          t1.toString;
          if (H.assertSubtype(changes, "$isMap", [P.String, A.SimpleChange], "$asMap").containsKey$1(0, "disabled"))
            t1.MaterialButtonWrapper_disabled;
        }
        this._NgIf_4_9.set$ngIf(_ctx.columnModel.selectedValues._collection$_length !== 0);
        this._appEl_4.detectChangesInNestedViews$0();
        if (this._query_SkawaDataTableComponent_1_0_isDirty) {
          t1 = this.ctx;
          t2 = this._appEl_4.mapNestedViews$2$1(new T.ViewWrTableComponent0_detectChangesInternal_closure(), [S.SkawaDataTableComponent, U.RowData], T._ViewWrTableComponent1);
          t1.set$dataTableComponent(t2.length !== 0 ? C.JSArray_methods.get$first(t2) : null);
          this._query_SkawaDataTableComponent_1_0_isDirty = false;
        }
        this._wr_table_template$_compView_3.detectChanges$0();
      },
      destroyInternal$0: function() {
        var t1, t2;
        this._appEl_4.destroyNestedViews$0();
        this._wr_table_template$_compView_3.destroy$0();
        t1 = this._MaterialDropdownSelectComponent_3_5;
        t2 = t1._optionsListener;
        if (!(t2 == null))
          t2.cancel$0(0);
        t1 = t1._selectionListener;
        if (!(t1 == null))
          t1.cancel$0(0);
      },
      $asAppView: function() {
        return [N.WrTableComponent];
      }
    },
    ViewWrTableComponent0_detectChangesInternal_closure: {
      "^": "Closure:133;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewWrTableComponent1")._wr_table_template$_SkawaDataTableComponent_0_5], [[S.SkawaDataTableComponent, U.RowData]]);
      }
    },
    _ViewWrTableComponent1: {
      "^": "AppView;0_wr_table_template$_compView_0,0_wr_table_template$_SkawaDataTableComponent_0_5,0_wr_table_template$_appEl_1,_query_SkawaDataTableColComponent_0_0_isDirty,0_wr_table_template$_NgFor_1_9,0_wr_table_template$_expr_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$_wr_table_template$_compView_0: function(_compView_0) {
        this._wr_table_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewSkawaDataTableComponent0", [N.WrRowData], "$asViewSkawaDataTableComponent0");
      },
      set$_wr_table_template$_SkawaDataTableComponent_0_5: function(_SkawaDataTableComponent_0_5) {
        this._wr_table_template$_SkawaDataTableComponent_0_5 = H.assertSubtype(_SkawaDataTableComponent_0_5, "$isSkawaDataTableComponent", [N.WrRowData], "$asSkawaDataTableComponent");
      },
      build$0: function() {
        var t1, _el_0;
        t1 = N.WrRowData;
        this.set$_wr_table_template$_compView_0(N.ViewSkawaDataTableComponent0$(this, 0, t1));
        _el_0 = this._wr_table_template$_compView_0.rootEl;
        this.addShimC$1(_el_0);
        this.set$_wr_table_template$_SkawaDataTableComponent_0_5(S.SkawaDataTableComponent$(this._wr_table_template$_compView_0.viewData.ref, t1));
        t1 = $.$get$_viewContainerAnchor();
        t1 = new V.ViewContainer(1, 0, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._wr_table_template$_appEl_1 = t1;
        this._wr_table_template$_NgFor_1_9 = new R.NgFor(t1, new D.TemplateRef(t1, T.wr_table_template__viewFactory_WrTableComponent2$closure()));
        this._wr_table_template$_compView_0.create$2(0, this._wr_table_template$_SkawaDataTableComponent_0_5, [H.setRuntimeTypeInfo([t1], [V.ViewContainer])]);
        this.init0$1(_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_SkawaDataTableComponent_qdG)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._wr_table_template$_SkawaDataTableComponent_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._wr_table_template$_SkawaDataTableComponent_0_5;
          t1.selectable = false;
          t1.set$rows(0, _ctx.wrRowData);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._wr_table_template$_compView_0.viewData.set$cdMode(1);
        currVal_2 = _ctx.columns;
        t1 = this._wr_table_template$_expr_2;
        if (t1 !== currVal_2) {
          this._wr_table_template$_NgFor_1_9.set$ngForOf(currVal_2);
          this._wr_table_template$_expr_2 = currVal_2;
        }
        this._wr_table_template$_NgFor_1_9.ngDoCheck$0();
        this._wr_table_template$_appEl_1.detectChangesInNestedViews$0();
        if (this._query_SkawaDataTableColComponent_0_0_isDirty) {
          this._wr_table_template$_SkawaDataTableComponent_0_5.set$columns(0, this._wr_table_template$_appEl_1.mapNestedViews$2$1(new T._ViewWrTableComponent1_detectChangesInternal_closure(), [G.SkawaDataTableColComponent, N.WrRowData], T._ViewWrTableComponent2));
          this._query_SkawaDataTableColComponent_0_0_isDirty = false;
        }
        this._wr_table_template$_compView_0.detectChanges$0();
        if (firstCheck)
          this._wr_table_template$_SkawaDataTableComponent_0_5.ngAfterViewInit$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$isViewWrTableComponent0")._query_SkawaDataTableComponent_1_0_isDirty = true;
      },
      destroyInternal$0: function() {
        this._wr_table_template$_appEl_1.destroyNestedViews$0();
        this._wr_table_template$_compView_0.destroy$0();
        this._wr_table_template$_SkawaDataTableComponent_0_5._data_table$_tearDownDisposer.dispose$0();
      },
      $asAppView: function() {
        return [N.WrTableComponent];
      }
    },
    _ViewWrTableComponent1_detectChangesInternal_closure: {
      "^": "Closure:134;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewWrTableComponent2")._SkawaDataTableColComponent_0_6], [[G.SkawaDataTableColComponent, N.WrRowData]]);
      }
    },
    _ViewWrTableComponent2: {
      "^": "AppView;0_wr_table_template$_compView_0,0_SkawaDataColRendererDirective_0_5,0_SkawaDataTableColComponent_0_6,0_wr_table_template$_expr_0,0_wr_table_template$_expr_1,0_wr_table_template$_expr_2,0_wr_table_template$_expr_3,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$_wr_table_template$_compView_0: function(_compView_0) {
        this._wr_table_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewSkawaDataTableColComponent0", [N.WrRowData], "$asViewSkawaDataTableColComponent0");
      },
      set$_SkawaDataColRendererDirective_0_5: function(_SkawaDataColRendererDirective_0_5) {
        this._SkawaDataColRendererDirective_0_5 = H.assertSubtype(_SkawaDataColRendererDirective_0_5, "$isSkawaDataColRendererDirective", [N.WrRowData], "$asSkawaDataColRendererDirective");
      },
      set$_SkawaDataTableColComponent_0_6: function(_SkawaDataTableColComponent_0_6) {
        this._SkawaDataTableColComponent_0_6 = H.assertSubtype(_SkawaDataTableColComponent_0_6, "$isSkawaDataTableColComponent", [N.WrRowData], "$asSkawaDataTableColComponent");
      },
      build$0: function() {
        var t1, _el_0, t2;
        t1 = N.WrRowData;
        this.set$_wr_table_template$_compView_0(Y.ViewSkawaDataTableColComponent0$(this, 0, t1));
        _el_0 = this._wr_table_template$_compView_0.rootEl;
        this.addShimC$1(_el_0);
        this.set$_SkawaDataColRendererDirective_0_5(new G.SkawaDataColRendererDirective([t1]));
        t2 = this._SkawaDataColRendererDirective_0_5;
        this.set$_SkawaDataTableColComponent_0_6(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, 0, [t1]), t2, true, [t1]));
        this._wr_table_template$_compView_0.create$2(0, this._SkawaDataTableColComponent_0_6, []);
        this.init0$1(_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_iap && 0 === nodeIndex)
          return this._SkawaDataColRendererDirective_0_5;
        if (token === C.Type_SkawaDataTableColComponent_tpI && 0 === nodeIndex)
          return this._SkawaDataTableColComponent_0_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var t1, local_column, t2, currVal_0, currVal_1, currVal_2, currVal_3;
        t1 = this.viewData._cdState;
        local_column = H.assertSubtypeOfRuntimeType(this.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, N.WrRowData]);
        t2 = local_column.columnRenderer;
        currVal_0 = t2 == null ? null : H.functionTypeCheck(t2.SkawaDataColRendererDirective_factoryRenderer, {func: 1, ret: [D.ComponentFactory,,], args: [N.WrRowData]});
        t2 = this._wr_table_template$_expr_0;
        if (t2 == null ? currVal_0 != null : t2 !== currVal_0) {
          this._SkawaDataColRendererDirective_0_5.set$factoryRenderer(currVal_0);
          this._wr_table_template$_expr_0 = currVal_0;
        }
        currVal_1 = H.functionTypeCheck(local_column.accessor, {func: 1, ret: P.String, args: [N.WrRowData]});
        t2 = this._wr_table_template$_expr_1;
        if (t2 == null ? currVal_1 != null : t2 !== currVal_1) {
          this._SkawaDataTableColComponent_0_6.set$accessor(currVal_1);
          this._wr_table_template$_expr_1 = currVal_1;
        }
        currVal_2 = local_column.header;
        t2 = this._wr_table_template$_expr_2;
        if (t2 != currVal_2) {
          this._SkawaDataTableColComponent_0_6.header = currVal_2;
          this._wr_table_template$_expr_2 = currVal_2;
        }
        currVal_3 = local_column.classString;
        t2 = this._wr_table_template$_expr_3;
        if (t2 != currVal_3) {
          this._SkawaDataTableColComponent_0_6.classString = currVal_3;
          this._wr_table_template$_expr_3 = currVal_3;
        }
        if (t1 === 0)
          this._SkawaDataTableColComponent_0_6.ngOnInit$0();
        this._wr_table_template$_compView_0.detectChanges$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$is_ViewWrTableComponent1")._query_SkawaDataTableColComponent_0_0_isDirty = true;
      },
      destroyInternal$0: function() {
        this._wr_table_template$_compView_0.destroy$0();
        this._SkawaDataTableColComponent_0_6._triggerController.close$0(0);
      },
      $asAppView: function() {
        return [N.WrTableComponent];
      }
    }
  }], ["asset_skawa_components_example_lib_demo_header_demo_header.css.shim.dart", "package:skawa_components_example/demo_header/demo_header.css.shim.dart",, D, {}], ["", "package:skawa_components_example/demo_header/demo_header.dart",, D, {
    "^": "",
    DemoHeaderComponent: {
      "^": "Object;0title,0sourceHref,0exampleHref"
    }
  }], ["", "package:skawa_components_example/demo_header/demo_header.template.dart",, S, {
    "^": "",
    ViewDemoHeaderComponent0: {
      "^": "AppView;0_demo_header_template$_compView_3,0_AcxDarkTheme_3_5,0_MaterialButtonComponent_3_6,0_demo_header_template$_compView_4,0_MaterialIconComponent_4_5,0_compView_7,0_AcxDarkTheme_7_5,0_MaterialButtonComponent_7_6,0_demo_header_template$_compView_8,0_MaterialIconComponent_8_5,0_demo_header_template$_expr_0,0_demo_header_template$_expr_1,0_expr_3,0_text_1,0_el_2,0_el_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_3, t2, _el_4, t3, _el_7, _el_8;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createAndAppend(doc, "h2", parentRenderNode);
        this.addShimE$1(_el_0);
        t1 = doc.createTextNode("");
        this._text_1 = t1;
        J.append$1$x(_el_0, t1);
        t1 = H.interceptedTypeCheck(S.createAndAppend(doc, "a", parentRenderNode), "$isAnchorElement");
        this._el_2 = t1;
        t1.className = "source-link";
        (t1 && C.AnchorElement_methods).setAttribute$2(t1, "target", "_blank");
        t1 = this._el_2;
        (t1 && C.AnchorElement_methods).setAttribute$2(t1, "title", "Component Source");
        this.addShimC$1(this._el_2);
        t1 = U.ViewMaterialButtonComponent0$(this, 3);
        this._demo_header_template$_compView_3 = t1;
        _el_3 = t1.rootEl;
        t1 = this._el_2;
        (t1 && C.AnchorElement_methods).append$1(t1, _el_3);
        J.setAttribute$2$x(_el_3, "icon", "");
        this.addShimC$1(_el_3);
        t1 = this.parentView;
        t2 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_3_5 = t2;
        this._MaterialButtonComponent_3_6 = B.MaterialButtonComponent$(_el_3, t2, this._demo_header_template$_compView_3.viewData.ref, null);
        t2 = M.ViewMaterialIconComponent0$(this, 4);
        this._demo_header_template$_compView_4 = t2;
        _el_4 = t2.rootEl;
        J.setAttribute$2$x(_el_4, "icon", "code");
        this.addShimC$1(_el_4);
        t2 = new Y.MaterialIconComponent(_el_4);
        this._MaterialIconComponent_4_5 = t2;
        this._demo_header_template$_compView_4.create$2(0, t2, []);
        t2 = [W.HtmlElement];
        this._demo_header_template$_compView_3.create$2(0, this._MaterialButtonComponent_3_6, [H.setRuntimeTypeInfo([_el_4], t2)]);
        J.append$1$x(parentRenderNode, doc.createTextNode("\n"));
        t3 = H.interceptedTypeCheck(S.createAndAppend(doc, "a", parentRenderNode), "$isAnchorElement");
        this._el_6 = t3;
        t3.className = "source-link";
        (t3 && C.AnchorElement_methods).setAttribute$2(t3, "target", "_blank");
        t3 = this._el_6;
        (t3 && C.AnchorElement_methods).setAttribute$2(t3, "title", "Example Source");
        this.addShimC$1(this._el_6);
        t3 = U.ViewMaterialButtonComponent0$(this, 7);
        this._compView_7 = t3;
        _el_7 = t3.rootEl;
        t3 = this._el_6;
        (t3 && C.AnchorElement_methods).append$1(t3, _el_7);
        J.setAttribute$2$x(_el_7, "icon", "");
        this.addShimC$1(_el_7);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_7_5 = t1;
        this._MaterialButtonComponent_7_6 = B.MaterialButtonComponent$(_el_7, t1, this._compView_7.viewData.ref, null);
        t1 = M.ViewMaterialIconComponent0$(this, 8);
        this._demo_header_template$_compView_8 = t1;
        _el_8 = t1.rootEl;
        J.setAttribute$2$x(_el_8, "icon", "wb_incandescent");
        this.addShimC$1(_el_8);
        t1 = new Y.MaterialIconComponent(_el_8);
        this._MaterialIconComponent_8_5 = t1;
        this._demo_header_template$_compView_8.create$2(0, t1, []);
        this._compView_7.create$2(0, this._MaterialButtonComponent_7_6, [H.setRuntimeTypeInfo([_el_8], t2)]);
        this.init$2(C.List_empty, null);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 3 <= nodeIndex && nodeIndex <= 4)
          return this._AcxDarkTheme_3_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 3 <= nodeIndex && nodeIndex <= 4)
          return this._MaterialButtonComponent_3_6;
        if (t1 && 7 <= nodeIndex && nodeIndex <= 8)
          return this._AcxDarkTheme_7_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 7 <= nodeIndex && nodeIndex <= 8)
          return this._MaterialButtonComponent_7_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, changed, currVal_0, t1, currVal_1, currVal_3;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          this._MaterialIconComponent_4_5.set$icon(0, "code");
          changed = true;
        } else
          changed = false;
        if (changed)
          this._demo_header_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck) {
          this._MaterialIconComponent_8_5.set$icon(0, "wb_incandescent");
          changed = true;
        } else
          changed = false;
        if (changed)
          this._demo_header_template$_compView_8.viewData.set$cdMode(1);
        currVal_0 = _ctx.title;
        if (currVal_0 == null)
          currVal_0 = "";
        t1 = this._demo_header_template$_expr_0;
        if (t1 !== currVal_0) {
          this._text_1.textContent = currVal_0;
          this._demo_header_template$_expr_0 = currVal_0;
        }
        currVal_1 = _ctx.sourceHref;
        if (currVal_1 == null)
          currVal_1 = "";
        t1 = this._demo_header_template$_expr_1;
        if (t1 !== currVal_1) {
          this._el_2.href = $.appViewUtils.sanitizer.sanitizeUrl$1(currVal_1);
          this._demo_header_template$_expr_1 = currVal_1;
        }
        this._demo_header_template$_compView_3.detectHostChanges$1(firstCheck);
        currVal_3 = _ctx.exampleHref;
        if (currVal_3 == null)
          currVal_3 = "";
        t1 = this._expr_3;
        if (t1 !== currVal_3) {
          this._el_6.href = $.appViewUtils.sanitizer.sanitizeUrl$1(currVal_3);
          this._expr_3 = currVal_3;
        }
        this._compView_7.detectHostChanges$1(firstCheck);
        this._demo_header_template$_compView_3.detectChanges$0();
        this._demo_header_template$_compView_4.detectChanges$0();
        this._compView_7.detectChanges$0();
        this._demo_header_template$_compView_8.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._demo_header_template$_compView_3.destroy$0();
        this._demo_header_template$_compView_4.destroy$0();
        this._compView_7.destroy$0();
        this._demo_header_template$_compView_8.destroy$0();
      },
      $asAppView: function() {
        return [D.DemoHeaderComponent];
      },
      static: {
        ViewDemoHeaderComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new S.ViewDemoHeaderComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, D.DemoHeaderComponent));
          t2 = document.createElement("demo-header");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewDemoHeaderComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$DemoHeaderComponent());
            $.ViewDemoHeaderComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["asset_skawa_components_example_lib_extended_material_icon_demo_extended_material_icon_demo.css.shim.dart", "package:skawa_components_example/extended_material_icon_demo/extended_material_icon_demo.css.shim.dart",, M, {}], ["", "package:skawa_components_example/extended_material_icon_demo/extended_material_icon_demo.dart",, V, {
    "^": "",
    ExtendedMaterialIconDemoComponent: {
      "^": "Object;"
    }
  }], ["", "package:skawa_components_example/extended_material_icon_demo/extended_material_icon_demo.template.dart",, X, {
    "^": "",
    ViewExtendedMaterialIconDemoComponent0: {
      "^": "AppView;0_extended_material_icon_demo_template$_compView_0,0_DemoHeaderComponent_0_5,0_compView_2,0_ExtendedMaterialIconComponent_2_5,0_compView_4,0_ExtendedMaterialIconComponent_4_5,0_extended_material_icon_demo_template$_compView_6,0_ExtendedMaterialIconComponent_6_5,0_compView_8,0_ExtendedMaterialIconComponent_8_5,0_compView_10,0_ExtendedMaterialIconComponent_10_5,0_extended_material_icon_demo_template$_compView_12,0_ExtendedMaterialIconComponent_12_5,0_compView_14,0_ExtendedMaterialIconComponent_14_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, doc, _el_1, _el_2, _el_4, _el_5, _el_6, _el_8, _el_9, _el_10, _el_12, _el_14;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._extended_material_icon_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.append$1$x(parentRenderNode, _el_0);
        t1 = J.getInterceptor$x(_el_0);
        t1.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/extended_material_icon_demo");
        t1.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/extended_material_icon");
        t1.setAttribute$2(_el_0, "title", "Hex Colorize Pipe Demo");
        this.addShimC$1(_el_0);
        t1 = new D.DemoHeaderComponent();
        this._DemoHeaderComponent_0_5 = t1;
        this._extended_material_icon_demo_template$_compView_0.create$2(0, t1, []);
        doc = document;
        _el_1 = S.createDivAndAppend(doc, parentRenderNode);
        this.addShimC$1(_el_1);
        t1 = Q.ViewExtendedMaterialIconComponent0$(this, 2);
        this._compView_2 = t1;
        _el_2 = t1.rootEl;
        (_el_1 && C.DivElement_methods).append$1(_el_1, _el_2);
        J.setAttribute$2$x(_el_2, "icon", "hubspot");
        this.addShimC$1(_el_2);
        t1 = new R.ExtendedMaterialIconComponent(false, false, false);
        this._ExtendedMaterialIconComponent_2_5 = t1;
        this._compView_2.create$2(0, t1, []);
        C.DivElement_methods.append$1(_el_1, doc.createTextNode("Flipped horizontally"));
        t1 = Q.ViewExtendedMaterialIconComponent0$(this, 4);
        this._compView_4 = t1;
        _el_4 = t1.rootEl;
        C.DivElement_methods.append$1(_el_1, _el_4);
        J.setAttribute$2$x(_el_4, "icon", "hubspot");
        this.addShimC$1(_el_4);
        t1 = new R.ExtendedMaterialIconComponent(false, false, false);
        this._ExtendedMaterialIconComponent_4_5 = t1;
        this._compView_4.create$2(0, t1, []);
        _el_5 = S.createDivAndAppend(doc, parentRenderNode);
        this.addShimC$1(_el_5);
        t1 = Q.ViewExtendedMaterialIconComponent0$(this, 6);
        this._extended_material_icon_demo_template$_compView_6 = t1;
        _el_6 = t1.rootEl;
        (_el_5 && C.DivElement_methods).append$1(_el_5, _el_6);
        J.setAttribute$2$x(_el_6, "icon", "star");
        this.addShimC$1(_el_6);
        t1 = new R.ExtendedMaterialIconComponent(false, false, false);
        this._ExtendedMaterialIconComponent_6_5 = t1;
        this._extended_material_icon_demo_template$_compView_6.create$2(0, t1, []);
        C.DivElement_methods.append$1(_el_5, doc.createTextNode("Flipped vertically"));
        t1 = Q.ViewExtendedMaterialIconComponent0$(this, 8);
        this._compView_8 = t1;
        _el_8 = t1.rootEl;
        C.DivElement_methods.append$1(_el_5, _el_8);
        J.setAttribute$2$x(_el_8, "icon", "star");
        this.addShimC$1(_el_8);
        t1 = new R.ExtendedMaterialIconComponent(false, false, false);
        this._ExtendedMaterialIconComponent_8_5 = t1;
        this._compView_8.create$2(0, t1, []);
        _el_9 = S.createDivAndAppend(doc, parentRenderNode);
        this.addShimC$1(_el_9);
        t1 = Q.ViewExtendedMaterialIconComponent0$(this, 10);
        this._compView_10 = t1;
        _el_10 = t1.rootEl;
        (_el_9 && C.DivElement_methods).append$1(_el_9, _el_10);
        J.setAttribute$2$x(_el_10, "icon", "chart-line-stacked");
        this.addShimC$1(_el_10);
        t1 = new R.ExtendedMaterialIconComponent(false, false, false);
        this._ExtendedMaterialIconComponent_10_5 = t1;
        this._compView_10.create$2(0, t1, []);
        C.DivElement_methods.append$1(_el_9, doc.createTextNode("Rotated by 45 deg"));
        t1 = Q.ViewExtendedMaterialIconComponent0$(this, 12);
        this._extended_material_icon_demo_template$_compView_12 = t1;
        _el_12 = t1.rootEl;
        C.DivElement_methods.append$1(_el_9, _el_12);
        J.setAttribute$2$x(_el_12, "icon", "chart-line-stacked");
        this.addShimC$1(_el_12);
        t1 = new R.ExtendedMaterialIconComponent(false, false, false);
        this._ExtendedMaterialIconComponent_12_5 = t1;
        this._extended_material_icon_demo_template$_compView_12.create$2(0, t1, []);
        C.DivElement_methods.append$1(_el_9, doc.createTextNode("Spinning icon"));
        t1 = Q.ViewExtendedMaterialIconComponent0$(this, 14);
        this._compView_14 = t1;
        _el_14 = t1.rootEl;
        C.DivElement_methods.append$1(_el_9, _el_14);
        J.setAttribute$2$x(_el_14, "icon", "chart-line-stacked");
        this.addShimC$1(_el_14);
        t1 = new R.ExtendedMaterialIconComponent(false, false, false);
        this._ExtendedMaterialIconComponent_14_5 = t1;
        this._compView_14.create$2(0, t1, []);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._DemoHeaderComponent_0_5;
          t1.title = "Hex Colorize Pipe Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/extended_material_icon";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/extended_material_icon_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._extended_material_icon_demo_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck) {
          this._ExtendedMaterialIconComponent_2_5.icon = "hubspot";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_2.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._ExtendedMaterialIconComponent_4_5;
          t1.icon = "hubspot";
          t1.flipHorizontal = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_4.viewData.set$cdMode(1);
        if (firstCheck) {
          this._ExtendedMaterialIconComponent_6_5.icon = "star";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._extended_material_icon_demo_template$_compView_6.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._ExtendedMaterialIconComponent_8_5;
          t1.icon = "star";
          t1.flipVertical = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_8.viewData.set$cdMode(1);
        if (firstCheck) {
          this._ExtendedMaterialIconComponent_10_5.icon = "chart-line-stacked";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_10.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._ExtendedMaterialIconComponent_12_5;
          t1.icon = "chart-line-stacked";
          t1.rotate = 45;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._extended_material_icon_demo_template$_compView_12.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._ExtendedMaterialIconComponent_14_5;
          t1.icon = "chart-line-stacked";
          t1.spin = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_14.viewData.set$cdMode(1);
        this._extended_material_icon_demo_template$_compView_0.detectChanges$0();
        this._compView_2.detectChanges$0();
        this._compView_4.detectChanges$0();
        this._extended_material_icon_demo_template$_compView_6.detectChanges$0();
        this._compView_8.detectChanges$0();
        this._compView_10.detectChanges$0();
        this._extended_material_icon_demo_template$_compView_12.detectChanges$0();
        this._compView_14.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._extended_material_icon_demo_template$_compView_0.destroy$0();
        this._compView_2.destroy$0();
        this._compView_4.destroy$0();
        this._extended_material_icon_demo_template$_compView_6.destroy$0();
        this._compView_8.destroy$0();
        this._compView_10.destroy$0();
        this._extended_material_icon_demo_template$_compView_12.destroy$0();
        this._compView_14.destroy$0();
      },
      $asAppView: function() {
        return [V.ExtendedMaterialIconDemoComponent];
      }
    }
  }], ["", "package:skawa_components_example/grid_demo/grid_demo.dart",, Q, {
    "^": "",
    GridDemoComponent: {
      "^": "Object;"
    }
  }], ["", "package:skawa_components_example/grid_demo/grid_demo.template.dart",, S, {
    "^": "",
    viewFactory_GridDemoComponent1: [function(parentView, parentIndex) {
      var t1 = new S._ViewGridDemoComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.GridDemoComponent));
      t1.componentType = $.ViewGridDemoComponent0__renderType;
      return t1;
    }, "call$2", "grid_demo_template__viewFactory_GridDemoComponent1$closure", 8, 0, 46],
    viewFactory_GridDemoComponent2: [function(parentView, parentIndex) {
      var t1 = new S._ViewGridDemoComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.GridDemoComponent));
      t1.componentType = $.ViewGridDemoComponent0__renderType;
      return t1;
    }, "call$2", "grid_demo_template__viewFactory_GridDemoComponent2$closure", 8, 0, 46],
    ViewGridDemoComponent0: {
      "^": "AppView;0_grid_demo_template$_compView_0,0_grid_demo_template$_DemoHeaderComponent_0_5,0_grid_demo_template$_compView_3,0_GridComponent_3_5,0_GridTileDirective_4_5,0_GridTileDirective_6_5,0_GridTileDirective_8_5,0_GridTileDirective_10_5,0_GridTileDirective_12_5,0_compView_16,0_GridComponent_16_5,0_grid_demo_template$_compView_17,0_GridTileDirective_17_5,0_SkawaCardComponent_17_6,0_compView_18,0_SkawaCardHeaderComponent_18_5,0_SkawaCardHeaderImageDirective_19_5,0_SkawaCardHeaderTitleDirective_22_5,0_compView_24,0_GridTileDirective_24_5,0_SkawaCardComponent_24_6,0_compView_25,0_SkawaCardHeaderComponent_25_5,0_SkawaCardHeaderImageDirective_26_5,0_SkawaCardHeaderTitleDirective_29_5,0_SkawaCardHeaderSubheadDirective_31_5,0_compView_33,0_GridTileDirective_33_5,0_SkawaCardComponent_33_6,0_compView_34,0_SkawaCardContentComponent_34_5,0_compView_36,0_SkawaCardActionsComponent_36_5,0_compView_37,0_AcxDarkTheme_37_5,0_MaterialButtonComponent_37_6,0_compView_39,0_GridTileDirective_39_5,0_SkawaCardComponent_39_6,0_compView_40,0_SkawaCardHeaderComponent_40_5,0_SkawaCardHeaderTitleDirective_41_5,0_SkawaCardHeaderSubheadDirective_43_5,0_compView_45,0_SkawaCardContentComponent_45_5,0_compView_50,0_GridTileDirective_50_5,0_SkawaCardComponent_50_6,0_compView_51,0_SkawaCardHeaderComponent_51_5,0_SkawaCardHeaderTitleDirective_52_5,0_grid_demo_template$_compView_54,0_SkawaCardActionsComponent_54_5,0_grid_demo_template$_compView_55,0_AcxDarkTheme_55_5,0_MaterialButtonComponent_55_6,0_compView_56,0_MaterialIconComponent_56_5,0_compView_57,0_SkawaCardActionsComponent_57_5,0_compView_58,0_AcxDarkTheme_58_5,0_MaterialButtonComponent_58_6,0_grid_demo_template$_compView_61,0_AcxDarkTheme_61_5,0_MaterialButtonComponent_61_6,0_appEl_62,0_NgIf_62_9,0_appEl_63,0_NgIf_63_9,0_grid_demo_template$_compView_64,0_SkawaCardContentComponent_64_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, doc, _el_4, _el_6, _el_8, _el_10, _el_12, t3, t4, _el_17, _el_18, _el_19, _el_20, _el_22, _el_24, _el_25, _el_26, _el_27, _el_29, _el_31, _el_33, _el_34, t5, t6, _el_36, _el_37, _text_38, _el_39, _el_40, _el_41, _el_43, _el_45, _el_46, _el_48, _el_50, _el_51, _el_52, _el_54, _el_55, _el_56, _el_57, _el_58, _text_59, _el_60, _el_61, _el_64, _text_65;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._grid_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/grid_demo");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/grid");
        t2.setAttribute$2(_el_0, "title", "Grid Demo");
        t2 = new D.DemoHeaderComponent();
        this._grid_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._grid_demo_template$_compView_0.create$2(0, t2, []);
        doc = document;
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Grid with basic GridTile"));
        t2 = X.ViewGridComponent0$(this, 3);
        this._grid_demo_template$_compView_3 = t2;
        t1.append$1(parentRenderNode, t2.rootEl);
        this._GridComponent_3_5 = new T.GridComponent("16", -1);
        _el_4 = doc.createElement("div");
        t2 = J.getInterceptor$x(_el_4);
        t2.setAttribute$2(_el_4, "gridTile", "");
        H.interceptedTypeCheck(_el_4, "$isHtmlElement");
        this._GridTileDirective_4_5 = new T.GridTileDirective(_el_4);
        t2.append$1(_el_4, doc.createTextNode("Cat"));
        _el_6 = doc.createElement("div");
        t2 = J.getInterceptor$x(_el_6);
        t2.setAttribute$2(_el_6, "gridTile", "");
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this._GridTileDirective_6_5 = new T.GridTileDirective(_el_6);
        t2.append$1(_el_6, doc.createTextNode("Dog"));
        _el_8 = doc.createElement("div");
        t2 = J.getInterceptor$x(_el_8);
        t2.setAttribute$2(_el_8, "gridTile", "");
        H.interceptedTypeCheck(_el_8, "$isHtmlElement");
        this._GridTileDirective_8_5 = new T.GridTileDirective(_el_8);
        t2.append$1(_el_8, doc.createTextNode("Wolf"));
        _el_10 = doc.createElement("div");
        t2 = J.getInterceptor$x(_el_10);
        t2.setAttribute$2(_el_10, "gridTile", "");
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this._GridTileDirective_10_5 = new T.GridTileDirective(_el_10);
        t2.append$1(_el_10, doc.createTextNode("Lion"));
        _el_12 = doc.createElement("div");
        t2 = J.getInterceptor$x(_el_12);
        t2.setAttribute$2(_el_12, "gridTile", "");
        H.interceptedTypeCheck(_el_12, "$isHtmlElement");
        this._GridTileDirective_12_5 = new T.GridTileDirective(_el_12);
        t2.append$1(_el_12, doc.createTextNode("Tiger"));
        t2 = this._GridComponent_3_5;
        t3 = [A.GridTile];
        t4 = H.setRuntimeTypeInfo([this._GridTileDirective_4_5, this._GridTileDirective_6_5, this._GridTileDirective_8_5, this._GridTileDirective_10_5, this._GridTileDirective_12_5], t3);
        t2.toString;
        t2.set$_tiles(H.assertSubtype(t4, "$isList", t3, "$asList"));
        t2.updateAndDisplay$1(true);
        t2 = [W.Element];
        this._grid_demo_template$_compView_3.create$2(0, this._GridComponent_3_5, [H.setRuntimeTypeInfo([_el_4, _el_6, _el_8, _el_10, _el_12], t2)]);
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Grid with card as GridTile"));
        t4 = X.ViewGridComponent0$(this, 16);
        this._compView_16 = t4;
        t1.append$1(parentRenderNode, t4.rootEl);
        this._GridComponent_16_5 = new T.GridComponent("16", -1);
        t4 = E.ViewSkawaCardComponent0$(this, 17);
        this._grid_demo_template$_compView_17 = t4;
        _el_17 = t4.rootEl;
        J.setAttribute$2$x(_el_17, "gridTile", "");
        this._GridTileDirective_17_5 = new T.GridTileDirective(_el_17);
        this._SkawaCardComponent_17_6 = new V.SkawaCardComponent();
        t4 = E.ViewSkawaCardHeaderComponent0$(this, 18);
        this._compView_18 = t4;
        _el_18 = t4.rootEl;
        this._SkawaCardHeaderComponent_18_5 = new V.SkawaCardHeaderComponent("transparent");
        _el_19 = doc.createElement("skawa-header-image");
        this._SkawaCardHeaderImageDirective_19_5 = new F.SkawaCardHeaderImageDirective();
        _el_20 = S.createAndAppend(doc, "i", _el_19);
        _el_20.className = "material-icons";
        t1 = J.getInterceptor$x(_el_20);
        t1.setAttribute$2(_el_20, "style", "font-size: 40px;");
        t1.append$1(_el_20, doc.createTextNode("account_circle"));
        _el_22 = doc.createElement("skawa-header-title");
        this._SkawaCardHeaderTitleDirective_22_5 = new F.SkawaCardHeaderTitleDirective();
        J.append$1$x(_el_22, doc.createTextNode("Weee"));
        t1 = this._SkawaCardHeaderComponent_18_5;
        t1.title = this._SkawaCardHeaderTitleDirective_22_5;
        t1.image = this._SkawaCardHeaderImageDirective_19_5;
        this._compView_18.create$2(0, t1, [H.setRuntimeTypeInfo([_el_19, _el_22], t2)]);
        t1 = this._SkawaCardComponent_17_6;
        t1.cardHeader = this._SkawaCardHeaderComponent_18_5;
        t4 = [W.HtmlElement];
        this._grid_demo_template$_compView_17.create$2(0, t1, [H.setRuntimeTypeInfo([_el_18], t4)]);
        t1 = E.ViewSkawaCardComponent0$(this, 24);
        this._compView_24 = t1;
        _el_24 = t1.rootEl;
        J.setAttribute$2$x(_el_24, "gridTile", "");
        this._GridTileDirective_24_5 = new T.GridTileDirective(_el_24);
        this._SkawaCardComponent_24_6 = new V.SkawaCardComponent();
        t1 = E.ViewSkawaCardHeaderComponent0$(this, 25);
        this._compView_25 = t1;
        _el_25 = t1.rootEl;
        this._SkawaCardHeaderComponent_25_5 = new V.SkawaCardHeaderComponent("transparent");
        _el_26 = doc.createElement("skawa-header-image");
        this._SkawaCardHeaderImageDirective_26_5 = new F.SkawaCardHeaderImageDirective();
        _el_27 = S.createAndAppend(doc, "i", _el_26);
        _el_27.className = "material-icons";
        t1 = J.getInterceptor$x(_el_27);
        t1.setAttribute$2(_el_27, "style", "font-size: 40px;");
        t1.append$1(_el_27, doc.createTextNode("account_circle"));
        _el_29 = doc.createElement("skawa-header-title");
        this._SkawaCardHeaderTitleDirective_29_5 = new F.SkawaCardHeaderTitleDirective();
        J.append$1$x(_el_29, doc.createTextNode("Weee"));
        _el_31 = doc.createElement("skawa-header-subhead");
        this._SkawaCardHeaderSubheadDirective_31_5 = new F.SkawaCardHeaderSubheadDirective();
        J.append$1$x(_el_31, doc.createTextNode("Subhead"));
        t1 = this._SkawaCardHeaderComponent_25_5;
        t1.title = this._SkawaCardHeaderTitleDirective_29_5;
        t1.subhead = this._SkawaCardHeaderSubheadDirective_31_5;
        t1.image = this._SkawaCardHeaderImageDirective_26_5;
        this._compView_25.create$2(0, t1, [H.setRuntimeTypeInfo([_el_26, _el_29, _el_31], t2)]);
        t1 = this._SkawaCardComponent_24_6;
        t1.cardHeader = this._SkawaCardHeaderComponent_25_5;
        this._compView_24.create$2(0, t1, [H.setRuntimeTypeInfo([_el_25], t4)]);
        t1 = E.ViewSkawaCardComponent0$(this, 33);
        this._compView_33 = t1;
        _el_33 = t1.rootEl;
        J.setAttribute$2$x(_el_33, "gridTile", "");
        this._GridTileDirective_33_5 = new T.GridTileDirective(_el_33);
        this._SkawaCardComponent_33_6 = new V.SkawaCardComponent();
        t1 = E.ViewSkawaCardContentComponent0$(this, 34);
        this._compView_34 = t1;
        _el_34 = t1.rootEl;
        t5 = new V.SkawaCardContentComponent(this._SkawaCardComponent_33_6);
        this._SkawaCardContentComponent_34_5 = t5;
        t6 = [W.Text];
        t1.create$2(0, t5, [H.setRuntimeTypeInfo([doc.createTextNode("In this demo, there is only content and actions below it.")], t6)]);
        t5 = X.ViewSkawaCardActionsComponent0$(this, 36);
        this._compView_36 = t5;
        _el_36 = t5.rootEl;
        t1 = this.parentView;
        t5 = H.interceptedTypeCheck(t1.injectorGet$3(C.Type_SkawaCardHeaderComponent_2jN, this.viewData.parentIndex, null), "$isSkawaCardHeaderComponent");
        this._SkawaCardActionsComponent_36_5 = new X.SkawaCardActionsComponent(t5);
        t5 = U.ViewMaterialButtonComponent0$(this, 37);
        this._compView_37 = t5;
        _el_37 = t5.rootEl;
        _el_37.className = "color--primary-action";
        t5 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_37_5 = t5;
        t5 = B.MaterialButtonComponent$(_el_37, t5, this._compView_37.viewData.ref, null);
        this._MaterialButtonComponent_37_6 = t5;
        _text_38 = doc.createTextNode("Primary action");
        this._compView_37.create$2(0, t5, [H.setRuntimeTypeInfo([_text_38], t6)]);
        this._compView_36.create$2(0, this._SkawaCardActionsComponent_36_5, [H.setRuntimeTypeInfo([_el_37], t4)]);
        t5 = this._SkawaCardComponent_33_6;
        t5.cardContent = this._SkawaCardContentComponent_34_5;
        this._compView_33.create$2(0, t5, [H.setRuntimeTypeInfo([_el_34, _el_36], t4)]);
        t5 = E.ViewSkawaCardComponent0$(this, 39);
        this._compView_39 = t5;
        _el_39 = t5.rootEl;
        J.setAttribute$2$x(_el_39, "gridTile", "");
        this._GridTileDirective_39_5 = new T.GridTileDirective(_el_39);
        this._SkawaCardComponent_39_6 = new V.SkawaCardComponent();
        t5 = E.ViewSkawaCardHeaderComponent0$(this, 40);
        this._compView_40 = t5;
        _el_40 = t5.rootEl;
        J.setAttribute$2$x(_el_40, "statusColor", "rgb(0,127,0)");
        this._SkawaCardHeaderComponent_40_5 = new V.SkawaCardHeaderComponent("transparent");
        _el_41 = doc.createElement("skawa-header-title");
        this._SkawaCardHeaderTitleDirective_41_5 = new F.SkawaCardHeaderTitleDirective();
        J.append$1$x(_el_41, doc.createTextNode("Some"));
        _el_43 = doc.createElement("skawa-header-subhead");
        this._SkawaCardHeaderSubheadDirective_43_5 = new F.SkawaCardHeaderSubheadDirective();
        J.append$1$x(_el_43, doc.createTextNode("subhead"));
        t5 = this._SkawaCardHeaderComponent_40_5;
        t5.title = this._SkawaCardHeaderTitleDirective_41_5;
        t5.subhead = this._SkawaCardHeaderSubheadDirective_43_5;
        this._compView_40.create$2(0, t5, [H.setRuntimeTypeInfo([_el_41, _el_43], t2)]);
        t5 = E.ViewSkawaCardContentComponent0$(this, 45);
        this._compView_45 = t5;
        _el_45 = t5.rootEl;
        this._SkawaCardContentComponent_45_5 = new V.SkawaCardContentComponent(this._SkawaCardComponent_39_6);
        _el_46 = doc.createElement("p");
        J.append$1$x(_el_46, doc.createTextNode("Card components use `transclusion` a lot. Expect to see <ng-content></ng-content> pieces a lot."));
        _el_48 = doc.createElement("p");
        J.append$1$x(_el_48, doc.createTextNode("There a million different ways a card can look like. Expect to customize it somewhat."));
        this._compView_45.create$2(0, this._SkawaCardContentComponent_45_5, [H.setRuntimeTypeInfo([_el_46, _el_48], t2)]);
        t5 = this._SkawaCardComponent_39_6;
        t5.cardHeader = this._SkawaCardHeaderComponent_40_5;
        t5.cardContent = this._SkawaCardContentComponent_45_5;
        this._compView_39.create$2(0, t5, [H.setRuntimeTypeInfo([_el_40, _el_45], t4)]);
        t5 = E.ViewSkawaCardComponent0$(this, 50);
        this._compView_50 = t5;
        _el_50 = t5.rootEl;
        J.setAttribute$2$x(_el_50, "gridTile", "");
        this._GridTileDirective_50_5 = new T.GridTileDirective(_el_50);
        this._SkawaCardComponent_50_6 = new V.SkawaCardComponent();
        t5 = E.ViewSkawaCardHeaderComponent0$(this, 51);
        this._compView_51 = t5;
        _el_51 = t5.rootEl;
        J.setAttribute$2$x(_el_51, "statusColor", "rgb(127,127,127)");
        this._SkawaCardHeaderComponent_51_5 = new V.SkawaCardHeaderComponent("transparent");
        _el_52 = doc.createElement("skawa-header-title");
        this._SkawaCardHeaderTitleDirective_52_5 = new F.SkawaCardHeaderTitleDirective();
        J.append$1$x(_el_52, doc.createTextNode("This could be fun!"));
        t5 = X.ViewSkawaCardActionsComponent0$(this, 54);
        this._grid_demo_template$_compView_54 = t5;
        _el_54 = t5.rootEl;
        this._SkawaCardActionsComponent_54_5 = new X.SkawaCardActionsComponent(this._SkawaCardHeaderComponent_51_5);
        t5 = U.ViewMaterialButtonComponent0$(this, 55);
        this._grid_demo_template$_compView_55 = t5;
        _el_55 = t5.rootEl;
        t5 = J.getInterceptor$x(_el_55);
        t5.setAttribute$2(_el_55, "align-right", "");
        t5.setAttribute$2(_el_55, "icon", "");
        t5 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_55_5 = t5;
        this._MaterialButtonComponent_55_6 = B.MaterialButtonComponent$(_el_55, t5, this._grid_demo_template$_compView_55.viewData.ref, null);
        t5 = M.ViewMaterialIconComponent0$(this, 56);
        this._compView_56 = t5;
        _el_56 = t5.rootEl;
        J.setAttribute$2$x(_el_56, "icon", "more_vert");
        t5 = new Y.MaterialIconComponent(_el_56);
        this._MaterialIconComponent_56_5 = t5;
        this._compView_56.create$2(0, t5, []);
        this._grid_demo_template$_compView_55.create$2(0, this._MaterialButtonComponent_55_6, [H.setRuntimeTypeInfo([_el_56], t4)]);
        this._grid_demo_template$_compView_54.create$2(0, this._SkawaCardActionsComponent_54_5, [H.setRuntimeTypeInfo([_el_55], t4)]);
        t5 = this._SkawaCardHeaderComponent_51_5;
        t5.title = this._SkawaCardHeaderTitleDirective_52_5;
        t5.headerActions = this._SkawaCardActionsComponent_54_5;
        this._compView_51.create$2(0, t5, [H.setRuntimeTypeInfo([_el_52, _el_54], t2)]);
        t5 = X.ViewSkawaCardActionsComponent0$(this, 57);
        this._compView_57 = t5;
        _el_57 = t5.rootEl;
        t5 = H.interceptedTypeCheck(t1.injectorGet$3(C.Type_SkawaCardHeaderComponent_2jN, this.viewData.parentIndex, null), "$isSkawaCardHeaderComponent");
        this._SkawaCardActionsComponent_57_5 = new X.SkawaCardActionsComponent(t5);
        t5 = U.ViewMaterialButtonComponent0$(this, 58);
        this._compView_58 = t5;
        _el_58 = t5.rootEl;
        _el_58.className = "color--primary-action";
        t5 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_58_5 = t5;
        t5 = B.MaterialButtonComponent$(_el_58, t5, this._compView_58.viewData.ref, null);
        this._MaterialButtonComponent_58_6 = t5;
        _text_59 = doc.createTextNode("Primary action");
        this._compView_58.create$2(0, t5, [H.setRuntimeTypeInfo([_text_59], t6)]);
        _el_60 = doc.createElement("span");
        _el_60.className = "spacer";
        t5 = U.ViewMaterialButtonComponent0$(this, 61);
        this._grid_demo_template$_compView_61 = t5;
        _el_61 = t5.rootEl;
        J.setAttribute$2$x(_el_61, "icon", "");
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_61_5 = t1;
        this._MaterialButtonComponent_61_6 = B.MaterialButtonComponent$(_el_61, t1, this._grid_demo_template$_compView_61.viewData.ref, null);
        t1 = $.$get$_viewContainerAnchor();
        t5 = new V.ViewContainer(62, 61, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._appEl_62 = t5;
        this._NgIf_62_9 = new K.NgIf(new D.TemplateRef(t5, S.grid_demo_template__viewFactory_GridDemoComponent1$closure()), t5, false);
        t1 = new V.ViewContainer(63, 61, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment"));
        this._appEl_63 = t1;
        this._NgIf_63_9 = new K.NgIf(new D.TemplateRef(t1, S.grid_demo_template__viewFactory_GridDemoComponent2$closure()), t1, false);
        this._grid_demo_template$_compView_61.create$2(0, this._MaterialButtonComponent_61_6, [H.setRuntimeTypeInfo([this._appEl_62, t1], [V.ViewContainer])]);
        this._compView_57.create$2(0, this._SkawaCardActionsComponent_57_5, [H.setRuntimeTypeInfo([_el_58, _el_60, _el_61], t2)]);
        t2 = E.ViewSkawaCardContentComponent0$(this, 64);
        this._grid_demo_template$_compView_64 = t2;
        _el_64 = t2.rootEl;
        J.setAttribute$2$x(_el_64, "collapsed", "");
        t2 = new V.SkawaCardContentComponent(this._SkawaCardComponent_50_6);
        this._SkawaCardContentComponent_64_5 = t2;
        _text_65 = doc.createTextNode("Secondary content");
        this._grid_demo_template$_compView_64.create$2(0, t2, [H.setRuntimeTypeInfo([_text_65], t6)]);
        t6 = this._SkawaCardComponent_50_6;
        t6.cardHeader = this._SkawaCardHeaderComponent_51_5;
        t6.cardContent = this._SkawaCardContentComponent_64_5;
        this._compView_50.create$2(0, t6, [H.setRuntimeTypeInfo([_el_51, _el_57, _el_64], t4)]);
        t6 = this._GridComponent_16_5;
        t2 = H.setRuntimeTypeInfo([this._GridTileDirective_17_5, this._GridTileDirective_24_5, this._GridTileDirective_33_5, this._GridTileDirective_39_5, this._GridTileDirective_50_5], t3);
        t6.toString;
        t6.set$_tiles(H.assertSubtype(t2, "$isList", t3, "$asList"));
        t6.updateAndDisplay$1(true);
        this._compView_16.create$2(0, this._GridComponent_16_5, [H.setRuntimeTypeInfo([_el_17, _el_24, _el_33, _el_39, _el_50], t4)]);
        t4 = this._MaterialButtonComponent_61_6._trigger;
        t6 = W.UIEvent;
        this.init$2(C.List_empty, [new P._BroadcastStream(t4, [H.getTypeArgumentByIndex(t4, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_61_0(), t6, t6))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3;
        t1 = token === C.Type_SkawaCardComponent_sYn;
        if (t1 && 17 <= nodeIndex && nodeIndex <= 23)
          return this._SkawaCardComponent_17_6;
        if (t1 && 24 <= nodeIndex && nodeIndex <= 32)
          return this._SkawaCardComponent_24_6;
        t2 = token === C.Type_AcxDarkTheme_Tng;
        if (t2 && 37 <= nodeIndex && nodeIndex <= 38)
          return this._AcxDarkTheme_37_5;
        t3 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t3 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 37 <= nodeIndex && nodeIndex <= 38)
          return this._MaterialButtonComponent_37_6;
        if (t1 && 33 <= nodeIndex && nodeIndex <= 38)
          return this._SkawaCardComponent_33_6;
        if (t1 && 39 <= nodeIndex && nodeIndex <= 49)
          return this._SkawaCardComponent_39_6;
        if (t2 && 55 <= nodeIndex && nodeIndex <= 56)
          return this._AcxDarkTheme_55_5;
        if ((!t3 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 55 <= nodeIndex && nodeIndex <= 56)
          return this._MaterialButtonComponent_55_6;
        if (t2 && 58 <= nodeIndex && nodeIndex <= 59)
          return this._AcxDarkTheme_58_5;
        if ((!t3 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 58 <= nodeIndex && nodeIndex <= 59)
          return this._MaterialButtonComponent_58_6;
        if (t2 && 61 <= nodeIndex && nodeIndex <= 63)
          return this._AcxDarkTheme_61_5;
        if ((!t3 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 61 <= nodeIndex && nodeIndex <= 63)
          return this._MaterialButtonComponent_61_6;
        if (t1 && 50 <= nodeIndex && nodeIndex <= 65)
          return this._SkawaCardComponent_50_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, local_secondaryContent, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        local_secondaryContent = this._SkawaCardContentComponent_64_5;
        if (firstCheck) {
          t1 = this._grid_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Grid Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/grid";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/grid_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._grid_demo_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._GridComponent_3_5.ngOnInit$0();
        if (firstCheck)
          this._GridComponent_16_5.ngOnInit$0();
        if (firstCheck) {
          this._SkawaCardHeaderComponent_40_5.statusColor = "rgb(0,127,0)";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_40.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaCardHeaderComponent_51_5.statusColor = "rgb(127,127,127)";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_51.viewData.set$cdMode(1);
        if (firstCheck) {
          this._MaterialIconComponent_56_5.set$icon(0, "more_vert");
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_56.viewData.set$cdMode(1);
        this._NgIf_62_9.set$ngIf(local_secondaryContent.collapsed != null);
        this._NgIf_63_9.set$ngIf(local_secondaryContent.collapsed == null);
        if (firstCheck) {
          this._SkawaCardContentComponent_64_5.collapsed = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._grid_demo_template$_compView_64.viewData.set$cdMode(1);
        this._appEl_62.detectChangesInNestedViews$0();
        this._appEl_63.detectChangesInNestedViews$0();
        this._grid_demo_template$_compView_3.detectHostChanges$1(firstCheck);
        this._compView_16.detectHostChanges$1(firstCheck);
        this._compView_18.detectHostChanges$1(firstCheck);
        this._compView_25.detectHostChanges$1(firstCheck);
        this._compView_34.detectHostChanges$1(firstCheck);
        this._compView_36.detectHostChanges$1(firstCheck);
        this._compView_37.detectHostChanges$1(firstCheck);
        this._compView_40.detectHostChanges$1(firstCheck);
        this._compView_45.detectHostChanges$1(firstCheck);
        this._compView_51.detectHostChanges$1(firstCheck);
        this._grid_demo_template$_compView_54.detectHostChanges$1(firstCheck);
        this._grid_demo_template$_compView_55.detectHostChanges$1(firstCheck);
        this._compView_57.detectHostChanges$1(firstCheck);
        this._compView_58.detectHostChanges$1(firstCheck);
        this._grid_demo_template$_compView_61.detectHostChanges$1(firstCheck);
        this._grid_demo_template$_compView_64.detectHostChanges$1(firstCheck);
        this._grid_demo_template$_compView_0.detectChanges$0();
        this._grid_demo_template$_compView_3.detectChanges$0();
        this._compView_16.detectChanges$0();
        this._grid_demo_template$_compView_17.detectChanges$0();
        this._compView_18.detectChanges$0();
        this._compView_24.detectChanges$0();
        this._compView_25.detectChanges$0();
        this._compView_33.detectChanges$0();
        this._compView_34.detectChanges$0();
        this._compView_36.detectChanges$0();
        this._compView_37.detectChanges$0();
        this._compView_39.detectChanges$0();
        this._compView_40.detectChanges$0();
        this._compView_45.detectChanges$0();
        this._compView_50.detectChanges$0();
        this._compView_51.detectChanges$0();
        this._grid_demo_template$_compView_54.detectChanges$0();
        this._grid_demo_template$_compView_55.detectChanges$0();
        this._compView_56.detectChanges$0();
        this._compView_57.detectChanges$0();
        this._compView_58.detectChanges$0();
        this._grid_demo_template$_compView_61.detectChanges$0();
        this._grid_demo_template$_compView_64.detectChanges$0();
        if (firstCheck) {
          this._GridComponent_3_5.updateAndDisplay$1(true);
          this._GridComponent_16_5.updateAndDisplay$1(true);
        }
      },
      destroyInternal$0: function() {
        this._appEl_62.destroyNestedViews$0();
        this._appEl_63.destroyNestedViews$0();
        this._grid_demo_template$_compView_0.destroy$0();
        this._grid_demo_template$_compView_3.destroy$0();
        this._compView_16.destroy$0();
        this._grid_demo_template$_compView_17.destroy$0();
        this._compView_18.destroy$0();
        this._compView_24.destroy$0();
        this._compView_25.destroy$0();
        this._compView_33.destroy$0();
        this._compView_34.destroy$0();
        this._compView_36.destroy$0();
        this._compView_37.destroy$0();
        this._compView_39.destroy$0();
        this._compView_40.destroy$0();
        this._compView_45.destroy$0();
        this._compView_50.destroy$0();
        this._compView_51.destroy$0();
        this._grid_demo_template$_compView_54.destroy$0();
        this._grid_demo_template$_compView_55.destroy$0();
        this._compView_56.destroy$0();
        this._compView_57.destroy$0();
        this._compView_58.destroy$0();
        this._grid_demo_template$_compView_61.destroy$0();
        this._grid_demo_template$_compView_64.destroy$0();
      },
      _handle_trigger_61_0$1: [function($$event) {
        var local_secondaryContent = this._SkawaCardContentComponent_64_5;
        local_secondaryContent.collapsed = local_secondaryContent.collapsed == null ? true : null;
      }, "call$1", "get$_handle_trigger_61_0", 4, 0, 2],
      $asAppView: function() {
        return [Q.GridDemoComponent];
      }
    },
    _ViewGridDemoComponent1: {
      "^": "AppView;0_grid_demo_template$_compView_0,0_MaterialIconComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._grid_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "icon", "expand_more");
        t1 = new Y.MaterialIconComponent(_el_0);
        this._MaterialIconComponent_0_5 = t1;
        this._grid_demo_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        if (this.viewData._cdState === 0) {
          this._MaterialIconComponent_0_5.set$icon(0, "expand_more");
          var changed = true;
        } else
          changed = false;
        if (changed)
          this._grid_demo_template$_compView_0.viewData.set$cdMode(1);
        this._grid_demo_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._grid_demo_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [Q.GridDemoComponent];
      }
    },
    _ViewGridDemoComponent2: {
      "^": "AppView;0_grid_demo_template$_compView_0,0_MaterialIconComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._grid_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "icon", "expand_less");
        t1 = new Y.MaterialIconComponent(_el_0);
        this._MaterialIconComponent_0_5 = t1;
        this._grid_demo_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        if (this.viewData._cdState === 0) {
          this._MaterialIconComponent_0_5.set$icon(0, "expand_less");
          var changed = true;
        } else
          changed = false;
        if (changed)
          this._grid_demo_template$_compView_0.viewData.set$cdMode(1);
        this._grid_demo_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._grid_demo_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [Q.GridDemoComponent];
      }
    }
  }], ["asset_skawa_components_example_lib_hex_colorize_pipe_demo_hex_colorize_pipe_demo.css.shim.dart", "package:skawa_components_example/hex_colorize_pipe_demo/hex_colorize_pipe_demo.css.shim.dart",, V, {}], ["", "package:skawa_components_example/hex_colorize_pipe_demo/hex_colorize_pipe_demo.dart",, A, {
    "^": "",
    HexColorizePipeDemoComponent: {
      "^": "Object;parts"
    }
  }], ["", "package:skawa_components_example/hex_colorize_pipe_demo/hex_colorize_pipe_demo.template.dart",, V, {
    "^": "",
    viewFactory_HexColorizePipeDemoComponent1: [function(parentView, parentIndex) {
      var t1 = new V._ViewHexColorizePipeDemoComponent1(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null], P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.HexColorizePipeDemoComponent));
      t1.componentType = $.ViewHexColorizePipeDemoComponent0__renderType;
      return t1;
    }, "call$2", "hex_colorize_pipe_demo_template__viewFactory_HexColorizePipeDemoComponent1$closure", 8, 0, 175],
    ViewHexColorizePipeDemoComponent0: {
      "^": "AppView;0_hex_colorize_pipe_demo_template$_compView_0,0_hex_colorize_pipe_demo_template$_DemoHeaderComponent_0_5,0_hex_colorize_pipe_demo_template$_appEl_1,0_NgFor_1_9,0_hex_colorize_pipe_demo_template$_expr_3,0_pipe_hedColorize_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, _anchor_1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._hex_colorize_pipe_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/hex_colorize_pipe_demo");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/pipes/hex_colorize_pipe");
        t2.setAttribute$2(_el_0, "title", "Hex Colorize Pipe Demo");
        this.addShimC$1(_el_0);
        t2 = new D.DemoHeaderComponent();
        this._hex_colorize_pipe_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._hex_colorize_pipe_demo_template$_compView_0.create$2(0, t2, []);
        t2 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment");
        t1.append$1(parentRenderNode, _anchor_1);
        t1 = new V.ViewContainer(1, null, this, _anchor_1);
        this._hex_colorize_pipe_demo_template$_appEl_1 = t1;
        this._NgFor_1_9 = new R.NgFor(t1, new D.TemplateRef(t1, V.hex_colorize_pipe_demo_template__viewFactory_HexColorizePipeDemoComponent1$closure()));
        this._pipe_hedColorize_0 = new L.SkawaHexColorizePipe();
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, changed, currVal_3;
        _ctx = this.ctx;
        if (this.viewData._cdState === 0) {
          t1 = this._hex_colorize_pipe_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Hex Colorize Pipe Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/pipes/hex_colorize_pipe";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/hex_colorize_pipe_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._hex_colorize_pipe_demo_template$_compView_0.viewData.set$cdMode(1);
        currVal_3 = _ctx.parts;
        t1 = this._hex_colorize_pipe_demo_template$_expr_3;
        if (t1 !== currVal_3) {
          this._NgFor_1_9.set$ngForOf(currVal_3);
          this._hex_colorize_pipe_demo_template$_expr_3 = currVal_3;
        }
        this._NgFor_1_9.ngDoCheck$0();
        this._hex_colorize_pipe_demo_template$_appEl_1.detectChangesInNestedViews$0();
        this._hex_colorize_pipe_demo_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._hex_colorize_pipe_demo_template$_appEl_1.destroyNestedViews$0();
        this._hex_colorize_pipe_demo_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [A.HexColorizePipeDemoComponent];
      }
    },
    _ViewHexColorizePipeDemoComponent1: {
      "^": "AppView;0_hex_colorize_pipe_demo_template$_expr_0,0_hex_colorize_pipe_demo_template$_expr_1,0_pipe_hedColorize_0_0,0_hex_colorize_pipe_demo_template$_el_0,0_hex_colorize_pipe_demo_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$_pipe_hedColorize_0_0: function(_pipe_hedColorize_0_0) {
        this._pipe_hedColorize_0_0 = H.functionTypeCheck(_pipe_hedColorize_0_0, {func: 1, ret: P.String, args: [,]});
      },
      build$0: function() {
        var doc, t1, t2;
        doc = document;
        t1 = doc.createElement("div");
        H.interceptedTypeCheck(t1, "$isDivElement");
        this._hex_colorize_pipe_demo_template$_el_0 = t1;
        this.addShimC$1(t1);
        t1 = doc.createTextNode("");
        this._hex_colorize_pipe_demo_template$_text_1 = t1;
        t2 = this._hex_colorize_pipe_demo_template$_el_0;
        (t2 && C.DivElement_methods).append$1(t2, t1);
        t1 = H.interceptedTypeCheck(this.parentView, "$isViewHexColorizePipeDemoComponent0")._pipe_hedColorize_0;
        this.set$_pipe_hedColorize_0_0(Q.pureProxy1(t1.get$transform(t1), P.String, null));
        this.init0$1(this._hex_colorize_pipe_demo_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var local_part, currVal_0, t1, t2, currVal_1;
        local_part = H.stringTypeCheck(this.locals.$index(0, "$implicit"));
        currVal_0 = this._pipe_hedColorize_0_0.call$1(local_part);
        t1 = this._hex_colorize_pipe_demo_template$_expr_0;
        if (t1 != currVal_0) {
          t1 = this._hex_colorize_pipe_demo_template$_el_0.style;
          t2 = currVal_0 == null ? null : currVal_0;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "background"), t2, null);
          this._hex_colorize_pipe_demo_template$_expr_0 = currVal_0;
        }
        currVal_1 = Q.interpolate0(local_part);
        t1 = this._hex_colorize_pipe_demo_template$_expr_1;
        if (t1 !== currVal_1) {
          this._hex_colorize_pipe_demo_template$_text_1.textContent = currVal_1;
          this._hex_colorize_pipe_demo_template$_expr_1 = currVal_1;
        }
      },
      $asAppView: function() {
        return [A.HexColorizePipeDemoComponent];
      }
    }
  }], ["", "package:skawa_components_example/infobar_demo/infobar_demo.dart",, Q, {
    "^": "",
    InfobarDemoComponent: {
      "^": "Object;",
      alert$0: [function(_) {
        C.Window_methods.alert$1(window, "Triggered!");
      }, "call$0", "get$alert", 1, 0, 1]
    }
  }], ["", "package:skawa_components_example/infobar_demo/infobar_demo.template.dart",, O, {
    "^": "",
    ViewInfobarDemoComponent0: {
      "^": "AppView;0_infobar_demo_template$_compView_0,0_infobar_demo_template$_DemoHeaderComponent_0_5,0_infobar_demo_template$_compView_3,0_SkawaInfobarComponent_3_5,0_infobar_demo_template$_compView_7,0_SkawaInfobarComponent_7_5,0_compView_11,0_SkawaInfobarComponent_11_5,0_infobar_demo_template$_compView_15,0_SkawaInfobarComponent_15_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, doc, t3, t4, _el_7, _el_11, _el_15;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._infobar_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/infobar_demo");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/infobar");
        t2.setAttribute$2(_el_0, "title", "Infobar Demo");
        t2 = new D.DemoHeaderComponent();
        this._infobar_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._infobar_demo_template$_compView_0.create$2(0, t2, []);
        doc = document;
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Simple inforbar without icon"));
        t2 = G.ViewSkawaInfobarComponent0$(this, 3);
        this._infobar_demo_template$_compView_3 = t2;
        t1.append$1(parentRenderNode, t2.rootEl);
        t2 = this._infobar_demo_template$_compView_3;
        t3 = new O.SkawaInfobarComponent(t2.viewData.ref);
        this._SkawaInfobarComponent_3_5 = t3;
        t4 = [W.Text];
        t2.create$2(0, t3, [H.setRuntimeTypeInfo([doc.createTextNode("No icon, no url")], t4)]);
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Inforbar with icon"));
        t3 = G.ViewSkawaInfobarComponent0$(this, 7);
        this._infobar_demo_template$_compView_7 = t3;
        _el_7 = t3.rootEl;
        t1.append$1(parentRenderNode, _el_7);
        J.setAttribute$2$x(_el_7, "icon", "info");
        t3 = this._infobar_demo_template$_compView_7;
        t2 = new O.SkawaInfobarComponent(t3.viewData.ref);
        this._SkawaInfobarComponent_7_5 = t2;
        t3.create$2(0, t2, [H.setRuntimeTypeInfo([doc.createTextNode("Info icon, still no url")], t4)]);
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Inforbar with url"));
        t2 = G.ViewSkawaInfobarComponent0$(this, 11);
        this._compView_11 = t2;
        _el_11 = t2.rootEl;
        t1.append$1(parentRenderNode, _el_11);
        t2 = J.getInterceptor$x(_el_11);
        t2.setAttribute$2(_el_11, "icon", "open_in_new");
        t2.setAttribute$2(_el_11, "url", "https://github.com");
        t2 = this._compView_11;
        t3 = new O.SkawaInfobarComponent(t2.viewData.ref);
        this._SkawaInfobarComponent_11_5 = t3;
        t2.create$2(0, t3, [H.setRuntimeTypeInfo([doc.createTextNode("Clicking icon will redirect if URL is specified")], t4)]);
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Infobar which alerting when the icon triggers"));
        t3 = G.ViewSkawaInfobarComponent0$(this, 15);
        this._infobar_demo_template$_compView_15 = t3;
        _el_15 = t3.rootEl;
        t1.append$1(parentRenderNode, _el_15);
        J.setAttribute$2$x(_el_15, "icon", "lightbulb_outline");
        t1 = this._infobar_demo_template$_compView_15;
        t3 = new O.SkawaInfobarComponent(t1.viewData.ref);
        this._SkawaInfobarComponent_15_5 = t3;
        t1.create$2(0, t3, [H.setRuntimeTypeInfo([doc.createTextNode("Can also subscribe to primary action with (trigger)")], t4)]);
        t4 = this._SkawaInfobarComponent_15_5.primaryActionButton._trigger;
        this.init$2(C.List_empty, [new P._BroadcastStream(t4, [H.getTypeArgumentByIndex(t4, 0)]).listen$1(this.eventHandler0$1$1(J.get$alert$x(this.ctx), W.UIEvent))]);
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._infobar_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Infobar Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/infobar";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/infobar_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._infobar_demo_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._SkawaInfobarComponent_7_5;
          t1._icon = "info";
          t1._infobar$_changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
          changed = true;
        } else
          changed = false;
        if (changed)
          this._infobar_demo_template$_compView_7.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._SkawaInfobarComponent_11_5;
          t1.url = "https://github.com";
          t1._icon = "open_in_new";
          t1._infobar$_changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_11.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._SkawaInfobarComponent_15_5;
          t1._icon = "lightbulb_outline";
          t1._infobar$_changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
          changed = true;
        } else
          changed = false;
        if (changed)
          this._infobar_demo_template$_compView_15.viewData.set$cdMode(1);
        this._infobar_demo_template$_compView_0.detectChanges$0();
        this._infobar_demo_template$_compView_3.detectChanges$0();
        this._infobar_demo_template$_compView_7.detectChanges$0();
        this._compView_11.detectChanges$0();
        this._infobar_demo_template$_compView_15.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._infobar_demo_template$_compView_0.destroy$0();
        this._infobar_demo_template$_compView_3.destroy$0();
        this._infobar_demo_template$_compView_7.destroy$0();
        this._compView_11.destroy$0();
        this._infobar_demo_template$_compView_15.destroy$0();
      },
      $asAppView: function() {
        return [Q.InfobarDemoComponent];
      }
    }
  }], ["", "package:skawa_components_example/markdown_demo/markdown_demo.dart",, Q, {
    "^": "",
    MarkdownDemoComponent: {
      "^": "Object;markdown"
    }
  }], ["", "package:skawa_components_example/markdown_demo/markdown_demo.template.dart",, Z, {
    "^": "",
    ViewMarkdownDemoComponent0: {
      "^": "AppView;0_markdown_demo_template$_compView_0,0_markdown_demo_template$_DemoHeaderComponent_0_5,0_markdown_demo_template$_compView_3,0_SkawaRawMarkdownRendererComponent_3_5,0_markdown_demo_template$_compView_6,0_SkawaMarkdownRendererComponent_6_5,0_markdown_demo_template$_expr_3,0_markdown_demo_template$_expr_4,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, doc, t3, t4;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._markdown_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/markdown_demo");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/markdown_renderer");
        t2.setAttribute$2(_el_0, "title", "Markdown Renderer Demo");
        t2 = new D.DemoHeaderComponent();
        this._markdown_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._markdown_demo_template$_compView_0.create$2(0, t2, []);
        doc = document;
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Plain markdown rendering without styling."));
        t2 = P.String;
        t3 = new T.ViewSkawaRawMarkdownRendererComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t2, null), this);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 1, C.ViewType_1, 3, X.SkawaRawMarkdownRendererComponent));
        t4 = doc.createElement("skawa-raw-markdown-renderer");
        t3.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewSkawaRawMarkdownRendererComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaRawMarkdownRendererComponent());
          $.ViewSkawaRawMarkdownRendererComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._markdown_demo_template$_compView_3 = t3;
        t1.append$1(parentRenderNode, t3.rootEl);
        t3 = new X.SkawaRawMarkdownRendererComponent();
        this._SkawaRawMarkdownRendererComponent_3_5 = t3;
        this._markdown_demo_template$_compView_3.create$2(0, t3, []);
        J.append$1$x(S.createAndAppend(doc, "h3", parentRenderNode), doc.createTextNode("Plain markdown rendering with styling."));
        t2 = new A.ViewSkawaMarkdownRendererComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t2, null), this);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 1, C.ViewType_1, 6, L.SkawaMarkdownRendererComponent));
        t3 = doc.createElement("skawa-markdown-renderer");
        t2.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewSkawaMarkdownRendererComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaMarkdownRendererComponent());
          $.ViewSkawaMarkdownRendererComponent0__renderType = t3;
        }
        t2.setupComponentType$1(t3);
        this._markdown_demo_template$_compView_6 = t2;
        t1.append$1(parentRenderNode, t2.rootEl);
        t2 = new L.SkawaMarkdownRendererComponent();
        this._SkawaMarkdownRendererComponent_6_5 = t2;
        this._markdown_demo_template$_compView_6.create$2(0, t2, []);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_3;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._markdown_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Markdown Renderer Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/markdown_renderer";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/markdown_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._markdown_demo_template$_compView_0.viewData.set$cdMode(1);
        currVal_3 = _ctx.markdown;
        t1 = this._markdown_demo_template$_expr_3;
        if (t1 !== currVal_3) {
          this._SkawaRawMarkdownRendererComponent_3_5.set$source(0, currVal_3);
          this._markdown_demo_template$_expr_3 = currVal_3;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._markdown_demo_template$_compView_3.viewData.set$cdMode(1);
        if (firstCheck)
          this._SkawaRawMarkdownRendererComponent_3_5.ngOnInit$0();
        t1 = this._markdown_demo_template$_expr_4;
        if (t1 !== currVal_3) {
          this._SkawaMarkdownRendererComponent_6_5.set$source(0, currVal_3);
          this._markdown_demo_template$_expr_4 = currVal_3;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._markdown_demo_template$_compView_6.viewData.set$cdMode(1);
        if (firstCheck)
          this._SkawaMarkdownRendererComponent_6_5.ngOnInit$0();
        this._markdown_demo_template$_compView_0.detectChanges$0();
        this._markdown_demo_template$_compView_3.detectChanges$0();
        this._markdown_demo_template$_compView_6.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._markdown_demo_template$_compView_0.destroy$0();
        this._markdown_demo_template$_compView_3.destroy$0();
        this._markdown_demo_template$_compView_6.destroy$0();
      },
      $asAppView: function() {
        return [Q.MarkdownDemoComponent];
      }
    }
  }], ["asset_skawa_components_example_lib_nav_item_demo_nav_item_demo.css.shim.dart", "package:skawa_components_example/nav_item_demo/nav_item_demo.css.shim.dart",, L, {}], ["", "package:skawa_components_example/nav_item_demo/nav_item_demo.dart",, L, {
    "^": "",
    NavItemDemoComponent: {
      "^": "Object;"
    }
  }], ["", "package:skawa_components_example/nav_item_demo/nav_item_demo.template.dart",, Z, {
    "^": "",
    ViewNavItemDemoComponent0: {
      "^": "AppView;0_nav_item_demo_template$_compView_0,0_nav_item_demo_template$_DemoHeaderComponent_0_5,0_nav_item_demo_template$_compView_1,0_nav_item_demo_template$_AcxDarkTheme_1_5,0_nav_item_demo_template$_MaterialButtonComponent_1_6,0_nav_item_demo_template$_compView_3,0_MaterialTemporaryDrawerComponent_3_5,0_nav_item_demo_template$_compView_4,0_SkawaNavItemComponent_4_5,0_nav_item_demo_template$_compView_6,0_SkawaNavItemComponent_6_5,0_nav_item_demo_template$_compView_8,0_SkawaNavItemComponent_8_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, _el_1, t3, _text_2, t4, t5, _el_3, _el_4, t6, t7, _el_6, _el_8, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._nav_item_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/nav_item_demo");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/nav_item");
        t2.setAttribute$2(_el_0, "title", "Nav Item Demo");
        this.addShimC$1(_el_0);
        t2 = new D.DemoHeaderComponent();
        this._nav_item_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._nav_item_demo_template$_compView_0.create$2(0, t2, []);
        t2 = U.ViewMaterialButtonComponent0$(this, 1);
        this._nav_item_demo_template$_compView_1 = t2;
        _el_1 = t2.rootEl;
        t1.append$1(parentRenderNode, _el_1);
        this.addShimC$1(_el_1);
        t2 = F.AcxDarkTheme$(H.boolTypeCheck(this.parentView.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._nav_item_demo_template$_AcxDarkTheme_1_5 = t2;
        t2 = B.MaterialButtonComponent$(_el_1, t2, this._nav_item_demo_template$_compView_1.viewData.ref, null);
        this._nav_item_demo_template$_MaterialButtonComponent_1_6 = t2;
        t3 = document;
        _text_2 = t3.createTextNode("Open");
        t4 = [W.Text];
        this._nav_item_demo_template$_compView_1.create$2(0, t2, [H.setRuntimeTypeInfo([_text_2], t4)]);
        t2 = new V.ViewMaterialTemporaryDrawerComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 1, C.ViewType_1, 3, B.MaterialTemporaryDrawerComponent));
        t5 = t3.createElement("material-drawer");
        t2.rootEl = H.interceptedTypeCheck(t5, "$isHtmlElement");
        t5 = $.ViewMaterialTemporaryDrawerComponent0__renderType;
        if (t5 == null) {
          t5 = $.appViewUtils;
          t5 = t5.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialTemporaryDrawerComponent());
          $.ViewMaterialTemporaryDrawerComponent0__renderType = t5;
        }
        t2.setupComponentType$1(t5);
        this._nav_item_demo_template$_compView_3 = t2;
        _el_3 = t2.rootEl;
        t1.append$1(parentRenderNode, _el_3);
        t1 = J.getInterceptor$x(_el_3);
        t1.setAttribute$2(_el_3, "style", "position: fixed");
        t1.setAttribute$2(_el_3, "temporary", "");
        this.addShimC$1(_el_3);
        this._MaterialTemporaryDrawerComponent_3_5 = new B.MaterialTemporaryDrawerComponent(false, new P._SyncBroadcastStreamController(null, null, 0, [P.bool]));
        t1 = Y.ViewSkawaNavItemComponent0$(this, 4);
        this._nav_item_demo_template$_compView_4 = t1;
        _el_4 = t1.rootEl;
        t1 = J.getInterceptor$x(_el_4);
        t1.setAttribute$2(_el_4, "icon", "close");
        this.addShimC$1(_el_4);
        t2 = this._nav_item_demo_template$_compView_4;
        t5 = t2.viewData.ref;
        t6 = W.UIEvent;
        t7 = [t6];
        t5 = new Z.SkawaNavItemComponent(t5, false, null, false, false, false, false, new P._SyncBroadcastStreamController(null, null, 0, t7), "button", false, true, null, _el_4);
        this._SkawaNavItemComponent_4_5 = t5;
        t2.create$2(0, t5, [H.setRuntimeTypeInfo([t3.createTextNode("Close")], t4)]);
        t5 = Y.ViewSkawaNavItemComponent0$(this, 6);
        this._nav_item_demo_template$_compView_6 = t5;
        _el_6 = t5.rootEl;
        J.setAttribute$2$x(_el_6, "icon", "rowing");
        this.addShimC$1(_el_6);
        t5 = this._nav_item_demo_template$_compView_6;
        t2 = t5.viewData.ref;
        t2 = new Z.SkawaNavItemComponent(t2, false, null, false, false, false, false, new P._SyncBroadcastStreamController(null, null, 0, t7), "button", false, true, null, _el_6);
        this._SkawaNavItemComponent_6_5 = t2;
        t5.create$2(0, t2, [H.setRuntimeTypeInfo([t3.createTextNode("Rowing")], t4)]);
        t2 = Y.ViewSkawaNavItemComponent0$(this, 8);
        this._nav_item_demo_template$_compView_8 = t2;
        _el_8 = t2.rootEl;
        this.addShimC$1(_el_8);
        t2 = this._nav_item_demo_template$_compView_8;
        t5 = t2.viewData.ref;
        t5 = new Z.SkawaNavItemComponent(t5, false, null, false, false, false, false, new P._SyncBroadcastStreamController(null, null, 0, t7), "button", false, true, null, _el_8);
        this._SkawaNavItemComponent_8_5 = t5;
        t2.create$2(0, t5, [H.setRuntimeTypeInfo([t3.createTextNode("Without icon")], t4)]);
        this._nav_item_demo_template$_compView_3.create$2(0, this._MaterialTemporaryDrawerComponent_3_5, [H.setRuntimeTypeInfo([_el_4, _el_6, _el_8], [W.HtmlElement])]);
        t4 = this._nav_item_demo_template$_MaterialButtonComponent_1_6._trigger;
        subscription_0 = new P._BroadcastStream(t4, [H.getTypeArgumentByIndex(t4, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_1_0(), t6, t6));
        t6 = W.Event;
        t1.addEventListener$2(_el_4, "click", this.eventHandler1$2$1(this.get$_handle_click_4_0(), t6, t6));
        this.init$2(C.List_empty, [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_AcxDarkTheme_Tng && 1 <= nodeIndex && nodeIndex <= 2)
          return this._nav_item_demo_template$_AcxDarkTheme_1_5;
        if ((token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 2)
          return this._nav_item_demo_template$_MaterialButtonComponent_1_6;
        t1 = token === C.Type_ButtonDirective_hH0;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._SkawaNavItemComponent_4_5;
        if (t1 && 6 <= nodeIndex && nodeIndex <= 7)
          return this._SkawaNavItemComponent_6_5;
        if (t1 && 8 <= nodeIndex && nodeIndex <= 9)
          return this._SkawaNavItemComponent_8_5;
        if ((token === C.Type_gap || token === C.Type_DeferredContentAware_BCk) && 3 <= nodeIndex && nodeIndex <= 9)
          return this._MaterialTemporaryDrawerComponent_3_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed, currVal_0, t2, currVal_1;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._nav_item_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Nav Item Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/nav_item";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/nav_item_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._nav_item_demo_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = this._MaterialTemporaryDrawerComponent_3_5;
          t1._visibleChange.add$1(0, t1._visible);
        }
        if (firstCheck) {
          this._SkawaNavItemComponent_4_5.icon = "close";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._nav_item_demo_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck) {
          this._SkawaNavItemComponent_6_5.icon = "rowing";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._nav_item_demo_template$_compView_6.viewData.set$cdMode(1);
        this._nav_item_demo_template$_compView_1.detectHostChanges$1(firstCheck);
        t1 = this._nav_item_demo_template$_compView_3;
        currVal_0 = t1.ctx.get$hostMatDrawerCollapsed();
        t2 = t1._material_temporary_drawer_template$_expr_0;
        if (t2 !== currVal_0) {
          t1.updateElemClass$3(t1.rootEl, "mat-drawer-collapsed", currVal_0);
          t1._material_temporary_drawer_template$_expr_0 = currVal_0;
        }
        currVal_1 = t1.ctx.get$hostMatDrawerExpanded();
        t2 = t1._material_temporary_drawer_template$_expr_1;
        if (t2 !== currVal_1) {
          t1.updateElemClass$3(t1.rootEl, "mat-drawer-expanded", currVal_1);
          t1._material_temporary_drawer_template$_expr_1 = currVal_1;
        }
        this._nav_item_demo_template$_compView_4.detectHostChanges$1(firstCheck);
        this._nav_item_demo_template$_compView_6.detectHostChanges$1(firstCheck);
        this._nav_item_demo_template$_compView_8.detectHostChanges$1(firstCheck);
        this._nav_item_demo_template$_compView_0.detectChanges$0();
        this._nav_item_demo_template$_compView_1.detectChanges$0();
        this._nav_item_demo_template$_compView_3.detectChanges$0();
        this._nav_item_demo_template$_compView_4.detectChanges$0();
        this._nav_item_demo_template$_compView_6.detectChanges$0();
        this._nav_item_demo_template$_compView_8.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._nav_item_demo_template$_compView_0.destroy$0();
        this._nav_item_demo_template$_compView_1.destroy$0();
        this._nav_item_demo_template$_compView_3.destroy$0();
        this._nav_item_demo_template$_compView_4.destroy$0();
        this._nav_item_demo_template$_compView_6.destroy$0();
        this._nav_item_demo_template$_compView_8.destroy$0();
      },
      _handle_trigger_1_0$1: [function($$event) {
        this._MaterialTemporaryDrawerComponent_3_5.set$visible(0, true);
      }, "call$1", "get$_handle_trigger_1_0", 4, 0, 2],
      _handle_click_4_0$1: [function($$event) {
        this._MaterialTemporaryDrawerComponent_3_5.set$visible(0, false);
      }, "call$1", "get$_handle_click_4_0", 4, 0, 2],
      $asAppView: function() {
        return [L.NavItemDemoComponent];
      }
    }
  }], ["", "package:skawa_components_example/sidebar_item_demo/sidebar_item_demo.dart",, Q, {
    "^": "",
    SidebarItemDemoComponent: {
      "^": "Object;_openController",
      open$0: [function(_) {
        return this._openController.add$1(0, null);
      }, "call$0", "get$open", 1, 0, 1]
    }
  }], ["", "package:skawa_components_example/sidebar_item_demo/sidebar_item_demo.template.dart",, Y, {
    "^": "",
    ViewSidebarItemDemoComponent0: {
      "^": "AppView;0_sidebar_item_demo_template$_compView_0,0_sidebar_item_demo_template$_DemoHeaderComponent_0_5,0_sidebar_item_demo_template$_compView_1,0_AcxDarkTheme_1_5,0_MaterialButtonComponent_1_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, _el_1, _text_2;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._sidebar_item_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/sidebar_item_demo");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/sidebar_item");
        t2.setAttribute$2(_el_0, "title", "Sidebar Item Demo");
        t2 = new D.DemoHeaderComponent();
        this._sidebar_item_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._sidebar_item_demo_template$_compView_0.create$2(0, t2, []);
        t2 = U.ViewMaterialButtonComponent0$(this, 1);
        this._sidebar_item_demo_template$_compView_1 = t2;
        _el_1 = t2.rootEl;
        t1.append$1(parentRenderNode, _el_1);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(this.parentView.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_1_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_1, t1, this._sidebar_item_demo_template$_compView_1.viewData.ref, null);
        this._MaterialButtonComponent_1_6 = t1;
        _text_2 = document.createTextNode("Open");
        this._sidebar_item_demo_template$_compView_1.create$2(0, t1, [H.setRuntimeTypeInfo([_text_2], [W.Text])]);
        t1 = this._MaterialButtonComponent_1_6._trigger;
        this.init$2(C.List_empty, [new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler0$1$1(J.get$open$x(this.ctx), W.UIEvent))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_AcxDarkTheme_Tng && 1 <= nodeIndex && nodeIndex <= 2)
          return this._AcxDarkTheme_1_5;
        if ((token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 2)
          return this._MaterialButtonComponent_1_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._sidebar_item_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Sidebar Item Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/sidebar_item";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/sidebar_item_demo";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._sidebar_item_demo_template$_compView_0.viewData.set$cdMode(1);
        this._sidebar_item_demo_template$_compView_1.detectHostChanges$1(firstCheck);
        this._sidebar_item_demo_template$_compView_0.detectChanges$0();
        this._sidebar_item_demo_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._sidebar_item_demo_template$_compView_0.destroy$0();
        this._sidebar_item_demo_template$_compView_1.destroy$0();
      },
      $asAppView: function() {
        return [Q.SidebarItemDemoComponent];
      }
    }
  }], ["", "package:skawa_components_example/snackbar_demo/snackbar_demo.dart",, T, {
    "^": "",
    SnackbarDemoComponent: {
      "^": "Object;_snackbarService",
      showMessage$0: [function() {
        return this._snackbarService.showMessage$1("Feedback what happend");
      }, "call$0", "get$showMessage", 0, 0, 1],
      showMessageWithCallback$0: [function() {
        var action = new T.SnackAction();
        action.label = "Click me";
        action.callback = new T.SnackbarDemoComponent_showMessageWithCallback_closure();
        this._snackbarService.showMessage$3$action$duration("For more information", action, P.Duration$(0, 0, 0, 0, 0, 10));
      }, "call$0", "get$showMessageWithCallback", 0, 0, 1]
    },
    SnackbarDemoComponent_showMessageWithCallback_closure: {
      "^": "Closure:0;",
      call$0: function() {
        C.Window_methods.alert$1(window, "Triggered!");
      }
    }
  }], ["", "package:skawa_components_example/snackbar_demo/snackbar_demo.template.dart",, D, {
    "^": "",
    ViewSnackbarDemoComponent0: {
      "^": "AppView;0_snackbar_demo_template$_compView_0,0_snackbar_demo_template$_DemoHeaderComponent_0_5,0_snackbar_demo_template$_compView_1,0_SkawaSnackbarComponent_1_5,0_snackbar_demo_template$_compView_2,0_AcxDarkTheme_2_5,0_MaterialButtonComponent_2_6,0_snackbar_demo_template$_compView_4,0_AcxDarkTheme_4_5,0_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, t2, t3, t4, _el_2, _text_3, t5, _el_4, _text_5, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.ViewDemoHeaderComponent0$(this, 0);
        this._snackbar_demo_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, _el_0);
        t2 = J.getInterceptor$x(_el_0);
        t2.setAttribute$2(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/snackbar_example");
        t2.setAttribute$2(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/snackbar");
        t2.setAttribute$2(_el_0, "title", "Snackbar Demo");
        t2 = new D.DemoHeaderComponent();
        this._snackbar_demo_template$_DemoHeaderComponent_0_5 = t2;
        this._snackbar_demo_template$_compView_0.create$2(0, t2, []);
        t2 = new S.ViewSkawaSnackbarComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 1, C.ViewType_1, 1, T.SkawaSnackbarComponent));
        t3 = document;
        t4 = t3.createElement("skawa-snackbar");
        t2.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewSkawaSnackbarComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaSnackbarComponent());
          $.ViewSkawaSnackbarComponent0__renderType = t4;
        }
        t2.setupComponentType$1(t4);
        this._snackbar_demo_template$_compView_1 = t2;
        t1.append$1(parentRenderNode, t2.rootEl);
        t2 = this.parentView;
        t4 = new T.SkawaSnackbarComponent(this._snackbar_demo_template$_compView_1.viewData.ref, H.interceptedTypeCheck(t2.injectorGet$2(C.Type_SnackbarService_v1z, this.viewData.parentIndex), "$isSnackbarService"), new R.Disposer(true, false));
        this._SkawaSnackbarComponent_1_5 = t4;
        this._snackbar_demo_template$_compView_1.create$2(0, t4, []);
        t4 = U.ViewMaterialButtonComponent0$(this, 2);
        this._snackbar_demo_template$_compView_2 = t4;
        _el_2 = t4.rootEl;
        t1.append$1(parentRenderNode, _el_2);
        t4 = J.getInterceptor$x(_el_2);
        t4.setAttribute$2(_el_2, "dense", "");
        t4.setAttribute$2(_el_2, "raised", "");
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._snackbar_demo_template$_compView_2.viewData.ref, null);
        this._MaterialButtonComponent_2_6 = t4;
        _text_3 = t3.createTextNode("Simple snackbar");
        t5 = [W.Text];
        this._snackbar_demo_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._snackbar_demo_template$_compView_4 = t4;
        _el_4 = t4.rootEl;
        t1.append$1(parentRenderNode, _el_4);
        t1 = J.getInterceptor$x(_el_4);
        t1.setAttribute$2(_el_4, "dense", "");
        t1.setAttribute$2(_el_4, "raised", "");
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._snackbar_demo_template$_compView_4.viewData.ref, null);
        this._MaterialButtonComponent_4_6 = t1;
        _text_5 = t3.createTextNode("Snackbar with callback");
        this._snackbar_demo_template$_compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        t5 = this._MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$showMessage(), t1));
        t5 = this._MaterialButtonComponent_4_6._trigger;
        this.init$2(C.List_empty, [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$showMessageWithCallback(), t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._MaterialButtonComponent_4_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._snackbar_demo_template$_DemoHeaderComponent_0_5;
          t1.title = "Snackbar Demo";
          t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/snackbar";
          t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/snackbar_example";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._snackbar_demo_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._SkawaSnackbarComponent_1_5.ngOnInit$0();
        if (firstCheck) {
          this._MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._snackbar_demo_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck) {
          this._MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._snackbar_demo_template$_compView_4.viewData.set$cdMode(1);
        this._snackbar_demo_template$_compView_2.detectHostChanges$1(firstCheck);
        this._snackbar_demo_template$_compView_4.detectHostChanges$1(firstCheck);
        this._snackbar_demo_template$_compView_0.detectChanges$0();
        this._snackbar_demo_template$_compView_1.detectChanges$0();
        this._snackbar_demo_template$_compView_2.detectChanges$0();
        this._snackbar_demo_template$_compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._snackbar_demo_template$_compView_0.destroy$0();
        this._snackbar_demo_template$_compView_1.destroy$0();
        this._snackbar_demo_template$_compView_2.destroy$0();
        this._snackbar_demo_template$_compView_4.destroy$0();
        this._SkawaSnackbarComponent_1_5._tearDownDisposer.dispose$0();
      },
      $asAppView: function() {
        return [T.SnackbarDemoComponent];
      }
    }
  }], ["skawa_component_collection.grid", "package:skawa_material_components/base_implementations/grid/grid.dart",, A, {
    "^": "",
    GridUpdate: {
      "^": "Object;tilePositions,gridHeight"
    },
    GridTile: {
      "^": "Object;"
    },
    DomTransformReposition: {
      "^": "Object;",
      get$width: function(_) {
        return this.tile.clientWidth;
      },
      get$height: function(_) {
        return this.tile.clientHeight;
      }
    },
    GridBase: {
      "^": "Object;",
      calculateGridUpdate$2$gutterSize: function(gridWidth, gutterSize) {
        var t1, tileWidth, tileWidthWithGutter, colNumber, xTranslations, yTranslationForCol, t2, tileTransformations, t3, t4, colIndex, tileNumber, t5, tile, maxYTranslation, maxColIndex, t6;
        t1 = this._tiles;
        tileWidth = (t1 && C.JSArray_methods).get$first(t1).tile.clientWidth;
        if (typeof tileWidth !== "number")
          return tileWidth.$add();
        if (typeof gutterSize !== "number")
          return H.iae(gutterSize);
        tileWidthWithGutter = tileWidth + gutterSize;
        if (typeof gridWidth !== "number")
          return gridWidth.$tdiv();
        colNumber = C.JSInt_methods.$tdiv(gridWidth, tileWidthWithGutter);
        if (colNumber === 0)
          colNumber = 1;
        t1 = P.int;
        xTranslations = P.List_List$generate(colNumber, new A.GridBase_calculateGridUpdate_closure(tileWidthWithGutter, C.JSInt_methods._tdivFast$1(gridWidth - tileWidthWithGutter * colNumber - gutterSize, 2)), false, t1);
        yTranslationForCol = P.List_List$filled(colNumber, 0, false, t1);
        this._tiles.length;
        t2 = new Array(5);
        t2.fixed$length = Array;
        tileTransformations = H.setRuntimeTypeInfo(t2, [[P.Point, P.int]]);
        for (t2 = [t1], t3 = H.getTypeArgumentByIndex(yTranslationForCol, 0), t4 = {func: 1, ret: P.bool, args: [t3]}, t3 = [t3], colIndex = 0, tileNumber = 0; t5 = this._tiles, t5.length, tileNumber < 5; ++tileNumber) {
          tile = t5[tileNumber];
          maxYTranslation = C.JSArray_methods.reduce$1(yTranslationForCol, H.instantiate1(P.math__max$closure(), t1));
          maxColIndex = C.JSArray_methods.indexOf$1(yTranslationForCol, maxYTranslation);
          t5 = new H.WhereIterable(yTranslationForCol, H.functionTypeCheck(new A.GridBase_calculateGridUpdate_closure0(maxYTranslation), t4), t3);
          if (t5.get$length(t5) <= 1 && maxColIndex === colIndex)
            colIndex = C.JSInt_methods.$mod(colIndex + 1, colNumber);
          if (colIndex < 0 || colIndex >= xTranslations.length)
            return H.ioore(xTranslations, colIndex);
          t5 = xTranslations[colIndex];
          if (colIndex >= yTranslationForCol.length)
            return H.ioore(yTranslationForCol, colIndex);
          C.JSArray_methods.$indexSet(tileTransformations, tileNumber, new P.Point(t5, yTranslationForCol[colIndex], t2));
          t5 = tile.tile.clientHeight;
          if (colIndex >= yTranslationForCol.length)
            return H.ioore(yTranslationForCol, colIndex);
          t6 = yTranslationForCol[colIndex];
          if (typeof t5 !== "number")
            return t5.$add();
          if (typeof t6 !== "number")
            return H.iae(t6);
          C.JSArray_methods.$indexSet(yTranslationForCol, colIndex, t5 + t6 + gutterSize);
          colIndex = C.JSInt_methods.$mod(colIndex + 1, colNumber);
        }
        return new A.GridUpdate(tileTransformations, J.$add$ansx(C.JSArray_methods.reduce$1(yTranslationForCol, H.instantiate1(P.math__max$closure(), t1)), gutterSize));
      }
    },
    GridBase_calculateGridUpdate_closure: {
      "^": "Closure:44;tileWidthWithGutter,xAdjustmentForCentering",
      call$1: function(index) {
        return index * this.tileWidthWithGutter + this.xAdjustmentForCentering;
      }
    },
    GridBase_calculateGridUpdate_closure0: {
      "^": "Closure:47;maxYTranslation",
      call$1: function(e) {
        return H.intTypeCheck(e) == this.maxYTranslation;
      }
    }
  }], ["asset_skawa_material_components_lib_card_card.css.shim.dart", "package:skawa_material_components/card/card.css.shim.dart",, Y, {}], ["", "package:skawa_material_components/card/card.dart",, V, {
    "^": "",
    SkawaCardComponent: {
      "^": "Object;0cardHeader,0cardContent"
    },
    SkawaCardContentComponent: {
      "^": "Object;parentCard,0collapsed",
      get$withHeader: function() {
        return this.parentCard.cardHeader != null;
      },
      get$isCollapsed: function(_) {
        return this.collapsed != null;
      }
    },
    SkawaCardHeaderComponent: {
      "^": "Object;0title,0subhead,0image,0headerActions,statusColor",
      get$withTitleImage: function() {
        return this.image != null;
      },
      get$withSubHead: function() {
        return this.subhead != null;
      },
      get$hasActions: function() {
        return this.headerActions != null;
      },
      get$statusStyle: function() {
        var t1, t2;
        t1 = $.$get$SkawaCardHeaderComponent__rgbaRegexp();
        t2 = this.statusColor;
        t1 = t1._nativeRegExp;
        if (t1.test(t2))
          return "inset 0 4px 0 0 " + this.statusColor;
        return;
      }
    }
  }], ["", "package:skawa_material_components/card/card.template.dart",, E, {
    "^": "",
    ViewSkawaCardComponent0: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.project$2(this.initViewRoot$1(this.rootEl), 0);
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [V.SkawaCardComponent];
      },
      static: {
        ViewSkawaCardComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new E.ViewSkawaCardComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, parentIndex, V.SkawaCardComponent));
          t2 = document.createElement("skawa-card");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaCardComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaCardComponent());
            $.ViewSkawaCardComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    ViewSkawaCardContentComponent0: {
      "^": "AppView;0_card_template$_expr_0,0_card_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.project$2(this.initViewRoot$1(this.rootEl), 0);
        this.init$2(C.List_empty, null);
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_0, t1, currVal_1;
        currVal_0 = this.ctx.get$withHeader();
        t1 = this._card_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateElemClass$3(this.rootEl, "with-header", currVal_0);
          this._card_template$_expr_0 = currVal_0;
        }
        currVal_1 = J.get$isCollapsed$z(this.ctx);
        t1 = this._card_template$_expr_1;
        if (t1 !== currVal_1) {
          this.updateElemClass$3(this.rootEl, "skawa-collapsed", currVal_1);
          this._card_template$_expr_1 = currVal_1;
        }
      },
      $asAppView: function() {
        return [V.SkawaCardContentComponent];
      },
      static: {
        ViewSkawaCardContentComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new E.ViewSkawaCardContentComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, V.SkawaCardContentComponent));
          t2 = document.createElement("skawa-card-content");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaCardContentComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaCardContentComponent());
            $.ViewSkawaCardContentComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    ViewSkawaCardHeaderComponent0: {
      "^": "AppView;0_card_template$_expr_0,0_card_template$_expr_1,0_card_template$_expr_2,0_card_template$_expr_3,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.project$2(this.initViewRoot$1(this.rootEl), 0);
        this.init$2(C.List_empty, null);
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_0, t1, currVal_1, currVal_2, currVal_3;
        currVal_0 = this.ctx.get$withTitleImage();
        t1 = this._card_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateElemClass$3(this.rootEl, "with-title-image", currVal_0);
          this._card_template$_expr_0 = currVal_0;
        }
        currVal_1 = this.ctx.get$withSubHead();
        t1 = this._card_template$_expr_1;
        if (t1 !== currVal_1) {
          this.updateElemClass$3(this.rootEl, "with-subhead", currVal_1);
          this._card_template$_expr_1 = currVal_1;
        }
        currVal_2 = this.ctx.get$hasActions();
        t1 = this._card_template$_expr_2;
        if (t1 !== currVal_2) {
          this.updateElemClass$3(this.rootEl, "with-actions", currVal_2);
          this._card_template$_expr_2 = currVal_2;
        }
        currVal_3 = this.ctx.get$statusStyle();
        t1 = this._card_template$_expr_3;
        if (t1 != currVal_3) {
          t1 = this.rootEl.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "box-shadow"), currVal_3, null);
          this._card_template$_expr_3 = currVal_3;
        }
      },
      $asAppView: function() {
        return [V.SkawaCardHeaderComponent];
      },
      static: {
        ViewSkawaCardHeaderComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new E.ViewSkawaCardHeaderComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, V.SkawaCardHeaderComponent));
          t2 = document.createElement("skawa-card-header");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaCardHeaderComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaCardHeaderComponent());
            $.ViewSkawaCardHeaderComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["asset_skawa_material_components_lib_card_card_actions.css.shim.dart", "package:skawa_material_components/card/card_actions.css.shim.dart",, A, {}], ["", "package:skawa_material_components/card/card_actions.dart",, X, {
    "^": "",
    SkawaCardActionsComponent: {
      "^": "Object;cardHeader",
      get$inHeader: function() {
        return this.cardHeader != null;
      }
    }
  }], ["", "package:skawa_material_components/card/card_actions.template.dart",, X, {
    "^": "",
    ViewSkawaCardActionsComponent0: {
      "^": "AppView;0_card_actions_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.project$2(this.initViewRoot$1(this.rootEl), 0);
        this.init$2(C.List_empty, null);
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_0, t1;
        currVal_0 = this.ctx.get$inHeader();
        t1 = this._card_actions_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateElemClass$3(this.rootEl, "in-header", currVal_0);
          this._card_actions_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [X.SkawaCardActionsComponent];
      },
      static: {
        ViewSkawaCardActionsComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new X.ViewSkawaCardActionsComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, X.SkawaCardActionsComponent));
          t2 = document.createElement("skawa-card-actions");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaCardActionsComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaCardActionsComponent());
            $.ViewSkawaCardActionsComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["asset_skawa_material_components_lib_card_card_content.css.shim.dart", "package:skawa_material_components/card/card_content.css.shim.dart",, V, {}], ["", "package:skawa_material_components/card/card_directives.dart",, F, {
    "^": "",
    SkawaCardHeaderTitleDirective: {
      "^": "Object;"
    },
    SkawaCardHeaderSubheadDirective: {
      "^": "Object;"
    },
    SkawaCardHeaderImageDirective: {
      "^": "Object;"
    }
  }], ["asset_skawa_material_components_lib_card_card_header.css.shim.dart", "package:skawa_material_components/card/card_header.css.shim.dart",, S, {}], ["asset_skawa_material_components_lib_data_table_data_table.css.shim.dart", "package:skawa_material_components/data_table/data_table.css.shim.dart",, V, {}], ["", "package:skawa_material_components/data_table/data_table.dart",, S, {
    "^": "",
    SkawaDataTableComponent: {
      "^": "Object;_data_table$_changeController,_highlightController,_sortController,_data_table$_tearDownDisposer,changeDetectorRef,0selectable,highlightable,0rows,0highlightedRow,multiSelection,colorOddRows,0columns,0onChange,$ti",
      set$rows: function(_, rows) {
        this.rows = H.assertSubtype(rows, "$isIterable", this.$ti, "$asIterable");
      },
      set$highlightedRow: function(highlightedRow) {
        this.highlightedRow = H.assertSubtypeOfRuntimeType(highlightedRow, H.getTypeArgumentByIndex(this, 0));
      },
      set$columns: function(_, columns) {
        this.columns = H.assertSubtype(columns, "$isList", [[G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]], "$asList");
      },
      set$onChange: function(_, onChange) {
        this.onChange = H.assertSubtype(onChange, "$isStream", [[P.List, H.getTypeArgumentByIndex(this, 0)]], "$asStream");
      },
      SkawaDataTableComponent$1: function(changeDetectorRef, $T) {
        var t1, t2;
        t1 = this._data_table$_tearDownDisposer;
        t2 = this._data_table$_changeController;
        t1.addEventSink$1$1(t2, [P.List, $T]);
        t1.addEventSink$1$1(this._highlightController, $T);
        t1.addEventSink$1$1(this._sortController, [G.SkawaDataTableColComponent, $T]);
        t1 = H.getTypeArgumentByIndex(t2, 0);
        this.set$onChange(0, new P._DistinctStream(H.functionTypeCheck(new S.SkawaDataTableComponent_closure(this, $T), {func: 1, ret: P.bool, args: [t1, t1]}), new P._BroadcastStream(t2, [t1]), [t1]));
      },
      getColspanFor$2: function(col, skippedIndex) {
        var t1, colIndex, i, span, prevIndex;
        H.assertSubtype(col, "$isSkawaDataTableColComponent", this.$ti, "$asSkawaDataTableColComponent");
        if (skippedIndex === 0 && this.selectable)
          return 2;
        t1 = this.columns;
        t1.toString;
        t1 = H.setRuntimeTypeInfo(t1.slice(0), [H.getTypeArgumentByIndex(t1, 0)]);
        colIndex = C.JSArray_methods.indexOf$1(t1, col);
        for (t1 = this.columns, i = colIndex, span = 1; i >= 0; i = prevIndex) {
          prevIndex = i - 1;
          if (prevIndex < 0)
            break;
          if (prevIndex >= t1.length)
            return H.ioore(t1, prevIndex);
          if (t1[prevIndex].skipFooter)
            ++span;
          else
            break;
        }
        return span;
      },
      changeRowSelection$2: function(row, selected) {
        H.assertSubtypeOfRuntimeType(row, H.getTypeArgumentByIndex(this, 0));
        J.set$checked$x(row, selected);
        this._emitChange$0();
      },
      markAllRowsChecked$2: function(checked, emit) {
        var t1 = this.rows;
        (t1 && C.JSArray_methods).forEach$1(t1, new S.SkawaDataTableComponent_markAllRowsChecked_closure(this, checked));
        this._emitChange$0();
      },
      highlight$2: function(_, row, ev) {
        var t1;
        H.assertSubtypeOfRuntimeType(row, H.getTypeArgumentByIndex(this, 0));
        if (this._canHighlight$1(ev)) {
          this.set$highlightedRow(!J.$eq$(row, this.highlightedRow) ? row : null);
          t1 = this._highlightController;
          if ((t1._state & 4) === 0)
            t1.add$1(0, this.highlightedRow);
        }
      },
      _canHighlight$1: function(ev) {
        var t1, t2, target;
        if (this.selectable) {
          t1 = J.getInterceptor$x(ev);
          if (!!J.getInterceptor$(t1.get$target(ev)).$isElement) {
            t1 = t1.get$target(ev);
            t2 = W._convertNativeToDart_EventTarget(ev.currentTarget);
            t2 = t1 == null ? t2 != null : t1 !== t2;
            t1 = t2;
          } else
            t1 = false;
        } else
          t1 = false;
        if (t1) {
          target = H.interceptedTypeCast(J.get$target$x(ev), "$isElement");
          if (!!J.getInterceptor$(target).$isElement)
            while (true) {
              t1 = W._convertNativeToDart_EventTarget(ev.currentTarget);
              if (!((target == null ? t1 != null : target !== t1) && target.tagName !== "TR" && true))
                break;
              if (J.get$classes$x(target).contains$1(0, "selector-checkbox"))
                return false;
              target = target.parentElement;
            }
        }
        return true;
      },
      triggerSort$1: function(column) {
        var t1, t2, t3, directionIndex, t4, _i, c;
        column = H.subtypeCast(H.assertSubtype(column, "$isSkawaDataTableColComponent", [U.RowData], "$asSkawaDataTableColComponent"), "$isSkawaDataTableColComponent", this.$ti, "$asSkawaDataTableColComponent");
        t1 = column.sortModel;
        t2 = t1.allowedDirections;
        if (t2.length === 0)
          H.throwExpression(P.ArgumentError$("SortModel does not have any allowed sort directions"));
        t3 = t1.activeSort;
        if (t3 == null)
          t1.activeSort = H.interceptedTypeCheck(C.JSArray_methods.get$first(t2), "$isSortDirection");
        else {
          directionIndex = C.JSArray_methods.indexOf$1(t2, t3);
          t3 = t2.length;
          if (directionIndex === t3 - 1)
            t1.activeSort = null;
          else {
            t4 = directionIndex + 1;
            if (t4 < 0 || t4 >= t3)
              return H.ioore(t2, t4);
            t1.activeSort = H.interceptedTypeCheck(t2[t4], "$isSortDirection");
          }
        }
        for (t1 = this.columns, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          c = t1[_i];
          if (!J.$eq$(c, column) && c.get$sortModel() != null)
            c.get$sortModel().activeSort = null;
        }
        this._sortController.add$1(0, column);
      },
      _emitChange$0: function() {
        var t1, t2;
        t1 = this.rows;
        t1.toString;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        this._data_table$_changeController.add$1(0, P.List_List$from(new H.WhereIterable(t1, H.functionTypeCheck(new S.SkawaDataTableComponent__emitChange_closure(this), {func: 1, ret: P.bool, args: [t2]}), [t2]), false, t2));
      },
      get$isEveryRowChecked: function() {
        var t1 = this.rows;
        return t1 == null ? null : C.JSArray_methods.every$1(t1, new S.SkawaDataTableComponent_isEveryRowChecked_closure(this));
      },
      get$isEveryRowSkippedInFooter: function() {
        var t1 = this.columns;
        t1 = t1 == null ? null : C.JSArray_methods.every$1(t1, new S.SkawaDataTableComponent_isEveryRowSkippedInFooter_closure(this));
        return t1 == null ? true : t1;
      },
      _areOfSameCheckedState$2: function(a, b) {
        var t1, t2, i, t3, t4;
        t1 = this.$ti;
        H.assertSubtype(a, "$isList", t1, "$asList");
        H.assertSubtype(b, "$isList", t1, "$asList");
        t1 = J.getInterceptor$asx(a);
        t2 = J.getInterceptor$asx(b);
        i = 0;
        while (true) {
          t3 = t1.get$length(a);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          t3 = J.get$checked$x(t1.$index(a, i));
          t4 = J.get$checked$x(t2.$index(b, i));
          if (t3 == null ? t4 != null : t3 !== t4)
            return false;
          ++i;
        }
        return true;
      },
      ngAfterViewInit$0: function() {
        var t1, t2, initialSorts;
        t1 = this.columns;
        if (t1 == null)
          t1 = null;
        else {
          t2 = H.getTypeArgumentByIndex(t1, 0);
          t2 = new H.WhereIterable(t1, H.functionTypeCheck(new S.SkawaDataTableComponent_ngAfterViewInit_closure(this), {func: 1, ret: P.bool, args: [t2]}), [t2]);
          t1 = t2;
        }
        initialSorts = t1 == null ? null : P.List_List$from(t1, false, H.getRuntimeTypeArgument(t1, "Iterable", 0));
        t1 = (initialSorts == null ? H.setRuntimeTypeInfo([], [[G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]]) : initialSorts).length;
        if (t1 > 1)
          throw H.wrapException(P.ArgumentError$("Initial sort can only be set on one column at most, found " + t1 + " columns"));
      },
      static: {
        SkawaDataTableComponent$: function(changeDetectorRef, $T) {
          var t1 = new S.SkawaDataTableComponent(new P._SyncBroadcastStreamController(null, null, 0, [[P.List, $T]]), new P._SyncBroadcastStreamController(null, null, 0, [$T]), new P._SyncBroadcastStreamController(null, null, 0, [[G.SkawaDataTableColComponent, $T]]), new R.Disposer(true, false), changeDetectorRef, true, true, true, [$T]);
          t1.SkawaDataTableComponent$1(changeDetectorRef, $T);
          return t1;
        }
      }
    },
    SkawaDataTableComponent_closure: {
      "^": "Closure;$this,T",
      call$2: function(a, b) {
        var t1 = [this.T];
        H.assertSubtype(a, "$isList", t1, "$asList");
        H.assertSubtype(b, "$isList", t1, "$asList");
        if (!J.$eq$(a, b))
          t1 = S.listsEqual(a, b) && this.$this._areOfSameCheckedState$2(a, b);
        else
          t1 = true;
        return t1;
      },
      $signature: function() {
        var t1 = this.T;
        return {func: 1, ret: P.bool, args: [[P.List, t1], [P.List, t1]]};
      }
    },
    SkawaDataTableComponent_markAllRowsChecked_closure: {
      "^": "Closure;$this,checked",
      call$1: function(row) {
        var t1 = this.checked;
        J.set$checked$x(H.assertSubtypeOfRuntimeType(row, H.getTypeArgumentByIndex(this.$this, 0)), t1);
        return t1;
      },
      $signature: function() {
        return {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this.$this, 0)]};
      }
    },
    SkawaDataTableComponent__emitChange_closure: {
      "^": "Closure;$this",
      call$1: function(r) {
        return J.get$checked$x(H.assertSubtypeOfRuntimeType(r, H.getTypeArgumentByIndex(this.$this, 0)));
      },
      $signature: function() {
        return {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this.$this, 0)]};
      }
    },
    SkawaDataTableComponent_isEveryRowChecked_closure: {
      "^": "Closure;$this",
      call$1: function(row) {
        return J.get$checked$x(H.assertSubtypeOfRuntimeType(row, H.getTypeArgumentByIndex(this.$this, 0)));
      },
      $signature: function() {
        return {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this.$this, 0)]};
      }
    },
    SkawaDataTableComponent_isEveryRowSkippedInFooter_closure: {
      "^": "Closure;$this",
      call$1: function(col) {
        return H.assertSubtype(col, "$isSkawaDataTableColComponent", [H.getTypeArgumentByIndex(this.$this, 0)], "$asSkawaDataTableColComponent").skipFooter;
      },
      $signature: function() {
        return {func: 1, ret: P.bool, args: [[G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this.$this, 0)]]};
      }
    },
    SkawaDataTableComponent_ngAfterViewInit_closure: {
      "^": "Closure;$this",
      call$1: function(c) {
        var t1 = H.assertSubtype(c, "$isSkawaDataTableColComponent", [H.getTypeArgumentByIndex(this.$this, 0)], "$asSkawaDataTableColComponent").sortModel;
        return (t1 == null ? null : t1.activeSort) != null;
      },
      $signature: function() {
        return {func: 1, ret: P.bool, args: [[G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this.$this, 0)]]};
      }
    },
    UnskippedInFooterPipe: {
      "^": "Object;",
      transform$1: [function(_, data) {
        var t1;
        H.assertSubtype(data, "$isList", [[G.SkawaDataTableColComponent, U.RowData]], "$asList");
        t1 = J.getInterceptor$(data);
        if (!t1.$isList)
          throw H.wrapException(K.InvalidPipeArgumentException$(C.Type_UnskippedInFooterPipe_ENo, data));
        t1 = t1.where$1(data, new S.UnskippedInFooterPipe_transform_closure());
        return P.List_List$from(t1, true, H.getTypeArgumentByIndex(t1, 0));
      }, "call$1", "get$transform", 5, 0, 135]
    },
    UnskippedInFooterPipe_transform_closure: {
      "^": "Closure:136;",
      call$1: function(d) {
        return !H.assertSubtype(d, "$isSkawaDataTableColComponent", [U.RowData], "$asSkawaDataTableColComponent").skipFooter;
      }
    }
  }], ["", "package:skawa_material_components/data_table/data_table.template.dart",, N, {
    "^": "",
    ViewSkawaDataTableComponent0: {
      "^": "AppView;0_data_table_template$_appEl_3,0_data_table_template$_NgIf_3_9,0_data_table_template$_appEl_4,0_NgFor_4_9,0_data_table_template$_appEl_6,0_NgFor_6_9,0_appEl_7,0_NgIf_7_9,0_data_table_template$_expr_0,0_data_table_template$_expr_1,0_data_table_template$_expr_3,0_data_table_template$_expr_4,0_pipe_unskippedInFooter_0<,0_data_table_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var parentRenderNode, doc, t1, _el_1, _el_2, _anchor_3, t2, t3, _anchor_4, _el_5, _anchor_6, _anchor_7;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        t1 = H.interceptedTypeCheck(S.createAndAppend(doc, "table", parentRenderNode), "$isTableElement");
        this._data_table_template$_el_0 = t1;
        this.addShimC$1(t1);
        _el_1 = S.createAndAppend(doc, "thead", this._data_table_template$_el_0);
        this.addShimE$1(_el_1);
        _el_2 = S.createAndAppend(doc, "tr", _el_1);
        this.addShimE$1(_el_2);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_3 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = J.getInterceptor$x(_el_2);
        t2.append$1(_el_2, _anchor_3);
        t3 = new V.ViewContainer(3, 2, this, _anchor_3);
        this._data_table_template$_appEl_3 = t3;
        this._data_table_template$_NgIf_3_9 = new K.NgIf(new D.TemplateRef(t3, new N.ViewSkawaDataTableComponent0_build_closure(this)), t3, false);
        _anchor_4 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(_el_2, _anchor_4);
        t2 = new V.ViewContainer(4, 2, this, _anchor_4);
        this._data_table_template$_appEl_4 = t2;
        this._NgFor_4_9 = new R.NgFor(t2, new D.TemplateRef(t2, new N.ViewSkawaDataTableComponent0_build_closure0(this)));
        _el_5 = S.createAndAppend(doc, "tbody", this._data_table_template$_el_0);
        this.addShimE$1(_el_5);
        _anchor_6 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        J.append$1$x(_el_5, _anchor_6);
        t2 = new V.ViewContainer(6, 5, this, _anchor_6);
        this._data_table_template$_appEl_6 = t2;
        this._NgFor_6_9 = new R.NgFor(t2, new D.TemplateRef(t2, new N.ViewSkawaDataTableComponent0_build_closure1(this)));
        _anchor_7 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t1 = this._data_table_template$_el_0;
        (t1 && C.TableElement_methods).append$1(t1, _anchor_7);
        t1 = new V.ViewContainer(7, 0, this, _anchor_7);
        this._appEl_7 = t1;
        this._NgIf_7_9 = new K.NgIf(new D.TemplateRef(t1, new N.ViewSkawaDataTableComponent0_build_closure2(this)), t1, false);
        this.project$2(parentRenderNode, 0);
        this._pipe_unskippedInFooter_0 = new S.UnskippedInFooterPipe();
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_3, t1, currVal_4, currVal_0, currVal_1;
        _ctx = this.ctx;
        this._data_table_template$_NgIf_3_9.set$ngIf(_ctx.selectable);
        currVal_3 = _ctx.columns;
        t1 = this._data_table_template$_expr_3;
        if (t1 == null ? currVal_3 != null : t1 !== currVal_3) {
          this._NgFor_4_9.set$ngForOf(currVal_3);
          this._data_table_template$_expr_3 = currVal_3;
        }
        this._NgFor_4_9.ngDoCheck$0();
        currVal_4 = _ctx.rows;
        t1 = this._data_table_template$_expr_4;
        if (t1 == null ? currVal_4 != null : t1 !== currVal_4) {
          this._NgFor_6_9.set$ngForOf(currVal_4);
          this._data_table_template$_expr_4 = currVal_4;
        }
        this._NgFor_6_9.ngDoCheck$0();
        this._NgIf_7_9.set$ngIf(!_ctx.get$isEveryRowSkippedInFooter());
        this._data_table_template$_appEl_3.detectChangesInNestedViews$0();
        this._data_table_template$_appEl_4.detectChangesInNestedViews$0();
        this._data_table_template$_appEl_6.detectChangesInNestedViews$0();
        this._appEl_7.detectChangesInNestedViews$0();
        currVal_0 = _ctx.selectable;
        t1 = this._data_table_template$_expr_0;
        if (t1 != currVal_0) {
          this.updateClass$3(this._data_table_template$_el_0, "selectable", currVal_0);
          this._data_table_template$_expr_0 = currVal_0;
        }
        currVal_1 = !_ctx.selectable;
        t1 = this._data_table_template$_expr_1;
        if (t1 !== currVal_1) {
          this.updateClass$3(this._data_table_template$_el_0, "non-selectable", currVal_1);
          this._data_table_template$_expr_1 = currVal_1;
        }
      },
      destroyInternal$0: function() {
        this._data_table_template$_appEl_3.destroyNestedViews$0();
        this._data_table_template$_appEl_4.destroyNestedViews$0();
        this._data_table_template$_appEl_6.destroyNestedViews$0();
        this._appEl_7.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      },
      static: {
        ViewSkawaDataTableComponent0$: function(parentView, parentIndex, $T) {
          var t1, t2;
          t1 = new N.ViewSkawaDataTableComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [$T]);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, [S.SkawaDataTableComponent, $T]));
          t2 = document.createElement("skawa-data-table");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaDataTableComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$SkawaDataTableComponent());
            $.ViewSkawaDataTableComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    ViewSkawaDataTableComponent0_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    ViewSkawaDataTableComponent0_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent3(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null, "index", null], P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    ViewSkawaDataTableComponent0_build_closure1: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent6(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null, "index", null], P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    ViewSkawaDataTableComponent0_build_closure2: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent12(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent1: {
      "^": "AppView;0_data_table_template$_appEl_1,0_data_table_template$_NgIf_1_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var _el_0, t1, _anchor_1;
        _el_0 = document.createElement("th");
        this.addShimE$1(_el_0);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(_el_0, _anchor_1);
        t1 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._data_table_template$_appEl_1 = t1;
        this._data_table_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent1_build_closure(this)), t1, false);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1;
        _ctx = this.ctx;
        t1 = this._data_table_template$_NgIf_1_9;
        _ctx.multiSelection;
        t1.set$ngIf(true);
        this._data_table_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._data_table_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent1_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent2: {
      "^": "AppView;0_data_table_template$_compView_0,0_data_table_template$_MaterialCheckboxComponent_0_5,0_data_table_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, _el_0;
        t1 = G.ViewMaterialCheckboxComponent0$(this, 0);
        this._data_table_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        this.addShimC$1(_el_0);
        t1 = B.MaterialCheckboxComponent$(_el_0, this._data_table_template$_compView_0.viewData.ref, null, null, null);
        this._data_table_template$_MaterialCheckboxComponent_0_5 = t1;
        this._data_table_template$_compView_0.create$2(0, t1, [C.List_empty]);
        t1 = W.Event;
        J.addEventListener$2$x(_el_0, "click", this.eventHandler1$2$1(this.get$_data_table_template$_handle_click_0_0(), t1, t1));
        this.init0$1(_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_HasDisabled_qzc && 0 === nodeIndex)
          return this._data_table_template$_MaterialCheckboxComponent_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_0, t2, changed;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        currVal_0 = _ctx.get$isEveryRowChecked();
        t2 = this._data_table_template$_expr_0;
        if (t2 != currVal_0) {
          this._data_table_template$_MaterialCheckboxComponent_0_5.set$checked(0, currVal_0);
          this._data_table_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._data_table_template$_compView_0.viewData.set$cdMode(1);
        this._data_table_template$_compView_0.detectHostChanges$1(t1 === 0);
        this._data_table_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._data_table_template$_compView_0.destroy$0();
        this._data_table_template$_MaterialCheckboxComponent_0_5.toString;
      },
      _data_table_template$_handle_click_0_0$1: [function($$event) {
        var local_markAllCheckbox = this._data_table_template$_MaterialCheckboxComponent_0_5;
        this.ctx.markAllRowsChecked$2(local_markAllCheckbox._checked, true);
        J.stopPropagation$0$x($$event);
      }, "call$1", "get$_data_table_template$_handle_click_0_0", 4, 0, 2],
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent3: {
      "^": "AppView;0_data_table_template$_NgClass_0_5,0_data_table_template$_appEl_1,0_data_table_template$_NgIf_1_9,0_data_table_template$_appEl_3,0_data_table_template$_NgIf_3_9,0_data_table_template$_expr_0,0_data_table_template$_expr_1,0_data_table_template$_expr_2,0_data_table_template$_expr_3,0_data_table_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var doc, t1, _anchor_1, t2, _text_2, _anchor_3;
        doc = document;
        t1 = doc.createElement("th");
        this._data_table_template$_el_0 = t1;
        this.addShimE$1(t1);
        this._data_table_template$_NgClass_0_5 = new Y.NgClass(this._data_table_template$_el_0, H.setRuntimeTypeInfo([], [P.String]));
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(this._data_table_template$_el_0, _anchor_1);
        t2 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._data_table_template$_appEl_1 = t2;
        this._data_table_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t2, new N._ViewSkawaDataTableComponent3_build_closure(this)), t2, false);
        _text_2 = doc.createTextNode(" ");
        J.append$1$x(this._data_table_template$_el_0, _text_2);
        _anchor_3 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        J.append$1$x(this._data_table_template$_el_0, _anchor_3);
        t1 = new V.ViewContainer(3, 0, this, _anchor_3);
        this._data_table_template$_appEl_3 = t1;
        this._data_table_template$_NgIf_3_9 = new K.NgIf(new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent3_build_closure0(this)), t1, false);
        this.init0$1(this._data_table_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var local_c, currVal_3, t1, currVal_0, currVal_1, currVal_2;
        local_c = H.assertSubtypeOfRuntimeType(this.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]);
        currVal_3 = local_c.getClasses$1("--header");
        t1 = this._data_table_template$_expr_3;
        if (t1 == null ? currVal_3 != null : t1 !== currVal_3) {
          this._data_table_template$_NgClass_0_5.set$rawClass(currVal_3);
          this._data_table_template$_expr_3 = currVal_3;
        }
        this._data_table_template$_NgClass_0_5.ngDoCheck$0();
        this._data_table_template$_NgIf_1_9.set$ngIf(local_c.sortModel == null);
        this._data_table_template$_NgIf_3_9.set$ngIf(local_c.sortModel != null);
        this._data_table_template$_appEl_1.detectChangesInNestedViews$0();
        this._data_table_template$_appEl_3.detectChangesInNestedViews$0();
        t1 = local_c.sortModel;
        currVal_0 = t1 != null && t1.activeSort == null;
        t1 = this._data_table_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateClass$3(H.interceptedTypeCheck(this._data_table_template$_el_0, "$isHtmlElement"), "sort-enabled", currVal_0);
          this._data_table_template$_expr_0 = currVal_0;
        }
        t1 = local_c.sortModel;
        currVal_1 = t1 == null ? null : t1.activeSort != null;
        if (currVal_1 == null)
          currVal_1 = false;
        t1 = this._data_table_template$_expr_1;
        if (t1 !== currVal_1) {
          this.updateClass$3(H.interceptedTypeCheck(this._data_table_template$_el_0, "$isHtmlElement"), "sort", currVal_1);
          this._data_table_template$_expr_1 = currVal_1;
        }
        t1 = local_c.sortModel;
        currVal_2 = t1 == null ? null : t1.activeSort === C.SortDirection_1;
        if (currVal_2 == null)
          currVal_2 = false;
        t1 = this._data_table_template$_expr_2;
        if (t1 !== currVal_2) {
          this.updateClass$3(H.interceptedTypeCheck(this._data_table_template$_el_0, "$isHtmlElement"), "desc", currVal_2);
          this._data_table_template$_expr_2 = currVal_2;
        }
      },
      destroyInternal$0: function() {
        this._data_table_template$_appEl_1.destroyNestedViews$0();
        this._data_table_template$_appEl_3.destroyNestedViews$0();
        var t1 = this._data_table_template$_NgClass_0_5;
        t1._applyClasses$2(t1._rawClass, true);
        t1._applyInitialClasses$1(false);
      },
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent3_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent4(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent3_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent5(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent4: {
      "^": "AppView;0_data_table_template$_expr_0,0_text_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1 = document.createTextNode("");
        this._text_0 = t1;
        this.init0$1(t1);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = Q.interpolate0(H.assertSubtypeOfRuntimeType(this.parentView.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]).header);
        t1 = this._data_table_template$_expr_0;
        if (t1 !== currVal_0) {
          this._text_0.textContent = currVal_0;
          this._data_table_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent5: {
      "^": "AppView;0_data_table_template$_expr_0,0_data_table_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var doc, _el_0, t1, t2;
        doc = document;
        _el_0 = doc.createElement("a");
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        t1 = doc.createTextNode("");
        this._data_table_template$_text_1 = t1;
        t2 = J.getInterceptor$x(_el_0);
        t2.append$1(_el_0, t1);
        t1 = W.Event;
        t2.addEventListener$2(_el_0, "click", this.eventHandler1$2$1(this.get$_data_table_template$_handle_click_0_0(), t1, t1));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = Q.interpolate0(H.assertSubtypeOfRuntimeType(this.parentView.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]).header);
        t1 = this._data_table_template$_expr_0;
        if (t1 !== currVal_0) {
          this._data_table_template$_text_1.textContent = currVal_0;
          this._data_table_template$_expr_0 = currVal_0;
        }
      },
      _data_table_template$_handle_click_0_0$1: [function($$event) {
        var local_c = H.assertSubtypeOfRuntimeType(this.parentView.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]);
        this.ctx.triggerSort$1(local_c);
      }, "call$1", "get$_data_table_template$_handle_click_0_0", 4, 0, 2],
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent6: {
      "^": "AppView;0_data_table_template$_NgClass_0_5,0_data_table_template$_appEl_1,0_data_table_template$_NgIf_1_9,0_data_table_template$_appEl_2,0_data_table_template$_NgFor_2_9,0_data_table_template$_expr_0,0_data_table_template$_expr_1,0_data_table_template$_expr_2,0_data_table_template$_expr_3,0_data_table_template$_expr_4,0_data_table_template$_expr_6,0_data_table_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, _anchor_1, t2, _anchor_2;
        t1 = document.createElement("tr");
        this._data_table_template$_el_0 = t1;
        this.addShimE$1(t1);
        this._data_table_template$_NgClass_0_5 = new Y.NgClass(this._data_table_template$_el_0, H.setRuntimeTypeInfo([], [P.String]));
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(this._data_table_template$_el_0, _anchor_1);
        t2 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._data_table_template$_appEl_1 = t2;
        this._data_table_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t2, new N._ViewSkawaDataTableComponent6_build_closure(this)), t2, false);
        _anchor_2 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        J.append$1$x(this._data_table_template$_el_0, _anchor_2);
        t1 = new V.ViewContainer(2, 0, this, _anchor_2);
        this._data_table_template$_appEl_2 = t1;
        this._data_table_template$_NgFor_2_9 = new R.NgFor(t1, new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent6_build_closure0(this)));
        t1 = W.Event;
        J.addEventListener$2$x(this._data_table_template$_el_0, "click", this.eventHandler1$2$1(this.get$_data_table_template$_handle_click_0_0(), t1, t1));
        this.init0$1(this._data_table_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, local_row, local_index, currVal_4, t2, currVal_6, currVal_0, currVal_1, t3, currVal_2, currVal_3;
        _ctx = this.ctx;
        t1 = this.locals;
        local_row = H.assertSubtypeOfRuntimeType(t1.$index(0, "$implicit"), H.getTypeArgumentByIndex(this, 0));
        local_index = H.intTypeCheck(t1.$index(0, "index"));
        t1 = J.getInterceptor$x(local_row);
        currVal_4 = t1.get$classes(local_row);
        t2 = this._data_table_template$_expr_4;
        if (t2 == null ? currVal_4 != null : t2 !== currVal_4) {
          this._data_table_template$_NgClass_0_5.set$rawClass(currVal_4);
          this._data_table_template$_expr_4 = currVal_4;
        }
        this._data_table_template$_NgClass_0_5.ngDoCheck$0();
        this._data_table_template$_NgIf_1_9.set$ngIf(_ctx.selectable);
        currVal_6 = _ctx.columns;
        t2 = this._data_table_template$_expr_6;
        if (t2 == null ? currVal_6 != null : t2 !== currVal_6) {
          this._data_table_template$_NgFor_2_9.set$ngForOf(currVal_6);
          this._data_table_template$_expr_6 = currVal_6;
        }
        this._data_table_template$_NgFor_2_9.ngDoCheck$0();
        this._data_table_template$_appEl_1.detectChangesInNestedViews$0();
        this._data_table_template$_appEl_2.detectChangesInNestedViews$0();
        currVal_0 = t1.get$checked(local_row);
        t2 = this._data_table_template$_expr_0;
        if (t2 != currVal_0) {
          this.updateClass$3(H.interceptedTypeCheck(this._data_table_template$_el_0, "$isHtmlElement"), "selected", currVal_0);
          this._data_table_template$_expr_0 = currVal_0;
        }
        if (typeof local_index !== "number")
          return local_index.$mod();
        t2 = C.JSInt_methods.$mod(local_index, 2) === 0;
        if (!t2) {
          _ctx.colorOddRows;
          currVal_1 = true;
        } else
          currVal_1 = false;
        t3 = this._data_table_template$_expr_1;
        if (t3 !== currVal_1) {
          this.updateClass$3(H.interceptedTypeCheck(this._data_table_template$_el_0, "$isHtmlElement"), "odd-row", currVal_1);
          this._data_table_template$_expr_1 = currVal_1;
        }
        if (t2) {
          _ctx.colorOddRows;
          currVal_2 = true;
        } else
          currVal_2 = false;
        t2 = this._data_table_template$_expr_2;
        if (t2 !== currVal_2) {
          this.updateClass$3(H.interceptedTypeCheck(this._data_table_template$_el_0, "$isHtmlElement"), "even-row", currVal_2);
          this._data_table_template$_expr_2 = currVal_2;
        }
        currVal_3 = t1.$eq(local_row, _ctx.highlightedRow);
        t1 = this._data_table_template$_expr_3;
        if (t1 !== currVal_3) {
          this.updateClass$3(H.interceptedTypeCheck(this._data_table_template$_el_0, "$isHtmlElement"), "highlighted", currVal_3);
          this._data_table_template$_expr_3 = currVal_3;
        }
      },
      destroyInternal$0: function() {
        this._data_table_template$_appEl_1.destroyNestedViews$0();
        this._data_table_template$_appEl_2.destroyNestedViews$0();
        var t1 = this._data_table_template$_NgClass_0_5;
        t1._applyClasses$2(t1._rawClass, true);
        t1._applyInitialClasses$1(false);
      },
      _data_table_template$_handle_click_0_0$1: [function($$event) {
        var local_row, t1;
        local_row = H.assertSubtypeOfRuntimeType(this.locals.$index(0, "$implicit"), H.getTypeArgumentByIndex(this, 0));
        t1 = this.ctx;
        H.interceptedTypeCheck($$event, "$isEvent");
        J.highlight$2$z(t1, local_row, $$event);
        $$event.stopPropagation();
      }, "call$1", "get$_data_table_template$_handle_click_0_0", 4, 0, 2],
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent6_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent7(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent6_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent8(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null], P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent7: {
      "^": "AppView;0_data_table_template$_compView_1,0_MaterialCheckboxComponent_1_5,0_data_table_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var _el_0, t1, _el_1;
        _el_0 = document.createElement("td");
        this.addShimE$1(_el_0);
        t1 = G.ViewMaterialCheckboxComponent0$(this, 1);
        this._data_table_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        J.append$1$x(_el_0, _el_1);
        _el_1.className = "selector-checkbox themeable";
        this.addShimC$1(_el_1);
        t1 = B.MaterialCheckboxComponent$(_el_1, this._data_table_template$_compView_1.viewData.ref, null, null, null);
        this._MaterialCheckboxComponent_1_5 = t1;
        this._data_table_template$_compView_1.create$2(0, t1, [C.List_empty]);
        t1 = this._MaterialCheckboxComponent_1_5._onChecked;
        this.init$2([_el_0], [new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_checkedChange_1_0(), null, null))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_HasDisabled_qzc && 1 === nodeIndex)
          return this._MaterialCheckboxComponent_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var t1, currVal_0, t2, changed;
        t1 = this.viewData._cdState;
        currVal_0 = J.get$checked$x(H.assertSubtypeOfRuntimeType(this.parentView.locals.$index(0, "$implicit"), H.getTypeArgumentByIndex(this, 0)));
        t2 = this._data_table_template$_expr_0;
        if (t2 != currVal_0) {
          this._MaterialCheckboxComponent_1_5.set$checked(0, currVal_0);
          this._data_table_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._data_table_template$_compView_1.viewData.set$cdMode(1);
        this._data_table_template$_compView_1.detectHostChanges$1(t1 === 0);
        this._data_table_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._data_table_template$_compView_1.destroy$0();
        this._MaterialCheckboxComponent_1_5.toString;
      },
      _handle_checkedChange_1_0$1: [function($$event) {
        var local_row = H.assertSubtypeOfRuntimeType(this.parentView.locals.$index(0, "$implicit"), H.getTypeArgumentByIndex(this, 0));
        this.ctx.changeRowSelection$2(local_row, H.boolTypeCheck($$event));
      }, "call$1", "get$_handle_checkedChange_1_0", 4, 0, 2],
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent8: {
      "^": "AppView;0_data_table_template$_NgClass_0_5,0_data_table_template$_appEl_1,0_data_table_template$_NgIf_1_9,0_data_table_template$_appEl_2,0_data_table_template$_NgIf_2_9,0_data_table_template$_appEl_4,0_data_table_template$_NgIf_4_9,0_data_table_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var doc, _el_0, t1, _anchor_1, t2, t3, _anchor_2, _anchor_4;
        doc = document;
        _el_0 = doc.createElement("td");
        this.addShimE$1(_el_0);
        this._data_table_template$_NgClass_0_5 = new Y.NgClass(_el_0, H.setRuntimeTypeInfo([], [P.String]));
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = J.getInterceptor$x(_el_0);
        t2.append$1(_el_0, _anchor_1);
        t3 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._data_table_template$_appEl_1 = t3;
        this._data_table_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t3, new N._ViewSkawaDataTableComponent8_build_closure(this)), t3, false);
        _anchor_2 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(_el_0, _anchor_2);
        t3 = new V.ViewContainer(2, 0, this, _anchor_2);
        this._data_table_template$_appEl_2 = t3;
        this._data_table_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t3, new N._ViewSkawaDataTableComponent8_build_closure0(this)), t3, false);
        t2.append$1(_el_0, doc.createTextNode(" "));
        _anchor_4 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(_el_0, _anchor_4);
        t2 = new V.ViewContainer(4, 0, this, _anchor_4);
        this._data_table_template$_appEl_4 = t2;
        this._data_table_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t2, new N._ViewSkawaDataTableComponent8_build_closure1(this)), t2, false);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var local_c, currVal_0, t1;
        local_c = H.assertSubtypeOfRuntimeType(this.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]);
        currVal_0 = local_c.getClasses$0();
        t1 = this._data_table_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          this._data_table_template$_NgClass_0_5.set$rawClass(currVal_0);
          this._data_table_template$_expr_0 = currVal_0;
        }
        this._data_table_template$_NgClass_0_5.ngDoCheck$0();
        this._data_table_template$_NgIf_1_9.set$ngIf(local_c.get$useColumnRenderer());
        t1 = this._data_table_template$_NgIf_2_9;
        t1.set$ngIf(!local_c.get$useColumnRenderer() && local_c._triggerController._firstSubscription != null);
        t1 = this._data_table_template$_NgIf_4_9;
        t1.set$ngIf(!local_c.get$useColumnRenderer() && local_c._triggerController._firstSubscription == null);
        this._data_table_template$_appEl_1.detectChangesInNestedViews$0();
        this._data_table_template$_appEl_2.detectChangesInNestedViews$0();
        this._data_table_template$_appEl_4.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._data_table_template$_appEl_1.destroyNestedViews$0();
        this._data_table_template$_appEl_2.destroyNestedViews$0();
        this._data_table_template$_appEl_4.destroyNestedViews$0();
        var t1 = this._data_table_template$_NgClass_0_5;
        t1._applyClasses$2(t1._rawClass, true);
        t1._applyInitialClasses$1(false);
      },
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent8_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent9(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent8_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent10(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent8_build_closure1: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent11(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent9: {
      "^": "AppView;0_data_table_template$_compView_0,0_data_table_template$_appEl_0,0_data_table_template$_DynamicComponent_0_8,0_data_table_template$_expr_0,0_data_table_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, _el_0, t2, t3;
        t1 = Q.ViewDynamicComponent0$(this, 0);
        this._data_table_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        this.addShimC$1(_el_0);
        this._data_table_template$_appEl_0 = new V.ViewContainer(0, null, this, _el_0);
        t1 = this.parentView.parentView.parentView;
        t1 = H.interceptedTypeCheck(t1.parentView.injectorGet$2(C.Type_SlowComponentLoader_qxe, t1.viewData.parentIndex), "$isSlowComponentLoader");
        t2 = this._data_table_template$_compView_0;
        t3 = t2.viewData.ref;
        t3 = new Z.DynamicComponent(t1, this._data_table_template$_appEl_0, t3, P.StreamController_StreamController(null, null, null, null, false, [D.ComponentRef,,]), false, false, false, false);
        this._data_table_template$_DynamicComponent_0_8 = t3;
        t2.create$2(0, t3, []);
        this.init0$1(this._data_table_template$_appEl_0);
      },
      detectChangesInternal$0: function() {
        var t1, t2, local_row, currVal_0, changed;
        t1 = this.parentView;
        t2 = H.getTypeArgumentByIndex(this, 0);
        local_row = H.assertSubtypeOfRuntimeType(t1.parentView.locals.$index(0, "$implicit"), t2);
        currVal_0 = H.functionTypeCheck(H.assertSubtypeOfRuntimeType(t1.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, t2]).columnRenderer.SkawaDataColRendererDirective_factoryRenderer, {func: 1, ret: [D.ComponentFactory,,], args: [t2]}).call$1(local_row);
        t1 = this._data_table_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          this._data_table_template$_DynamicComponent_0_8.set$componentFactory(currVal_0);
          this._data_table_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        t1 = this._data_table_template$_expr_1;
        if (t1 == null ? local_row != null : t1 !== local_row) {
          t1 = this._data_table_template$_DynamicComponent_0_8;
          t1._dynamic_component$_value = local_row;
          t1._valueChanged = true;
          this._data_table_template$_expr_1 = local_row;
          changed = true;
        }
        if (changed)
          this._data_table_template$_DynamicComponent_0_8.ngAfterChanges$0();
        this._data_table_template$_appEl_0.detectChangesInNestedViews$0();
        this._data_table_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._data_table_template$_appEl_0.destroyNestedViews$0();
        this._data_table_template$_compView_0.destroy$0();
        var t1 = this._data_table_template$_DynamicComponent_0_8;
        t1._disposeChildComponent$0();
        t1._viewContainerRef = null;
      },
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent10: {
      "^": "AppView;0_data_table_template$_expr_0,0_data_table_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var doc, _el_0, t1, t2;
        doc = document;
        _el_0 = doc.createElement("a");
        _el_0.className = "has-action";
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        t1 = doc.createTextNode("");
        this._data_table_template$_text_1 = t1;
        t2 = J.getInterceptor$x(_el_0);
        t2.append$1(_el_0, t1);
        t1 = W.Event;
        t2.addEventListener$2(_el_0, "click", this.eventHandler1$2$1(this.get$_data_table_template$_handle_click_0_0(), t1, t1));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var t1, t2, local_row, currVal_0;
        t1 = this.parentView;
        t2 = H.getTypeArgumentByIndex(this, 0);
        local_row = H.assertSubtypeOfRuntimeType(t1.parentView.locals.$index(0, "$implicit"), t2);
        currVal_0 = Q.interpolate0(H.functionTypeCheck(H.assertSubtypeOfRuntimeType(t1.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, t2]).accessor, {func: 1, ret: P.String, args: [t2]}).call$1(local_row));
        t1 = this._data_table_template$_expr_0;
        if (t1 !== currVal_0) {
          this._data_table_template$_text_1.textContent = currVal_0;
          this._data_table_template$_expr_0 = currVal_0;
        }
      },
      _data_table_template$_handle_click_0_0$1: [function($$event) {
        var t1, t2, local_row, local_c;
        t1 = this.parentView;
        t2 = H.getTypeArgumentByIndex(this, 0);
        local_row = H.assertSubtypeOfRuntimeType(t1.parentView.locals.$index(0, "$implicit"), t2);
        local_c = H.assertSubtypeOfRuntimeType(t1.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, t2]);
        local_c.toString;
        H.assertSubtypeOfRuntimeType(local_row, H.getTypeArgumentByIndex(local_c, 0));
        local_c._triggerController.add$1(0, local_row);
        t2 = J.getInterceptor$x($$event);
        t2.preventDefault$0($$event);
        t2.stopPropagation$0($$event);
      }, "call$1", "get$_data_table_template$_handle_click_0_0", 4, 0, 2],
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent11: {
      "^": "AppView;0_data_table_template$_expr_0,0_text_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1 = document.createTextNode("");
        this._text_0 = t1;
        this.init0$1(t1);
      },
      detectChangesInternal$0: function() {
        var t1, t2, local_row, currVal_0;
        t1 = this.parentView;
        t2 = H.getTypeArgumentByIndex(this, 0);
        local_row = H.assertSubtypeOfRuntimeType(t1.parentView.locals.$index(0, "$implicit"), t2);
        currVal_0 = Q.interpolate0(H.functionTypeCheck(H.assertSubtypeOfRuntimeType(t1.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, t2]).accessor, {func: 1, ret: P.String, args: [t2]}).call$1(local_row));
        t1 = this._data_table_template$_expr_0;
        if (t1 !== currVal_0) {
          this._text_0.textContent = currVal_0;
          this._data_table_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent12: {
      "^": "AppView;0_data_table_template$_appEl_2,0_data_table_template$_NgFor_2_9,0_data_table_template$_expr_0,0_pipe_unskippedInFooter_0_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      set$_pipe_unskippedInFooter_0_0: function(_pipe_unskippedInFooter_0_0) {
        this._pipe_unskippedInFooter_0_0 = H.functionTypeCheck(_pipe_unskippedInFooter_0_0, {func: 1, ret: [P.List, [G.SkawaDataTableColComponent, U.RowData]], args: [[P.List, [G.SkawaDataTableColComponent, U.RowData]]]});
      },
      build$0: function() {
        var doc, _el_0, _el_1, t1, _anchor_2, t2;
        doc = document;
        _el_0 = doc.createElement("tfoot");
        this.addShimE$1(_el_0);
        _el_1 = S.createAndAppend(doc, "tr", _el_0);
        this.addShimE$1(_el_1);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_2 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(_el_1, _anchor_2);
        t1 = new V.ViewContainer(2, 1, this, _anchor_2);
        this._data_table_template$_appEl_2 = t1;
        this._data_table_template$_NgFor_2_9 = new R.NgFor(t1, new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent12_build_closure(this)));
        t1 = H.assertSubtypeOfRuntimeType(this.parentView, [N.ViewSkawaDataTableComponent0, U.RowData]).get$_pipe_unskippedInFooter_0();
        t2 = [P.List, [G.SkawaDataTableColComponent, U.RowData]];
        this.set$_pipe_unskippedInFooter_0_0(Q.pureProxy1(t1.get$transform(t1), t2, t2));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var t1, currVal_0;
        t1 = this.ctx.columns;
        currVal_0 = this._pipe_unskippedInFooter_0_0.call$1(t1);
        t1 = this._data_table_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          this._data_table_template$_NgFor_2_9.set$ngForOf(currVal_0);
          this._data_table_template$_expr_0 = currVal_0;
        }
        this._data_table_template$_NgFor_2_9.ngDoCheck$0();
        this._data_table_template$_appEl_2.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._data_table_template$_appEl_2.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    },
    _ViewSkawaDataTableComponent12_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new N._ViewSkawaDataTableComponent13(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null, "index", null], P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [S.SkawaDataTableComponent, t1]));
        t2.componentType = $.ViewSkawaDataTableComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [S.SkawaDataTableComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewSkawaDataTableComponent13: {
      "^": "AppView;0_data_table_template$_NgClass_0_5,0_data_table_template$_expr_0,0_data_table_template$_expr_1,0_data_table_template$_expr_2,0_data_table_template$_el_0,0_data_table_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var doc, t1;
        doc = document;
        t1 = doc.createElement("td");
        this._data_table_template$_el_0 = t1;
        this.addShimE$1(t1);
        this._data_table_template$_NgClass_0_5 = new Y.NgClass(this._data_table_template$_el_0, H.setRuntimeTypeInfo([], [P.String]));
        t1 = doc.createTextNode("");
        this._data_table_template$_text_1 = t1;
        J.append$1$x(this._data_table_template$_el_0, t1);
        this.init0$1(this._data_table_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, local_c, local_i, currVal_1, currVal_0, t2, currVal_2;
        _ctx = this.ctx;
        t1 = this.locals;
        local_c = t1.$index(0, "$implicit");
        local_i = H.intTypeCheck(t1.$index(0, "index"));
        currVal_1 = local_c.getClasses$1("--footer");
        t1 = this._data_table_template$_expr_1;
        if (t1 == null ? currVal_1 != null : t1 !== currVal_1) {
          this._data_table_template$_NgClass_0_5.set$rawClass(currVal_1);
          this._data_table_template$_expr_1 = currVal_1;
        }
        this._data_table_template$_NgClass_0_5.ngDoCheck$0();
        H.assertSubtype(local_c, "$isSkawaDataTableColComponent", this.$ti, "$asSkawaDataTableColComponent");
        currVal_0 = _ctx.getColspanFor$2(local_c, local_i);
        t1 = this._data_table_template$_expr_0;
        if (t1 !== currVal_0) {
          t1 = this._data_table_template$_el_0;
          t2 = C.JSInt_methods.toString$0(currVal_0);
          this.setAttr$3(t1, "colspan", t2);
          this._data_table_template$_expr_0 = currVal_0;
        }
        currVal_2 = Q.interpolate0(local_c.footer);
        t1 = this._data_table_template$_expr_2;
        if (t1 !== currVal_2) {
          this._data_table_template$_text_1.textContent = currVal_2;
          this._data_table_template$_expr_2 = currVal_2;
        }
      },
      destroyInternal$0: function() {
        var t1 = this._data_table_template$_NgClass_0_5;
        t1._applyClasses$2(t1._rawClass, true);
        t1._applyInitialClasses$1(false);
      },
      $asAppView: function($T) {
        return [[S.SkawaDataTableComponent, $T]];
      }
    }
  }], ["", "package:skawa_material_components/data_table/data_table_column.dart",, G, {
    "^": "",
    SkawaDataTableColComponent: {
      "^": "Object;_triggerController,columnRenderer,0accessor,0header,0footer,0sortModel<,skipFooter,0classString,$ti",
      set$accessor: function(accessor) {
        this.accessor = H.functionTypeCheck(accessor, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(this, 0)]});
      },
      get$useColumnRenderer: function() {
        var t1 = this.columnRenderer;
        return (t1 == null ? null : H.functionTypeCheck(t1.SkawaDataColRendererDirective_factoryRenderer, {func: 1, ret: [D.ComponentFactory,,], args: [H.getTypeArgumentByIndex(this, 0)]})) != null;
      },
      getClasses$1: function(suffix) {
        var t1, t2, t3;
        t1 = this.classString;
        t1 = t1 == null ? null : C.JSString_methods.trim$0(t1);
        t1 = t1 == null ? null : H.setRuntimeTypeInfo(t1.split(" "), [P.String]);
        if (t1 == null)
          t1 = null;
        else {
          t2 = P.String;
          t3 = H.getTypeArgumentByIndex(t1, 0);
          t2 = new H.MappedListIterable(t1, H.functionTypeCheck(new G.SkawaDataTableColComponent_getClasses_closure(suffix), {func: 1, ret: t2, args: [t3]}), [t3, t2]);
          t1 = t2;
        }
        return t1;
      },
      getClasses$0: function() {
        return this.getClasses$1(null);
      },
      ngOnInit$0: function() {
        if (this._triggerController._firstSubscription != null && this.get$useColumnRenderer())
          throw H.wrapException(P.ArgumentError$("Cannot use [colRenderer] together with (trigger)"));
      },
      static: {
        SkawaDataTableColComponent$: function(columnRenderer, $T) {
          return new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, 0, [$T]), columnRenderer, true, [$T]);
        }
      }
    },
    SkawaDataTableColComponent_getClasses_closure: {
      "^": "Closure:13;suffix",
      call$1: [function(className) {
        var t1;
        H.stringTypeCheck(className);
        t1 = this.suffix;
        return t1 != null ? H.S(className) + t1 : className;
      }, null, null, 4, 0, null, 71, "call"]
    },
    SkawaDataColRendererDirective: {
      "^": "HasFactoryRenderer;0SkawaDataColRendererDirective_factoryRenderer,0factoryRenderer,$ti",
      set$factoryRenderer: function(factoryRenderer) {
        this.SkawaDataColRendererDirective_factoryRenderer = H.functionTypeCheck(factoryRenderer, {func: 1, ret: [D.ComponentFactory,,], args: [H.getTypeArgumentByIndex(this, 0)]});
      },
      $asHasFactoryRenderer: function($T) {
        return [[G.RendersValue,,], $T];
      },
      static: {
        SkawaDataColRendererDirective$: function($T) {
          return new G.SkawaDataColRendererDirective([$T]);
        }
      }
    }
  }], ["", "package:skawa_material_components/data_table/data_table_column.template.dart",, Y, {
    "^": "",
    ViewSkawaDataTableColComponent0: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        this.initViewRoot$1(this.rootEl);
        this.init$2(C.List_empty, null);
      },
      $asAppView: function($T) {
        return [[G.SkawaDataTableColComponent, $T]];
      },
      static: {
        ViewSkawaDataTableColComponent0$: function(parentView, parentIndex, $T) {
          var t1, t2;
          t1 = new Y.ViewSkawaDataTableColComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [$T]);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, parentIndex, [G.SkawaDataTableColComponent, $T]));
          t2 = document.createElement("skawa-data-table-col");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewSkawaDataTableColComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
            $.ViewSkawaDataTableColComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:skawa_material_components/data_table/row_data.dart",, U, {
    "^": "",
    RowData: {
      "^": "Object;checked>,classes>",
      set$checked: function(_, checked) {
        this.checked = H.boolTypeCheck(checked);
      }
    }
  }], ["", "package:skawa_material_components/data_table/sort.dart",, S, {
    "^": "",
    SortDirection: {
      "^": "Object;index,_sort$_name",
      toString$0: function(_) {
        return this._sort$_name;
      }
    },
    SortModel: {
      "^": "Object;allowedDirections,0activeSort"
    },
    SkawaDataTableSortDirective: {
      "^": "Object;column",
      set$allowedSorts: function(allowedSorts) {
        var t1, t2, t3, directions;
        if (allowedSorts.length !== 0) {
          t1 = P.String;
          t2 = H.setRuntimeTypeInfo(allowedSorts.split(","), [t1]);
          t3 = H.getTypeArgumentByIndex(t2, 0);
          directions = new H.MappedListIterable(t2, H.functionTypeCheck(new S.SkawaDataTableSortDirective_allowedSorts_closure(), {func: 1, ret: t1, args: [t3]}), [t3, t1]).toList$1$growable(0, false);
        } else {
          t1 = C.Map_oWtLB.get$keys(C.Map_oWtLB);
          directions = P.List_List$from(t1, false, H.getRuntimeTypeArgument(t1, "Iterable", 0));
        }
        if (directions.length === 0 || C.JSArray_methods.any$1(directions, new S.SkawaDataTableSortDirective_allowedSorts_closure0()))
          throw H.wrapException(P.ArgumentError$('SkawaDataTableSortDirective accepts only "asc" and/or "desc" as sort directions. Use comma separated values for both directions.'));
        t1 = S.SortDirection;
        t2 = H.getTypeArgumentByIndex(directions, 0);
        this.column.sortModel = new S.SortModel(new H.MappedListIterable(directions, H.functionTypeCheck(new S.SkawaDataTableSortDirective_allowedSorts_closure1(), {func: 1, ret: t1, args: [t2]}), [t2, t1]).toList$1$growable(0, false));
      }
    },
    SkawaDataTableSortDirective_allowedSorts_closure: {
      "^": "Closure:13;",
      call$1: [function(s) {
        return J.trim$0$s(H.stringTypeCheck(s));
      }, null, null, 4, 0, null, 24, "call"]
    },
    SkawaDataTableSortDirective_allowedSorts_closure0: {
      "^": "Closure:10;",
      call$1: function(s) {
        return C.Map_oWtLB.$index(0, H.stringTypeCheck(s)) == null;
      }
    },
    SkawaDataTableSortDirective_allowedSorts_closure1: {
      "^": "Closure:137;",
      call$1: [function(s) {
        return C.Map_oWtLB.$index(0, H.stringTypeCheck(s));
      }, null, null, 4, 0, null, 24, "call"]
    }
  }], ["asset_skawa_material_components_lib_extended_material_icon_extended_material_icon.css.shim.dart", "package:skawa_material_components/extended_material_icon/extended_material_icon.css.shim.dart",, R, {}], ["", "package:skawa_material_components/extended_material_icon/extended_material_icon.dart",, R, {
    "^": "",
    ExtendedMaterialIconComponent: {
      "^": "Object;0icon,flipVertical,flipHorizontal,spin,0rotate"
    }
  }], ["", "package:skawa_material_components/extended_material_icon/extended_material_icon.template.dart",, Q, {
    "^": "",
    ViewExtendedMaterialIconComponent0: {
      "^": "AppView;0_NgClass_0_5,0_expr_0,0_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, _el_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        _el_0 = S.createSpanAndAppend(document, parentRenderNode);
        this.addShimE$1(_el_0);
        this._NgClass_0_5 = new Y.NgClass(_el_0, H.setRuntimeTypeInfo([], [P.String]));
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_0, t2, t3, t4, t5, currVal_1;
        _ctx = this.ctx;
        t1 = _ctx.icon;
        currVal_0 = "mdi mdi-" + (t1 == null ? "" : t1);
        t1 = this._expr_0;
        if (t1 !== currVal_0) {
          this._NgClass_0_5.set$initialClasses(currVal_0);
          this._expr_0 = currVal_0;
        }
        t1 = _ctx.flipHorizontal;
        t2 = _ctx.flipVertical;
        t3 = _ctx.spin;
        t4 = _ctx.rotate;
        t4 = "mdi-rotate-" + C.JSInt_methods.$mod(t4 == null ? 0 : t4, 360);
        if (!_ctx.flipHorizontal)
          if (!_ctx.flipVertical) {
            t5 = _ctx.rotate;
            t5 = t5 != null && C.JSInt_methods.$mod(t5, 45) === 0;
          } else
            t5 = false;
        else
          t5 = false;
        currVal_1 = P.LinkedHashMap_LinkedHashMap$_literal(["mdi-flip-h", t1, "mdi-flip-v", t2, "mdi-spin", t3, t4, t5], P.String, P.bool);
        t1 = this._expr_1;
        if (t1 !== currVal_1) {
          this._NgClass_0_5.set$rawClass(currVal_1);
          this._expr_1 = currVal_1;
        }
        this._NgClass_0_5.ngDoCheck$0();
      },
      destroyInternal$0: function() {
        var t1 = this._NgClass_0_5;
        t1._applyClasses$2(t1._rawClass, true);
        t1._applyInitialClasses$1(false);
      },
      $asAppView: function() {
        return [R.ExtendedMaterialIconComponent];
      },
      static: {
        ViewExtendedMaterialIconComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new Q.ViewExtendedMaterialIconComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, R.ExtendedMaterialIconComponent));
          t2 = document.createElement("extended-material-icon");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewExtendedMaterialIconComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$ExtendedMaterialIconComponent());
            $.ViewExtendedMaterialIconComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["asset_skawa_material_components_lib_grid_grid_component.css.shim.dart", "package:skawa_material_components/grid/grid_component.css.shim.dart",, F, {}], ["", "package:skawa_material_components/grid/grid_component.dart",, T, {
    "^": "",
    GridComponent: {
      "^": "GridBase;0_tiles,0visibility>,gridGutter,0grid,0_resizeTimer,_previousWidth",
      set$_tiles: function(_tiles) {
        this._tiles = H.assertSubtype(_tiles, "$isList", [A.GridTile], "$asList");
      },
      set$grid: function(_, grid) {
        this.grid = H.interceptedTypeCheck(grid, "$isHtmlElement");
      },
      set$visible: function(_, val) {
        var t1 = val ? "" : "hidden";
        this.visibility = t1;
        return t1;
      },
      updateAndDisplay$1: function(forceRefresh) {
        var t1 = this._resizeTimer;
        if (!(t1 == null))
          t1.cancel$0(0);
        this._resizeTimer = P.Timer_Timer(P.Duration$(0, 0, 0, 100, 0, 0), new T.GridComponent_updateAndDisplay_closure(this, forceRefresh));
      },
      ngOnInit$0: function() {
        var t1 = W.Event;
        W._EventStreamSubscription$(window, "resize", H.functionTypeCheck(new T.GridComponent_ngOnInit_closure(this), {func: 1, ret: -1, args: [t1]}), false, t1);
      }
    },
    GridComponent_updateAndDisplay_closure: {
      "^": "Closure:0;$this,forceRefresh",
      call$0: [function() {
        var t1, gridWidth, gridUpdate, t2, t3, t4, i, newPosition, t5, value, t6;
        t1 = this.$this;
        t1._tiles.length;
        gridWidth = t1.grid.clientWidth;
        if (t1._previousWidth == gridWidth && !this.forceRefresh)
          return;
        t1._previousWidth = gridWidth;
        gridUpdate = t1.calculateGridUpdate$2$gutterSize(gridWidth, P.int_parse(t1.gridGutter, null, null));
        t1.visibility = "";
        t2 = t1.grid.style;
        t3 = H.S(gridUpdate.gridHeight) + "px";
        t2.height = t3;
        for (t2 = gridUpdate.tilePositions, t3 = t2.length, t4 = [P.int], i = 0; i < t3; ++i) {
          newPosition = t2[i];
          t5 = t1._tiles;
          t5.length;
          if (i >= 5)
            return H.ioore(t5, i);
          t5 = t5[i];
          t5.toString;
          H.assertSubtype(newPosition, "$isPoint", t4, "$asPoint");
          t5 = t5.tile.style;
          value = "translate(" + H.S(newPosition.x) + "px, " + H.S(newPosition.y) + "px)";
          t6 = (t5 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t5, "transform");
          t5.setProperty(t6, value, "");
        }
      }, null, null, 0, 0, null, "call"]
    },
    GridComponent_ngOnInit_closure: {
      "^": "Closure:11;$this",
      call$1: function(_) {
        this.$this.updateAndDisplay$1(false);
      }
    },
    GridTileDirective: {
      "^": "_GridTileDirective_Object_DomTransformReposition;tile",
      $isGridTile: 1
    },
    _GridTileDirective_Object_DomTransformReposition: {
      "^": "Object+DomTransformReposition;"
    }
  }], ["", "package:skawa_material_components/grid/grid_component.template.dart",, X, {
    "^": "",
    ViewGridComponent0: {
      "^": "AppView;0_grid_component_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, _el_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        _el_0 = S.createDivAndAppend(document, parentRenderNode);
        _el_0.className = "grid-container";
        this.addShimC$1(_el_0);
        this.project$2(_el_0, 0);
        J.set$grid$z(this.ctx, _el_0);
        this.init$2(C.List_empty, null);
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_0, t1;
        currVal_0 = J.get$visibility$x(this.ctx);
        t1 = this._grid_component_template$_expr_0;
        if (t1 != currVal_0) {
          t1 = this.rootEl.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "visibility"), currVal_0, null);
          this._grid_component_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [T.GridComponent];
      },
      static: {
        ViewGridComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new X.ViewGridComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, T.GridComponent));
          t2 = document.createElement("skawa-grid");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewGridComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$GridComponent());
            $.ViewGridComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["asset_skawa_material_components_lib_snackbar_snackbar.css.shim.dart", "package:skawa_material_components/snackbar/snackbar.css.shim.dart",, F, {}], ["", "package:skawa_material_components/snackbar/snackbar.dart",, T, {
    "^": "",
    SnackbarService: {
      "^": "Object;_messageQueue",
      showMessage$3$action$duration: [function(message, action, duration) {
        var t1;
        H.stringTypeCheck(message);
        H.interceptedTypeCheck(duration, "$isDuration");
        H.interceptedTypeCheck(action, "$isSnackAction");
        t1 = new T.SnackMessage();
        t1.text = message;
        t1.duration = duration == null ? $.$get$SnackbarService__defaultDuration() : duration;
        t1.action = action;
        this._messageQueue.add$1(0, t1);
      }, function(message) {
        return this.showMessage$3$action$duration(message, null, null);
      }, "showMessage$1", "call$3$action$duration", "call$1", "get$showMessage", 4, 5, 138, 3, 3, 33, 72, 73]
    },
    SnackAction: {
      "^": "Object;0label>,0callback"
    },
    SnackMessage: {
      "^": "Object;0text,0duration,0action>"
    },
    SkawaSnackbarComponent: {
      "^": "Object;_changeDetectorRef,_snackbar$_snackbarService,_tearDownDisposer,0message>,0nextMessage,0_messageTimer,0show,0_animationBlocker",
      ngOnInit$0: function() {
        var t1 = this._snackbar$_snackbarService._messageQueue;
        this._tearDownDisposer.addStreamSubscription$1$1(new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new T.SkawaSnackbarComponent_ngOnInit_closure(this)), null);
      },
      _slideIn$0: function() {
        this.show = true;
        this._animationBlocker = P.Timer_Timer($.$get$SkawaSnackbarComponent__minimumSlideInDelay(), new T.SkawaSnackbarComponent__slideIn_closure(this));
        this._changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
      },
      transitionEnd$1: [function(_) {
        var t1;
        if (this.show)
          this._messageTimer = P.Timer_Timer(this.message.duration, new T.SkawaSnackbarComponent_transitionEnd_closure(this));
        else {
          t1 = this.nextMessage;
          if (t1 == null) {
            this.message = null;
            this._changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
          } else {
            this.message = t1;
            this.nextMessage = null;
            this._slideIn$0();
          }
        }
      }, "call$1", "get$transitionEnd", 4, 0, 2]
    },
    SkawaSnackbarComponent_ngOnInit_closure: {
      "^": "Closure:139;$this",
      call$1: [function(newMessage) {
        var t1, t2;
        H.interceptedTypeCheck(newMessage, "$isSnackMessage");
        t1 = this.$this;
        if (t1.message == null) {
          t1.message = newMessage;
          t1._slideIn$0();
        } else {
          t1.nextMessage = newMessage;
          t2 = t1._messageTimer;
          if (!(t2 == null))
            t2.cancel$0(0);
          t1._messageTimer = null;
          if (t1._animationBlocker == null) {
            t1.show = false;
            t1._changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
          }
        }
      }, null, null, 4, 0, null, 49, "call"]
    },
    SkawaSnackbarComponent__slideIn_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._animationBlocker = null;
        if (t1.nextMessage != null) {
          t1.show = false;
          t1._changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
        }
      }, null, null, 0, 0, null, "call"]
    },
    SkawaSnackbarComponent_transitionEnd_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._messageTimer = null;
        t1.show = false;
        t1._changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:skawa_material_components/snackbar/snackbar.template.dart",, S, {
    "^": "",
    viewFactory_SkawaSnackbarComponent1: [function(parentView, parentIndex) {
      var t1 = new S._ViewSkawaSnackbarComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.SkawaSnackbarComponent));
      t1.componentType = $.ViewSkawaSnackbarComponent0__renderType;
      return t1;
    }, "call$2", "snackbar_template__viewFactory_SkawaSnackbarComponent1$closure", 8, 0, 49],
    viewFactory_SkawaSnackbarComponent2: [function(parentView, parentIndex) {
      var t1 = new S._ViewSkawaSnackbarComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.SkawaSnackbarComponent));
      t1.componentType = $.ViewSkawaSnackbarComponent0__renderType;
      return t1;
    }, "call$2", "snackbar_template__viewFactory_SkawaSnackbarComponent2$closure", 8, 0, 49],
    ViewSkawaSnackbarComponent0: {
      "^": "AppView;0_appEl_1,0_NgIf_1_9,0_snackbar_template$_expr_0,0_snackbar_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _anchor_1, t2;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = S.createDivAndAppend(document, parentRenderNode);
        this._snackbar_template$_el_0 = t1;
        t1.className = "snackbar-container";
        this.addShimC$1(t1);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t1 = this._snackbar_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _anchor_1);
        t1 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._appEl_1 = t1;
        this._NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, S.snackbar_template__viewFactory_SkawaSnackbarComponent1$closure()), t1, false);
        t1 = this._snackbar_template$_el_0;
        t2 = W.Event;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "transitionend", this.eventHandler1$2$1(this.ctx.get$transitionEnd(), t2, t2));
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1;
        _ctx = this.ctx;
        this._NgIf_1_9.set$ngIf(_ctx.message != null);
        this._appEl_1.detectChangesInNestedViews$0();
        currVal_0 = _ctx.show;
        t1 = this._snackbar_template$_expr_0;
        if (t1 != currVal_0) {
          this.updateClass$3(this._snackbar_template$_el_0, "show", currVal_0);
          this._snackbar_template$_expr_0 = currVal_0;
        }
      },
      destroyInternal$0: function() {
        this._appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [T.SkawaSnackbarComponent];
      }
    },
    _ViewSkawaSnackbarComponent1: {
      "^": "AppView;0_appEl_2,0_NgIf_2_9,0_snackbar_template$_expr_0,0_snackbar_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1;
        doc = document;
        _el_0 = doc.createElement("span");
        _el_0.className = "message";
        this.addShimE$1(_el_0);
        t1 = doc.createTextNode("");
        this._snackbar_template$_text_1 = t1;
        J.append$1$x(_el_0, t1);
        t1 = $.$get$_viewContainerAnchor();
        t1 = new V.ViewContainer(2, null, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._appEl_2 = t1;
        this._NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, S.snackbar_template__viewFactory_SkawaSnackbarComponent2$closure()), t1, false);
        this.init$2([_el_0, t1], null);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1;
        _ctx = this.ctx;
        this._NgIf_2_9.set$ngIf(_ctx.message.action != null);
        this._appEl_2.detectChangesInNestedViews$0();
        currVal_0 = Q.interpolate0(_ctx.message.text);
        t1 = this._snackbar_template$_expr_0;
        if (t1 !== currVal_0) {
          this._snackbar_template$_text_1.textContent = currVal_0;
          this._snackbar_template$_expr_0 = currVal_0;
        }
      },
      destroyInternal$0: function() {
        this._appEl_2.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [T.SkawaSnackbarComponent];
      }
    },
    _ViewSkawaSnackbarComponent2: {
      "^": "AppView;0_snackbar_template$_compView_0,0_AcxDarkTheme_0_5,0_MaterialButtonComponent_0_6,0_snackbar_template$_expr_0,0_snackbar_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2;
        t1 = U.ViewMaterialButtonComponent0$(this, 0);
        this._snackbar_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        this.addShimC$1(_el_0);
        t1 = this.parentView.parentView;
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t1.parentView.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._AcxDarkTheme_0_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_0, t1, this._snackbar_template$_compView_0.viewData.ref, null);
        this._MaterialButtonComponent_0_6 = t1;
        t2 = document.createTextNode("");
        this._snackbar_template$_text_1 = t2;
        this._snackbar_template$_compView_0.create$2(0, t1, [H.setRuntimeTypeInfo([t2], [W.Text])]);
        t2 = this._MaterialButtonComponent_0_6._trigger;
        t1 = W.UIEvent;
        this.init$2([_el_0], [new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_0_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_AcxDarkTheme_Tng)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._AcxDarkTheme_0_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._MaterialButtonComponent_0_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_0;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        this._snackbar_template$_compView_0.detectHostChanges$1(t1 === 0);
        currVal_0 = Q.interpolate0(_ctx.message.action.label);
        t1 = this._snackbar_template$_expr_0;
        if (t1 !== currVal_0) {
          this._snackbar_template$_text_1.textContent = currVal_0;
          this._snackbar_template$_expr_0 = currVal_0;
        }
        this._snackbar_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._snackbar_template$_compView_0.destroy$0();
      },
      _handle_trigger_0_0$1: [function($$event) {
        J.get$action$z(J.get$message$z(this.ctx)).callback.call$0();
      }, "call$1", "get$_handle_trigger_0_0", 4, 0, 2],
      $asAppView: function() {
        return [T.SkawaSnackbarComponent];
      }
    }
  }], ["", "main.dart",, F, {
    "^": "",
    main: function() {
      H.interceptedTypeCheck(G.appInjector(G.run___identityInjector$closure(), G.modules__createNgZone$closure()).$get$1(0, C.Type_ApplicationRef_Aij), "$isApplicationRef").bootstrap$1$1(C.ComponentFactory_iyo, Q.AppComponent);
    }
  }, 1]];
  setupProgram(dart, 0, 0);
  // getInterceptor methods
  J.getInterceptor$ = function(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSDouble.prototype;
    }
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return J.JSNull.prototype;
    if (typeof receiver == "boolean")
      return J.JSBool.prototype;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$ansx = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$asx = function(receiver) {
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$ax = function(receiver) {
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$bn = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (receiver == null)
      return receiver;
    if (typeof receiver == "boolean")
      return J.JSBool.prototype;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$n = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$ns = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$s = function(receiver) {
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$x = function(receiver) {
    if (receiver == null)
      return receiver;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$z = function(receiver) {
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.set$button$z = function(receiver, value) {
    return J.getInterceptor$z(receiver).set$button(receiver, value);
  };
  J.set$checked$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$checked(receiver, value);
  };
  J.set$grid$z = function(receiver, value) {
    return J.getInterceptor$z(receiver).set$grid(receiver, value);
  };
  J.set$visible$z = function(receiver, value) {
    return J.getInterceptor$z(receiver).set$visible(receiver, value);
  };
  J.get$action$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$action(receiver);
  };
  J.get$alert$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$alert(receiver);
  };
  J.get$attributes$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$attributes(receiver);
  };
  J.get$checked$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$checked(receiver);
  };
  J.get$children$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$children(receiver);
  };
  J.get$className$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$className(receiver);
  };
  J.get$classes$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$classes(receiver);
  };
  J.get$disabled$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$disabled(receiver);
  };
  J.get$first$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$first(receiver);
  };
  J.get$hashCode$ = function(receiver) {
    return J.getInterceptor$(receiver).get$hashCode(receiver);
  };
  J.get$height$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$height(receiver);
  };
  J.get$id$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$id(receiver);
  };
  J.get$isCollapsed$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$isCollapsed(receiver);
  };
  J.get$isEmpty$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
  };
  J.get$isNotEmpty$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
  };
  J.get$iterator$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$iterator(receiver);
  };
  J.get$label$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$label(receiver);
  };
  J.get$left$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$left(receiver);
  };
  J.get$length$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$length(receiver);
  };
  J.get$message$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$message(receiver);
  };
  J.get$navigate$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$navigate(receiver);
  };
  J.get$onBlur$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$onBlur(receiver);
  };
  J.get$onFocus$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$onFocus(receiver);
  };
  J.get$onKeyDown$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$onKeyDown(receiver);
  };
  J.get$onKeyPress$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$onKeyPress(receiver);
  };
  J.get$onKeyUp$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onKeyUp(receiver);
  };
  J.get$onMouseDown$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onMouseDown(receiver);
  };
  J.get$onMouseUp$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onMouseUp(receiver);
  };
  J.get$open$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$open(receiver);
  };
  J.get$previousNode$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$previousNode(receiver);
  };
  J.get$role$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$role(receiver);
  };
  J.get$single$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$single(receiver);
  };
  J.get$size$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$size(receiver);
  };
  J.get$sort$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$sort(receiver);
  };
  J.get$tabIndex$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$tabIndex(receiver);
  };
  J.get$target$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$target(receiver);
  };
  J.get$top$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$top(receiver);
  };
  J.get$topLeft$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$topLeft(receiver);
  };
  J.get$visibility$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$visibility(receiver);
  };
  J.get$width$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$width(receiver);
  };
  J.$add$ansx = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver + a0;
    return J.getInterceptor$ansx(receiver).$add(receiver, a0);
  };
  J.$and$bn = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver & a0) >>> 0;
    return J.getInterceptor$bn(receiver).$and(receiver, a0);
  };
  J.$eq$ = function(receiver, a0) {
    if (receiver == null)
      return a0 == null;
    if (typeof receiver != "object")
      return a0 != null && receiver === a0;
    return J.getInterceptor$(receiver).$eq(receiver, a0);
  };
  J.$gt$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver > a0;
    return J.getInterceptor$n(receiver).$gt(receiver, a0);
  };
  J.$index$asx = function(receiver, a0) {
    if (typeof a0 === "number")
      if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
        if (a0 >>> 0 === a0 && a0 < receiver.length)
          return receiver[a0];
    return J.getInterceptor$asx(receiver).$index(receiver, a0);
  };
  J.$indexSet$ax = function(receiver, a0, a1) {
    return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
  };
  J.$lt$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver < a0;
    return J.getInterceptor$n(receiver).$lt(receiver, a0);
  };
  J.$or$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver | a0) >>> 0;
    return J.getInterceptor$n(receiver).$or(receiver, a0);
  };
  J._add$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver)._add$1(receiver, a0);
  };
  J._hasAttribute$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver)._hasAttribute$1(receiver, a0);
  };
  J._initEvent$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver)._initEvent$3(receiver, a0, a1, a2);
  };
  J._removeChild$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver)._removeChild$1(receiver, a0);
  };
  J._replaceChild$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
  };
  J.accept$1$z = function(receiver, a0) {
    return J.getInterceptor$z(receiver).accept$1(receiver, a0);
  };
  J.add$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).add$1(receiver, a0);
  };
  J.addEventListener$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).addEventListener$2(receiver, a0, a1);
  };
  J.addEventListener$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
  };
  J.allMatches$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
  };
  J.append$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).append$1(receiver, a0);
  };
  J.codeUnitAt$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
  };
  J.compareTo$1$ns = function(receiver, a0) {
    return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
  };
  J.contains$1$asx = function(receiver, a0) {
    return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
  };
  J.contains$2$asx = function(receiver, a0, a1) {
    return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
  };
  J.elementAt$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
  };
  J.forEach$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
  };
  J.getAttribute$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).getAttribute$1(receiver, a0);
  };
  J.highlight$2$z = function(receiver, a0, a1) {
    return J.getInterceptor$z(receiver).highlight$2(receiver, a0, a1);
  };
  J.insertAll$2$ax = function(receiver, a0, a1) {
    return J.getInterceptor$ax(receiver).insertAll$2(receiver, a0, a1);
  };
  J.insertAllBefore$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).insertAllBefore$2(receiver, a0, a1);
  };
  J.insertBefore$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).insertBefore$2(receiver, a0, a1);
  };
  J.map$1$1$ax = function(receiver, a0, $T1) {
    return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
  };
  J.matchAsPrefix$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
  };
  J.noSuchMethod$1$ = function(receiver, a0) {
    return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
  };
  J.parse$1$z = function(receiver, a0) {
    return J.getInterceptor$z(receiver).parse$1(receiver, a0);
  };
  J.remove$0$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).remove$0(receiver);
  };
  J.removeAt$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).removeAt$1(receiver, a0);
  };
  J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
  };
  J.replaceWith$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
  };
  J.setAttribute$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).setAttribute$2(receiver, a0, a1);
  };
  J.startsWith$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
  };
  J.stopPropagation$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).stopPropagation$0(receiver);
  };
  J.substring$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
  };
  J.toLowerCase$0$s = function(receiver) {
    return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
  };
  J.toRadixString$1$n = function(receiver, a0) {
    return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
  };
  J.toString$0$ = function(receiver) {
    return J.getInterceptor$(receiver).toString$0(receiver);
  };
  J.trim$0$s = function(receiver) {
    return J.getInterceptor$s(receiver).trim$0(receiver);
  };
  J.where$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).where$1(receiver, a0);
  };
  Isolate.makeConstantList = function(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  };
  var $ = Isolate.$isolateProperties;
  C.AnchorElement_methods = W.AnchorElement.prototype;
  C.BodyElement_methods = W.BodyElement.prototype;
  C.Comment_methods = W.Comment.prototype;
  C.CssStyleDeclaration_methods = W.CssStyleDeclaration.prototype;
  C.DivElement_methods = W.DivElement.prototype;
  C.DomImplementation_methods = W.DomImplementation.prototype;
  C.HeadElement_methods = W.HeadElement.prototype;
  C.HtmlDocument_methods = W.HtmlDocument.prototype;
  C.Interceptor_methods = J.Interceptor.prototype;
  C.JSArray_methods = J.JSArray.prototype;
  C.JSBool_methods = J.JSBool.prototype;
  C.JSDouble_methods = J.JSDouble.prototype;
  C.JSInt_methods = J.JSInt.prototype;
  C.JSNull_methods = J.JSNull.prototype;
  C.JSNumber_methods = J.JSNumber.prototype;
  C.JSString_methods = J.JSString.prototype;
  C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
  C.NativeUint8List_methods = H.NativeUint8List.prototype;
  C.NodeList_methods = W.NodeList.prototype;
  C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
  C.Range_methods = W.Range.prototype;
  C.SpanElement_methods = W.SpanElement.prototype;
  C.TableElement_methods = W.TableElement.prototype;
  C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
  C.Window_methods = W.Window.prototype;
  C.AfterCustomAlignment_ZCw = new K.AfterCustomAlignment(false, "", "", "After", null);
  C.Alignment_Center_center = new K.Alignment("Center", "center");
  C.Alignment_Yw7 = new K.Alignment("End", "flex-end");
  C.Alignment_dMH = new K.Alignment("Start", "flex-start");
  C.BeforeCustomAlignment_yHF = new K.BeforeCustomAlignment(true, "", "", "Before", null);
  C.C_BlockTagBlockHtmlSyntax = new K.BlockTagBlockHtmlSyntax();
  C.C_BlockquoteSyntax = new K.BlockquoteSyntax();
  C.C_CodeBlockSyntax = new K.CodeBlockSyntax();
  C.C_DomSanitizationServiceImpl = new R.DomSanitizationServiceImpl();
  C.C_EmptyBlockSyntax = new K.EmptyBlockSyntax();
  C.C_EmptyIterator = new H.EmptyIterator([P.Null]);
  C.C_FencedCodeBlockSyntax = new K.FencedCodeBlockSyntax();
  C.C_HeaderSyntax = new K.HeaderSyntax();
  C.C_HorizontalRuleSyntax = new K.HorizontalRuleSyntax();
  C.C_Object = new P.Object();
  C.C_OrderedListSyntax = new K.OrderedListSyntax();
  C.C_OtherTagBlockHtmlSyntax = new K.OtherTagBlockHtmlSyntax();
  C.C_OutOfMemoryError = new P.OutOfMemoryError();
  C.C_ParagraphSyntax = new K.ParagraphSyntax();
  C.C_SetextHeaderSyntax = new K.SetextHeaderSyntax();
  C.C_UnorderedListSyntax = new K.UnorderedListSyntax();
  C.C_Utf8Encoder = new P.Utf8Encoder();
  C.C__DelayedDone = new P._DelayedDone();
  C.C__JSRandom = new P._JSRandom();
  C.C__NoopDisposable = new R._NoopDisposable();
  C.C__RootZone = new P._RootZone();
  C.Clock_systemTime = new V.Clock(V.time__systemTime$closure());
  C.ComponentFactory_Ohe = new D.ComponentFactory("first-down-percent", U.first_down_percent_template__viewFactory_FirstDownPercentComponentHost0$closure(), [L.FirstDownPercentComponent]);
  C.ComponentFactory_iyo = new D.ComponentFactory("app-cmp", V.app_component_template__viewFactory_AppComponentHost0$closure(), [Q.AppComponent]);
  C.DomServiceState_0 = new F.DomServiceState(0, "DomServiceState.Idle");
  C.DomServiceState_1 = new F.DomServiceState(1, "DomServiceState.Writing");
  C.DomServiceState_2 = new F.DomServiceState(2, "DomServiceState.Reading");
  C.Duration_0 = new P.Duration(0);
  C.Duration_100000 = new P.Duration(100000);
  C.Duration_150000 = new P.Duration(150000);
  C.Duration_200000 = new P.Duration(200000);
  C.Duration_500000 = new P.Duration(500000);
  C.EmptyInjector_null = new R.EmptyInjector(null);
  C.HtmlEscapeMode_2oY = new P.HtmlEscapeMode("element", true, false, false, false);
  C.HtmlEscape_uMl = new P.HtmlEscape(C.HtmlEscapeMode_2oY);
  C.Icon_check_box = new L.Icon("check_box");
  C.Icon_check_box_outline_blank = new L.Icon("check_box_outline_blank");
  C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
  C.JS_CONST_4hp = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
  C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
  C.JS_CONST_QJm = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
  C.JS_CONST_bDt = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
  C.JS_CONST_gkc = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
  C.JS_CONST_rr7 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
  C.JS_CONST_u2C = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
  C.C_DefaultEquality = new U.DefaultEquality([P.Null]);
  C.ListEquality_DefaultEquality = new U.ListEquality(C.C_DefaultEquality, [Y.ChangeRecord]);
  C.ListEquality_DefaultEquality0 = new U.ListEquality(C.C_DefaultEquality, [null]);
  C.List_2Zi = H.setRuntimeTypeInfo(Isolate.makeConstantList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::autofocus", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), [P.String]);
  C.List_3_4_6_8 = H.setRuntimeTypeInfo(Isolate.makeConstantList([3, 4, 6, 8]), [P.int]);
  C.Rectangle_0_0_0_0 = new P.Rectangle(0, 0, 0, 0, [P.num]);
  C.List_4YB = H.setRuntimeTypeInfo(Isolate.makeConstantList([C.Rectangle_0_0_0_0]), [[P.Rectangle, P.num]]);
  C.List_CX7 = H.setRuntimeTypeInfo(Isolate.makeConstantList(["arrow_back", "arrow_forward", "chevron_left", "chevron_right", "navigate_before", "navigate_next", "last_page", "first_page", "open_in_new", "star_half", "exit_to_app"]), [P.String]);
  C.List_ego = H.setRuntimeTypeInfo(Isolate.makeConstantList(["HEAD", "AREA", "BASE", "BASEFONT", "BR", "COL", "COLGROUP", "EMBED", "FRAME", "FRAMESET", "HR", "IMAGE", "IMG", "INPUT", "ISINDEX", "LINK", "META", "PARAM", "SOURCE", "STYLE", "TITLE", "WBR"]), [P.String]);
  C.List_empty1 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.Null]);
  C.List_empty0 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.String]);
  C.List_empty = Isolate.makeConstantList([]);
  C.RelativePosition_wss = new K.RelativePosition(C.Alignment_dMH, C.Alignment_dMH, "top center");
  C.RelativePosition_AG4 = new K.RelativePosition(C.Alignment_Yw7, C.Alignment_dMH, "top right");
  C.RelativePosition_8p6 = new K.RelativePosition(C.Alignment_dMH, C.Alignment_dMH, "top left");
  C.RelativePosition_W7X = new K.RelativePosition(C.Alignment_dMH, C.Alignment_Yw7, "bottom center");
  C.RelativePosition_VUu = new K.RelativePosition(C.Alignment_Yw7, C.Alignment_Yw7, "bottom right");
  C.RelativePosition_jtt = new K.RelativePosition(C.Alignment_dMH, C.Alignment_Yw7, "bottom left");
  C.List_ezW = H.setRuntimeTypeInfo(Isolate.makeConstantList([C.RelativePosition_wss, C.RelativePosition_AG4, C.RelativePosition_8p6, C.RelativePosition_W7X, C.RelativePosition_VUu, C.RelativePosition_jtt]), [K.RelativePosition]);
  C.List_gnE = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 65498, 45055, 65535, 34815, 65534, 18431]), [P.int]);
  C.List_huV = H.setRuntimeTypeInfo(Isolate.makeConstantList(["auto", "x-small", "small", "medium", "large", "x-large"]), [P.String]);
  C.RelativePosition_Fb0 = new K.RelativePosition(C.Alignment_Center_center, C.Alignment_dMH, "top center");
  C.RelativePosition_XbC = new K.RelativePosition(C.Alignment_Center_center, C.Alignment_Yw7, "bottom center");
  C.List_scL = H.setRuntimeTypeInfo(Isolate.makeConstantList([C.RelativePosition_8p6, C.RelativePosition_AG4, C.RelativePosition_jtt, C.RelativePosition_VUu, C.RelativePosition_Fb0, C.RelativePosition_XbC]), [K.RelativePosition]);
  C.List_wSV = H.setRuntimeTypeInfo(Isolate.makeConstantList(["bind", "if", "ref", "repeat", "syntax"]), [P.String]);
  C.List_yrN = H.setRuntimeTypeInfo(Isolate.makeConstantList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), [P.String]);
  C.List_empty2 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.Symbol0]);
  C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty2, [P.Symbol0, null]);
  C.List_asc_desc = H.setRuntimeTypeInfo(Isolate.makeConstantList(["asc", "desc"]), [P.String]);
  C.SortDirection_0 = new S.SortDirection(0, "SortDirection.asc");
  C.SortDirection_1 = new S.SortDirection(1, "SortDirection.desc");
  C.Map_oWtLB = new H.ConstantStringMap(2, {asc: C.SortDirection_0, desc: C.SortDirection_1}, C.List_asc_desc, [P.String, S.SortDirection]);
  C.List_yHw = H.setRuntimeTypeInfo(Isolate.makeConstantList(["bottom right", "bottom left", "center right", "center left", "top right", "top left"]), [P.String]);
  C.Map_yH4ig = new H.ConstantStringMap(6, {"bottom right": "bottom left", "bottom left": "bottom right", "center right": "center left", "center left": "center right", "top right": "top left", "top left": "top right"}, C.List_yHw, [P.String, P.String]);
  C.OpaqueToken_8qt = new S.OpaqueToken("third_party.dart_src.acx.material_datepicker.datepickerClock", [null]);
  C.OpaqueToken_APP_ID = new S.OpaqueToken("APP_ID", [P.String]);
  C.OpaqueToken_acxDarkTheme = new S.OpaqueToken("acxDarkTheme", [null]);
  C.OpaqueToken_defaultPopupPositions = new S.OpaqueToken("defaultPopupPositions", [[P.List, K.RelativePosition]]);
  C.OpaqueToken_isRtl = new S.OpaqueToken("isRtl", [null]);
  C.OpaqueToken_overlayContainer = new S.OpaqueToken("overlayContainer", [null]);
  C.OpaqueToken_overlayContainerName = new S.OpaqueToken("overlayContainerName", [null]);
  C.OpaqueToken_overlayContainerParent = new S.OpaqueToken("overlayContainerParent", [null]);
  C.OpaqueToken_overlayRepositionLoop = new S.OpaqueToken("overlayRepositionLoop", [null]);
  C.OpaqueToken_overlaySyncDom = new S.OpaqueToken("overlaySyncDom", [null]);
  C.SelectableOption_0 = new E.SelectableOption(0, "SelectableOption.Selectable");
  C.SelectableOption_2 = new E.SelectableOption(2, "SelectableOption.Hidden");
  C.Symbol_autoDismiss = new H.Symbol("autoDismiss");
  C.Symbol_call = new H.Symbol("call");
  C.Symbol_constrainToViewport = new H.Symbol("constrainToViewport");
  C.Symbol_enforceSpaceConstraints = new H.Symbol("enforceSpaceConstraints");
  C.Symbol_isEmpty = new H.Symbol("isEmpty");
  C.Symbol_isNotEmpty = new H.Symbol("isNotEmpty");
  C.Symbol_keys = new H.Symbol("keys");
  C.Symbol_length = new H.Symbol("length");
  C.Symbol_matchMinSourceWidth = new H.Symbol("matchMinSourceWidth");
  C.Symbol_offsetX = new H.Symbol("offsetX");
  C.Symbol_offsetY = new H.Symbol("offsetY");
  C.Symbol_preferredPositions = new H.Symbol("preferredPositions");
  C.Symbol_source = new H.Symbol("source");
  C.Symbol_trackLayoutChanges = new H.Symbol("trackLayoutChanges");
  C.Symbol_values = new H.Symbol("values");
  C.TextDirection_LTR_ltr = new T.TextDirection("LTR", "ltr");
  C.TextDirection_RTL_rtl = new T.TextDirection("RTL", "rtl");
  C.TextDirection_UNKNOWN_ltr = new T.TextDirection("UNKNOWN", "ltr");
  C.Type_ActivationHandler_Nm5 = H.createRuntimeType([Z.ActivationHandler,,]);
  C.Type_ActiveItemModel_69t = H.createRuntimeType([O.ActiveItemModel,,]);
  C.Type_AcxDarkTheme_Tng = H.createRuntimeType(F.AcxDarkTheme);
  C.Type_AcxImperativeViewUtils_Ucj = H.createRuntimeType(O.AcxImperativeViewUtils);
  C.Type_AppViewUtils_NWH = H.createRuntimeType(Q.AppViewUtils);
  C.Type_ApplicationRef_Aij = H.createRuntimeType(Y.ApplicationRef);
  C.Type_ButtonDirective_hH0 = H.createRuntimeType(T.ButtonDirective);
  C.Type_ChangeRecord_INA = H.createRuntimeType(Y.ChangeRecord);
  C.Type_Clock_MYz = H.createRuntimeType(V.Clock);
  C.Type_ComponentLoader_7xV = H.createRuntimeType(M.ComponentLoader);
  C.Type_DeferredContentAware_BCk = H.createRuntimeType(E.DeferredContentAware);
  C.Type_Disposer_k0p = H.createRuntimeType(R.Disposer);
  C.Type_Document_woc = H.createRuntimeType(W.Document);
  C.Type_DomPopupSourceFactory_gmZ = H.createRuntimeType(K.DomPopupSourceFactory);
  C.Type_DomRuler_2Vk = H.createRuntimeType(K.DomRuler);
  C.Type_DomSanitizationService_cKo = H.createRuntimeType(Z.DomSanitizationService);
  C.Type_DomService_2jN = H.createRuntimeType(F.DomService);
  C.Type_DropdownHandle_YMM = H.createRuntimeType(M.DropdownHandle);
  C.Type_EditorRenderer_wbs = H.createRuntimeType(Q.EditorRenderer);
  C.Type_ExceptionHandler_qBE = H.createRuntimeType(U.ExceptionHandler);
  C.Type_Focusable_adc = H.createRuntimeType(O.Focusable);
  C.Type_HasDisabled_qzc = H.createRuntimeType(U.HasDisabled);
  C.Type_HasRenderer_wsa = H.createRuntimeType([G.HasRenderer,,]);
  C.Type_HtmlDocument_RWm = H.createRuntimeType(W.HtmlDocument);
  C.Type_IdGenerator_yLN = H.createRuntimeType(R.IdGenerator);
  C.Type_Injector_aJC = H.createRuntimeType(M.Injector);
  C.Type_ManagedZone_s3L = H.createRuntimeType(V.ManagedZone);
  C.Type_MaterialButtonComponent_xw8 = H.createRuntimeType(B.MaterialButtonComponent);
  C.Type_MaterialPopupComponent_OpB = H.createRuntimeType(G.MaterialPopupComponent);
  C.Type_ModalComponent_Npb = H.createRuntimeType(D.ModalComponent);
  C.Type_Modal_OjC = H.createRuntimeType(D.Modal);
  C.Type_NgZone_6ty = H.createRuntimeType(Y.NgZone);
  C.Type_OverlayDomRenderService_qUY = H.createRuntimeType(K.OverlayDomRenderService);
  C.Type_OverlayService_4iH = H.createRuntimeType(X.OverlayService);
  C.Type_OverlayStyleConfig_rp8 = H.createRuntimeType(R.OverlayStyleConfig);
  C.Type_PopupHierarchy_7R9 = H.createRuntimeType(Z.PopupHierarchy);
  C.Type_PopupRef_AWk = H.createRuntimeType(V.PopupRef);
  C.Type_PopupSizeProvider_a5y = H.createRuntimeType(F.PopupSizeProvider);
  C.Type_PropertyChangeRecord_8EM = H.createRuntimeType([Y.PropertyChangeRecord,,]);
  C.Type_Qkw = H.createRuntimeType([M.MaterialDropdownSelectComponent,,]);
  C.Type_ReferenceDirective_i58 = H.createRuntimeType(F.ReferenceDirective);
  C.Type_SanitizationService_bRS = H.createRuntimeType(E.SanitizationService);
  C.Type_SelectionContainer_yzp = H.createRuntimeType([L.SelectionContainer,,]);
  C.Type_SelectionItem_uvp = H.createRuntimeType([L.SelectionItem,,]);
  C.Type_SkawaCardComponent_sYn = H.createRuntimeType(V.SkawaCardComponent);
  C.Type_SkawaCardHeaderComponent_2jN = H.createRuntimeType(V.SkawaCardHeaderComponent);
  C.Type_SkawaDataTableColComponent_tpI = H.createRuntimeType([G.SkawaDataTableColComponent, U.RowData]);
  C.Type_SkawaDataTableComponent_qdG = H.createRuntimeType([S.SkawaDataTableComponent, U.RowData]);
  C.Type_SkawaHexColorizePipe_cNQ = H.createRuntimeType(L.SkawaHexColorizePipe);
  C.Type_SlowComponentLoader_qxe = H.createRuntimeType(L.SlowComponentLoader);
  C.Type_SnackbarService_v1z = H.createRuntimeType(T.SnackbarService);
  C.Type_TestabilityRegistry_IMm = H.createRuntimeType(D.TestabilityRegistry);
  C.Type_Testability_h8g = H.createRuntimeType(D.Testability);
  C.Type_UnskippedInFooterPipe_ENo = H.createRuntimeType(S.UnskippedInFooterPipe);
  C.Type_Window_0H0 = H.createRuntimeType(W.Window);
  C.Type_ZIndexer_ViP = H.createRuntimeType(X.ZIndexer);
  C.Type_dynamic_0Rz = H.createRuntimeType(null);
  C.Type_gap = H.createRuntimeType(B.MaterialTemporaryDrawerComponent);
  C.Type_gkc = H.createRuntimeType(G.MaterialPersistentDrawerDirective);
  C.Type_iap = H.createRuntimeType([G.SkawaDataColRendererDirective, U.RowData]);
  C.Utf8Codec_false = new P.Utf8Codec(false);
  C.ViewEncapsulation_0 = new A.ViewEncapsulation(0, "ViewEncapsulation.Emulated");
  C.ViewEncapsulation_1 = new A.ViewEncapsulation(1, "ViewEncapsulation.None");
  C.ViewType_0 = new R.ViewType(0, "ViewType.host");
  C.ViewType_1 = new R.ViewType(1, "ViewType.component");
  C.ViewType_2 = new R.ViewType(2, "ViewType.embedded");
  C.Visibility_Hidden_visibility_hidden = new L.Visibility("Hidden", "visibility", "hidden");
  C.Visibility_None_display_none = new L.Visibility("None", "display", "none");
  C.Visibility_Visible_null_null = new L.Visibility("Visible", null, null);
  C._ImmutableOverlayState_oyn = new Z._ImmutableOverlayState(false, null, null, null, null, null, null, null, C.Visibility_None_display_none, null, null);
  C._InteractionType_0 = new O._InteractionType(0, "_InteractionType.mouse");
  C._InteractionType_1 = new O._InteractionType(1, "_InteractionType.keyboard");
  C._InteractionType_2 = new O._InteractionType(2, "_InteractionType.none");
  C._IterationMarker_null_2 = new P._IterationMarker(null, 2);
  C._ZoneFunction_3bB = new P._ZoneFunction(C.C__RootZone, P.async___rootCreatePeriodicTimer$closure(), [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1, args: [P.Timer]}]}]);
  C._ZoneFunction_7G2 = new P._ZoneFunction(C.C__RootZone, P.async___rootRegisterBinaryCallback$closure(), [P.Function]);
  C._ZoneFunction_Eeh = new P._ZoneFunction(C.C__RootZone, P.async___rootRegisterUnaryCallback$closure(), [P.Function]);
  C._ZoneFunction_NMc = new P._ZoneFunction(C.C__RootZone, P.async___rootHandleUncaughtError$closure(), [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]);
  C._ZoneFunction__RootZone__rootCreateTimer = new P._ZoneFunction(C.C__RootZone, P.async___rootCreateTimer$closure(), [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}]);
  C._ZoneFunction__RootZone__rootErrorCallback = new P._ZoneFunction(C.C__RootZone, P.async___rootErrorCallback$closure(), [{func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]);
  C._ZoneFunction__RootZone__rootFork = new P._ZoneFunction(C.C__RootZone, P.async___rootFork$closure(), [{func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map,,,]]}]);
  C._ZoneFunction__RootZone__rootPrint = new P._ZoneFunction(C.C__RootZone, P.async___rootPrint$closure(), [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}]);
  C._ZoneFunction__RootZone__rootRegisterCallback = new P._ZoneFunction(C.C__RootZone, P.async___rootRegisterCallback$closure(), [P.Function]);
  C._ZoneFunction__RootZone__rootRun = new P._ZoneFunction(C.C__RootZone, P.async___rootRun$closure(), [P.Function]);
  C._ZoneFunction__RootZone__rootRunBinary = new P._ZoneFunction(C.C__RootZone, P.async___rootRunBinary$closure(), [P.Function]);
  C._ZoneFunction__RootZone__rootRunUnary = new P._ZoneFunction(C.C__RootZone, P.async___rootRunUnary$closure(), [P.Function]);
  C._ZoneFunction__RootZone__rootScheduleMicrotask = new P._ZoneFunction(C.C__RootZone, P.async___rootScheduleMicrotask$closure(), [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}]);
  C._ZoneSpecification_ALf = new P._ZoneSpecification(null, null, null, null, null, null, null, null, null, null, null, null, null);
  $.printToZone = null;
  $.Closure_functionCounter = 0;
  $.BoundClosure_selfFieldNameCache = null;
  $.BoundClosure_receiverFieldNameCache = null;
  $._inTypeAssertion = false;
  $.getTagFunction = null;
  $.alternateTagFunction = null;
  $.prototypeForTagFunction = null;
  $.dispatchRecordsForInstanceTags = null;
  $.interceptorsForUncacheableTags = null;
  $.initNativeDispatchFlag = null;
  $._nextCallback = null;
  $._lastCallback = null;
  $._lastPriorityCallback = null;
  $._isInCallbackLoop = false;
  $.Zone__current = C.C__RootZone;
  $._RootZone__rootDelegate = null;
  $.Expando__keyCount = 0;
  $.Element__parseDocument = null;
  $.Element__parseRange = null;
  $.Element__defaultValidator = null;
  $.Element__defaultSanitizer = null;
  $.Device__isOpera = null;
  $.Device__isIE = null;
  $.Device__isFirefox = null;
  $.Device__isWebKit = null;
  $.Device__cachedCssPrefix = null;
  $._platformInjectorCache = null;
  $.NgClass__separator = null;
  $.ChangeDetectionHost__current = null;
  $.domRootRendererIsDirty = false;
  $.appViewUtils = null;
  $.AppViewUtils__nextCompTypeId = 0;
  $.sharedStylesHost = null;
  $.ViewMaterialTemporaryDrawerComponent0__renderType = null;
  $.ViewDynamicComponent0__renderType = null;
  $.FrameworkStabilizers__nextId = 0;
  $.ViewGlyphComponent0__renderType = null;
  $.ZIndexer__currentInstance = null;
  $.ViewMaterialButtonComponent0__renderType = null;
  $.ViewMaterialCheckboxComponent0__renderType = null;
  $.ViewMaterialIconComponent0__renderType = null;
  $.ViewMaterialListComponent0__renderType = null;
  $.MaterialPopupComponent__viewportRect = null;
  $.ViewMaterialPopupComponent0__renderType = null;
  $.ViewMaterialProgressComponent0__renderType = null;
  $._numRipples = 0;
  $._rippleIndex = 0;
  $._ripplePool = null;
  $._rippleTemplate = null;
  $._opacityTiming = null;
  $._opacityKeyframes = null;
  $._transformTiming = null;
  $.ViewMaterialRippleComponent0__renderType = null;
  $.ViewDropdownButtonComponent0__renderType = null;
  $.ViewMaterialDropdownSelectComponent0__renderType = null;
  $.ViewMaterialSelectDropdownItemComponent0__renderType = null;
  $._singletonService = null;
  $.DomService_maintainZoneOnCallbacks = true;
  $.enableNewTriggerLogic = null;
  $.Bidi__RTL_DETECTION_THRESHOLD = 0.4;
  $.ViewSkawaCkeditorComponent0__renderType = null;
  $.ViewSkawaInfobarComponent0__renderType = null;
  $.ViewSkawaMarkdownRendererComponent0__renderType = null;
  $.ViewSkawaRawMarkdownRendererComponent0__renderType = null;
  $.ViewSkawaNavItemComponent0__renderType = null;
  $.ViewSkawaSidebarItemComponent0__renderType = null;
  $.ViewAppComponent0__renderType = null;
  $.ViewCardDemoComponent0__renderType = null;
  $.ViewCkeditorDemoComponent0__renderType = null;
  $.ViewCarTableComponent0__renderType = null;
  $.ViewDataTableDemoComponent0__renderType = null;
  $.ViewSchoolTableComponent0__renderType = null;
  $.ViewFirstDownPercentComponent0__renderType = null;
  $.ViewWrTableComponent0__renderType = null;
  $.ViewDemoHeaderComponent0__renderType = null;
  $.ViewExtendedMaterialIconDemoComponent0__renderType = null;
  $.ViewGridDemoComponent0__renderType = null;
  $.ViewHexColorizePipeDemoComponent0__renderType = null;
  $.ViewInfobarDemoComponent0__renderType = null;
  $.ViewMarkdownDemoComponent0__renderType = null;
  $.ViewNavItemDemoComponent0__renderType = null;
  $.ViewSidebarItemDemoComponent0__renderType = null;
  $.ViewSnackbarDemoComponent0__renderType = null;
  $.ViewSkawaCardComponent0__renderType = null;
  $.ViewSkawaCardContentComponent0__renderType = null;
  $.ViewSkawaCardHeaderComponent0__renderType = null;
  $.ViewSkawaCardActionsComponent0__renderType = null;
  $.ViewSkawaDataTableComponent0__renderType = null;
  $.ViewSkawaDataTableColComponent0__renderType = null;
  $.ViewExtendedMaterialIconComponent0__renderType = null;
  $.ViewGridComponent0__renderType = null;
  $.ViewSkawaSnackbarComponent0__renderType = null;
  $ = null;
  init.isHunkLoaded = function(hunkHash) {
    return !!$dart_deferred_initializers$[hunkHash];
  };
  init.deferredInitialized = new Object(null);
  init.isHunkInitialized = function(hunkHash) {
    return init.deferredInitialized[hunkHash];
  };
  init.initializeLoadedHunk = function(hunkHash) {
    var hunk = $dart_deferred_initializers$[hunkHash];
    if (hunk == null)
      throw "DeferredLoading state error: code with hash '" + hunkHash + "' was not loaded";
    hunk($globals$, $);
    init.deferredInitialized[hunkHash] = true;
  };
  init.deferredLibraryParts = {};
  init.deferredPartUris = [];
  init.deferredPartHashes = [];
  // Empty type-to-interceptor map.
  (function(lazies) {
    for (var i = 0; i < lazies.length;) {
      var fieldName = lazies[i++];
      var getterName = lazies[i++];
      var lazyValue = lazies[i++];
      var staticName = lazies[i++];
      Isolate.$lazy(fieldName, getterName, lazyValue, staticName);
    }
  })(["DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", function() {
    return H.getIsolateAffinityTag("_$dart_dartClosure");
  }, "DART_CLOSURE_PROPERTY_NAME", "JS_INTEROP_INTERCEPTOR_TAG", "$get$JS_INTEROP_INTERCEPTOR_TAG", function() {
    return H.getIsolateAffinityTag("_$dart_js");
  }, "JS_INTEROP_INTERCEPTOR_TAG", "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    }));
  }, "TypeErrorDecoder_noSuchMethodPattern", "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    }));
  }, "TypeErrorDecoder_notClosurePattern", "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
  }, "TypeErrorDecoder_nullCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = '$arguments$';
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_nullLiteralCallPattern", "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
  }, "TypeErrorDecoder_undefinedCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = '$arguments$';
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_undefinedLiteralCallPattern", "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
  }, "TypeErrorDecoder_nullPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_nullLiteralPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
  }, "TypeErrorDecoder_undefinedPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", function() {
    return P._AsyncRun__initializeScheduleImmediate();
  }, "_AsyncRun__scheduleImmediateClosure", "Future__nullFuture", "$get$Future__nullFuture", function() {
    return P._Future$zoneValue(null, C.C__RootZone, P.Null);
  }, "Future__nullFuture", "_DistinctStream__SENTINEL", "$get$_DistinctStream__SENTINEL", function() {
    return new P.Object();
  }, "_DistinctStream__SENTINEL", "_RootZone__rootMap", "$get$_RootZone__rootMap", function() {
    return P.HashMap_HashMap(null, null, null, null, null);
  }, "_RootZone__rootMap", "_toStringVisiting", "$get$_toStringVisiting", function() {
    return [];
  }, "_toStringVisiting", "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", function() {
    return P.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", true, false);
  }, "_Uri__needsNoEncoding", "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", function() {
    return {};
  }, "CssStyleDeclaration__propertyCache", "_Html5NodeValidator__allowedElements", "$get$_Html5NodeValidator__allowedElements", function() {
    return P.LinkedHashSet_LinkedHashSet$from(["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"], P.String);
  }, "_Html5NodeValidator__allowedElements", "_Html5NodeValidator__attributeValidators", "$get$_Html5NodeValidator__attributeValidators", function() {
    return P.LinkedHashMap_LinkedHashMap$_empty(P.String, P.Function);
  }, "_Html5NodeValidator__attributeValidators", "CssClassSetImpl__validTokenRE", "$get$CssClassSetImpl__validTokenRE", function() {
    return P.RegExp_RegExp("^\\S+$", true, false);
  }, "CssClassSetImpl__validTokenRE", "context", "$get$context", function() {
    return H.interceptedTypeCheck(P._wrapToDart(self), "$isJsObject");
  }, "context", "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", function() {
    return H.getIsolateAffinityTag("_$dart_dartObject");
  }, "_DART_OBJECT_PROPERTY_NAME", "_dartProxyCtor", "$get$_dartProxyCtor", function() {
    return function DartObject(o) {
      this.o = o;
    };
  }, "_dartProxyCtor", "_viewContainerAnchor", "$get$_viewContainerAnchor", function() {
    var t1 = W.document();
    return t1.createComment("");
  }, "_viewContainerAnchor", "_componentIdPlaceholder", "$get$_componentIdPlaceholder", function() {
    return P.RegExp_RegExp("%ID%", true, false);
  }, "_componentIdPlaceholder", "NgZone__anyZoneKey", "$get$NgZone__anyZoneKey", function() {
    return new P.Object();
  }, "NgZone__anyZoneKey", "_safeUrlPattern", "$get$_safeUrlPattern", function() {
    return P.RegExp_RegExp("^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))", false, false);
  }, "_safeUrlPattern", "_dataUrlPattern", "$get$_dataUrlPattern", function() {
    return P.RegExp_RegExp("^data:(?:image/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video/(?:mpeg|mp4|ogg|webm));base64,[a-z0-9+/]+=*$", false, false);
  }, "_dataUrlPattern", "styles26", "$get$styles26", function() {
    return ["material-drawer._ngcontent-%ID% material-list._ngcontent-%ID%{padding:0}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;align-items:center;color:rgba(0,0,0,0.54);display:flex}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label].disabled._ngcontent-%ID%{pointer-events:none}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label].disabled._ngcontent-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.38)}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label].disabled._ngcontent-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.38)}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%  .submenu-icon{transform:rotate(-90deg)}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% material-list-item._ngcontent-%ID%,material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%{font-weight:500;height:48px;padding:0 16px}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% material-list-item._ngcontent-%ID% material-icon._ngcontent-%ID%,material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID% material-icon._ngcontent-%ID%{color:rgba(0,0,0,0.54);margin-right:32px}material-drawer[persistent]._ngcontent-%ID%,material-drawer[permanent]._ngcontent-%ID%{width:256px}material-drawer[persistent]:not([end])._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent]:not([end])._ngcontent-%ID% ~ .material-content._ngcontent-%ID%,material-drawer[permanent]:not([end])._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[permanent]:not([end])._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{margin-left:256px}material-drawer[persistent][end]._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent][end]._ngcontent-%ID% ~ .material-content._ngcontent-%ID%,material-drawer[permanent][end]._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[permanent][end]._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{margin-right:256px}material-drawer[persistent].mat-drawer-collapsed:not([end])._ngcontent-%ID%{transform:translateX(-100%)}material-drawer[persistent].mat-drawer-collapsed:not([end])._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent].mat-drawer-collapsed:not([end])._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{margin-left:0}material-drawer[persistent].mat-drawer-collapsed[end]._ngcontent-%ID%{transform:translateX(100%)}material-drawer[persistent].mat-drawer-collapsed[end]._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent].mat-drawer-collapsed[end]._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{margin-right:0}material-drawer[persistent]._ngcontent-%ID%,material-drawer[permanent]._ngcontent-%ID%{background-color:#fff;bottom:0;box-sizing:border-box;display:flex;flex-direction:column;flex-wrap:nowrap;overflow:hidden;position:absolute;top:0;border-right:1px solid rgba(0,0,0,0.12);left:0}material-drawer[persistent][end]._ngcontent-%ID%,material-drawer[permanent][end]._ngcontent-%ID%{border-left:1px solid rgba(0,0,0,0.12);border-right:initial;left:initial;right:0}material-drawer[persistent]._ngcontent-%ID%{transition-duration:150ms;transition-property:transform,width;transition-timing-function:cubic-bezier(0.4,0,0.2,1)}material-drawer[persistent]._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent]._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{transition-duration:150ms;transition-property:margin-left,margin-right;transition-timing-function:cubic-bezier(0.4,0,0.2,1)}material-content._ngcontent-%ID%,.material-content._ngcontent-%ID%{display:block;min-height:100%;position:relative;z-index:0}.material-header._ngcontent-%ID%{background-color:#3f51b5;border:0;box-sizing:border-box;color:#fff;display:flex;flex-direction:column;flex-shrink:0;flex-wrap:nowrap;height:64px;justify-content:flex-start;overflow:hidden;padding:0;position:relative;width:100%;z-index:1}.material-header.shadow._ngcontent-%ID%{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}.material-header._ngcontent-%ID% ~ material-drawer[permanent]._ngcontent-%ID%,.material-header._ngcontent-%ID% ~ material-drawer[persistent]._ngcontent-%ID%{top:64px}.material-header._ngcontent-%ID% ~ material-content._ngcontent-%ID%,.material-header._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{min-height:calc(100% - 64px)}.material-header.dense-header._ngcontent-%ID%{height:48px}.material-header.dense-header._ngcontent-%ID% .material-header-row._ngcontent-%ID%{height:48px}.material-header.dense-header._ngcontent-%ID% ~ material-drawer[permanent]._ngcontent-%ID%,.material-header.dense-header._ngcontent-%ID% ~ material-drawer[persistent]._ngcontent-%ID%{top:48px}.material-header.dense-header._ngcontent-%ID% ~ material-content._ngcontent-%ID%,.material-header.dense-header._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{min-height:calc(100% - 48px)}.material-header-row._ngcontent-%ID%{align-items:center;align-self:stretch;box-sizing:border-box;display:flex;flex-direction:row;flex-shrink:0;flex-wrap:nowrap;height:64px;margin:0 12px;position:relative}@media (max-width:599px){.material-header-row._ngcontent-%ID%{margin:0 8px}}.material-header-row._ngcontent-%ID% > .material-drawer-button._ngcontent-%ID%{cursor:pointer}.material-header-row._ngcontent-%ID% .material-header-title._ngcontent-%ID%{bottom:0;box-sizing:border-box;display:block;height:20px;left:80px;line-height:1;margin-bottom:auto;margin-top:auto;position:absolute;top:0;font-size:20px;font-weight:500}.material-header-row._ngcontent-%ID% .material-spacer._ngcontent-%ID%{flex-grow:1}.material-header-row._ngcontent-%ID% material-button._ngcontent-%ID%{margin:0 4px}@media (max-width:599px){.material-header-row._ngcontent-%ID% material-button._ngcontent-%ID%{margin:0 0px}}.material-header-row._ngcontent-%ID% .material-navigation._ngcontent-%ID%{margin:0 12px}@media (max-width:599px){.material-header-row._ngcontent-%ID% .material-navigation._ngcontent-%ID%{margin:0 8px}}.material-header-row._ngcontent-%ID% > *._ngcontent-%ID%{flex-shrink:0}.mat-drawer-spacer._ngcontent-%ID%{height:56px}"];
  }, "styles26", "styles4", "$get$styles4", function() {
    return ["._nghost-%ID%{bottom:0;left:0;position:absolute;right:0;top:0;background-color:transparent;overflow:hidden;pointer-events:none;z-index:1}._nghost-%ID%.mat-drawer-expanded{pointer-events:auto}._nghost-%ID%[overlay].mat-drawer-expanded{background-color:rgba(0,0,0,0.38);transition-duration:225ms}._nghost-%ID%[overlay]{background-color:transparent;transition:background-color 195ms cubic-bezier(0.4,0,0.2,1)}._nghost-%ID% > .drawer-content._ngcontent-%ID%{background-color:#fff;bottom:0;box-sizing:border-box;display:flex;flex-direction:column;flex-wrap:nowrap;overflow:hidden;position:absolute;top:0;box-shadow:none;transform:translateX(0);pointer-events:auto;transition-property:box-shadow,left,right,transform,width;transition-duration:195ms;transition-timing-function:cubic-bezier(0.4,0,0.6,1)}._nghost-%ID%.mat-drawer-expanded > .drawer-content._ngcontent-%ID%{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2);transition-duration:225ms;transition-timing-function:cubic-bezier(0,0,0.2,1)}._nghost-%ID%  > .drawer-content{left:-256px;width:256px}._nghost-%ID%.mat-drawer-expanded  > .drawer-content{transform:translateX(100%)}._nghost-%ID%[end]  > .drawer-content{left:initial;right:-256px}._nghost-%ID%[end].mat-drawer-expanded  > .drawer-content{transform:translateX(-100%)}"];
  }, "styles4", "styles$MaterialTemporaryDrawerComponent", "$get$styles$MaterialTemporaryDrawerComponent", function() {
    return [$.$get$styles4()];
  }, "styles$MaterialTemporaryDrawerComponent", "styles17", "$get$styles17", function() {
    return ["[buttonDecorator]._ngcontent-%ID%{cursor:pointer}[buttonDecorator].is-disabled._ngcontent-%ID%{cursor:not-allowed}"];
  }, "styles17", "FrameworkStabilizers__idToFrameworkStabilizer", "$get$FrameworkStabilizers__idToFrameworkStabilizer", function() {
    return P.LinkedHashMap_LinkedHashMap$_empty(P.int, null);
  }, "FrameworkStabilizers__idToFrameworkStabilizer", "testabilitiesEnabled", "$get$testabilitiesEnabled", function() {
    return J.contains$1$asx(self.window.location.href, "enableTestabilities");
  }, "testabilitiesEnabled", "styles12", "$get$styles12", function() {
    return ['._nghost-%ID%{display:inline-flex}._nghost-%ID%[light]{opacity:0.54}._nghost-%ID%[size=x-small]  i{font-size:12px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=small]  i{font-size:13px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=medium]  i{font-size:16px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=large]  i{font-size:18px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=x-large]  i{font-size:20px;height:1em;line-height:1em;width:1em}._nghost-%ID%[flip][dir=rtl] .glyph-i._ngcontent-%ID%,[dir=rtl] [flip]._nghost-%ID% .glyph-i._ngcontent-%ID%{transform:scaleX(-1)}._nghost-%ID%[baseline]{align-items:center}._nghost-%ID%[baseline]::before{content:"-";display:inline-block;width:0;visibility:hidden}._nghost-%ID%[baseline] .glyph-i._ngcontent-%ID%{margin-bottom:0.1em}'];
  }, "styles12", "styles$GlyphComponent", "$get$styles$GlyphComponent", function() {
    return [$.$get$styles12()];
  }, "styles$GlyphComponent", "styles30", "$get$styles30", function() {
    return ['._nghost-%ID%{font-size:14px;font-weight:500;text-transform:uppercase;user-select:none;background:transparent;border-radius:inherit;box-sizing:border-box;cursor:pointer;display:inline-block;letter-spacing:0.01em;line-height:normal;outline:none;position:relative;text-align:center}._nghost-%ID%.acx-theme-dark{color:#fff}._nghost-%ID%:not([icon]){margin:0 0.29em}._nghost-%ID%[dense]:not([icon]){height:32px;font-size:13px}._nghost-%ID%[compact]:not([icon]){padding:0 8px}._nghost-%ID%[disabled]{color:rgba(0,0,0,0.26);cursor:not-allowed}._nghost-%ID%[disabled].acx-theme-dark{color:rgba(255,255,255,0.3)}._nghost-%ID%[disabled] > *._ngcontent-%ID%{pointer-events:none}._nghost-%ID%:not([disabled]):not([icon]):hover::after,._nghost-%ID%.is-focused::after{content:"";display:block;position:absolute;top:0;left:0;right:0;bottom:0;background-color:currentColor;opacity:0.12;border-radius:inherit;pointer-events:none}._nghost-%ID%[raised][animated]{transition:box-shadow 0.28s cubic-bezier(0.4,0,0.2,1)}._nghost-%ID%[raised][elevation="1"]{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="2"]{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="3"]{box-shadow:0 6px 10px 0 rgba(0,0,0,0.14),0 1px 18px 0 rgba(0,0,0,0.12),0 3px 5px -1px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="4"]{box-shadow:0 8px 10px 1px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="5"]{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="6"]{box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2)}._nghost-%ID%[raised].acx-theme-dark{background-color:#4285f4}._nghost-%ID%[raised][disabled]{background:rgba(0,0,0,0.12);box-shadow:none}._nghost-%ID%[raised][disabled].acx-theme-dark{background:rgba(255,255,255,0.12)}._nghost-%ID%[raised].highlighted:not([disabled]){background-color:#4285f4;color:#fff}._nghost-%ID%[no-ink] material-ripple._ngcontent-%ID%{display:none}._nghost-%ID%[clear-size]{margin:0}._nghost-%ID% .content._ngcontent-%ID%{display:inline-flex;align-items:center}._nghost-%ID%:not([icon]){border-radius:2px;min-width:64px}._nghost-%ID%:not([icon]) .content._ngcontent-%ID%{padding:0.7em 0.57em}._nghost-%ID%[icon]{border-radius:50%}._nghost-%ID%[icon] .content._ngcontent-%ID%{padding:8px}._nghost-%ID%[clear-size]{min-width:0}'];
  }, "styles30", "styles$MaterialButtonComponent", "$get$styles$MaterialButtonComponent", function() {
    return [$.$get$styles30()];
  }, "styles$MaterialButtonComponent", "styles13", "$get$styles13", function() {
    return ['._nghost-%ID%{align-items:center;cursor:pointer;display:inline-flex;margin:8px}._nghost-%ID%[no-ink] material-ripple._ngcontent-%ID%{display:none}._nghost-%ID%:focus{outline:none}._nghost-%ID%.disabled{cursor:not-allowed}._nghost-%ID%.disabled > .content._ngcontent-%ID%{color:rgba(0,0,0,0.54)}._nghost-%ID%.disabled > .icon-container._ngcontent-%ID% > .icon._ngcontent-%ID%{color:rgba(0,0,0,0.26)}.icon-container._ngcontent-%ID%{display:flex;position:relative}.icon-container.focus._ngcontent-%ID%::after,.icon-container._ngcontent-%ID% .ripple._ngcontent-%ID%{color:#9e9e9e;border-radius:20px;height:40px;left:-8px;position:absolute;top:-8px;width:40px}.icon-container.focus._ngcontent-%ID%::after{content:"";display:block;background-color:currentColor;opacity:0.12}.icon._ngcontent-%ID%{opacity:0.54}.icon.filled._ngcontent-%ID%{color:#4285f4;opacity:0.87}.content._ngcontent-%ID%{align-items:center;flex-grow:1;flex-shrink:1;flex-basis:auto;margin-left:8px;overflow-x:hidden;padding:1px 0;text-overflow:ellipsis}'];
  }, "styles13", "styles$MaterialCheckboxComponent", "$get$styles$MaterialCheckboxComponent", function() {
    return [$.$get$styles13()];
  }, "styles$MaterialCheckboxComponent", "styles29", "$get$styles29", function() {
    return ['._nghost-%ID%{display:inline-flex}._nghost-%ID%.flip  .material-icon-i{transform:scaleX(-1)}._nghost-%ID%[light]{opacity:0.54}._nghost-%ID% .material-icon-i._ngcontent-%ID%{font-size:24px}._nghost-%ID%[size=x-small] .material-icon-i._ngcontent-%ID%{font-size:12px}._nghost-%ID%[size=small] .material-icon-i._ngcontent-%ID%{font-size:13px}._nghost-%ID%[size=medium] .material-icon-i._ngcontent-%ID%{font-size:16px}._nghost-%ID%[size=large] .material-icon-i._ngcontent-%ID%{font-size:18px}._nghost-%ID%[size=x-large] .material-icon-i._ngcontent-%ID%{font-size:20px}.material-icon-i._ngcontent-%ID%{height:1em;line-height:1;width:1em}._nghost-%ID%[flip][dir=rtl] .material-icon-i._ngcontent-%ID%,[dir=rtl] [flip]._nghost-%ID% .material-icon-i._ngcontent-%ID%{transform:scaleX(-1)}._nghost-%ID%[baseline]{align-items:center}._nghost-%ID%[baseline]::before{content:"-";display:inline-block;width:0;visibility:hidden}._nghost-%ID%[baseline] .material-icon-i._ngcontent-%ID%{margin-bottom:0.1em}'];
  }, "styles29", "styles$MaterialIconComponent", "$get$styles$MaterialIconComponent", function() {
    return [$.$get$styles29()];
  }, "styles$MaterialIconComponent", "styles15", "$get$styles15", function() {
    return ["._nghost-%ID%{display:block;background:#fff;margin:0;padding:16px 0;white-space:nowrap}._nghost-%ID%[size=x-small]{width:96px}._nghost-%ID%[size=small]{width:192px}._nghost-%ID%[size=medium]{width:320px}._nghost-%ID%[size=large]{width:384px}._nghost-%ID%[size=x-large]{width:448px}._nghost-%ID%[min-size=x-small]{min-width:96px}._nghost-%ID%[min-size=small]{min-width:192px}._nghost-%ID%[min-size=medium]{min-width:320px}._nghost-%ID%[min-size=large]{min-width:384px}._nghost-%ID%[min-size=x-large]{min-width:448px}._nghost-%ID%  [group]:not(.empty) + *:not(script):not(template):not(.empty),._nghost-%ID%  :not([group]):not(script):not(template):not(.empty) + [group]:not(.empty){border-top:1px solid #e0e0e0;margin-top:7px;padding-top:8px}._nghost-%ID%  [group]:not(.empty) + *:not(script):not(template):not(.empty){box-shadow:inset 0 8px 0 0 #fff}._nghost-%ID%  [separator=present]{background:#e0e0e0;cursor:default;height:1px;margin:8px 0}._nghost-%ID%  [label]{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;color:#9e9e9e;font-size:12px;font-weight:400}._nghost-%ID%  [label].disabled{pointer-events:none}._nghost-%ID%  [label]  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}._nghost-%ID%  [label].disabled  .material-list-item-primary{color:rgba(0,0,0,0.38)}._nghost-%ID%  [label]  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}._nghost-%ID%  [label].disabled  .material-list-item-secondary{color:rgba(0,0,0,0.38)}._nghost-%ID%  [label]  .submenu-icon{transform:rotate(-90deg)}._nghost-%ID%[dir=rtl]  [label]  .submenu-icon,[dir=rtl] ._nghost-%ID%  [label]  .submenu-icon{transform:rotate(90deg)}"];
  }, "styles15", "styles$MaterialListComponent", "$get$styles$MaterialListComponent", function() {
    return [$.$get$styles15()];
  }, "styles$MaterialListComponent", "MaterialPopupComponent__idGenerator", "$get$MaterialPopupComponent__idGenerator", function() {
    return R.SequentialIdGenerator$fromUUID();
  }, "MaterialPopupComponent__idGenerator", "styles16", "$get$styles16", function() {
    return ['.shadow._ngcontent-%ID%{background:#fff;border-radius:2px;transition:transform 150ms cubic-bezier(0.4,0,1,1);transform-origin:top left;transform:scale3d(0,0,1);will-change:transform}.shadow[animated]._ngcontent-%ID%{transition:box-shadow 0.28s cubic-bezier(0.4,0,0.2,1)}.shadow[elevation="1"]._ngcontent-%ID%{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.shadow[elevation="2"]._ngcontent-%ID%{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}.shadow[elevation="3"]._ngcontent-%ID%{box-shadow:0 6px 10px 0 rgba(0,0,0,0.14),0 1px 18px 0 rgba(0,0,0,0.12),0 3px 5px -1px rgba(0,0,0,0.2)}.shadow[elevation="4"]._ngcontent-%ID%{box-shadow:0 8px 10px 1px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2)}.shadow[elevation="5"]._ngcontent-%ID%{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2)}.shadow[elevation="6"]._ngcontent-%ID%{box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2)}.shadow[slide=x]._ngcontent-%ID%{transform:scale3d(0,1,1)}.shadow[slide=y]._ngcontent-%ID%{transform:scale3d(1,0,1)}.shadow.visible._ngcontent-%ID%{transition:transform 150ms cubic-bezier(0,0,0.2,1);transform:scale3d(1,1,1)}.shadow.ink._ngcontent-%ID%{background:#616161;color:#fff}.shadow.full-width._ngcontent-%ID%{flex-grow:1;flex-shrink:1;flex-basis:auto}.shadow._ngcontent-%ID% .popup._ngcontent-%ID%{border-radius:2px;flex-grow:1;flex-shrink:1;flex-basis:auto;overflow:hidden;transition:inherit}.shadow.visible._ngcontent-%ID% .popup._ngcontent-%ID%{visibility:initial}.shadow._ngcontent-%ID% header._ngcontent-%ID%,.shadow._ngcontent-%ID% footer._ngcontent-%ID%{display:block}.shadow._ngcontent-%ID% .main._ngcontent-%ID%{display:flex;flex-direction:column;min-height:inherit;min-width:inherit;max-height:inherit;max-width:inherit;overflow:auto;overscroll-behavior:contain}._nghost-%ID%{justify-content:flex-start;align-items:flex-start}._nghost-%ID%  ::-webkit-scrollbar{background-color:rgba(0,0,0,0);height:4px;width:4px}._nghost-%ID%  ::-webkit-scrollbar:hover{background-color:rgba(0,0,0,0.12)}._nghost-%ID%  ::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,0.26);min-height:48px;min-width:48px}._nghost-%ID%  ::-webkit-scrollbar-thumb:hover{background-color:#4285f4}._nghost-%ID%  ::-webkit-scrollbar-button{width:0;height:0}.material-popup-content._ngcontent-%ID%{min-width:inherit;min-height:inherit;max-width:inherit;max-height:inherit;position:relative;display:flex;flex-direction:column}.popup-wrapper._ngcontent-%ID%{width:100%}'];
  }, "styles16", "styles$MaterialPopupComponent", "$get$styles$MaterialPopupComponent", function() {
    return [$.$get$styles16()];
  }, "styles$MaterialPopupComponent", "styles21", "$get$styles21", function() {
    return ["._nghost-%ID%{display:inline-block;width:100%;height:4px}.progress-container._ngcontent-%ID%{position:relative;height:100%;background-color:#e0e0e0;overflow:hidden}._nghost-%ID%[dir=rtl] .progress-container._ngcontent-%ID%,[dir=rtl] ._nghost-%ID% .progress-container._ngcontent-%ID%{transform:scaleX(-1)}.progress-container.indeterminate._ngcontent-%ID%{background-color:#c6dafc}.progress-container.indeterminate._ngcontent-%ID% > .secondary-progress._ngcontent-%ID%{background-color:#4285f4}.active-progress._ngcontent-%ID%,.secondary-progress._ngcontent-%ID%{transform-origin:left center;transform:scaleX(0);position:absolute;top:0;transition:transform 218ms cubic-bezier(0.4,0,0.2,1);right:0;bottom:0;left:0;will-change:transform}.active-progress._ngcontent-%ID%{background-color:#4285f4}.secondary-progress._ngcontent-%ID%{background-color:#a1c2fa}.progress-container.indeterminate.fallback._ngcontent-%ID% > .active-progress._ngcontent-%ID%{animation-name:indeterminate-active-progress;animation-duration:2000ms;animation-iteration-count:infinite;animation-timing-function:linear}.progress-container.indeterminate.fallback._ngcontent-%ID% > .secondary-progress._ngcontent-%ID%{animation-name:indeterminate-secondary-progress;animation-duration:2000ms;animation-iteration-count:infinite;animation-timing-function:linear}@keyframes indeterminate-active-progress{0%{transform:translate(0%) scaleX(0)}25%{transform:translate(0%) scaleX(0.5)}50%{transform:translate(25%) scaleX(0.75)}75%{transform:translate(100%) scaleX(0)}100%{transform:translate(100%) scaleX(0)}}@keyframes indeterminate-secondary-progress{0%{transform:translate(0%) scaleX(0)}60%{transform:translate(0%) scaleX(0)}80%{transform:translate(0%) scaleX(0.6)}100%{transform:translate(100%) scaleX(0.1)}}"];
  }, "styles21", "styles$MaterialProgressComponent", "$get$styles$MaterialProgressComponent", function() {
    return [$.$get$styles21()];
  }, "styles$MaterialProgressComponent", "styles2", "$get$styles2", function() {
    return ["material-ripple {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: inherit;\n  contain: strict;\n  transform: translateX(0);\n}\n\n.__acx-ripple {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n  background-color: currentColor;\n  border-radius: 50%;\n  pointer-events: none;\n  will-change: opacity, transform;\n  opacity: 0;\n}\n.__acx-ripple.fallback {\n  animation: __acx-ripple 300ms linear;\n  transform: translateZ(0);\n}\n\n@keyframes __acx-ripple {\n  from {\n    opacity: 0;\n    transform: translateZ(0) scale(0.125);\n  }\n  25%, 50% {\n    opacity: 0.16;\n  }\n  to {\n    opacity: 0;\n    transform: translateZ(0) scale(4);\n  }\n}\n"];
  }, "styles2", "styles$MaterialRippleComponent", "$get$styles$MaterialRippleComponent", function() {
    return [$.$get$styles2()];
  }, "styles$MaterialRippleComponent", "styles18", "$get$styles18", function() {
    return ["._nghost-%ID%{display:inline-flex;flex:1;flex-direction:column;max-width:100%;min-height:24px}.button._ngcontent-%ID%{display:flex;align-items:center;justify-content:space-between;flex:1 0 auto;line-height:initial;overflow:hidden}.button.border._ngcontent-%ID%{border-bottom:1px solid rgba(0,0,0,0.12);padding-bottom:8px}.button.border.is-disabled._ngcontent-%ID%{border-bottom-style:dotted}.button.border.invalid._ngcontent-%ID%{border-bottom-color:#c53929}.button.is-disabled._ngcontent-%ID%{color:rgba(0,0,0,0.38)}.button._ngcontent-%ID% .button-text._ngcontent-%ID%{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.error-text._ngcontent-%ID%{color:#d34336;font-size:12px}.icon._ngcontent-%ID%{height:12px;opacity:0.54;margin-top:-12px;margin-bottom:-12px}.icon._ngcontent-%ID%  i.glyph-i{position:relative;top:-6px}"];
  }, "styles18", "styles$DropdownButtonComponent", "$get$styles$DropdownButtonComponent", function() {
    return [$.$get$styles17(), $.$get$styles18()];
  }, "styles$DropdownButtonComponent", "ActivateItemOnKeyPressMixin__charCodeMap", "$get$ActivateItemOnKeyPressMixin__charCodeMap", function() {
    return P.LinkedHashMap_LinkedHashMap$_empty(P.int, P.String);
  }, "ActivateItemOnKeyPressMixin__charCodeMap", "styles20", "$get$styles20", function() {
    return ["._nghost-%ID%{display:inline-flex}.options-list._ngcontent-%ID%{display:flex;flex-direction:column;flex:1 0 auto;outline:none}.options-list:focus._ngcontent-%ID%{border-bottom:solid 1px transparent;padding-bottom:15px}.options-list._ngcontent-%ID% .options-wrapper._ngcontent-%ID%{flex-direction:column}.options-list._ngcontent-%ID% .options-wrapper._ngcontent-%ID% [label]._ngcontent-%ID%{padding:0 16px}"];
  }, "styles20", "styles$MaterialDropdownSelectComponent", "$get$styles$MaterialDropdownSelectComponent", function() {
    return [$.$get$styles20()];
  }, "styles$MaterialDropdownSelectComponent", "styles14", "$get$styles14", function() {
    return ["._nghost-%ID%{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;padding:0 16px;display:flex;align-items:center;transition:background;color:rgba(0,0,0,0.87);cursor:pointer}._nghost-%ID%.disabled{pointer-events:none}._nghost-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}._nghost-%ID%.disabled  .material-list-item-primary{color:rgba(0,0,0,0.38)}._nghost-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}._nghost-%ID%.disabled  .material-list-item-secondary{color:rgba(0,0,0,0.38)}._nghost-%ID%  .submenu-icon{transform:rotate(-90deg)}._nghost-%ID%:hover,._nghost-%ID%.active{background:whitesmoke}._nghost-%ID%:not(.multiselect).selected{background:#eee}._nghost-%ID% .selected-accent._ngcontent-%ID%{position:absolute;top:0;left:0;bottom:0;width:3px;background:#9e9e9e}._nghost-%ID% material-checkbox._ngcontent-%ID%{margin:0}._nghost-%ID%.disabled{color:rgba(0,0,0,0.38);cursor:default}._nghost-%ID%.hidden{display:none}.check-container._ngcontent-%ID%{display:inline-block;width:40px}.dynamic-item._ngcontent-%ID%{flex-grow:1;width:100%}._nghost-%ID%[dir=rtl]  .submenu-icon,[dir=rtl] ._nghost-%ID%  .submenu-icon{transform:rotate(90deg)}"];
  }, "styles14", "styles$MaterialSelectDropdownItemComponent", "$get$styles$MaterialSelectDropdownItemComponent", function() {
    return [$.$get$styles14()];
  }, "styles$MaterialSelectDropdownItemComponent", "indexIdentityFn", "$get$indexIdentityFn", function() {
    return new T.closure();
  }, "indexIdentityFn", "DomPopupSource__isRtl", "$get$DomPopupSource__isRtl", function() {
    var t1 = W.document();
    return t1.documentElement.dir === "rtl" || t1.body.dir === "rtl";
  }, "DomPopupSource__isRtl", "supportsAnimationApi", "$get$supportsAnimationApi", function() {
    if (P.hasProperty(W.DivElement_DivElement(), "animate")) {
      var t1 = $.$get$context();
      t1 = !("__acxDisableWebAnimationsApi" in t1._jsObject);
    } else
      t1 = false;
    return t1;
  }, "supportsAnimationApi", "SequentialIdGenerator__rnd", "$get$SequentialIdGenerator__rnd", function() {
    return P.Random_Random(null);
  }, "SequentialIdGenerator__rnd", "_emptyPattern", "$get$_emptyPattern", function() {
    return P.RegExp_RegExp("^(?:[ \\t]*)$", true, false);
  }, "_emptyPattern", "_setextPattern", "$get$_setextPattern", function() {
    return P.RegExp_RegExp("^[ ]{0,3}(=+|-+)\\s*$", true, false);
  }, "_setextPattern", "_headerPattern", "$get$_headerPattern", function() {
    return P.RegExp_RegExp("^ {0,3}(#{1,6})[ \\x09\\x0b\\x0c](.*?)#*$", true, false);
  }, "_headerPattern", "_blockquotePattern", "$get$_blockquotePattern", function() {
    return P.RegExp_RegExp("^[ ]{0,3}>[ ]?(.*)$", true, false);
  }, "_blockquotePattern", "_indentPattern", "$get$_indentPattern", function() {
    return P.RegExp_RegExp("^(?:    | {0,3}\\t)(.*)$", true, false);
  }, "_indentPattern", "_codePattern", "$get$_codePattern", function() {
    return P.RegExp_RegExp("^[ ]{0,3}(`{3,}|~{3,})(.*)$", true, false);
  }, "_codePattern", "_hrPattern", "$get$_hrPattern", function() {
    return P.RegExp_RegExp("^ {0,3}([-*_])[ \\t]*\\1[ \\t]*\\1(?:\\1|[ \\t])*$", true, false);
  }, "_hrPattern", "_oneOrMoreWhitespacePattern", "$get$_oneOrMoreWhitespacePattern", function() {
    return P.RegExp_RegExp("[ \n\r\t]+", true, false);
  }, "_oneOrMoreWhitespacePattern", "_ulPattern", "$get$_ulPattern", function() {
    return P.RegExp_RegExp("^([ ]{0,3})()([*+-])(([ \\t])([ \\t]*)(.*))?$", true, false);
  }, "_ulPattern", "_olPattern", "$get$_olPattern", function() {
    return P.RegExp_RegExp("^([ ]{0,3})(\\d{1,9})([\\.)])(([ \\t])([ \\t]*)(.*))?$", true, false);
  }, "_olPattern", "BlockTagBlockHtmlSyntax__pattern", "$get$BlockTagBlockHtmlSyntax__pattern", function() {
    return P.RegExp_RegExp("^ {0,3}</?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|>|/>|$)", true, false);
  }, "BlockTagBlockHtmlSyntax__pattern", "ListSyntax__whitespaceRe", "$get$ListSyntax__whitespaceRe", function() {
    return P.RegExp_RegExp("[ \t]*", true, false);
  }, "ListSyntax__whitespaceRe", "ParagraphSyntax__reflinkDefinitionStart", "$get$ParagraphSyntax__reflinkDefinitionStart", function() {
    return P.RegExp_RegExp("[ ]{0,3}\\[", true, false);
  }, "ParagraphSyntax__reflinkDefinitionStart", "ParagraphSyntax__whitespacePattern", "$get$ParagraphSyntax__whitespacePattern", function() {
    return P.RegExp_RegExp("^\\s*$", true, false);
  }, "ParagraphSyntax__whitespacePattern", "ExtensionSet_commonMark", "$get$ExtensionSet_commonMark", function() {
    return new E.ExtensionSet(H.setRuntimeTypeInfo([C.C_FencedCodeBlockSyntax], [K.BlockSyntax]), H.setRuntimeTypeInfo([new R.InlineHtmlSyntax(null, P.RegExp_RegExp("<[/!?]?[A-Za-z][A-Za-z0-9-]*(?:\\s[^>]*)?>", true, true))], [R.InlineSyntax]));
  }, "ExtensionSet_commonMark", "HtmlRenderer__blockTags", "$get$HtmlRenderer__blockTags", function() {
    return P.RegExp_RegExp("blockquote|h1|h2|h3|h4|h5|h6|hr|p|pre", true, false);
  }, "HtmlRenderer__blockTags", "InlineParser__defaultSyntaxes", "$get$InlineParser__defaultSyntaxes", function() {
    var t1 = R.InlineSyntax;
    return P.List_List$unmodifiable(H.setRuntimeTypeInfo([new R.EmailAutolinkSyntax(P.RegExp_RegExp("<([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>", true, true)), new R.AutolinkSyntax(P.RegExp_RegExp("<(([a-zA-Z][a-zA-Z\\-\\+\\.]+):(?://)?[^\\s>]*)>", true, true)), new R.LineBreakSyntax(P.RegExp_RegExp("(?:\\\\|  +)\\n", true, true)), R.LinkSyntax$(null, "\\["), R.ImageSyntax$(null), new R.EscapeSyntax(P.RegExp_RegExp("\\\\[!\"#$%&'()*+,\\-./:;<=>?@\\[\\\\\\]^_`{|}~]", true, true)), R.TextSyntax$(" \\* ", null), R.TextSyntax$(" _ ", null), R.TagSyntax$("\\*+", null, true), R.TagSyntax$("_+", null, true), new R.CodeSyntax(P.RegExp_RegExp("(`+(?!`))((?:.|\\n)*?[^`])\\1(?!`)", true, true))], [t1]), t1);
  }, "InlineParser__defaultSyntaxes", "InlineParser__htmlSyntaxes", "$get$InlineParser__htmlSyntaxes", function() {
    var t1 = R.InlineSyntax;
    return P.List_List$unmodifiable(H.setRuntimeTypeInfo([R.TextSyntax$("&[#a-zA-Z0-9]*;", null), R.TextSyntax$("&", "&amp;"), R.TextSyntax$("<", "&lt;")], [t1]), t1);
  }, "InlineParser__htmlSyntaxes", "LinkSyntax__entirelyWhitespacePattern", "$get$LinkSyntax__entirelyWhitespacePattern", function() {
    return P.RegExp_RegExp("^\\s*$", true, false);
  }, "LinkSyntax__entirelyWhitespacePattern", "styles6", "$get$styles6", function() {
    return ["@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{font-size:12px;font-weight:400;line-height:1;letter-spacing:0;color:rgba(0,0,0,.87);display:flex;align-items:center;height:40px;box-shadow:-4px 0 0 0 lightgray,0 1px 3px rgba(0,0,0,.12);border-radius:2px;border:1px solid #e7e7e7;border-left:0;margin-bottom:16px;background-color:#fff}._nghost-%ID% .hide-without-icon._ngcontent-%ID%{display:none}._nghost-%ID% .without-url._ngcontent-%ID%{cursor:default}._nghost-%ID% .info-text._ngcontent-%ID%{display:inline-flex}._nghost-%ID% .info-text.without-icon._ngcontent-%ID%{padding-left:16px}._nghost-%ID% .info-text._ngcontent-%ID% .ws-truncate-fix._ngcontent-%ID%{display:inline-block}._nghost-%ID%  material-button{display:inline-flex}"];
  }, "styles6", "styles$SkawaInfobarComponent", "$get$styles$SkawaInfobarComponent", function() {
    return [$.$get$styles6()];
  }, "styles$SkawaInfobarComponent", "styles5", "$get$styles5", function() {
    return ['._nghost-%ID%{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;line-height:1.5;color:#333;font-size:16px;word-wrap:break-word}._nghost-%ID% a._ngcontent-%ID%{background-color:transparent;-webkit-text-decoration-skip:objects}._nghost-%ID% a:active._ngcontent-%ID%,._nghost-%ID% a:hover._ngcontent-%ID%{outline-width:0}._nghost-%ID% strong._ngcontent-%ID%{font-weight:inherit}._nghost-%ID% strong._ngcontent-%ID%{font-weight:bolder}._nghost-%ID% em._ngcontent-%ID%{font-style:italic}._nghost-%ID% h1._ngcontent-%ID%{font-size:2em;margin:.67em 0}._nghost-%ID% img._ngcontent-%ID%{border-style:none}._nghost-%ID% svg:not(:root)._ngcontent-%ID%{overflow:hidden}._nghost-%ID% code._ngcontent-%ID%,._nghost-%ID% kbd._ngcontent-%ID%,._nghost-%ID% pre._ngcontent-%ID%{font-family:monospace,monospace;font-size:1em}._nghost-%ID% hr._ngcontent-%ID%{box-sizing:content-box;height:0;overflow:visible}._nghost-%ID% input._ngcontent-%ID%{font:inherit;margin:0}._nghost-%ID% input._ngcontent-%ID%{overflow:visible}._nghost-%ID% [type=checkbox]._ngcontent-%ID%{box-sizing:border-box;padding:0}._nghost-%ID% *._ngcontent-%ID%{box-sizing:border-box}._nghost-%ID% input._ngcontent-%ID%{font-family:inherit;font-size:inherit;line-height:inherit}._nghost-%ID% a._ngcontent-%ID%{color:#4078c0;text-decoration:none}._nghost-%ID% a:hover._ngcontent-%ID%,._nghost-%ID% a:active._ngcontent-%ID%{text-decoration:underline}._nghost-%ID% strong._ngcontent-%ID%{font-weight:600}._nghost-%ID% hr._ngcontent-%ID%{height:0;margin:15px 0;overflow:hidden;background:transparent;border:0;border-bottom:1px solid #ddd}._nghost-%ID% hr._ngcontent-%ID%::before{display:table;content:""}._nghost-%ID% hr._ngcontent-%ID%::after{display:table;clear:both;content:""}._nghost-%ID% table._ngcontent-%ID%{border-spacing:0;border-collapse:collapse}._nghost-%ID% td._ngcontent-%ID%,._nghost-%ID% th._ngcontent-%ID%{padding:0}._nghost-%ID% h1._ngcontent-%ID%,._nghost-%ID% h2._ngcontent-%ID%,._nghost-%ID% h3._ngcontent-%ID%,._nghost-%ID% h4._ngcontent-%ID%,._nghost-%ID% h5._ngcontent-%ID%,._nghost-%ID% h6._ngcontent-%ID%{margin-top:0;margin-bottom:0}._nghost-%ID% h1._ngcontent-%ID%{font-size:32px;font-weight:600}._nghost-%ID% h2._ngcontent-%ID%{font-size:24px;font-weight:600}._nghost-%ID% h3._ngcontent-%ID%{font-size:20px;font-weight:600}._nghost-%ID% h4._ngcontent-%ID%{font-size:16px;font-weight:600}._nghost-%ID% h5._ngcontent-%ID%{font-size:14px;font-weight:600}._nghost-%ID% h6._ngcontent-%ID%{font-size:12px;font-weight:600}._nghost-%ID% p._ngcontent-%ID%{margin-top:0;margin-bottom:10px}._nghost-%ID% blockquote._ngcontent-%ID%{margin:0}._nghost-%ID% ul._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID%{padding-left:0;margin-top:0;margin-bottom:0;list-style-type:disc}._nghost-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID%{list-style-type:circle}._nghost-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID%{list-style-type:lower-roman}._nghost-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID%{list-style-type:lower-alpha}._nghost-%ID% dd._ngcontent-%ID%{margin-left:0}._nghost-%ID% code._ngcontent-%ID%{font-family:Consolas,"Liberation Mono",Menlo,Courier,monospace;font-size:12px}._nghost-%ID% pre._ngcontent-%ID%{margin-top:0;margin-bottom:0;font:12px Consolas,"Liberation Mono",Menlo,Courier,monospace}._nghost-%ID% .octicon._ngcontent-%ID%{vertical-align:text-bottom}._nghost-%ID% input._ngcontent-%ID%{-webkit-font-feature-settings:"liga" 0;font-feature-settings:"liga" 0}._nghost-%ID% .markdown-body._ngcontent-%ID%::before{display:table;content:""}._nghost-%ID% .markdown-body._ngcontent-%ID%::after{display:table;clear:both;content:""}._nghost-%ID% > *:first-child._ngcontent-%ID%{margin-top:0!important}._nghost-%ID% > *:last-child._ngcontent-%ID%{margin-bottom:0!important}._nghost-%ID% a:not([href])._ngcontent-%ID%{color:inherit;text-decoration:none}._nghost-%ID% .anchor._ngcontent-%ID%{float:left;padding-right:4px;margin-left:-20px;line-height:1}._nghost-%ID% .anchor:focus._ngcontent-%ID%{outline:none}._nghost-%ID% p._ngcontent-%ID%,._nghost-%ID% blockquote._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID%,._nghost-%ID% dl._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID%,._nghost-%ID% pre._ngcontent-%ID%{margin-top:0;margin-bottom:16px}._nghost-%ID% hr._ngcontent-%ID%{height:.25em;padding:0;margin:24px 0;background-color:#e7e7e7;border:0}._nghost-%ID% blockquote._ngcontent-%ID%{padding:0 1em;color:#777;border-left:.25em solid #ddd}._nghost-%ID% blockquote._ngcontent-%ID% > :first-child._ngcontent-%ID%{margin-top:0}._nghost-%ID% blockquote._ngcontent-%ID% > :last-child._ngcontent-%ID%{margin-bottom:0}._nghost-%ID% kbd._ngcontent-%ID%{display:inline-block;padding:3px 5px;font-size:11px;line-height:10px;color:#555;vertical-align:middle;background-color:#fcfcfc;border:solid 1px #ccc;border-bottom-color:#bbb;border-radius:3px;box-shadow:inset 0 -1px 0 #bbb}._nghost-%ID% h1._ngcontent-%ID%,._nghost-%ID% h2._ngcontent-%ID%,._nghost-%ID% h3._ngcontent-%ID%,._nghost-%ID% h4._ngcontent-%ID%,._nghost-%ID% h5._ngcontent-%ID%,._nghost-%ID% h6._ngcontent-%ID%{margin-top:24px;margin-bottom:16px;font-weight:600;line-height:1.25}._nghost-%ID% h1._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h2._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h3._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h4._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h5._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h6._ngcontent-%ID% .octicon-link._ngcontent-%ID%{color:black;vertical-align:middle;visibility:hidden}._nghost-%ID% h1:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h2:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h3:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h4:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h5:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h6:hover._ngcontent-%ID% .anchor._ngcontent-%ID%{text-decoration:none}._nghost-%ID% h1:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h2:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h3:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h4:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h5:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h6:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%{visibility:visible}._nghost-%ID% h1._ngcontent-%ID%{padding-bottom:.3em;font-size:2em;border-bottom:1px solid #eee}._nghost-%ID% h2._ngcontent-%ID%{padding-bottom:.3em;font-size:1.5em;border-bottom:1px solid #eee}._nghost-%ID% h3._ngcontent-%ID%{font-size:1.25em}._nghost-%ID% h4._ngcontent-%ID%{font-size:1em}._nghost-%ID% h5._ngcontent-%ID%{font-size:.875em}._nghost-%ID% h6._ngcontent-%ID%{font-size:.85em;color:#777}._nghost-%ID% ul._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID%{padding-left:2em}._nghost-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID% ul._ngcontent-%ID%{margin-top:0;margin-bottom:0}._nghost-%ID% li._ngcontent-%ID% > p._ngcontent-%ID%{margin-top:16px}._nghost-%ID% li._ngcontent-%ID% + li._ngcontent-%ID%{margin-top:.25em}._nghost-%ID% dl._ngcontent-%ID%{padding:0}._nghost-%ID% dl._ngcontent-%ID% dt._ngcontent-%ID%{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:bold}._nghost-%ID% dl._ngcontent-%ID% dd._ngcontent-%ID%{padding:0 16px;margin-bottom:16px}._nghost-%ID% table._ngcontent-%ID%{display:block;width:100%;overflow:auto}._nghost-%ID% table._ngcontent-%ID% th._ngcontent-%ID%{font-weight:bold}._nghost-%ID% table._ngcontent-%ID% th._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% td._ngcontent-%ID%{padding:6px 13px;border:1px solid #ddd}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID%{background-color:#fff;border-top:1px solid #ccc}._nghost-%ID% table._ngcontent-%ID% tr:nth-child(2n)._ngcontent-%ID%{background-color:#f8f8f8}._nghost-%ID% img._ngcontent-%ID%{max-width:100%;box-sizing:content-box;background-color:#fff}._nghost-%ID% code._ngcontent-%ID%{padding:.2em 0;margin:0;font-size:85%;background-color:rgba(0,0,0,.04);border-radius:3px}._nghost-%ID% code._ngcontent-%ID%::before,._nghost-%ID% code._ngcontent-%ID%::after{letter-spacing:-0.2em;content:"\xa0"}._nghost-%ID% pre._ngcontent-%ID%{word-wrap:normal}._nghost-%ID% pre._ngcontent-%ID% > code._ngcontent-%ID%{padding:0;margin:0;font-size:100%;word-break:normal;white-space:pre;background:transparent;border:0}._nghost-%ID% .highlight._ngcontent-%ID%{margin-bottom:16px}._nghost-%ID% .highlight._ngcontent-%ID% pre._ngcontent-%ID%{margin-bottom:0;word-break:normal}._nghost-%ID% .highlight._ngcontent-%ID% pre._ngcontent-%ID%,._nghost-%ID% pre._ngcontent-%ID%{padding:16px;overflow:auto;font-size:85%;line-height:1.45;background-color:#f7f7f7;border-radius:3px}._nghost-%ID% pre._ngcontent-%ID% code._ngcontent-%ID%{display:inline;padding:0;margin:0;overflow:visible;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}._nghost-%ID% pre._ngcontent-%ID% code._ngcontent-%ID%::before,._nghost-%ID% pre._ngcontent-%ID% code._ngcontent-%ID%::after{content:normal}._nghost-%ID% .pl-0._ngcontent-%ID%{padding-left:0!important}._nghost-%ID% .pl-1._ngcontent-%ID%{padding-left:3px!important}._nghost-%ID% .pl-2._ngcontent-%ID%{padding-left:6px!important}._nghost-%ID% .pl-3._ngcontent-%ID%{padding-left:12px!important}._nghost-%ID% .pl-4._ngcontent-%ID%{padding-left:24px!important}._nghost-%ID% .pl-5._ngcontent-%ID%{padding-left:36px!important}._nghost-%ID% .pl-6._ngcontent-%ID%{padding-left:48px!important}._nghost-%ID% .full-commit._ngcontent-%ID% .btn-outline:not(:disabled):hover._ngcontent-%ID%{color:#4078c0;border:1px solid #4078c0}._nghost-%ID% kbd._ngcontent-%ID%{display:inline-block;padding:3px 5px;font:11px Consolas,"Liberation Mono",Menlo,Courier,monospace;line-height:10px;color:#555;vertical-align:middle;background-color:#fcfcfc;border:solid 1px #ccc;border-bottom-color:#bbb;border-radius:3px;box-shadow:inset 0 -1px 0 #bbb}._nghost-%ID% :checked._ngcontent-%ID% + .radio-label._ngcontent-%ID%{position:relative;z-index:1;border-color:#4078c0}._nghost-%ID% .task-list-item._ngcontent-%ID%{list-style-type:none}._nghost-%ID% .task-list-item._ngcontent-%ID% + .task-list-item._ngcontent-%ID%{margin-top:3px}._nghost-%ID% .task-list-item._ngcontent-%ID% input._ngcontent-%ID%{margin:0 .2em .25em -1.6em;vertical-align:middle}._nghost-%ID% hr._ngcontent-%ID%{border-bottom-color:#eee}'];
  }, "styles5", "styles$SkawaMarkdownRendererComponent", "$get$styles$SkawaMarkdownRendererComponent", function() {
    return [$.$get$styles5()];
  }, "styles$SkawaMarkdownRendererComponent", "styles$SkawaRawMarkdownRendererComponent", "$get$styles$SkawaRawMarkdownRendererComponent", function() {
    return ["._nghost-%ID%{display:block}"];
  }, "styles$SkawaRawMarkdownRendererComponent", "styles3", "$get$styles3", function() {
    return ["._nghost-%ID%{display:flex;font-size:15px;font-weight:normal;position:relative;background:transparent;border-radius:inherit;box-sizing:border-box;cursor:pointer;letter-spacing:.01em;line-height:normal;outline:none;text-align:center;z-index:0;transition:color .4s linear,background-color .4s linear}._nghost-%ID%:hover{color:rgba(0,0,0,.987);background-color:rgba(0,0,0,.05)}"];
  }, "styles3", "styles$SkawaNavItemComponent", "$get$styles$SkawaNavItemComponent", function() {
    return [$.$get$styles3()];
  }, "styles$SkawaNavItemComponent", "styles31", "$get$styles31", function() {
    return ["._nghost-%ID%{padding:6px 0;box-sizing:border-box;display:flex;align-items:center;height:44px;color:rgba(0,0,0,.654);flex-grow:1;transition:color .4s linear;flex-basis:100%}._nghost-%ID% .item-icon._ngcontent-%ID%{width:64px;justify-content:center}._nghost-%ID% .item-text._ngcontent-%ID%{flex-grow:1;line-height:24px;text-align:left}._nghost-%ID% .item-text.text-only._ngcontent-%ID%{text-transform:uppercase;font-size:12px}._nghost-%ID%:hover,._nghost-%ID%.hovering{color:rgba(0,0,0,.998)}._nghost-%ID%[textOnly]{padding-left:20px}._nghost-%ID%.icon-padding{padding-left:64px}"];
  }, "styles31", "styles$SkawaSidebarItemComponent", "$get$styles$SkawaSidebarItemComponent", function() {
    return [$.$get$styles31()];
  }, "styles$SkawaSidebarItemComponent", "styles32", "$get$styles32", function() {
    return ["._nghost-%ID%{box-sizing:border-box}._nghost-%ID% main._ngcontent-%ID%{border-right:1px solid rgba(0,0,0,.1);border-left:1px solid rgba(0,0,0,.1);background-color:#fff;padding:24px;margin:0 auto;max-width:800px}._nghost-%ID% main._ngcontent-%ID% .demo._ngcontent-%ID%{display:block;border-bottom:1px solid lightgray;padding-bottom:2em;margin-bottom:2em}._nghost-%ID% material-content._ngcontent-%ID%{overflow:auto;position:absolute;top:0;right:0;left:0;bottom:0}._nghost-%ID% material-content._ngcontent-%ID% .material-header._ngcontent-%ID%{position:fixed;right:0;width:calc(100% - 256px);left:256px;transition-duration:150ms;transition-property:left,width;transition-timing-function:cubic-bezier(0.4,0,0.2,1);top:0;z-index:1}._nghost-%ID% material-content._ngcontent-%ID% .material-header.no-drawer._ngcontent-%ID%{left:0;width:100%}a._ngcontent-%ID%{color:var(--default-primary-color);text-decoration:none}skawa-sidebar-item._ngcontent-%ID%{flex-basis:auto;flex-grow:initial}skawa-sidebar-item:hover._ngcontent-%ID%{background-color:rgba(158,158,158,.2)!important}skawa-nav-item._ngcontent-%ID%{flex-basis:auto}"];
  }, "styles32", "styles$AppComponent", "$get$styles$AppComponent", function() {
    return [$.$get$styles32(), $.$get$styles26()];
  }, "styles$AppComponent", "styles28", "$get$styles28", function() {
    return ["._nghost-%ID% .color--primary-action._ngcontent-%ID%{color:#2196f3;font-weight:700}._nghost-%ID% skawa-card._ngcontent-%ID%{margin-bottom:16px}"];
  }, "styles28", "styles$CardDemoComponent", "$get$styles$CardDemoComponent", function() {
    return [$.$get$styles28()];
  }, "styles$CardDemoComponent", "styles22", "$get$styles22", function() {
    return ["._nghost-%ID%{display:flex;align-items:center;width:100%;justify-content:space-between}"];
  }, "styles22", "styles$FirstDownPercentComponent", "$get$styles$FirstDownPercentComponent", function() {
    return [$.$get$styles22()];
  }, "styles$FirstDownPercentComponent", "styles23", "$get$styles23", function() {
    return ["._nghost-%ID% h3._ngcontent-%ID%{display:flex}._nghost-%ID% h3._ngcontent-%ID% span._ngcontent-%ID%{display:flex;flex-grow:1}._nghost-%ID% h3._ngcontent-%ID% material-dropdown-select._ngcontent-%ID%{color:var(--default-primary-color)}"];
  }, "styles23", "WrTableComponent_firstDownPercentRenderer", "$get$WrTableComponent_firstDownPercentRenderer", function() {
    return new N.WrTableComponent_closure();
  }, "WrTableComponent_firstDownPercentRenderer", "WrTableComponent__columns", "$get$WrTableComponent__columns", function() {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9;
    t1 = N.WrRowData;
    t2 = G.SkawaDataTableColComponent$(null, t1);
    t2.header = "Player";
    t2.set$accessor(N.wr_table_WrTableComponent_nameAccessor$closure());
    t2.classString = "text-column";
    t3 = G.SkawaDataTableColComponent$(null, t1);
    t3.header = "Team";
    t3.set$accessor(N.wr_table_WrTableComponent_teamAccessor$closure());
    t3.classString = "text-column";
    t4 = G.SkawaDataTableColComponent$(null, t1);
    t4.header = "Rec";
    t4.set$accessor(N.wr_table_WrTableComponent_recAccessor$closure());
    t5 = G.SkawaDataTableColComponent$(null, t1);
    t5.header = "Yards";
    t5.set$accessor(N.wr_table_WrTableComponent_yardsAccessor$closure());
    t6 = G.SkawaDataTableColComponent$(null, t1);
    t6.header = "Avg";
    t6.set$accessor(N.wr_table_WrTableComponent_avgAccessor$closure());
    t7 = G.SkawaDataTableColComponent$(null, t1);
    t7.header = "Yds/G";
    t7.set$accessor(N.wr_table_WrTableComponent_yardPerGameAccessor$closure());
    t8 = G.SkawaDataTableColComponent$(null, t1);
    t8.header = "1st";
    t8.set$accessor(N.wr_table_WrTableComponent_firstDownAccessor$closure());
    t9 = G.SkawaDataColRendererDirective$(t1);
    t9.set$factoryRenderer($.$get$WrTableComponent_firstDownPercentRenderer());
    t1 = G.SkawaDataTableColComponent$(t9, t1);
    t1.header = "1st%";
    return H.setRuntimeTypeInfo([t2, t3, t4, t5, t6, t7, t8, t1], [[G.SkawaDataTableColComponent, N.WrRowData]]);
  }, "WrTableComponent__columns", "styles$WrTableComponent", "$get$styles$WrTableComponent", function() {
    return [$.$get$styles23()];
  }, "styles$WrTableComponent", "styles0", "$get$styles0", function() {
    return ["._nghost-%ID%{display:flex;flex-grow:1;align-items:center}._nghost-%ID% h2._ngcontent-%ID%{height:32px;display:flex;flex-grow:1;align-items:center;font-size:1.5em;font-weight:bold;-webkit-margin-before:.83em;-webkit-margin-after:.83em;-webkit-margin-start:0;-webkit-margin-end:0}._nghost-%ID% a._ngcontent-%ID%{color:var(--default-primary-color);text-decoration:none}"];
  }, "styles0", "styles$DemoHeaderComponent", "$get$styles$DemoHeaderComponent", function() {
    return [$.$get$styles0()];
  }, "styles$DemoHeaderComponent", "styles24", "$get$styles24", function() {
    return ["._nghost-%ID% extended-material-icon:not(:first-child)._ngcontent-%ID%{margin-left:8px}._nghost-%ID% extended-material-icon:not(:last-child)._ngcontent-%ID%{margin-right:8px}"];
  }, "styles24", "styles$ExtendedMaterialIconDemoComponent", "$get$styles$ExtendedMaterialIconDemoComponent", function() {
    return [$.$get$styles24()];
  }, "styles$ExtendedMaterialIconDemoComponent", "styles27", "$get$styles27", function() {
    return ["._nghost-%ID% div._ngcontent-%ID%{display:flex;align-items:center;justify-content:center;height:32px;width:100px}"];
  }, "styles27", "styles$HexColorizePipeDemoComponent", "$get$styles$HexColorizePipeDemoComponent", function() {
    return [$.$get$styles27()];
  }, "styles$HexColorizePipeDemoComponent", "styles25", "$get$styles25", function() {
    return ["._nghost-%ID% skawa-nav-item._ngcontent-%ID%{flex-basis:auto}"];
  }, "styles25", "styles$NavItemDemoComponent", "$get$styles$NavItemDemoComponent", function() {
    return [$.$get$styles25(), $.$get$styles26()];
  }, "styles$NavItemDemoComponent", "styles10", "$get$styles10", function() {
    return ["@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{display:block;border-radius:2px;box-sizing:border-box;background-color:#fff;box-shadow:0 2px 2px 0 rgba(0,0,0,.2),0 3px 1px -2px rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}._nghost-%ID%[no-shadow]{box-shadow:none}._nghost-%ID%.with-actions{display:flex}._nghost-%ID%.with-actions  skawa-header-title{flex-grow:1}"];
  }, "styles10", "SkawaCardHeaderComponent__rgbaRegexp", "$get$SkawaCardHeaderComponent__rgbaRegexp", function() {
    return P.RegExp_RegExp("rgba?\\s*\\((?:\\d+(?:\\.[\\d]+)?,?\\s*){3,4}\\)", true, false);
  }, "SkawaCardHeaderComponent__rgbaRegexp", "styles$SkawaCardComponent", "$get$styles$SkawaCardComponent", function() {
    return [$.$get$styles10()];
  }, "styles$SkawaCardComponent", "styles$SkawaCardContentComponent", "$get$styles$SkawaCardContentComponent", function() {
    return [$.$get$styles8()];
  }, "styles$SkawaCardContentComponent", "styles$SkawaCardHeaderComponent", "$get$styles$SkawaCardHeaderComponent", function() {
    return [$.$get$styles9()];
  }, "styles$SkawaCardHeaderComponent", "styles7", "$get$styles7", function() {
    return ["._nghost-%ID%{display:flex;padding:8px}._nghost-%ID%[align-right]{justify-content:flex-end}._nghost-%ID%[align-left]{justify-content:flex-start}._nghost-%ID%  [spacer],._nghost-%ID%  .spacer{display:block;flex-grow:1}._nghost-%ID%.with-actions,.with-actions ._nghost-%ID%{padding:0}._nghost-%ID%.with-actions  material-button[icon],.with-actions ._nghost-%ID%  material-button[icon]{color:#5c6bc0;margin-left:8px}"];
  }, "styles7", "styles$SkawaCardActionsComponent", "$get$styles$SkawaCardActionsComponent", function() {
    return [$.$get$styles7()];
  }, "styles$SkawaCardActionsComponent", "styles8", "$get$styles8", function() {
    return ["@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{font-size:13px;font-weight:400;line-height:24px;letter-spacing:0;color:rgba(0,0,0,.87);display:block;padding:16px}._nghost-%ID%.with-header{padding-top:0}._nghost-%ID%[fullWidth],._nghost-%ID%.skawa-full-width{padding:0}._nghost-%ID%.skawa-collapsed{display:none;color:green}"];
  }, "styles8", "styles9", "$get$styles9", function() {
    return ['@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{padding:16px;display:flex;align-items:center}._nghost-%ID%::after{content:"";display:block;clear:both}._nghost-%ID%  skawa-header-title,._nghost-%ID%  skawa-header-subhead{display:block}._nghost-%ID%  skawa-header-image{display:inline-block;float:left;box-sizing:border-box;width:40px;height:40px;margin-right:8px}._nghost-%ID%  skawa-header-title{font-size:24px;font-weight:400;line-height:32px;-moz-osx-font-smoothing:grayscale;color:rgba(0,0,0,.87)}._nghost-%ID%  skawa-header-subhead{font-size:14px;color:rgba(0,0,0,.54)}._nghost-%ID%.with-title-image  skawa-header-subhead{font-size:14px;color:rgba(0,0,0,.54)}._nghost-%ID%.with-title-image.with-subhead{display:block}._nghost-%ID%.with-title-image.with-subhead  skawa-header-title{font-size:20px;font-weight:500;font-family:"Roboto","Helvetica","Arial",sans-serif;line-height:1;letter-spacing:.02em;color:rgba(0,0,0,.87);font-size:15px;line-height:20px;padding-top:0;font-weight:700}._nghost-%ID%.with-actions{display:flex;padding-right:8px}._nghost-%ID%.with-actions  skawa-header-title{flex-grow:1}._nghost-%ID%.with-subhead{flex-direction:column;align-items:flex-start}._nghost-%ID%.with-data-table,.with-data-table ._nghost-%ID%{padding:12px 6px 12px 16px}'];
  }, "styles9", "styles19", "$get$styles19", function() {
    return ['@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{display:block;background-color:#fff}._nghost-%ID% table._ngcontent-%ID%{width:100%;box-sizing:border-box}._nghost-%ID% table.selectable._ngcontent-%ID% th:nth-child(2)._ngcontent-%ID%,._nghost-%ID% table.selectable._ngcontent-%ID% td:nth-child(2)._ngcontent-%ID%{padding-left:0}._nghost-%ID% table.selectable._ngcontent-%ID% th:first-of-type._ngcontent-%ID%,._nghost-%ID% table.selectable._ngcontent-%ID% td:first-of-type._ngcontent-%ID%{text-align:center;color:black;width:72px}._nghost-%ID% table.selectable._ngcontent-%ID% th:first-of-type._ngcontent-%ID% material_checkbox._ngcontent-%ID%,._nghost-%ID% table.selectable._ngcontent-%ID% td:first-of-type._ngcontent-%ID% material_checkbox._ngcontent-%ID%{margin:0;width:24px;height:24px;vertical-align:middle}._nghost-%ID% table.selectable._ngcontent-%ID% tfoot._ngcontent-%ID% tr._ngcontent-%ID% td:first-of-type._ngcontent-%ID%{text-align:right;padding-left:72px!important}._nghost-%ID% table.non-selectable._ngcontent-%ID% th:first-of-type._ngcontent-%ID%,._nghost-%ID% table.non-selectable._ngcontent-%ID% td:first-of-type._ngcontent-%ID%{padding-left:24px!important}._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr._ngcontent-%ID%{transition-duration:.28s;transition-timing-function:cubic-bezier(0.4,0,0.2,1);transition-property:background-color}._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr:hover._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr.highlighted._ngcontent-%ID%{background-color:rgba(158,158,158,.2)!important}._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr.selected._ngcontent-%ID%{background-color:rgba(158,158,158,.3)}._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr.odd-row._ngcontent-%ID%{background-color:rgba(158,158,158,.1)}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID%{border-bottom:1px solid #d0d0d0}._nghost-%ID% table._ngcontent-%ID% tr:first-of-type._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tr:last-of-type._ngcontent-%ID%{height:56px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% td._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th._ngcontent-%ID%{padding-left:56px;text-align:right;vertical-align:middle;font-size:13px;font-weight:400;line-height:24px;letter-spacing:0;color:rgba(0,0,0,.87);height:48px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% td:first-of-type._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th:first-of-type._ngcontent-%ID%{padding-left:0}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% td:last-of-type._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th:last-of-type._ngcontent-%ID%{padding-right:24px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% td._ngcontent-%ID%{font-size:13px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th._ngcontent-%ID%{font-size:12px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort-enabled._ngcontent-%ID% a._ngcontent-%ID%{cursor:pointer}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort-enabled._ngcontent-%ID% a._ngcontent-%ID%:before{font-family:"Material Icons";content:"arrow_downwards";opacity:0}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort-enabled._ngcontent-%ID% a:hover._ngcontent-%ID%{font-weight:bold}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort-enabled._ngcontent-%ID% a:hover._ngcontent-%ID%:before{opacity:.38}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort._ngcontent-%ID%{font-weight:bold}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort._ngcontent-%ID% a._ngcontent-%ID%{cursor:pointer}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort._ngcontent-%ID% a._ngcontent-%ID%:before{font-family:"Material Icons";content:"arrow_upwards";opacity:.87}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort.desc._ngcontent-%ID% a._ngcontent-%ID%:before{content:"arrow_downwards"}._nghost-%ID% .text-column._ngcontent-%ID%,._nghost-%ID% .text-column--header._ngcontent-%ID%,._nghost-%ID% .text-column--footer._ngcontent-%ID%{text-align:left!important}._nghost-%ID% .numeric-column._ngcontent-%ID%,._nghost-%ID% .numeric-column--header._ngcontent-%ID%,._nghost-%ID% .numeric-column--footer._ngcontent-%ID%{text-align:right}'];
  }, "styles19", "styles$SkawaDataTableComponent", "$get$styles$SkawaDataTableComponent", function() {
    return [$.$get$styles19()];
  }, "styles$SkawaDataTableComponent", "styles", "$get$styles", function() {
    return ["._nghost-%ID%{display:inline-flex}._nghost-%ID% .mdi._ngcontent-%ID%{font-size:24px}._nghost-%ID%[size=x-small] .mdi._ngcontent-%ID%{font-size:12px}._nghost-%ID%[size=small] .mdi._ngcontent-%ID%{font-size:13px}._nghost-%ID%[size=medium] .mdi._ngcontent-%ID%{font-size:16px}._nghost-%ID%[size=large] .mdi._ngcontent-%ID%{font-size:18px}._nghost-%ID%[size=x-large] .mdi._ngcontent-%ID%{font-size:20px}"];
  }, "styles", "styles$ExtendedMaterialIconComponent", "$get$styles$ExtendedMaterialIconComponent", function() {
    return [$.$get$styles()];
  }, "styles$ExtendedMaterialIconComponent", "styles11", "$get$styles11", function() {
    return ["._nghost-%ID%{display:block}._nghost-%ID% .grid-container._ngcontent-%ID%{position:relative}._nghost-%ID% .grid-container._ngcontent-%ID%  [gridTile]{position:absolute;width:280px;margin:16px;transition:transform .3s ease-out}"];
  }, "styles11", "styles$GridComponent", "$get$styles$GridComponent", function() {
    return [$.$get$styles11()];
  }, "styles$GridComponent", "styles1", "$get$styles1", function() {
    return [".snackbar-container._ngcontent-%ID%{box-shadow:0 2px 2px 0 rgba(0,0,0,.2),0 3px 1px -2px rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);position:fixed;left:50%;bottom:0px;transform:translate(-50%,100%);font-size:14px;z-index:10000;height:48px;color:#fff;background-color:#323232;display:flex;padding:0 24px;box-sizing:border-box;border-radius:2px;transition:transform .5s ease}.snackbar-container._ngcontent-%ID% material-button._ngcontent-%ID%{align-self:center}.snackbar-container.show._ngcontent-%ID%{transform:translate(-50%,0)}.snackbar-container._ngcontent-%ID% .message._ngcontent-%ID%,.snackbar-container._ngcontent-%ID% .action._ngcontent-%ID%{align-self:center}._nghost-%ID%.touch-enabled .snackbar-container._ngcontent-%ID%,.touch-enabled ._nghost-%ID% .snackbar-container._ngcontent-%ID%{height:96px}"];
  }, "styles1", "SnackbarService__defaultDuration", "$get$SnackbarService__defaultDuration", function() {
    return P.Duration$(0, 0, 0, 0, 0, 3);
  }, "SnackbarService__defaultDuration", "SkawaSnackbarComponent__minimumSlideInDelay", "$get$SkawaSnackbarComponent__minimumSlideInDelay", function() {
    return P.Duration$(0, 0, 0, 100, 0, 0);
  }, "SkawaSnackbarComponent__minimumSlideInDelay", "styles$SkawaSnackbarComponent", "$get$styles$SkawaSnackbarComponent", function() {
    return [$.$get$styles1()];
  }, "styles$SkawaSnackbarComponent"]);
  Isolate = Isolate.$finishIsolateConstructor(Isolate);
  $ = new Isolate();
  init.metadata = ["_", "value", "row", null, "error", "stackTrace", "e", "event", "result", "data", "callback", "self", "o", "a", "parent", "b", "zone", "element", "arg", "arg1", "f", "invocation", "arg2", "index", "s", "arguments", "context", "item", "attributeName", "child", "p0", "isVisible", "argument", "message", "object", "options", "numberOfArguments", "attr", "dict", "postCreate", "n", "arg3", "captureThis", "arg4", "specification", "zoneValues", "each", "closure", "errorCode", "newMessage", true, "elem", "findInAncestors", "didWork_", "t", "promiseValue", "fn", "sub", "layoutRects", "changes", "option", "filterQuery", "state", "pane", false, "track", "highResTimer", "promiseError", "url", "__", "name", "className", "action", "duration", "p1"];
  init.types = [{func: 1, ret: P.Null}, {func: 1, ret: -1}, {func: 1, ret: -1, args: [,]}, {func: 1, ret: P.Null, args: [,]}, {func: 1, ret: P.Null, args: [,,]}, {func: 1, ret: -1, args: [W.KeyboardEvent]}, {func: 1, ret: P.String, args: [N.WrRowData]}, {func: 1, args: [,]}, {func: 1, ret: -1, args: [P.Object]}, {func: 1, ret: P.bool, args: [P.Object]}, {func: 1, ret: P.bool, args: [P.String]}, {func: 1, ret: P.Null, args: [W.Event]}, {func: 1, ret: P.Null, args: [-1]}, {func: 1, ret: P.String, args: [P.String]}, {func: 1, ret: [P.Future,,]}, {func: 1, ret: -1, args: [P.Object], opt: [P.StackTrace]}, {func: 1, ret: -1, args: [P.String,,]}, {func: 1, ret: -1, args: [W.MouseEvent]}, {func: 1, ret: -1, args: [W.UIEvent]}, {func: 1, ret: P.String, args: [G.SchoolRowData]}, {func: 1, ret: P.String, args: [P.int]}, {func: 1, ret: [S.AppView, Q.DropdownButtonComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.Null, args: [R.CollectionChangeRecord]}, {func: 1, ret: P.bool}, {func: 1, ret: P.Null, args: [P.bool]}, {func: 1, ret: P.Null, args: [N.KeyValueChangeRecord]}, {func: 1, ret: -1, args: [W.Event]}, {func: 1, ret: P.Null, args: [W.MouseEvent]}, {func: 1, ret: P.String, args: [,]}, {func: 1, ret: -1, args: [{func: 1, ret: -1}]}, {func: 1, ret: -1, args: [[P.Set, P.String]]}, {func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}, {func: 1, ret: -1, opt: [{func: 1, ret: P.int, args: [W.Element, W.Element]}]}, {func: 1, ret: -1, args: [W.FocusEvent]}, {func: 1, ret: P.Null, args: [P.String,,]}, {func: 1, ret: -1, args: [P.bool]}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}, {func: 1, ret: P.bool, args: [W.Node]}, {func: 1, ret: P.bool, args: [, P.String]}, {func: 1, ret: -1, args: [[D.ComponentRef,,]]}, {func: 1, ret: [S.AppView, N.WrTableComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [P.Stream, [P.Rectangle, P.num]], args: [W.HtmlElement], named: {track: P.bool}}, {func: 1, ret: P.bool, args: [[P.Rectangle, P.num], [P.Rectangle, P.num]]}, {func: 1, bounds: [P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}, {func: 1, ret: P.int, args: [P.int]}, {func: 1, ret: P.String, args: [U.Node0]}, {func: 1, ret: [S.AppView, Q.GridDemoComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.bool, args: [P.int]}, {func: 1, ret: P.bool, args: [R.InlineSyntax]}, {func: 1, ret: [S.AppView, T.SkawaSnackbarComponent], args: [[S.AppView,,], P.int]}, {func: 1, bounds: [P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}, 1]}, {func: 1, ret: P.String, args: [K.CarRowData]}, {func: 1, ret: P.bool, args: [W.NodeValidator]}, {func: 1, ret: P.int, args: [G.SchoolRowData, G.SchoolRowData]}, {func: 1, ret: P.int, args: [,,]}, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}, 1, 2]}, {func: 1, ret: P.bool, args: [W.Element, P.String, P.String, W._Html5NodeValidator]}, {func: 1, ret: M.Injector, opt: [M.Injector]}, {func: 1, ret: Y.NgZone}, {func: 1, ret: [S.AppView, N.CardDemoComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.bool, args: [K.BlockSyntax]}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone,, P.StackTrace]}, {func: 1, ret: P.Null, args: [Y.NgZoneError]}, {func: 1, ret: P.Null, args: [W.DomException]}, {func: 1, args: [, P.String]}, {func: 1, ret: -1, opt: [{func: 1, ret: P.int, args: [W.Node, W.Node]}]}, {func: 1, ret: P.Null, args: [{func: 1, ret: -1}]}, {func: 1, ret: W.WindowBase, args: [P.String, P.String], opt: [P.String]}, {func: 1, ret: -1, opt: [P.String]}, {func: 1, bounds: [P.Object], ret: 0, args: [{func: 1, ret: 0}]}, {func: 1, args: [W.Element], opt: [P.bool]}, {func: 1, ret: [P.List,,]}, {func: 1, ret: W.CssClassSet, args: [W.Element]}, {func: 1, ret: U.JsTestability, args: [W.Element]}, {func: 1, ret: [P.List, U.JsTestability]}, {func: 1, ret: U.JsTestability, args: [D.Testability]}, {func: 1, ret: -1, args: [P.CssClassSetImpl]}, {func: 1, args: [P.CssClassSetImpl]}, {func: 1, ret: P.Null, args: [[D.ComponentRef,,]]}, {func: 1, ret: P.bool, args: [P.bool, P.CssClassSetImpl]}, {func: 1, args: [W.Event]}, {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool, P.String]}]}, {func: 1, ret: -1, opt: [P.Object]}, {func: 1, ret: -1, args: [-1]}, {func: 1, ret: P.Null, args: [[P.StreamSubscription, [P.Rectangle, P.num]]]}, {func: 1, ret: P.Null, args: [[P.List, [P.Rectangle, P.num]]]}, {func: 1, ret: P.bool, args: [[P.Rectangle, P.num]]}, {func: 1, ret: P.Null, args: [W.DivElement]}, {func: 1, ret: -1, args: [P.String, P.String]}, {func: 1, ret: P.Null, args: [,], opt: [,]}, {func: 1, ret: [P._Future,,], args: [,]}, {func: 1, ret: P.String, args: [P.Object]}, {func: 1, ret: -1, args: [W.Node, W.Node]}, {func: 1, ret: P.bool, args: [P.Object, P.String]}, {func: 1, ret: P.num, args: [P.num,,]}, {func: 1, ret: [P.Stream, [P.Rectangle, P.num]]}, {func: 1, ret: [P.Future,,], args: [,]}, {func: 1, args: [,,]}, {func: 1, ret: [P.Future,,], args: [Z.OverlayState, W.HtmlElement]}, {func: 1, ret: [P.Rectangle, P.num], args: [,]}, {func: 1, ret: [P.Rectangle, P.num], args: [-1]}, {func: 1, ret: P.bool, args: [[P.Set, P.String]]}, {func: 1, ret: P.bool, args: [P.num, P.num]}, {func: 1, ret: R._RateLimitSink, args: [[P.EventSink,,]]}, {func: 1, ret: P.Null, args: [P.num]}, {func: 1, ret: -1, args: [P.num]}, {func: 1, ret: P.Null, args: [, P.StackTrace]}, {func: 1}, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}, {func: 1, ret: W.Element, args: [W.Node]}, {func: 1, ret: -1, args: [, P.StackTrace]}, {func: 1, ret: -1, args: [K.ListItem]}, {func: 1, ret: P.bool, args: [P.RegExp]}, {func: 1, ret: P.JsFunction, args: [,]}, {func: 1, ret: S.LinkReference}, {func: 1, ret: P.int, args: [P.String, P.String]}, {func: 1, ret: [P.JsArray,,], args: [,]}, {func: 1, ret: P.JsObject, args: [,]}, {func: 1, ret: P.Null, args: [P.String], opt: [P.String]}, {func: 1, ret: P.int, args: [P.int,,]}, {func: 1, ret: P.Null, args: [W.Element]}, {func: 1, ret: [P.Map, P.String,,], args: [,,]}, {func: 1, ret: P.String}, {func: 1, ret: Y.ApplicationRef}, {func: 1, ret: Q.AppViewUtils}, {func: 1, ret: P.String, args: [P.String, P.String]}, {func: 1, ret: -1, args: [[G.SkawaDataTableColComponent, U.RowData]]}, {func: 1, ret: P.bool, args: [G.SchoolRowData]}, {func: 1, ret: -1, args: [,], opt: [,]}, {func: 1, ret: P.String, args: [[G.SkawaDataTableColComponent, N.WrRowData]]}, {func: 1, ret: [D.ComponentFactory, L.FirstDownPercentComponent], args: [U.RowData]}, {func: 1, ret: P.Null, args: [[P.List, [Z.SelectionChangeRecord, [G.SkawaDataTableColComponent, N.WrRowData]]]]}, {func: 1, ret: P.bool, args: [[G.SkawaDataTableColComponent, N.WrRowData]]}, {func: 1, ret: [P.List, [S.SkawaDataTableComponent, U.RowData]], args: [T._ViewWrTableComponent1]}, {func: 1, ret: [P.List, [G.SkawaDataTableColComponent, N.WrRowData]], args: [T._ViewWrTableComponent2]}, {func: 1, ret: [P.List, [G.SkawaDataTableColComponent, U.RowData]], args: [[P.List, [G.SkawaDataTableColComponent, U.RowData]]]}, {func: 1, ret: P.bool, args: [[G.SkawaDataTableColComponent, U.RowData]]}, {func: 1, ret: S.SortDirection, args: [P.String]}, {func: 1, ret: -1, args: [P.String], named: {action: T.SnackAction, duration: P.Duration}}, {func: 1, ret: P.Null, args: [T.SnackMessage]}, {func: 1, ret: D.Testability}, {func: 1, ret: M.Injector}, {func: 1, bounds: [P.Object], ret: {func: 1, ret: 0}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}, {func: 1, bounds: [P.Object, P.Object], ret: {func: 1, ret: 0, args: [1]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}]}, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: {func: 1, ret: 0, args: [1, 2]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}]}, {func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}, {func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1, args: [P.Timer]}]}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}, {func: 1, ret: -1, args: [P.String]}, {func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map,,,]]}, {func: 1, ret: P.bool, args: [,,]}, {func: 1, ret: P.int, args: [,]}, {func: 1, ret: P.int, args: [P.Object]}, {func: 1, ret: P.bool, args: [P.Object, P.Object]}, {func: 1, ret: P.bool, args: [,]}, {func: 1, args: [[P.Map,,,]], opt: [{func: 1, ret: -1, args: [P.Object]}]}, {func: 1, ret: P.Object, args: [,]}, {func: 1, bounds: [P.num], ret: 0, args: [0, 0]}, {func: 1, ret: P.Null, args: [P.Symbol0,,]}, {func: 1, ret: P.Object, args: [P.int,,]}, {func: 1, ret: [S.AppView, Z.DynamicComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, B.MaterialCheckboxComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, G.MaterialPopupComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.Null, args: [R.CollectionChangeRecord, P.int, P.int]}, {func: 1, ret: P.Object, args: [P.Object]}, {func: 1, bounds: [P.Object], ret: {func: 1, ret: [P.Future,,], args: [0]}, args: [{func: 1, args: [0]}, P.Duration]}, {func: 1, bounds: [P.Object], ret: {func: 1, args: [0]}, args: [{func: 1, args: [0]}, P.Duration]}, {func: 1, ret: P.DateTime}, {func: 1, ret: [S.AppView, E.SkawaSidebarItemComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, Q.AppComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.Null, args: [P.int,,]}, {func: 1, ret: [S.AppView, L.FirstDownPercentComponent], args: [[S.AppView,,], P.int]}, {func: 1, args: [P.String]}, {func: 1, ret: P.bool, args: [[P.Map, P.String,,]]}, {func: 1, ret: -1, args: [P.Function]}, {func: 1, ret: [S.AppView, A.HexColorizePipeDemoComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.bool, args: [R.TagState]}];
  function convertToFastObject(properties) {
    function MyClass() {
    }
    MyClass.prototype = properties;
    new MyClass();
    return properties;
  }
  function convertToSlowObject(properties) {
    properties.__MAGIC_SLOW_PROPERTY = 1;
    delete properties.__MAGIC_SLOW_PROPERTY;
    return properties;
  }
  A = convertToFastObject(A);
  B = convertToFastObject(B);
  C = convertToFastObject(C);
  D = convertToFastObject(D);
  E = convertToFastObject(E);
  F = convertToFastObject(F);
  G = convertToFastObject(G);
  H = convertToFastObject(H);
  J = convertToFastObject(J);
  K = convertToFastObject(K);
  L = convertToFastObject(L);
  M = convertToFastObject(M);
  N = convertToFastObject(N);
  O = convertToFastObject(O);
  P = convertToFastObject(P);
  Q = convertToFastObject(Q);
  R = convertToFastObject(R);
  S = convertToFastObject(S);
  T = convertToFastObject(T);
  U = convertToFastObject(U);
  V = convertToFastObject(V);
  W = convertToFastObject(W);
  X = convertToFastObject(X);
  Y = convertToFastObject(Y);
  Z = convertToFastObject(Z);
  function init() {
    Isolate.$isolateProperties = Object.create(null);
    init.allClasses = map();
    init.getTypeFromName = function(name) {
      return init.allClasses[name];
    };
    init.interceptorsByTag = map();
    init.leafTags = map();
    init.finishedClasses = map();
    Isolate.$lazy = function(fieldName, getterName, lazyValue, staticName, prototype) {
      if (!init.lazies)
        init.lazies = Object.create(null);
      init.lazies[fieldName] = getterName;
      prototype = prototype || Isolate.$isolateProperties;
      var sentinelUndefined = {};
      var sentinelInProgress = {};
      prototype[fieldName] = sentinelUndefined;
      prototype[getterName] = function() {
        var result = this[fieldName];
        if (result == sentinelInProgress)
          H.throwCyclicInit(staticName || fieldName);
        try {
          if (result === sentinelUndefined) {
            this[fieldName] = sentinelInProgress;
            try {
              result = this[fieldName] = lazyValue();
            } finally {
              if (result === sentinelUndefined)
                this[fieldName] = null;
            }
          }
          return result;
        } finally {
          this[getterName] = function() {
            return this[fieldName];
          };
        }
      };
    };
    Isolate.$finishIsolateConstructor = function(oldIsolate) {
      var isolateProperties = oldIsolate.$isolateProperties;
      function Isolate() {
        var staticNames = Object.keys(isolateProperties);
        for (var i = 0; i < staticNames.length; i++) {
          var staticName = staticNames[i];
          this[staticName] = isolateProperties[staticName];
        }
        var lazies = init.lazies;
        var lazyInitializers = lazies ? Object.keys(lazies) : [];
        for (var i = 0; i < lazyInitializers.length; i++)
          this[lazies[lazyInitializers[i]]] = null;
        function ForceEfficientMap() {
        }
        ForceEfficientMap.prototype = this;
        new ForceEfficientMap();
        for (var i = 0; i < lazyInitializers.length; i++) {
          var lazyInitName = lazies[lazyInitializers[i]];
          this[lazyInitName] = isolateProperties[lazyInitName];
        }
      }
      Isolate.prototype = oldIsolate.prototype;
      Isolate.prototype.constructor = Isolate;
      Isolate.$isolateProperties = isolateProperties;
      Isolate.makeConstantList = oldIsolate.makeConstantList;
      Isolate.functionThatReturnsNull = oldIsolate.functionThatReturnsNull;
      return Isolate;
    };
  }
  !function() {
    var intern = function(s) {
      var o = {};
      o[s] = 1;
      return Object.keys(convertToFastObject(o))[0];
    };
    init.getIsolateTag = function(name) {
      return intern("___dart_" + name + init.isolateTag);
    };
    var tableProperty = "___dart_isolate_tags_";
    var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
    var rootProperty = "_ZxYxX";
    for (var i = 0;; i++) {
      var property = intern(rootProperty + "_" + i + "_");
      if (!(property in usedProperties)) {
        usedProperties[property] = 1;
        init.isolateTag = property;
        break;
      }
    }
    init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
  }();
  // BEGIN invoke [main].
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != 'undefined') {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(F.main, []);
    else
      F.main([]);
  });
  // END invoke [main].
})();

//# sourceMappingURL=main.dart.js.map
