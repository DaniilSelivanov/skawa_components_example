// Generated by dart2js (fast startup emitter, strong), the Dart to JavaScript compiler version: 2.3.0.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
//
// defaultPackagesBase:
//    Override the location where `package:` uris are resolved from. By default
//    they are resolved under "packages/" from the current window location.
{
}
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function setFunctionNamesIfNecessary(holders) {
    function t() {
    }
    ;
    if (typeof t.name == "string")
      return;
    for (var i = 0; i < holders.length; i++) {
      var holder = holders[i];
      var keys = Object.keys(holder);
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        var f = holder[key];
        if (typeof f == 'function')
          f.name = key;
      }
    }
  }
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixin(cls, mixin) {
    copyProperties(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        H.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {
    return isIntercepted ? new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "(receiver) {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);" + "return new c(this, funcs[0], receiver, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null) : new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "() {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);" + "return new c(this, funcs[0], null, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null);
  }
  function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {
    var cache = null;
    return isStatic ? function() {
      if (cache === null)
        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;
      return cache;
    } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);
  }
  var typesOffset = 0;
  function installTearOff(container, getterName, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var funs = [];
    for (var i = 0; i < funsOrNames.length; i++) {
      var fun = funsOrNames[i];
      if (typeof fun == 'string')
        fun = container[fun];
      fun.$callName = callNames[i];
      funs.push(fun);
    }
    var fun = funs[0];
    fun.$requiredArgCount = requiredParameterCount;
    fun.$defaultValues = optionalParameterDefaultValues;
    var reflectionInfo = funType;
    if (typeof reflectionInfo == "number")
      reflectionInfo = reflectionInfo + typesOffset;
    var name = funsOrNames[0];
    fun.$stubName = name;
    var getterFunction = tearOff(funs, applyIndex || 0, reflectionInfo, isStatic, name, isIntercepted);
    container[getterName] = getterFunction;
    if (isStatic)
      fun.$tearOff = getterFunction;
  }
  function installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixin, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, updateHolder: updateHolder, convertToFastObject: convertToFastObject, setFunctionNamesIfNecessary: setFunctionNamesIfNecessary, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  function getGlobalFromName(name) {
    for (var i = 0; i < holders.length; i++) {
      if (holders[i] == C)
        continue;
      if (holders[i][name])
        return holders[i][name];
    }
  }
  var C = {},
  H = {JS_CONST: function JS_CONST() {
    },
    SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
      P.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        P.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          H.throwExpression(P.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new H.SubListIterable(_iterable, _start, _endOrLength, [$E]);
    },
    MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
      H.assertSubtype(iterable, "$isIterable", [$S], "$asIterable");
      H.functionTypeCheck($function, {func: 1, ret: $T, args: [$S]});
      if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
        return new H.EfficientLengthMappedIterable(iterable, $function, [$S, $T]);
      return new H.MappedIterable(iterable, $function, [$S, $T]);
    },
    TakeIterable_TakeIterable: function(iterable, takeCount, $E) {
      H.assertSubtype(iterable, "$isIterable", [$E], "$asIterable");
      P.RangeError_checkNotNegative(takeCount, "takeCount");
      if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
        return new H.EfficientLengthTakeIterable(iterable, takeCount, [$E]);
      return new H.TakeIterable(iterable, takeCount, [$E]);
    },
    SkipIterable_SkipIterable: function(iterable, count, $E) {
      H.assertSubtype(iterable, "$isIterable", [$E], "$asIterable");
      if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable) {
        P.RangeError_checkNotNegative(count, "count");
        return new H.EfficientLengthSkipIterable(iterable, count, [$E]);
      }
      P.RangeError_checkNotNegative(count, "count");
      return new H.SkipIterable(iterable, count, [$E]);
    },
    IterableElementError_noElement: function() {
      return new P.StateError("No element");
    },
    IterableElementError_tooMany: function() {
      return new P.StateError("Too many elements");
    },
    IterableElementError_tooFew: function() {
      return new P.StateError("Too few elements");
    },
    Sort_sort: function(a, compare, $E) {
      var t1;
      H.assertSubtype(a, "$isList", [$E], "$asList");
      H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [$E, $E]});
      t1 = J.get$length$asx(a);
      if (typeof t1 !== "number")
        return t1.$sub();
      H.Sort__doSort(a, 0, t1 - 1, compare, $E);
    },
    Sort__doSort: function(a, left, right, compare, $E) {
      H.assertSubtype(a, "$isList", [$E], "$asList");
      H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [$E, $E]});
      if (right - left <= 32)
        H.Sort__insertionSort(a, left, right, compare, $E);
      else
        H.Sort__dualPivotQuicksort(a, left, right, compare, $E);
    },
    Sort__insertionSort: function(a, left, right, compare, $E) {
      var i, t1, el, j, j0;
      H.assertSubtype(a, "$isList", [$E], "$asList");
      H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [$E, $E]});
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (!(j > left && J.$gt$n(compare.call$2(t1.$index(a, j - 1), el), 0)))
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort: function(a, left, right, compare, $E) {
      var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, great0, less0, pivots_are_equal, comp_pivot1, comp_pivot2, t2;
      H.assertSubtype(a, "$isList", [$E], "$asList");
      H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [$E, $E]});
      sixth = C.JSInt_methods._tdivFast$1(right - left + 1, 6);
      index1 = left + sixth;
      index5 = right - sixth;
      index3 = C.JSInt_methods._tdivFast$1(left + right, 2);
      index2 = index3 - sixth;
      index4 = index3 + sixth;
      t1 = J.getInterceptor$asx(a);
      el1 = t1.$index(a, index1);
      el2 = t1.$index(a, index2);
      el3 = t1.$index(a, index3);
      el4 = t1.$index(a, index4);
      el5 = t1.$index(a, index5);
      if (J.$gt$n(compare.call$2(el1, el2), 0)) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      if (J.$gt$n(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if (J.$gt$n(compare.call$2(el1, el3), 0)) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if (J.$gt$n(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (J.$gt$n(compare.call$2(el1, el4), 0)) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      if (J.$gt$n(compare.call$2(el3, el4), 0)) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      if (J.$gt$n(compare.call$2(el2, el5), 0)) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      if (J.$gt$n(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (J.$gt$n(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      if (J.$eq$(compare.call$2(el2, el4), 0)) {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          if (comp === 0)
            continue;
          if (typeof comp !== "number")
            return comp.$lt();
          if (comp < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              if (typeof comp !== "number")
                return comp.$gt();
              if (comp > 0) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp_pivot1 = compare.call$2(ak, el2);
          if (typeof comp_pivot1 !== "number")
            return comp_pivot1.$lt();
          if (comp_pivot1 < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else {
            comp_pivot2 = compare.call$2(ak, el4);
            if (typeof comp_pivot2 !== "number")
              return comp_pivot2.$gt();
            if (comp_pivot2 > 0)
              for (; true;) {
                comp = compare.call$2(t1.$index(a, great), el4);
                if (typeof comp !== "number")
                  return comp.$gt();
                if (comp > 0) {
                  --great;
                  if (great < k)
                    break;
                  continue;
                } else {
                  comp = compare.call$2(t1.$index(a, great), el2);
                  if (typeof comp !== "number")
                    return comp.$lt();
                  great0 = great - 1;
                  if (comp < 0) {
                    t1.$indexSet(a, k, t1.$index(a, less));
                    less0 = less + 1;
                    t1.$indexSet(a, less, t1.$index(a, great));
                    t1.$indexSet(a, great, ak);
                    less = less0;
                  } else {
                    t1.$indexSet(a, k, t1.$index(a, great));
                    t1.$indexSet(a, great, ak);
                  }
                  great = great0;
                  break;
                }
              }
          }
        }
        pivots_are_equal = false;
      }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      H.Sort__doSort(a, left, less - 2, compare, $E);
      H.Sort__doSort(a, great + 2, right, compare, $E);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) === 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) === 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) === 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                comp = compare.call$2(t1.$index(a, great), el2);
                if (typeof comp !== "number")
                  return comp.$lt();
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        H.Sort__doSort(a, less, great, compare, $E);
      } else
        H.Sort__doSort(a, less, great, compare, $E);
    },
    CodeUnits: function CodeUnits(t0) {
      this.__internal$_string = t0;
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2, t3) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _.__internal$_current = null;
      _.$ti = t3;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EmptyIterator: function EmptyIterator(t0) {
      this.$ti = t0;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    Symbol: function Symbol(t0) {
      this.__internal$_name = t0;
    },
    instantiate1: function(f, T1) {
      var t1;
      H.interceptedTypeCheck(f, "$isClosure");
      t1 = new H.Instantiation1(f, [T1]);
      t1.Instantiation$1(f);
      return t1;
    },
    unminifyOrTag: function(rawClassName) {
      var preserved = H.stringTypeCheck(init.mangledGlobalNames[rawClassName]);
      if (typeof preserved === "string")
        return preserved;
      return rawClassName;
    },
    getType: function(index) {
      return init.types[H.intTypeCheck(index)];
    },
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return !!J.getInterceptor$(object).$isJavaScriptIndexingBehavior;
    },
    S: function(value) {
      var res;
      if (typeof value === "string")
        return value;
      if (typeof value === "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      if (typeof res !== "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return res;
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives_parseInt: function(source, radix) {
      var match, decimalMatch, maxCharCode, digitsPart, t1, i;
      if (typeof source !== "string")
        H.throwExpression(H.argumentErrorValue(source));
      match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return;
      if (3 >= match.length)
        return H.ioore(match, 3);
      decimalMatch = H.stringTypeCheck(match[3]);
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return;
      }
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((C.JSString_methods._codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return;
      }
      return parseInt(source, radix);
    },
    Primitives_objectTypeName: function(object) {
      return H.Primitives__objectClassName(object) + H._joinArguments(H.getRuntimeTypeInfo(object), 0, null);
    },
    Primitives__objectClassName: function(object) {
      var interceptorConstructorName, $name, t1, dispatchName, objectConstructor, match, decompiledName,
        interceptor = J.getInterceptor$(object),
        interceptorConstructor = interceptor.constructor;
      if (typeof interceptorConstructor == "function") {
        interceptorConstructorName = interceptorConstructor.name;
        $name = typeof interceptorConstructorName === "string" ? interceptorConstructorName : null;
      } else
        $name = null;
      t1 = $name == null;
      if (t1 || interceptor === C.Interceptor_methods || !!interceptor.$isUnknownJavaScriptObject) {
        dispatchName = C.C_JS_CONST(object);
        if (t1)
          $name = dispatchName;
        if (dispatchName === "Object") {
          objectConstructor = object.constructor;
          if (typeof objectConstructor == "function") {
            match = String(objectConstructor).match(/^\s*function\s*([\w$]*)\s*\(/);
            decompiledName = match == null ? null : match[1];
            if (typeof decompiledName === "string" && /^\w+$/.test(decompiledName))
              $name = decompiledName;
          }
        }
        return $name;
      }
      $name = $name;
      return H.unminifyOrTag($name.length > 1 && C.JSString_methods._codeUnitAt$1($name, 0) === 36 ? C.JSString_methods.substring$1($name, 1) : $name);
    },
    Primitives_stringFromCharCode: function(charCode) {
      var bits;
      if (typeof charCode !== "number")
        return H.iae(charCode);
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((55296 | C.JSInt_methods._shrOtherPositive$1(bits, 10)) >>> 0, 56320 | bits & 1023);
        }
      }
      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate: function(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._value);
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_getProperty: function(object, key) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H.argumentErrorValue(object));
      return object[key];
    },
    Primitives_setProperty: function(object, key, value) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H.argumentErrorValue(object));
      object[key] = value;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var $arguments, namedArgumentList, t1 = {};
      H.assertSubtype(namedArguments, "$isMap", [P.String, null], "$asMap");
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      t1.argumentCount = positionalArguments.length;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
      t1.names = "";
      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      "" + t1.argumentCount;
      return J.noSuchMethod$1$($function, new H.JSInvocationMirror(C.Symbol_call, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunction: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, argumentCount, jsStub;
      H.assertSubtype(namedArguments, "$isMap", [P.String, null], "$asMap");
      if (positionalArguments instanceof Array)
        t1 = namedArguments == null || namedArguments.get$isEmpty(namedArguments);
      else
        t1 = false;
      if (t1) {
        $arguments = positionalArguments;
        argumentCount = $arguments.length;
        if (argumentCount === 0) {
          if (!!$function.call$0)
            return $function.call$0();
        } else if (argumentCount === 1) {
          if (!!$function.call$1)
            return $function.call$1($arguments[0]);
        } else if (argumentCount === 2) {
          if (!!$function.call$2)
            return $function.call$2($arguments[0], $arguments[1]);
        } else if (argumentCount === 3) {
          if (!!$function.call$3)
            return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
        } else if (argumentCount === 4) {
          if (!!$function.call$4)
            return $function.call$4($arguments[0], $arguments[1], $arguments[2], $arguments[3]);
        } else if (argumentCount === 5)
          if (!!$function.call$5)
            return $function.call$5($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4]);
        jsStub = $function["call" + "$" + argumentCount];
        if (jsStub != null)
          return jsStub.apply($function, $arguments);
      }
      return H.Primitives__genericApplyFunction2($function, positionalArguments, namedArguments);
    },
    Primitives__genericApplyFunction2: function($function, positionalArguments, namedArguments) {
      var $arguments, argumentCount, requiredParameterCount, defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, keys, _i, used, t2;
      H.assertSubtype(namedArguments, "$isMap", [P.String, null], "$asMap");
      if (positionalArguments != null)
        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, null);
      else
        $arguments = [];
      argumentCount = $arguments.length;
      requiredParameterCount = $function.$requiredArgCount;
      if (argumentCount < requiredParameterCount)
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      defaultValuesClosure = $function.$defaultValues;
      t1 = defaultValuesClosure == null;
      defaultValues = !t1 ? defaultValuesClosure() : null;
      interceptor = J.getInterceptor$($function);
      jsFunction = interceptor["call*"];
      if (typeof jsFunction === "string")
        jsFunction = interceptor[jsFunction];
      if (t1) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount === requiredParameterCount)
          return jsFunction.apply($function, $arguments);
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      if (defaultValues instanceof Array) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount > requiredParameterCount + defaultValues.length)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        C.JSArray_methods.addAll$1($arguments, defaultValues.slice(argumentCount - requiredParameterCount));
        return jsFunction.apply($function, $arguments);
      } else {
        if (argumentCount > requiredParameterCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        keys = Object.keys(defaultValues);
        if (namedArguments == null)
          for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i)
            C.JSArray_methods.add$1($arguments, defaultValues[H.stringTypeCheck(keys[_i])]);
        else {
          for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
            t2 = H.stringTypeCheck(keys[_i]);
            if (namedArguments.containsKey$1(0, t2)) {
              ++used;
              C.JSArray_methods.add$1($arguments, namedArguments.$index(0, t2));
            } else
              C.JSArray_methods.add$1($arguments, defaultValues[t2]);
          }
          if (used !== namedArguments.get$length(namedArguments))
            return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        }
        return jsFunction.apply($function, $arguments);
      }
    },
    iae: function(argument) {
      throw H.wrapException(H.argumentErrorValue(argument));
    },
    ioore: function(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw H.wrapException(H.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, t1, _s5_ = "index";
      if (typeof index !== "number" || Math.floor(index) !== index)
        return new P.ArgumentError(true, index, _s5_, null);
      $length = H.intTypeCheck(J.get$length$asx(indexable));
      if (!(index < 0)) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = index >= $length;
      } else
        t1 = true;
      if (t1)
        return P.IndexError$(index, indexable, _s5_, null, $length);
      return P.RangeError$value(index, _s5_);
    },
    diagnoseRangeError: function(start, end, $length) {
      var _s13_ = "Invalid value";
      if (start > $length)
        return new P.RangeError(0, $length, true, start, "start", _s13_);
      if (end != null)
        if (end < start || end > $length)
          return new P.RangeError(start, $length, true, end, "end", _s13_);
      return new P.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    checkNum: function(value) {
      if (typeof value !== "number")
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    checkBool: function(value) {
      return value;
    },
    wrapException: function(ex) {
      var wrapper;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: H.toStringWrapper});
        wrapper.name = "";
      } else
        wrapper.toString = H.toStringWrapper;
      return wrapper;
    },
    toStringWrapper: function() {
      return J.toString$0$(this.dartException);
    },
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(P.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern: function(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = H.quoteStringForRegExp(message.replace(String({}), '$receiver$'));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = H.setRuntimeTypeInfo([], [P.String]);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new H.TypeErrorDecoder(message.replace(new RegExp('\\\\\\$arguments\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$argumentsExpr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$expr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$method\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$receiver\\\\\\$', 'g'), '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn: function(expression) {
      return function($expr$) {
        var $argumentsExpr$ = '$arguments$';
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    NullError$: function(_message, match) {
      return new H.NullError(_message, match == null ? null : match.method);
    },
    JsNoSuchMethodError$: function(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException: function(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, t2, _null = null,
        t1 = new H.unwrapException_saveStackTrace(ex);
      if (ex == null)
        return;
      if (ex instanceof H.ExceptionAndStackTrace)
        return t1.call$1(ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return t1.call$1(ex.dartException);
      else if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              return t1.call$1(H.NullError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return t1.call$1(H.JsNoSuchMethodError$(H.stringTypeCheck(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return t1.call$1(H.JsNoSuchMethodError$(H.stringTypeCheck(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t2 = match != null;
                        } else
                          t2 = true;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
            if (t2)
              return t1.call$1(H.NullError$(H.stringTypeCheck(message), match));
          }
        }
        return t1.call$1(new H.UnknownJsTypeError(typeof message === "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message === "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return t1.call$1(new P.ArgumentError(false, _null, _null, typeof message === "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message === "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    getTraceFromException: function(exception) {
      var trace;
      if (exception instanceof H.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new H._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new H._StackTrace(exception);
    },
    objectHashCode: function(object) {
      if (object == null || typeof object != 'object')
        return J.get$hashCode$(object);
      else
        return H.Primitives_objectHashCode(object);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure: function(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      H.interceptedTypeCheck(closure, "$isFunction");
      switch (H.intTypeCheck(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      H.intTypeCheck(arity);
      if (closure == null)
        return;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {
      var $constructor, t1, trampoline, signatureFunction, getReceiver, applyTrampoline, i, stub, stubCallName, _null = null,
        $function = functions[0],
        callName = $function.$callName,
        $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(_null, _null, _null, _null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        t1 = new Function("a,b,c,d" + t1, "this.$initialize(a,b,c,d" + t1 + ")");
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      if (!isStatic) {
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
      }
      if (typeof reflectionInfo == "number")
        signatureFunction = function(getType, t) {
          return function() {
            return getType(t);
          };
        }(H.getType, reflectionInfo);
      else if (typeof reflectionInfo == "function")
        if (isStatic)
          signatureFunction = reflectionInfo;
        else {
          getReceiver = isIntercepted ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
          signatureFunction = function(f, r) {
            return function() {
              return f.apply({$receiver: r(this)}, arguments);
            };
          }(reflectionInfo, getReceiver);
        }
      else
        throw H.wrapException("Error in reflectionInfo.");
      $prototype.$signature = signatureFunction;
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < functions.length; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex) {
          stub.$reflectionInfo = reflectionInfo;
          applyTrampoline = stub;
        }
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, t2, selfName, $arguments;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 27;
      if (t2)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        selfName = "self" + t1;
        t1 = "return function(){var " + selfName + " = this.";
        t2 = $.BoundClosure_selfFieldNameCache;
        return new Function(t1 + H.S(t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + ";return " + selfName + "." + H.S(stubName) + "();}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = $.Closure_functionCounter;
      if (typeof t1 !== "number")
        return t1.$add();
      $.Closure_functionCounter = t1 + 1;
      $arguments += t1;
      t1 = "return function(" + $arguments + "){return this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      return new Function(t1 + H.S(t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + "." + H.S(stubName) + "(" + $arguments + ");}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf = H.BoundClosure_selfOf,
        getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var t2, stubName, arity, lookedUpFunction, t3, t4, $arguments,
        t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null)
        t1 = $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self");
      t2 = $.BoundClosure_receiverFieldNameCache;
      if (t2 == null)
        t2 = $.BoundClosure_receiverFieldNameCache = H.BoundClosure_computeFieldNamed("receiver");
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t3 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t4 = !t3 || arity >= 28;
      if (t4)
        return H.Closure_cspForwardInterceptedCall(arity, !t3, stubName, $function);
      if (arity === 1) {
        t1 = "return function(){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ");";
        t2 = $.Closure_functionCounter;
        if (typeof t2 !== "number")
          return t2.$add();
        $.Closure_functionCounter = t2 + 1;
        return new Function(t1 + t2 + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ", " + $arguments + ");";
      t2 = $.Closure_functionCounter;
      if (typeof t2 !== "number")
        return t2.$add();
      $.Closure_functionCounter = t2 + 1;
      return new Function(t1 + t2 + "}")();
    },
    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {
      return H.Closure_fromTearOff(receiver, functions, H.intTypeCheck(applyTrampolineIndex), reflectionInfo, !!isStatic, !!isIntercepted, $name);
    },
    BoundClosure_selfOf: function(closure) {
      return closure._self;
    },
    BoundClosure_receiverOf: function(closure) {
      return closure._receiver;
    },
    BoundClosure_computeFieldNamed: function(fieldName) {
      var t1, i, $name,
        template = new H.BoundClosure("self", "target", "receiver", "name"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
    },
    boolConversionCheck: function(value) {
      if (value == null)
        H.assertThrow("boolean expression must not be null");
      return value;
    },
    stringTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "string")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "String"));
    },
    doubleTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "double"));
    },
    numTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "num"));
    },
    boolTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "boolean")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "bool"));
    },
    intTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number" && Math.floor(value) === value)
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "int"));
    },
    propertyTypeError: function(value, property) {
      throw H.wrapException(H.TypeErrorImplementation$(value, H.unminifyOrTag(H.stringTypeCheck(property).substring(3))));
    },
    propertyTypeCastError: function(value, property) {
      throw H.wrapException(H.CastErrorImplementation$(value, H.unminifyOrTag(H.stringTypeCheck(property).substring(3))));
    },
    interceptedTypeCheck: function(value, property) {
      if (value == null)
        return value;
      if ((typeof value === "object" || typeof value === "function") && J.getInterceptor$(value)[property])
        return value;
      H.propertyTypeError(value, property);
    },
    interceptedTypeCast: function(value, property) {
      var t1;
      if (value != null)
        t1 = (typeof value === "object" || typeof value === "function") && J.getInterceptor$(value)[property];
      else
        t1 = true;
      if (t1)
        return value;
      H.propertyTypeCastError(value, property);
    },
    stringSuperNativeTypeCheck: function(value, property) {
      if (value == null)
        return value;
      if (typeof value === "string")
        return value;
      if (J.getInterceptor$(value)[property])
        return value;
      H.propertyTypeError(value, property);
    },
    listTypeCheck: function(value) {
      if (value == null)
        return value;
      if (!!J.getInterceptor$(value).$isList)
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "List<dynamic>"));
    },
    listSuperNativeTypeCheck: function(value, property) {
      var t1;
      if (value == null)
        return value;
      t1 = J.getInterceptor$(value);
      if (!!t1.$isList)
        return value;
      if (t1[property])
        return value;
      H.propertyTypeError(value, property);
    },
    extractFunctionTypeObjectFromInternal: function(o) {
      var signature;
      if ("$signature" in o) {
        signature = o.$signature;
        if (typeof signature == "number")
          return init.types[H.intTypeCheck(signature)];
        else
          return o.$signature();
      }
      return;
    },
    functionTypeTest: function(value, functionTypeRti) {
      var functionTypeObject;
      if (typeof value == "function")
        return true;
      functionTypeObject = H.extractFunctionTypeObjectFromInternal(J.getInterceptor$(value));
      if (functionTypeObject == null)
        return false;
      return H._isFunctionSubtype(functionTypeObject, null, functionTypeRti, null);
    },
    functionTypeCheck: function(value, functionTypeRti) {
      var $self, t1;
      if (value == null)
        return value;
      if ($._inTypeAssertion)
        return value;
      $._inTypeAssertion = true;
      try {
        if (H.functionTypeTest(value, functionTypeRti))
          return value;
        $self = H.runtimeTypeToString(functionTypeRti);
        t1 = H.TypeErrorImplementation$(value, $self);
        throw H.wrapException(t1);
      } finally {
        $._inTypeAssertion = false;
      }
    },
    futureOrCheck: function(o, futureOrRti) {
      if (o != null && !H.checkSubtypeOfRuntimeType(o, futureOrRti))
        H.throwExpression(H.TypeErrorImplementation$(o, H.runtimeTypeToString(futureOrRti)));
      return o;
    },
    TypeErrorImplementation$: function(value, type) {
      return new H.TypeErrorImplementation("TypeError: " + P.Error_safeToString(value) + ": type '" + H._typeDescription(value) + "' is not a subtype of type '" + type + "'");
    },
    CastErrorImplementation$: function(value, type) {
      return new H.CastErrorImplementation("CastError: " + P.Error_safeToString(value) + ": type '" + H._typeDescription(value) + "' is not a subtype of type '" + type + "'");
    },
    _typeDescription: function(value) {
      var functionTypeObject,
        t1 = J.getInterceptor$(value);
      if (!!t1.$isClosure) {
        functionTypeObject = H.extractFunctionTypeObjectFromInternal(t1);
        if (functionTypeObject != null)
          return H.runtimeTypeToString(functionTypeObject);
        return "Closure";
      }
      return H.Primitives_objectTypeName(value);
    },
    assertThrow: function(message) {
      throw H.wrapException(new H._AssertionError(message));
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError(H.stringTypeCheck(staticName)));
    },
    RuntimeError$: function(message) {
      return new H.RuntimeError(message);
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    createRuntimeType: function(rti) {
      return new H.TypeImpl(rti);
    },
    TypeImpl$: function(_rti) {
      return new H.TypeImpl(_rti);
    },
    setRuntimeTypeInfo: function(target, rti) {
      target.$ti = rti;
      return target;
    },
    getRuntimeTypeInfo: function(target) {
      if (target == null)
        return;
      return target.$ti;
    },
    getRuntimeTypeArguments: function(interceptor, object, substitutionName) {
      return H.substitute(interceptor["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(object));
    },
    getRuntimeTypeArgumentIntercepted: function(interceptor, target, substitutionName, index) {
      var $arguments;
      H.stringTypeCheck(substitutionName);
      H.intTypeCheck(index);
      $arguments = H.substitute(interceptor["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
      return $arguments == null ? null : $arguments[index];
    },
    getRuntimeTypeArgument: function(target, substitutionName, index) {
      var $arguments;
      H.stringTypeCheck(substitutionName);
      H.intTypeCheck(index);
      $arguments = H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
      return $arguments == null ? null : $arguments[index];
    },
    getTypeArgumentByIndex: function(target, index) {
      var rti;
      H.intTypeCheck(index);
      rti = H.getRuntimeTypeInfo(target);
      return rti == null ? null : rti[index];
    },
    runtimeTypeToString: function(rti) {
      return H._runtimeTypeToString(rti, null);
    },
    _runtimeTypeToString: function(rti, genericContext) {
      var t1, t2;
      H.assertSubtype(genericContext, "$isList", [P.String], "$asList");
      if (rti == null)
        return "dynamic";
      if (rti === -1)
        return "void";
      if (typeof rti === "object" && rti !== null && rti.constructor === Array)
        return H.unminifyOrTag(rti[0].name) + H._joinArguments(rti, 1, genericContext);
      if (typeof rti == "function")
        return H.unminifyOrTag(rti.name);
      if (rti === -2)
        return "dynamic";
      if (typeof rti === "number") {
        H.intTypeCheck(rti);
        if (genericContext == null || rti < 0 || rti >= genericContext.length)
          return "unexpected-generic-index:" + rti;
        t1 = genericContext.length;
        t2 = t1 - rti - 1;
        if (t2 < 0 || t2 >= t1)
          return H.ioore(genericContext, t2);
        return H.S(genericContext[t2]);
      }
      if ('func' in rti)
        return H._functionRtiToString(rti, genericContext);
      if ('futureOr' in rti)
        return "FutureOr<" + H._runtimeTypeToString("type" in rti ? rti.type : null, genericContext) + ">";
      return "unknown-reified-type";
    },
    _functionRtiToString: function(rti, genericContext) {
      var boundsRti, outerContextLength, offset, i, i0, typeParameters, typeSep, t2, boundRti, returnTypeText, $arguments, argumentsText, sep, _i, argument, optionalArguments, namedArguments, t3, _s2_ = ", ",
        t1 = [P.String];
      H.assertSubtype(genericContext, "$isList", t1, "$asList");
      if ("bounds" in rti) {
        boundsRti = rti.bounds;
        if (genericContext == null) {
          genericContext = H.setRuntimeTypeInfo([], t1);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsRti.length, i0 = i; i0 > 0; --i0)
          C.JSArray_methods.add$1(genericContext, "T" + (offset + i0));
        for (typeParameters = "<", typeSep = "", i0 = 0; i0 < i; ++i0, typeSep = _s2_) {
          typeParameters += typeSep;
          t1 = genericContext.length;
          t2 = t1 - i0 - 1;
          if (t2 < 0)
            return H.ioore(genericContext, t2);
          typeParameters = C.JSString_methods.$add(typeParameters, genericContext[t2]);
          boundRti = boundsRti[i0];
          if (boundRti != null && boundRti !== P.Object)
            typeParameters += " extends " + H._runtimeTypeToString(boundRti, genericContext);
        }
        typeParameters += ">";
      } else {
        typeParameters = "";
        outerContextLength = null;
      }
      returnTypeText = !!rti.v ? "void" : H._runtimeTypeToString(rti.ret, genericContext);
      if ("args" in rti) {
        $arguments = rti.args;
        for (t1 = $arguments.length, argumentsText = "", sep = "", _i = 0; _i < t1; ++_i, sep = _s2_) {
          argument = $arguments[_i];
          argumentsText = argumentsText + sep + H._runtimeTypeToString(argument, genericContext);
        }
      } else {
        argumentsText = "";
        sep = "";
      }
      if ("opt" in rti) {
        optionalArguments = rti.opt;
        argumentsText += sep + "[";
        for (t1 = optionalArguments.length, sep = "", _i = 0; _i < t1; ++_i, sep = _s2_) {
          argument = optionalArguments[_i];
          argumentsText = argumentsText + sep + H._runtimeTypeToString(argument, genericContext);
        }
        argumentsText += "]";
      }
      if ("named" in rti) {
        namedArguments = rti.named;
        argumentsText += sep + "{";
        for (t1 = H.extractKeys(namedArguments), t2 = t1.length, sep = "", _i = 0; _i < t2; ++_i, sep = _s2_) {
          t3 = H.stringTypeCheck(t1[_i]);
          argumentsText = argumentsText + sep + H._runtimeTypeToString(namedArguments[t3], genericContext) + (" " + H.S(t3));
        }
        argumentsText += "}";
      }
      if (outerContextLength != null)
        genericContext.length = outerContextLength;
      return typeParameters + "(" + argumentsText + ") => " + returnTypeText;
    },
    _joinArguments: function(types, startIndex, genericContext) {
      var buffer, index, separator, allDynamic, t1, argument;
      H.assertSubtype(genericContext, "$isList", [P.String], "$asList");
      if (types == null)
        return "";
      buffer = new P.StringBuffer("");
      for (index = startIndex, separator = "", allDynamic = true, t1 = ""; index < types.length; ++index, separator = ", ") {
        buffer._contents = t1 + separator;
        argument = types[index];
        if (argument != null)
          allDynamic = false;
        t1 = buffer._contents += H._runtimeTypeToString(argument, genericContext);
      }
      return "<" + buffer.toString$0(0) + ">";
    },
    getRti: function(o) {
      var functionRti, type, rti,
        t1 = J.getInterceptor$(o);
      if (!!t1.$isClosure) {
        functionRti = H.extractFunctionTypeObjectFromInternal(t1);
        if (functionRti != null)
          return functionRti;
      }
      type = t1.constructor;
      if (typeof o != "object")
        return type;
      rti = H.getRuntimeTypeInfo(o);
      if (rti != null) {
        rti = rti.slice();
        rti.splice(0, 0, type);
        type = rti;
      }
      return type;
    },
    getRuntimeType: function(object) {
      return new H.TypeImpl(H.getRti(object));
    },
    substitute: function(substitution, $arguments) {
      if (substitution == null)
        return $arguments;
      substitution = substitution.apply(null, $arguments);
      if (substitution == null)
        return;
      if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
        return substitution;
      if (typeof substitution == "function")
        return substitution.apply(null, $arguments);
      return $arguments;
    },
    checkSubtype: function(object, isField, checks, asField) {
      var $arguments, interceptor;
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return false;
      $arguments = H.getRuntimeTypeInfo(object);
      interceptor = J.getInterceptor$(object);
      if (interceptor[isField] == null)
        return false;
      return H.areSubtypes(H.substitute(interceptor[asField], $arguments), null, checks, null);
    },
    subtypeCast: function(object, isField, checks, asField) {
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return object;
      if (H.checkSubtype(object, isField, checks, asField))
        return object;
      throw H.wrapException(H.CastErrorImplementation$(object, function(str, names) {
        return str.replace(/[^<,> ]+/g, function(m) {
          return names[m] || m;
        });
      }(H.unminifyOrTag(isField.substring(3)) + H._joinArguments(checks, 0, null), init.mangledGlobalNames)));
    },
    assertSubtype: function(object, isField, checks, asField) {
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return object;
      if (H.checkSubtype(object, isField, checks, asField))
        return object;
      throw H.wrapException(H.TypeErrorImplementation$(object, function(str, names) {
        return str.replace(/[^<,> ]+/g, function(m) {
          return names[m] || m;
        });
      }(H.unminifyOrTag(isField.substring(3)) + H._joinArguments(checks, 0, null), init.mangledGlobalNames)));
    },
    assertIsSubtype: function(subtype, supertype, prefix, infix, suffix) {
      H.stringTypeCheck(prefix);
      H.stringTypeCheck(infix);
      H.stringTypeCheck(suffix);
      if (!H._isSubtype(subtype, null, supertype, null))
        H.throwTypeError("TypeError: " + H.S(prefix) + H.runtimeTypeToString(subtype) + H.S(infix) + H.runtimeTypeToString(supertype) + H.S(suffix));
    },
    throwTypeError: function(message) {
      throw H.wrapException(new H.TypeErrorImplementation(H.stringTypeCheck(message)));
    },
    areSubtypes: function(s, sEnv, t, tEnv) {
      var len, i;
      if (t == null)
        return true;
      if (s == null) {
        len = t.length;
        for (i = 0; i < len; ++i)
          if (!H._isSubtype(null, null, t[i], tEnv))
            return false;
        return true;
      }
      len = s.length;
      for (i = 0; i < len; ++i)
        if (!H._isSubtype(s[i], sEnv, t[i], tEnv))
          return false;
      return true;
    },
    computeSignature: function(signature, context, contextName) {
      return signature.apply(context, H.substitute(J.getInterceptor$(context)["$as" + H.S(contextName)], H.getRuntimeTypeInfo(context)));
    },
    isSupertypeOfNullRecursive: function(type) {
      var typeArgument;
      if (typeof type === "number")
        return false;
      if ('futureOr' in type) {
        typeArgument = "type" in type ? type.type : null;
        return type == null || type.name === "Object" || type.name === "Null" || type === -1 || type === -2 || H.isSupertypeOfNullRecursive(typeArgument);
      }
      return false;
    },
    checkSubtypeOfRuntimeType: function(o, t) {
      var type, rti;
      if (o == null)
        return t == null || t.name === "Object" || t.name === "Null" || t === -1 || t === -2 || H.isSupertypeOfNullRecursive(t);
      if (t == null || t === -1 || t.name === "Object" || t === -2)
        return true;
      if (typeof t == "object") {
        if ('futureOr' in t)
          if (H.checkSubtypeOfRuntimeType(o, "type" in t ? t.type : null))
            return true;
        if ('func' in t)
          return H.functionTypeTest(o, t);
      }
      type = J.getInterceptor$(o).constructor;
      rti = H.getRuntimeTypeInfo(o);
      if (rti != null) {
        rti = rti.slice();
        rti.splice(0, 0, type);
        type = rti;
      }
      return H._isSubtype(type, null, t, null);
    },
    subtypeOfRuntimeTypeCast: function(object, type) {
      if (object != null && !H.checkSubtypeOfRuntimeType(object, type))
        throw H.wrapException(H.CastErrorImplementation$(object, H.runtimeTypeToString(type)));
      return object;
    },
    assertSubtypeOfRuntimeType: function(object, type) {
      if (object != null && !H.checkSubtypeOfRuntimeType(object, type))
        throw H.wrapException(H.TypeErrorImplementation$(object, H.runtimeTypeToString(type)));
      return object;
    },
    _isSubtype: function(s, sEnv, t, tEnv) {
      var t1, typeOfS, tTypeArgument, futureSubstitution, futureArguments, t2, typeOfT, typeOfTString, substitution, _null = null;
      if (s === t)
        return true;
      if (t == null || t === -1 || t.name === "Object" || t === -2)
        return true;
      if (s === -2)
        return true;
      if (s == null || s === -1 || s.name === "Object" || s === -2) {
        if (typeof t === "number")
          return false;
        if ('futureOr' in t)
          return H._isSubtype(s, sEnv, "type" in t ? t.type : _null, tEnv);
        return false;
      }
      if (typeof s === "number")
        return false;
      if (typeof t === "number")
        return false;
      if (s.name === "Null")
        return true;
      if ('func' in t)
        return H._isFunctionSubtype(s, sEnv, t, tEnv);
      if ('func' in s)
        return t.name === "Function";
      t1 = typeof s === "object" && s !== null && s.constructor === Array;
      typeOfS = t1 ? s[0] : s;
      if ('futureOr' in t) {
        tTypeArgument = "type" in t ? t.type : _null;
        if ('futureOr' in s)
          return H._isSubtype("type" in s ? s.type : _null, sEnv, tTypeArgument, tEnv);
        else if (H._isSubtype(s, sEnv, tTypeArgument, tEnv))
          return true;
        else {
          if (!('$is' + "Future" in typeOfS.prototype))
            return false;
          futureSubstitution = typeOfS.prototype["$as" + "Future"];
          futureArguments = H.substitute(futureSubstitution, t1 ? s.slice(1) : _null);
          return H._isSubtype(typeof futureArguments === "object" && futureArguments !== null && futureArguments.constructor === Array ? futureArguments[0] : _null, sEnv, tTypeArgument, tEnv);
        }
      }
      t2 = typeof t === "object" && t !== null && t.constructor === Array;
      typeOfT = t2 ? t[0] : t;
      if (typeOfT !== typeOfS) {
        typeOfTString = typeOfT.name;
        if (!('$is' + typeOfTString in typeOfS.prototype))
          return false;
        substitution = typeOfS.prototype["$as" + typeOfTString];
      } else
        substitution = _null;
      if (!t2)
        return true;
      t1 = t1 ? s.slice(1) : _null;
      t2 = t.slice(1);
      return H.areSubtypes(H.substitute(substitution, t1), sEnv, t2, tEnv);
    },
    _isFunctionSubtype: function(s, sEnv, t, tEnv) {
      var sBounds, tBounds, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, tPos, sPos, sNamedParameters, tNamedParameters;
      if (!('func' in s))
        return false;
      if ("bounds" in s) {
        if (!("bounds" in t))
          return false;
        sBounds = s.bounds;
        tBounds = t.bounds;
        if (sBounds.length !== tBounds.length)
          return false;
      } else if ("bounds" in t)
        return false;
      if (!H._isSubtype(s.ret, sEnv, t.ret, tEnv))
        return false;
      sParameterTypes = s.args;
      tParameterTypes = t.args;
      sOptionalParameterTypes = s.opt;
      tOptionalParameterTypes = t.opt;
      sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
      tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
      sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
      tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
      if (sParametersLen > tParametersLen)
        return false;
      if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
        return false;
      for (pos = 0; pos < sParametersLen; ++pos)
        if (!H._isSubtype(tParameterTypes[pos], tEnv, sParameterTypes[pos], sEnv))
          return false;
      for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos)
        if (!H._isSubtype(tParameterTypes[tPos], tEnv, sOptionalParameterTypes[sPos], sEnv))
          return false;
      for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos)
        if (!H._isSubtype(tOptionalParameterTypes[tPos], tEnv, sOptionalParameterTypes[sPos], sEnv))
          return false;
      sNamedParameters = s.named;
      tNamedParameters = t.named;
      if (tNamedParameters == null)
        return true;
      if (sNamedParameters == null)
        return false;
      return H.namedParametersSubtypeCheck(sNamedParameters, sEnv, tNamedParameters, tEnv);
    },
    namedParametersSubtypeCheck: function(s, sEnv, t, tEnv) {
      var t1, i, $name,
        names = Object.getOwnPropertyNames(t);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (!Object.hasOwnProperty.call(s, $name))
          return false;
        if (!H._isSubtype(t[$name], tEnv, s[$name], sEnv))
          return false;
      }
      return true;
    },
    instantiatedGenericFunctionType: function(genericFunctionRti, parameters) {
      if (genericFunctionRti == null)
        return;
      return H.finishBindInstantiatedFunctionType(genericFunctionRti, {func: 1}, parameters, 0);
    },
    finishBindInstantiatedFunctionType: function(rti, result, parameters, depth) {
      var namedParameters, boundNamed, names, t1, _i, $name;
      if ("v" in rti)
        result.v = rti.v;
      else if ("ret" in rti)
        result.ret = H.bindInstantiatedType(rti.ret, parameters, depth);
      if ("args" in rti)
        result.args = H.bindInstantiatedTypes(rti.args, parameters, depth);
      if ("opt" in rti)
        result.opt = H.bindInstantiatedTypes(rti.opt, parameters, depth);
      if ("named" in rti) {
        namedParameters = rti.named;
        boundNamed = {};
        names = Object.keys(namedParameters);
        for (t1 = names.length, _i = 0; _i < t1; ++_i) {
          $name = H.stringTypeCheck(names[_i]);
          boundNamed[$name] = H.bindInstantiatedType(namedParameters[$name], parameters, depth);
        }
        result.named = boundNamed;
      }
      return result;
    },
    bindInstantiatedType: function(rti, parameters, depth) {
      var result, bounds;
      if (rti == null)
        return rti;
      if (rti === -1)
        return rti;
      if (typeof rti == "function")
        return rti;
      if (typeof rti === "number") {
        if (rti < depth)
          return rti;
        return parameters[rti - depth];
      }
      if (typeof rti === "object" && rti !== null && rti.constructor === Array)
        return H.bindInstantiatedTypes(rti, parameters, depth);
      if ('func' in rti) {
        result = {func: 1};
        if ("bounds" in rti) {
          bounds = rti.bounds;
          depth += bounds.length;
          result.bounds = H.bindInstantiatedTypes(bounds, parameters, depth);
        }
        return H.finishBindInstantiatedFunctionType(rti, result, parameters, depth);
      }
      throw H.wrapException(P.ArgumentError$("Unknown RTI format in bindInstantiatedType."));
    },
    bindInstantiatedTypes: function(rti, parameters, depth) {
      var t1, i,
        array = rti.slice();
      for (t1 = array.length, i = 0; i < t1; ++i)
        C.JSArray_methods.$indexSet(array, i, H.bindInstantiatedType(array[i], parameters, depth));
      return array;
    },
    JsLinkedHashMap_JsLinkedHashMap$es6: function($K, $V) {
      return new H.JsLinkedHashMap([$K, $V]);
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, H.stringTypeCheck(property), {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor: function(obj) {
      var interceptor, interceptorClass, mark, t1,
        tag = H.stringTypeCheck($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        tag = H.stringTypeCheck($.alternateTagFunction.call$2(obj, tag));
        if (tag != null) {
          record = $.dispatchRecordsForInstanceTags[tag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[tag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[tag];
        }
      }
      if (interceptorClass == null)
        return;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(P.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return H.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = C.C_JS_CONST0();
      hooks = H.applyHooksTransformer(C.C_JS_CONST1, H.applyHooksTransformer(C.C_JS_CONST2, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST4, H.applyHooksTransformer(C.C_JS_CONST5, H.applyHooksTransformer(C.C_JS_CONST6(C.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw H.wrapException(P.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked: function(receiver, other, startIndex) {
      var t1, t2;
      if (typeof other === "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else {
        t1 = J.getInterceptor$(other);
        if (!!t1.$isJSSyntaxRegExp) {
          t1 = C.JSString_methods.substring$1(receiver, startIndex);
          t2 = other._nativeRegExp;
          return t2.test(t1);
        } else {
          t1 = t1.allMatches$1(other, C.JSString_methods.substring$1(receiver, startIndex));
          return !t1.get$isEmpty(t1);
        }
      }
    },
    escapeReplacement: function(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    stringReplaceFirstRE: function(receiver, regexp, replacement, startIndex) {
      var match = regexp._execGlobal$2(receiver, startIndex);
      if (match == null)
        return receiver;
      return H.stringReplaceRangeUnchecked(receiver, match._match.index, match.get$end(match), replacement);
    },
    quoteStringForRegExp: function(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked: function(receiver, pattern, replacement) {
      var nativeRegexp;
      if (typeof pattern === "string")
        return H.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      if (pattern instanceof H.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, H.escapeReplacement(replacement));
      }
      if (pattern == null)
        H.throwExpression(H.argumentErrorValue(pattern));
      throw H.wrapException("String.replaceAll(Pattern) UNIMPLEMENTED");
    },
    stringReplaceAllUncheckedString: function(receiver, pattern, replacement) {
      var $length, t1, i, index;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        for (t1 = replacement, i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      index = receiver.indexOf(pattern, 0);
      if (index < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(H.quoteStringForRegExp(pattern), 'g'), H.escapeReplacement(replacement));
    },
    stringReplaceFirstUnchecked: function(receiver, pattern, replacement, startIndex) {
      var index, t1, matches, match;
      if (typeof pattern === "string") {
        index = receiver.indexOf(pattern, startIndex);
        if (index < 0)
          return receiver;
        return H.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
      }
      t1 = J.getInterceptor$(pattern);
      if (!!t1.$isJSSyntaxRegExp)
        return startIndex === 0 ? receiver.replace(pattern._nativeRegExp, H.escapeReplacement(replacement)) : H.stringReplaceFirstRE(receiver, pattern, replacement, startIndex);
      if (pattern == null)
        H.throwExpression(H.argumentErrorValue(pattern));
      t1 = t1.allMatches$2(pattern, receiver, startIndex);
      matches = H.assertSubtype(t1.get$iterator(t1), "$isIterator", [P.Match], "$asIterator");
      if (!matches.moveNext$0())
        return receiver;
      match = matches.get$current(matches);
      return C.JSString_methods.replaceRange$3(receiver, match.get$start(match), match.get$end(match), replacement);
    },
    stringReplaceRangeUnchecked: function(receiver, start, end, replacement) {
      var prefix = receiver.substring(0, start),
        suffix = receiver.substring(end);
      return prefix + replacement + suffix;
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_length = t0;
      _._jsObject = t1;
      _._keys = t2;
      _.$ti = t3;
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    Instantiation: function Instantiation() {
    },
    Instantiation1: function Instantiation1(t0, t1) {
      this._genericClosure = t0;
      this.$ti = t1;
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
      var _ = this;
      _._memberName = t0;
      _._kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
    },
    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.namedArgumentList = t1;
      this.$arguments = t2;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this._message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this._message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this._message = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    unwrapException_saveStackTrace: function unwrapException_saveStackTrace(t0) {
      this.ex = t0;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1, t2, t3) {
      var _ = this;
      _._self = t0;
      _._target = t1;
      _._receiver = t2;
      _.__js_helper$_name = t3;
    },
    TypeErrorImplementation: function TypeErrorImplementation(t0) {
      this.message = t0;
    },
    CastErrorImplementation: function CastErrorImplementation(t0) {
      this.message = t0;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _AssertionError: function _AssertionError(t0) {
      this.message = t0;
    },
    TypeImpl: function TypeImpl(t0) {
      this._rti = t0;
      this._hashCode = this.__typeName = null;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _._rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {
      this._re = t0;
      this._string = t1;
      this._start = t2;
    },
    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._regExp = t0;
      _._string = t1;
      _._nextIndex = t2;
      _.__js_helper$_current = null;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    _checkValidIndex: function(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw H.wrapException(H.diagnoseIndexError(list, index));
    },
    _checkValidRange: function(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw H.wrapException(H.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    isBrowserObject: function(o) {
      var t1 = J.getInterceptor$(o);
      return !!t1.$isBlob || !!t1.$isEvent || !!t1.$isKeyRange || !!t1.$isImageData || !!t1.$isNode || !!t1.$isWindow || !!t1.$isWorkerGlobalScope;
    },
    extractKeys: function(victim) {
      return J.JSArray_JSArray$markFixed(victim ? Object.keys(victim) : [], null);
    },
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  },
  J = {
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var proto, objectProto, $constructor, interceptor,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
      }
      $constructor = object.constructor;
      interceptor = $constructor == null ? null : $constructor[$.$get$JS_INTEROP_INTERCEPTOR_TAG()];
      if (interceptor != null)
        return interceptor;
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return C.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return C.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        Object.defineProperty($constructor, $.$get$JS_INTEROP_INTERCEPTOR_TAG(), {value: C.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return C.UnknownJavaScriptObject_methods;
      }
      return C.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed: function($length, $E) {
      if (typeof $length !== "number" || Math.floor($length) !== $length)
        throw H.wrapException(P.ArgumentError$value($length, "length", "is not an integer"));
      if ($length < 0 || $length > 4294967295)
        throw H.wrapException(P.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$markFixed: function(allocation, $E) {
      return J.JSArray_markFixedList(H.setRuntimeTypeInfo(allocation, [$E]));
    },
    JSArray_markFixedList: function(list) {
      H.listTypeCheck(list);
      list.fixed$length = Array;
      return list;
    },
    JSArray_markUnmodifiableList: function(list) {
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    JSString__isWhitespace: function(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace: function(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = C.JSString_methods._codeUnitAt$1(string, index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace: function(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = C.JSString_methods.codeUnitAt$1(string, index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSDouble.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ansx: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax: function(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$bn: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$n: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x: function(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z: function(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$checked$x: function(receiver, value) {
      return J.getInterceptor$x(receiver).set$checked(receiver, value);
    },
    get$attributes$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$attributes(receiver);
    },
    get$checked$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$checked(receiver);
    },
    get$children$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$children(receiver);
    },
    get$className$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$className(receiver);
    },
    get$classes$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$classes(receiver);
    },
    get$first$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$: function(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$height$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$height(receiver);
    },
    get$isEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$left$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$left(receiver);
    },
    get$length$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$single$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$single(receiver);
    },
    get$target$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$target(receiver);
    },
    get$top$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$top(receiver);
    },
    get$topLeft$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$topLeft(receiver);
    },
    get$width$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$width(receiver);
    },
    $add$ansx: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver + a0;
      return J.getInterceptor$ansx(receiver).$add(receiver, a0);
    },
    $and$bn: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return (receiver & a0) >>> 0;
      return J.getInterceptor$bn(receiver).$and(receiver, a0);
    },
    $eq$: function(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $gt$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver > a0;
      return J.getInterceptor$n(receiver).$gt(receiver, a0);
    },
    $index$asx: function(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax: function(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    _add$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver)._add$1(receiver, a0);
    },
    _replaceChild$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    accept$1$z: function(receiver, a0) {
      return J.getInterceptor$z(receiver).accept$1(receiver, a0);
    },
    add$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addEventListener$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).addEventListener$2(receiver, a0, a1);
    },
    addEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
    },
    allMatches$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    codeUnitAt$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
    },
    contains$1$asx: function(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    contains$2$asx: function(receiver, a0, a1) {
      return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
    },
    elementAt$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    forEach$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    map$1$1$ax: function(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    matchAsPrefix$2$s: function(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
    },
    noSuchMethod$1$: function(receiver, a0) {
      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
    },
    parse$1$z: function(receiver, a0) {
      return J.getInterceptor$z(receiver).parse$1(receiver, a0);
    },
    remove$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    removeEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
    },
    replaceWith$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    startsWith$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
    },
    stopPropagation$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).stopPropagation$0(receiver);
    },
    substring$2$s: function(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
    },
    toLowerCase$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
    },
    toRadixString$1$n: function(receiver, a0) {
      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
    },
    toString$0$: function(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    trim$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).trim$0(receiver);
    },
    where$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).where$1(receiver, a0);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSDouble: function JSDouble() {
    },
    JSString: function JSString() {
    }
  },
  P = {
    _AsyncRun__initializeScheduleImmediate: function() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: function(callback) {
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(H.functionTypeCheck(callback, {func: 1, ret: -1})), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate: function(callback) {
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(H.functionTypeCheck(callback, {func: 1, ret: -1})), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer: function(callback) {
      P.Timer__createTimer(C.Duration_0, H.functionTypeCheck(callback, {func: 1, ret: -1}));
    },
    Timer__createTimer: function(duration, callback) {
      var milliseconds;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$: function(milliseconds, callback) {
      var t1 = new P._TimerImpl(true);
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _TimerImpl$periodic: function(milliseconds, callback) {
      var t1 = new P._TimerImpl(false);
      t1._TimerImpl$periodic$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter: function($T) {
      return new P._AsyncAwaitCompleter(new P._SyncCompleter(new P._Future($.Zone__current, [$T]), [$T]), [$T]);
    },
    _asyncStartSync: function(bodyFunction, completer) {
      H.functionTypeCheck(bodyFunction, {func: 1, ret: -1, args: [P.int,,]});
      H.interceptedTypeCheck(completer, "$is_AsyncAwaitCompleter");
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._completer.future;
    },
    _asyncAwait: function(object, bodyFunction) {
      P._awaitOnObject(object, H.functionTypeCheck(bodyFunction, {func: 1, ret: -1, args: [P.int,,]}));
    },
    _asyncReturn: function(object, completer) {
      H.interceptedTypeCheck(completer, "$isCompleter").complete$1(0, object);
    },
    _asyncRethrow: function(object, completer) {
      H.interceptedTypeCheck(completer, "$isCompleter").completeError$2(H.unwrapException(object), H.getTraceFromException(object));
    },
    _awaitOnObject: function(object, bodyFunction) {
      var thenCallback, errorCallback, t1, future, _null = null;
      H.functionTypeCheck(bodyFunction, {func: 1, ret: -1, args: [P.int,,]});
      thenCallback = new P._awaitOnObject_closure(bodyFunction);
      errorCallback = new P._awaitOnObject_closure0(bodyFunction);
      t1 = J.getInterceptor$(object);
      if (!!t1.$is_Future)
        object._thenNoZoneRegistration$1$2(thenCallback, errorCallback, _null);
      else if (!!t1.$isFuture)
        object.then$1$2$onError(thenCallback, errorCallback, _null);
      else {
        future = new P._Future($.Zone__current, [null]);
        H.assertSubtypeOfRuntimeType(object, null);
        future._state = 4;
        future._resultOrListeners = object;
        future._thenNoZoneRegistration$1$2(thenCallback, _null, _null);
      }
    },
    _wrapJsFunctionForAsync: function($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new P._wrapJsFunctionForAsync_closure($protected), P.Null, P.int, null);
    },
    _asyncStarHelper: function(object, bodyFunctionOrErrorCode, controller) {
      var t1, t2;
      H.interceptedTypeCheck(controller, "$is_AsyncStarStreamController");
      if (bodyFunctionOrErrorCode === 0) {
        t1 = controller.cancelationCompleter;
        if (t1 != null)
          t1.complete$0(0);
        else
          controller.controller.close$0(0);
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        t1 = controller.cancelationCompleter;
        if (t1 != null)
          t1.completeError$2(H.unwrapException(object), H.getTraceFromException(object));
        else {
          t1 = H.unwrapException(object);
          t2 = H.getTraceFromException(object);
          controller.controller.addError$2(t1, t2);
          controller.controller.close$0(0);
        }
        return;
      }
      if (object instanceof P._IterationMarker) {
        if (controller.cancelationCompleter != null) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          t1 = object.value;
          controller.controller.add$1(0, H.assertSubtypeOfRuntimeType(t1, H.getTypeArgumentByIndex(controller, 0)));
          P.scheduleMicrotask(new P._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));
          return;
        } else if (t1 === 1) {
          t1 = H.assertSubtype(H.interceptedTypeCheck(object.value, "$isStream"), "$isStream", [H.getTypeArgumentByIndex(controller, 0)], "$asStream");
          controller.controller.addStream$2$cancelOnError(0, t1, false).then$1(new P._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode));
          return;
        }
      }
      P._awaitOnObject(object, H.functionTypeCheck(bodyFunctionOrErrorCode, {func: 1, ret: -1, args: [P.int,,]}));
    },
    _streamOfController: function(controller) {
      var t1 = H.interceptedTypeCheck(controller, "$is_AsyncStarStreamController").controller;
      t1.toString;
      return new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
    },
    _AsyncStarStreamController$: function(body, $T) {
      var t1 = new P._AsyncStarStreamController([$T]);
      t1._AsyncStarStreamController$1(body, $T);
      return t1;
    },
    _makeAsyncStarStreamController: function(body, $T) {
      return P._AsyncStarStreamController$(H.functionTypeCheck(body, {func: 1, ret: -1, args: [P.int,,]}), $T);
    },
    _IterationMarker_yieldStar: function(values) {
      return new P._IterationMarker(values, 1);
    },
    _IterationMarker_endOfIteration: function() {
      return C._IterationMarker_null_2;
    },
    _IterationMarker_yieldSingle: function(value) {
      return new P._IterationMarker(value, 0);
    },
    _IterationMarker_uncaughtError: function(error) {
      return new P._IterationMarker(error, 3);
    },
    _makeSyncStarIterable: function(body, $T) {
      return new P._SyncStarIterable(body, [$T]);
    },
    Future_Future: function(computation, $T) {
      var result;
      H.functionTypeCheck(computation, {func: 1, ret: {futureOr: 1, type: $T}});
      result = new P._Future($.Zone__current, [$T]);
      P.Timer_Timer(C.Duration_0, new P.Future_Future_closure(result, computation));
      return result;
    },
    _Future$zoneValue: function(value, _zone, $T) {
      var t1 = new P._Future(_zone, [$T]);
      H.assertSubtypeOfRuntimeType(value, $T);
      t1._state = 4;
      t1._resultOrListeners = value;
      return t1;
    },
    _Future__chainForeignFuture: function(source, target) {
      var e, s, exception;
      target._state = 1;
      try {
        source.then$1$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target), null);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));
      }
    },
    _Future__chainCoreFuture: function(source, target) {
      var t1, listeners;
      for (; t1 = source._state, t1 === 2;)
        source = H.interceptedTypeCheck(source._resultOrListeners, "$is_Future");
      if (t1 >= 4) {
        listeners = target._removeListeners$0();
        target._state = source._state;
        target._resultOrListeners = source._resultOrListeners;
        P._Future__propagateToListeners(target, listeners);
      } else {
        listeners = H.interceptedTypeCheck(target._resultOrListeners, "$is_FutureListener");
        target._state = 2;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners: function(source, listeners) {
      var _box_0, hasError, asyncError, listeners0, sourceResult, t2, t3, zone, oldZone, current, result, _box_1 = {},
        t1 = _box_1.source = source;
      for (; true;) {
        _box_0 = {};
        hasError = t1._state === 8;
        if (listeners == null) {
          if (hasError) {
            asyncError = H.interceptedTypeCheck(t1._resultOrListeners, "$isAsyncError");
            t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        for (; listeners0 = listeners._nextListener, listeners0 != null; listeners = listeners0) {
          listeners._nextListener = null;
          P._Future__propagateToListeners(_box_1.source, listeners);
        }
        t1 = _box_1.source;
        sourceResult = t1._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        t2 = !hasError;
        if (t2) {
          t3 = listeners.state;
          t3 = (t3 & 1) !== 0 || t3 === 8;
        } else
          t3 = true;
        if (t3) {
          t3 = listeners.result;
          zone = t3._zone;
          if (hasError) {
            t1 = t1._zone;
            t1.toString;
            t1 = !(t1 == zone || t1.get$errorZone() === zone.get$errorZone());
          } else
            t1 = false;
          if (t1) {
            t1 = _box_1.source;
            asyncError = H.interceptedTypeCheck(t1._resultOrListeners, "$isAsyncError");
            t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone != zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = listeners.state;
          if (t1 === 8)
            new P._Future__propagateToListeners_handleWhenCompleteCallback(_box_1, _box_0, listeners, hasError).call$0();
          else if (t2) {
            if ((t1 & 1) !== 0)
              new P._Future__propagateToListeners_handleValueCallback(_box_0, listeners, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new P._Future__propagateToListeners_handleError(_box_1, _box_0, listeners).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (!!J.getInterceptor$(t1).$isFuture) {
            if (!!t1.$is_Future)
              if (t1._state >= 4) {
                current = H.interceptedTypeCheck(t3._resultOrListeners, "$is_FutureListener");
                t3._resultOrListeners = null;
                listeners = t3._reverseListeners$1(current);
                t3._state = t1._state;
                t3._resultOrListeners = t1._resultOrListeners;
                _box_1.source = t1;
                continue;
              } else
                P._Future__chainCoreFuture(t1, t3);
            else
              P._Future__chainForeignFuture(t1, t3);
            return;
          }
        }
        result = listeners.result;
        current = H.interceptedTypeCheck(result._resultOrListeners, "$is_FutureListener");
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t2 = _box_0.listenerValueOrError;
        if (!t1) {
          H.assertSubtypeOfRuntimeType(t2, H.getTypeArgumentByIndex(result, 0));
          result._state = 4;
          result._resultOrListeners = t2;
        } else {
          H.interceptedTypeCheck(t2, "$isAsyncError");
          result._state = 8;
          result._resultOrListeners = t2;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler: function(errorHandler, zone) {
      if (H.functionTypeTest(errorHandler, {func: 1, args: [P.Object, P.StackTrace]}))
        return zone.registerBinaryCallback$3$1(errorHandler, null, P.Object, P.StackTrace);
      if (H.functionTypeTest(errorHandler, {func: 1, args: [P.Object]}))
        return zone.registerUnaryCallback$2$1(errorHandler, null, P.Object);
      throw H.wrapException(P.ArgumentError$value(errorHandler, "onError", "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a a valid result"));
    },
    _microtaskLoop: function() {
      var t1, t2;
      for (; t1 = $._nextCallback, t1 != null;) {
        $._lastPriorityCallback = null;
        t2 = t1.next;
        $._nextCallback = t2;
        if (t2 == null)
          $._lastCallback = null;
        t1.callback.call$0();
      }
    },
    _startMicrotaskLoop: function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback: function(callback) {
      var newEntry = new P._AsyncCallbackEntry(H.functionTypeCheck(callback, {func: 1, ret: -1}));
      if ($._nextCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = $._lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback: function(callback) {
      var t1, entry, t2;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      t1 = $._nextCallback;
      if (t1 == null) {
        P._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new P._AsyncCallbackEntry(callback);
      t2 = $._lastPriorityCallback;
      if (t2 == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        entry.next = t2.next;
        $._lastPriorityCallback = t2.next = entry;
        if (entry.next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask: function(callback) {
      var currentZone, t1, _null = null;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      currentZone = $.Zone__current;
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(_null, _null, C.C__RootZone, callback);
        return;
      }
      if (C.C__RootZone === currentZone.get$_scheduleMicrotask().zone)
        t1 = C.C__RootZone.get$errorZone() === currentZone.get$errorZone();
      else
        t1 = false;
      if (t1) {
        P._rootScheduleMicrotask(_null, _null, currentZone, currentZone.registerCallback$1$1(callback, -1));
        return;
      }
      t1 = $.Zone__current;
      t1.scheduleMicrotask$1(t1.bindCallbackGuarded$1(callback));
    },
    Stream_Stream$fromFuture: function(future, $T) {
      var controller, _null = null;
      H.assertSubtype(future, "$isFuture", [$T], "$asFuture");
      controller = H.assertSubtype(P.StreamController_StreamController(_null, _null, _null, true, $T), "$is_StreamController", [$T], "$as_StreamController");
      future.then$1$2$onError(new P.Stream_Stream$fromFuture_closure(controller, $T), new P.Stream_Stream$fromFuture_closure0(controller), _null);
      return new P._ControllerStream(controller, [H.getTypeArgumentByIndex(controller, 0)]);
    },
    Stream_Stream$fromIterable: function(elements, $T) {
      return new P._GeneratedStreamImpl(new P.Stream_Stream$fromIterable_closure(H.assertSubtype(elements, "$isIterable", [$T], "$asIterable"), $T), [$T]);
    },
    StreamIterator_StreamIterator: function(stream, $T) {
      return new P._StreamIterator(H.assertSubtype(stream, "$isStream", [$T], "$asStream"), [$T]);
    },
    StreamController_StreamController: function(onCancel, onListen, onResume, sync, $T) {
      var t1 = {func: 1, ret: -1};
      H.functionTypeCheck(onListen, t1);
      H.functionTypeCheck(onResume, t1);
      H.functionTypeCheck(onCancel, {func: 1});
      return sync ? new P._SyncStreamController(onListen, null, onResume, onCancel, [$T]) : new P._AsyncStreamController(onListen, null, onResume, onCancel, [$T]);
    },
    _runGuarded: function(notificationHandler) {
      var e, s, exception;
      H.functionTypeCheck(notificationHandler, {func: 1});
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        $.Zone__current.handleUncaughtError$2(e, s);
      }
    },
    _BufferingStreamSubscription$: function(onData, onError, onDone, cancelOnError, $T) {
      var t1 = $.Zone__current,
        t2 = cancelOnError ? 1 : 0;
      t2 = new P._BufferingStreamSubscription(t1, t2, [$T]);
      t2._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
      return t2;
    },
    _nullDataHandler: function(value) {
    },
    _nullErrorHandler: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      $.Zone__current.handleUncaughtError$2(error, stackTrace);
    },
    _nullDoneHandler: function() {
    },
    _ForwardingStreamSubscription$: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
      var t1 = $.Zone__current,
        t2 = cancelOnError ? 1 : 0;
      t2 = new P._ForwardingStreamSubscription(_stream, t1, t2, [$S, $T]);
      t2._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
      t2._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, cancelOnError, $S, $T);
      return t2;
    },
    Timer_Timer: function(duration, callback) {
      var t1;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return t1.createTimer$2(duration, callback);
      return t1.createTimer$2(duration, t1.bindCallbackGuarded$1(callback));
    },
    _ZoneSpecification$: function(createPeriodicTimer, createTimer, errorCallback, fork, handleUncaughtError, $print, registerBinaryCallback, registerCallback, registerUnaryCallback, run, runBinary, runUnary, scheduleMicrotask) {
      return new P._ZoneSpecification(handleUncaughtError, run, runUnary, runBinary, registerCallback, registerUnaryCallback, registerBinaryCallback, errorCallback, scheduleMicrotask, createTimer, createPeriodicTimer, $print, fork);
    },
    _parentDelegate: function(zone) {
      if (zone.get$parent(zone) == null)
        return;
      return zone.get$parent(zone).get$_async$_delegate();
    },
    _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
      var t1 = {};
      t1.error = error;
      P._schedulePriorityAsyncCallback(new P._rootHandleUncaughtError_closure(t1, H.interceptedTypeCheck(stackTrace, "$isStackTrace")));
    },
    _rootRun: function($self, $parent, zone, f, $R) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R});
      t1 = $.Zone__current;
      if (t1 == zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary: function($self, $parent, zone, f, arg, $R, $T) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      t1 = $.Zone__current;
      if (t1 == zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary: function($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      t1 = $.Zone__current;
      if (t1 == zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRegisterCallback: function($self, $parent, zone, f, $R) {
      return H.functionTypeCheck(f, {func: 1, ret: $R});
    },
    _rootRegisterUnaryCallback: function($self, $parent, zone, f, $R, $T) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
    },
    _rootRegisterBinaryCallback: function($self, $parent, zone, f, $R, T1, T2) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
    },
    _rootErrorCallback: function($self, $parent, zone, error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      return;
    },
    _rootScheduleMicrotask: function($self, $parent, zone, f) {
      var t1;
      H.functionTypeCheck(f, {func: 1, ret: -1});
      t1 = C.C__RootZone !== zone;
      if (t1)
        f = !(!t1 || C.C__RootZone.get$errorZone() === zone.get$errorZone()) ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, -1);
      P._scheduleAsyncCallback(f);
    },
    _rootCreateTimer: function($self, $parent, zone, duration, callback) {
      H.interceptedTypeCheck(duration, "$isDuration");
      callback = zone.bindCallback$1$1(H.functionTypeCheck(callback, {func: 1, ret: -1}), -1);
      return P.Timer__createTimer(duration, callback);
    },
    _rootCreatePeriodicTimer: function($self, $parent, zone, duration, callback) {
      var milliseconds;
      H.interceptedTypeCheck(duration, "$isDuration");
      callback = zone.bindUnaryCallback$2$1(H.functionTypeCheck(callback, {func: 1, ret: -1, args: [P.Timer]}), null, P.Timer);
      milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _rootPrint: function($self, $parent, zone, line) {
      H.printString(H.S(H.stringTypeCheck(line)));
    },
    _rootFork: function($self, $parent, zone, specification, zoneValues) {
      var valueMap, t1, t2, _null = null;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.interceptedTypeCheck(specification, "$isZoneSpecification");
      H.interceptedTypeCheck(zoneValues, "$isMap");
      if (specification == null)
        specification = C._ZoneSpecification_ALf;
      if (zoneValues == null)
        valueMap = zone instanceof P._Zone ? zone.get$_async$_map() : P.HashMap_HashMap(_null, _null);
      else
        valueMap = P.HashMap_HashMap$from(zoneValues, _null, _null);
      t1 = new P._CustomZone(zone, valueMap);
      t2 = specification.run;
      t1.set$_async$_run(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_async$_run());
      t2 = specification.runUnary;
      t1.set$_async$_runUnary(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_async$_runUnary());
      t2 = specification.runBinary;
      t1.set$_async$_runBinary(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_async$_runBinary());
      t2 = specification.registerCallback;
      t1.set$_registerCallback(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_registerCallback());
      t2 = specification.registerUnaryCallback;
      t1.set$_registerUnaryCallback(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_registerUnaryCallback());
      t2 = specification.registerBinaryCallback;
      t1.set$_registerBinaryCallback(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_registerBinaryCallback());
      t2 = specification.errorCallback;
      t1.set$_errorCallback(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]) : zone.get$_errorCallback());
      t2 = specification.scheduleMicrotask;
      t1.set$_scheduleMicrotask(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}]) : zone.get$_scheduleMicrotask());
      t2 = specification.createTimer;
      t1.set$_async$_createTimer(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}]) : zone.get$_async$_createTimer());
      t2 = zone.get$_createPeriodicTimer();
      t1.set$_createPeriodicTimer(t2);
      t2 = zone.get$_print();
      t1.set$_print(t2);
      t2 = zone.get$_fork();
      t1.set$_fork(t2);
      t2 = specification.handleUncaughtError;
      t1.set$_handleUncaughtError(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]) : zone.get$_handleUncaughtError());
      return t1;
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl(t0) {
      this._once = t0;
      this._handle = null;
      this._tick = 0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _TimerImpl$periodic_closure: function _TimerImpl$periodic_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.milliseconds = t1;
      _.start = t2;
      _.callback = t3;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._completer = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _AsyncAwaitCompleter_complete_closure: function _AsyncAwaitCompleter_complete_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _AsyncAwaitCompleter_completeError_closure: function _AsyncAwaitCompleter_completeError_closure(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.st = t2;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _asyncStarHelper_closure: function _asyncStarHelper_closure(t0, t1) {
      this.controller = t0;
      this.bodyFunctionOrErrorCode = t1;
    },
    _asyncStarHelper_closure0: function _asyncStarHelper_closure0(t0, t1) {
      this.controller = t0;
      this.bodyFunctionOrErrorCode = t1;
    },
    _AsyncStarStreamController: function _AsyncStarStreamController(t0) {
      var _ = this;
      _.controller = null;
      _.isSuspended = false;
      _.cancelationCompleter = null;
      _.$ti = t0;
    },
    _AsyncStarStreamController__resumeBody: function _AsyncStarStreamController__resumeBody(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController__resumeBody_closure: function _AsyncStarStreamController__resumeBody_closure(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController_closure0: function _AsyncStarStreamController_closure0(t0) {
      this._resumeBody = t0;
    },
    _AsyncStarStreamController_closure1: function _AsyncStarStreamController_closure1(t0, t1) {
      this.$this = t0;
      this._resumeBody = t1;
    },
    _AsyncStarStreamController_closure: function _AsyncStarStreamController_closure(t0, t1) {
      this.$this = t0;
      this.body = t1;
    },
    _AsyncStarStreamController__closure: function _AsyncStarStreamController__closure(t0) {
      this.body = t0;
    },
    _IterationMarker: function _IterationMarker(t0, t1) {
      this.value = t0;
      this.state = t1;
    },
    _SyncStarIterator: function _SyncStarIterator(t0, t1) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._async$_current = null;
      _.$ti = t1;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    _BroadcastStream: function _BroadcastStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._eventState = 0;
      _._async$_previous = _._async$_next = null;
      _._controller = t0;
      _._onDone = _._onError = _._onData = null;
      _._zone = t1;
      _._state = t2;
      _._pending = _._cancelFuture = null;
      _.$ti = t3;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _SyncBroadcastStreamController: function _SyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._addStreamState = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _SyncBroadcastStreamController__sendData_closure: function _SyncBroadcastStreamController__sendData_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _SyncBroadcastStreamController__sendError_closure: function _SyncBroadcastStreamController__sendError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _SyncBroadcastStreamController__sendDone_closure: function _SyncBroadcastStreamController__sendDone_closure(t0) {
      this.$this = t0;
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._addStreamState = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _AsBroadcastStreamController: function _AsBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _._pending = null;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._addStreamState = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    Future: function Future() {
    },
    Future_Future_closure: function Future_Future_closure(t0, t1) {
      this.result = t0;
      this.computation = t1;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _SyncCompleter: function _SyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.target = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.target = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.target = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncComplete_closure: function _Future__asyncComplete_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2, t3) {
      var _ = this;
      _._box_1 = t0;
      _._box_0 = t1;
      _.listener = t2;
      _.hasError = t3;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1, t2) {
      this._box_0 = t0;
      this.listener = t1;
      this.sourceResult = t2;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1, t2) {
      this._box_1 = t0;
      this._box_0 = t1;
      this.listener = t2;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_Stream$fromFuture_closure: function Stream_Stream$fromFuture_closure(t0, t1) {
      this.controller = t0;
      this.T = t1;
    },
    Stream_Stream$fromFuture_closure0: function Stream_Stream$fromFuture_closure0(t0) {
      this.controller = t0;
    },
    Stream_Stream$fromIterable_closure: function Stream_Stream$fromIterable_closure(t0, t1) {
      this.elements = t0;
      this.T = t1;
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    StreamSubscription: function StreamSubscription() {
    },
    EventSink: function EventSink() {
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _SyncStreamControllerDispatch: function _SyncStreamControllerDispatch() {
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _SyncStreamController: function _SyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._controller = t0;
      _._onDone = _._onError = _._onData = null;
      _._zone = t1;
      _._state = t2;
      _._pending = _._cancelFuture = null;
      _.$ti = t3;
    },
    _AddStreamState: function _AddStreamState() {
    },
    _AddStreamState_cancel_closure: function _AddStreamState_cancel_closure(t0) {
      this.$this = t0;
    },
    _StreamControllerAddStreamState: function _StreamControllerAddStreamState(t0, t1, t2, t3) {
      var _ = this;
      _.varData = t0;
      _.addStreamFuture = t1;
      _.addSubscription = t2;
      _.$ti = t3;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._onDone = _._onError = _._onData = null;
      _._zone = t0;
      _._state = t1;
      _._pending = _._cancelFuture = null;
      _.$ti = t2;
    },
    _BufferingStreamSubscription__sendError_sendError: function _BufferingStreamSubscription__sendError_sendError(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _GeneratedStreamImpl: function _GeneratedStreamImpl(t0, t1) {
      this._pending = t0;
      this._isUsed = false;
      this.$ti = t1;
    },
    _IterablePendingEvents: function _IterablePendingEvents(t0, t1) {
      this._async$_iterator = t0;
      this._state = 0;
      this.$ti = t1;
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedError: function _DelayedError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _StreamImplEvents: function _StreamImplEvents(t0) {
      var _ = this;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _._state = 0;
      _.$ti = t0;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._zone = t0;
      _._state = 0;
      _._onDone = t1;
      _.$ti = t2;
    },
    _AsBroadcastStream: function _AsBroadcastStream(t0, t1, t2, t3, t4) {
      var _ = this;
      _._async$_source = t0;
      _._onListenHandler = t1;
      _._onCancelHandler = t2;
      _._zone = t3;
      _._subscription = _._controller = null;
      _.$ti = t4;
    },
    _BroadcastSubscriptionWrapper: function _BroadcastSubscriptionWrapper(t0, t1) {
      this._stream = t0;
      this.$ti = t1;
    },
    _StreamIterator: function _StreamIterator(t0, t1) {
      var _ = this;
      _._subscription = null;
      _._stateData = t0;
      _._isPaused = false;
      _.$ti = t1;
    },
    _ForwardingStream: function _ForwardingStream() {
    },
    _ForwardingStreamSubscription: function _ForwardingStreamSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._stream = t0;
      _._onDone = _._onError = _._onData = _._subscription = null;
      _._zone = t1;
      _._state = t2;
      _._pending = _._cancelFuture = null;
      _.$ti = t3;
    },
    _TakeStream: function _TakeStream(t0, t1, t2) {
      this._count = t0;
      this._async$_source = t1;
      this.$ti = t2;
    },
    _StateStreamSubscription: function _StateStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._sharedState = t0;
      _._stream = t1;
      _._onDone = _._onError = _._onData = _._subscription = null;
      _._zone = t2;
      _._state = t3;
      _._pending = _._cancelFuture = null;
      _.$ti = t4;
    },
    _DistinctStream: function _DistinctStream(t0, t1, t2) {
      this._equals = t0;
      this._async$_source = t1;
      this.$ti = t2;
    },
    _EventSinkWrapper: function _EventSinkWrapper(t0, t1) {
      this._sink = t0;
      this.$ti = t1;
    },
    _SinkTransformerStreamSubscription: function _SinkTransformerStreamSubscription(t0, t1, t2) {
      var _ = this;
      _._onDone = _._onError = _._onData = _._subscription = _._transformerSink = null;
      _._zone = t0;
      _._state = t1;
      _._pending = _._cancelFuture = null;
      _.$ti = t2;
    },
    _BoundSinkStream: function _BoundSinkStream(t0, t1, t2) {
      this._sinkMapper = t0;
      this._stream = t1;
      this.$ti = t2;
    },
    Timer: function Timer() {
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _ZoneFunction: function _ZoneFunction(t0, t1, t2) {
      this.zone = t0;
      this.$function = t1;
      this.$ti = t2;
    },
    ZoneSpecification: function ZoneSpecification() {
    },
    _ZoneSpecification: function _ZoneSpecification(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.handleUncaughtError = t0;
      _.run = t1;
      _.runUnary = t2;
      _.runBinary = t3;
      _.registerCallback = t4;
      _.registerUnaryCallback = t5;
      _.registerBinaryCallback = t6;
      _.errorCallback = t7;
      _.scheduleMicrotask = t8;
      _.createTimer = t9;
      _.createPeriodicTimer = t10;
      _.print = t11;
      _.fork = t12;
    },
    ZoneDelegate: function ZoneDelegate() {
    },
    Zone: function Zone() {
    },
    _ZoneDelegate: function _ZoneDelegate(t0) {
      this._delegationTarget = t0;
    },
    _Zone: function _Zone() {
    },
    _CustomZone: function _CustomZone(t0, t1) {
      var _ = this;
      _._delegateCache = _._handleUncaughtError = _._fork = _._print = _._createPeriodicTimer = _._async$_createTimer = _._scheduleMicrotask = _._errorCallback = _._registerBinaryCallback = _._registerUnaryCallback = _._registerCallback = _._async$_runBinary = _._async$_runUnary = _._async$_run = null;
      _.parent = t0;
      _._async$_map = t1;
    },
    _CustomZone_bindCallback_closure: function _CustomZone_bindCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.registered = t1;
      this.R = t2;
    },
    _CustomZone_bindUnaryCallback_closure: function _CustomZone_bindUnaryCallback_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.registered = t1;
      _.T = t2;
      _.R = t3;
    },
    _CustomZone_bindCallbackGuarded_closure: function _CustomZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.registered = t1;
    },
    _CustomZone_bindUnaryCallbackGuarded_closure: function _CustomZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.registered = t1;
      this.T = t2;
    },
    _rootHandleUncaughtError_closure: function _rootHandleUncaughtError_closure(t0, t1) {
      this._box_0 = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallback_closure: function _RootZone_bindCallback_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.R = t2;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    HashMap_HashMap: function($K, $V) {
      return new P._HashMap([$K, $V]);
    },
    _HashMap__getTableEntry: function(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry: function(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable: function() {
      var table = Object.create(null);
      P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap: function($K, $V) {
      return new H.JsLinkedHashMap([$K, $V]);
    },
    LinkedHashMap_LinkedHashMap$_literal: function(keyValuePairs, $K, $V) {
      H.listTypeCheck(keyValuePairs);
      return H.assertSubtype(H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap([$K, $V])), "$isLinkedHashMap", [$K, $V], "$asLinkedHashMap");
    },
    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {
      return new H.JsLinkedHashMap([$K, $V]);
    },
    LinkedHashMap__makeEmpty: function() {
      return new H.JsLinkedHashMap([null, null]);
    },
    LinkedHashMap__makeLiteral: function(keyValuePairs) {
      return H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap([null, null]));
    },
    _LinkedIdentityHashMap__LinkedIdentityHashMap$es6: function($K, $V) {
      return new P._LinkedIdentityHashMap([$K, $V]);
    },
    LinkedHashSet_LinkedHashSet: function(equals, hashCode, $E) {
      H.functionTypeCheck(equals, {func: 1, ret: P.bool, args: [$E, $E]});
      H.functionTypeCheck(hashCode, {func: 1, ret: P.int, args: [$E]});
      if (hashCode == null) {
        if (equals == null)
          return new P._LinkedHashSet([$E]);
        hashCode = P.collection___defaultHashCode$closure();
      } else {
        if (P.core__identityHashCode$closure() === hashCode && P.core__identical$closure() === equals)
          return new P._LinkedIdentityHashSet([$E]);
        if (equals == null)
          equals = P.collection___defaultEquals$closure();
      }
      return P._LinkedCustomHashSet$(equals, hashCode, null, $E);
    },
    _LinkedHashSet__newHashTable: function() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedCustomHashSet$: function(_equality, _hasher, validKey, $E) {
      return new P._LinkedCustomHashSet(_equality, _hasher, new P._LinkedCustomHashSet_closure($E), [$E]);
    },
    _LinkedHashSetIterator$: function(_set, _modifications, $E) {
      var t1 = new P._LinkedHashSetIterator(_set, _modifications, [$E]);
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    _defaultEquals: function(a, b) {
      return J.$eq$(a, b);
    },
    _defaultHashCode: function(a) {
      return J.get$hashCode$(a);
    },
    HashMap_HashMap$from: function(other, $K, $V) {
      var result = P.HashMap_HashMap($K, $V);
      J.forEach$1$ax(other, new P.HashMap_HashMap$from_closure(result, $K, $V));
      return H.assertSubtype(result, "$isHashMap", [$K, $V], "$asHashMap");
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = H.setRuntimeTypeInfo([], [P.String]);
      C.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, H.listSuperNativeTypeCheck(parts, "$isIterable"), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      C.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = P.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
      H.assertSubtype(parts, "$isList", [P.String], "$asList");
      it = iterable.get$iterator(iterable);
      $length = 0;
      count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = H.S(it.get$current(it));
        C.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current(it);
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            C.JSArray_methods.add$1(parts, H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          if (0 >= parts.length)
            return H.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current(it);
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current(it);
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return H.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              C.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        C.JSArray_methods.add$1(parts, elision);
      C.JSArray_methods.add$1(parts, penultimateString);
      C.JSArray_methods.add$1(parts, ultimateString);
    },
    LinkedHashSet_LinkedHashSet$from: function(elements, $E) {
      var t1, _i,
        result = P.LinkedHashSet_LinkedHashSet(null, null, $E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, H.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, H.assertSubtypeOfRuntimeType(elements[_i], $E));
      return result;
    },
    MapBase_mapToString: function(m) {
      var result, t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        C.JSArray_methods.add$1($._toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        J.forEach$1$ax(m, new P.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedIdentityHashMap: function _LinkedIdentityHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _._rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedIdentityHashSet: function _LinkedIdentityHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedCustomHashSet: function _LinkedCustomHashSet(t0, t1, t2, t3) {
      var _ = this;
      _._equality = t0;
      _._hasher = t1;
      _._validKey = t2;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t3;
    },
    _LinkedCustomHashSet_closure: function _LinkedCustomHashSet_closure(t0) {
      this.E = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._collection$_element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    UnmodifiableListView: function UnmodifiableListView(t0, t1) {
      this._collection$_source = t0;
      this.$ti = t1;
    },
    HashMap_HashMap$from_closure: function HashMap_HashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    IterableBase: function IterableBase() {
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    MapMixin_entries_closure: function MapMixin_entries_closure(t0) {
      this.$this = t0;
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView() {
    },
    SetMixin: function SetMixin() {
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    _SetBase_Object_SetMixin: function _SetBase_Object_SetMixin() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    Encoding: function Encoding() {
    },
    HtmlEscapeMode: function HtmlEscapeMode(t0, t1, t2, t3, t4) {
      var _ = this;
      _._convert$_name = t0;
      _.escapeLtGt = t1;
      _.escapeQuot = t2;
      _.escapeApos = t3;
      _.escapeSlash = t4;
    },
    HtmlEscape: function HtmlEscape(t0) {
      this.mode = t0;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = this._carry = 0;
      this._buffer = t0;
    },
    identityHashCode: function(object) {
      return H.objectHashCode(object);
    },
    Function_apply: function($function, positionalArguments) {
      return H.Primitives_applyFunction($function, positionalArguments, null);
    },
    Expando$: function($name, $T) {
      var t1;
      if (typeof WeakMap == "function")
        t1 = new WeakMap();
      else {
        t1 = $.Expando__keyCount;
        $.Expando__keyCount = t1 + 1;
        t1 = "expando$key$" + t1;
      }
      return new P.Expando(t1, $name, [$T]);
    },
    int_parse: function(source, onError, radix) {
      var value;
      H.functionTypeCheck(onError, {func: 1, ret: P.int, args: [P.String]});
      value = H.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      if (onError != null)
        return onError.call$1(source);
      throw H.wrapException(P.FormatException$(source, null, null));
    },
    Error__objectToString: function(object) {
      if (object instanceof H.Closure)
        return object.toString$0(0);
      return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
    },
    List_List$filled: function($length, fill, growable, $E) {
      var result, i;
      H.assertSubtypeOfRuntimeType(fill, $E);
      result = J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && true)
        for (i = 0; i < result.length; ++i)
          C.JSArray_methods.$indexSet(result, i, fill);
      return H.assertSubtype(result, "$isList", [$E], "$asList");
    },
    List_List$from: function(elements, growable, $E) {
      var t2,
        t1 = [$E],
        list = H.setRuntimeTypeInfo([], t1);
      for (t2 = J.get$iterator$ax(elements); t2.moveNext$0();)
        C.JSArray_methods.add$1(list, H.assertSubtypeOfRuntimeType(t2.get$current(t2), $E));
      if (growable)
        return list;
      return H.assertSubtype(J.JSArray_markFixedList(list), "$isList", t1, "$asList");
    },
    List_List$unmodifiable: function(elements, $E) {
      var t1 = [$E];
      return H.assertSubtype(J.JSArray_markUnmodifiableList(H.assertSubtype(P.List_List$from(elements, false, $E), "$isList", t1, "$asList")), "$isList", t1, "$asList");
    },
    RegExp_RegExp: function(source, caseSensitive, multiLine) {
      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, false));
    },
    identical: function(a, b) {
      return a == null ? b == null : a === b;
    },
    StringBuffer__writeAll: function(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += H.S(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        string += H.S(iterator.get$current(iterator));
        for (; iterator.moveNext$0();)
          string = string + separator + H.S(iterator.get$current(iterator));
      }
      return string;
    },
    NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments) {
      return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments);
    },
    _Uri__uriEncode: function(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte, t3,
        _s16_ = "0123456789ABCDEF";
      H.assertSubtype(canonicalTable, "$isList", [P.int], "$asList");
      if (encoding === C.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding()._nativeRegExp;
        if (typeof text !== "string")
          H.throwExpression(H.argumentErrorValue(text));
        t1 = t1.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      H.assertSubtypeOfRuntimeType(text, H.getRuntimeTypeArgument(encoding, "Codec", 0));
      bytes = encoding.get$encoder().convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128) {
          t3 = byte >>> 4;
          if (t3 >= 8)
            return H.ioore(canonicalTable, t3);
          t3 = (canonicalTable[t3] & 1 << (byte & 15)) !== 0;
        } else
          t3 = false;
        if (t3)
          t2 += H.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    DateTime$_withValue: function(_value, isUtc) {
      var t1 = new P.DateTime(_value, isUtc);
      t1.DateTime$_withValue$2$isUtc(_value, isUtc);
      return t1;
    },
    DateTime__fourDigits: function(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits: function(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$: function(milliseconds, seconds) {
      return new P.Duration(1000000 * seconds + 1000 * milliseconds);
    },
    Error_safeToString: function(object) {
      if (typeof object === "number" || typeof object === "boolean" || null == object)
        return J.toString$0$(object);
      if (typeof object === "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    ArgumentError$: function(message) {
      return new P.ArgumentError(false, null, null, message);
    },
    ArgumentError$value: function(value, $name, message) {
      return new P.ArgumentError(true, value, $name, message);
    },
    ArgumentError$notNull: function($name) {
      return new P.ArgumentError(false, null, $name, "Must not be null");
    },
    RangeError$: function(message) {
      var _null = null;
      return new P.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value: function(value, $name) {
      return new P.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
      return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval: function(value, minValue, maxValue, $name) {
      var t1;
      if (value >= minValue) {
        if (typeof maxValue !== "number")
          return H.iae(maxValue);
        t1 = value > maxValue;
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(P.RangeError$range(value, minValue, maxValue, $name, null));
    },
    RangeError_checkValidRange: function(start, end, $length) {
      var t1;
      if (typeof start !== "number")
        return H.iae(start);
      if (0 <= start) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = start > $length;
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(P.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (!(start > end)) {
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = end > $length;
        } else
          t1 = true;
        if (t1)
          throw H.wrapException(P.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative: function(value, $name) {
      if (typeof value !== "number")
        return value.$lt();
      if (value < 0)
        throw H.wrapException(P.RangeError$range(value, 0, null, $name, null));
    },
    IndexError$: function(invalidValue, indexable, $name, message, $length) {
      var t1 = H.intTypeCheck($length == null ? J.get$length$asx(indexable) : $length);
      return new P.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$: function(message) {
      return new P.UnsupportedError(message);
    },
    UnimplementedError$: function(message) {
      return new P.UnimplementedError(message);
    },
    StateError$: function(message) {
      return new P.StateError(message);
    },
    ConcurrentModificationError$: function(modifiedObject) {
      return new P.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception: function(message) {
      return new P._Exception(message);
    },
    FormatException$: function(message, source, offset) {
      return new P.FormatException(message, source, offset);
    },
    List_List$generate: function($length, generator, growable, $E) {
      var result, t1, i;
      H.functionTypeCheck(generator, {func: 1, ret: $E, args: [P.int]});
      if (growable) {
        result = H.setRuntimeTypeInfo([], [$E]);
        C.JSArray_methods.set$length(result, $length);
      } else {
        t1 = new Array($length);
        t1.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t1, [$E]);
      }
      for (i = 0; i < $length; ++i)
        C.JSArray_methods.$indexSet(result, i, generator.call$1(i));
      return result;
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
      this._box_0 = t0;
      this.sb = t1;
    },
    bool: function bool() {
    },
    DateTime: function DateTime(t0, t1) {
      this._value = t0;
      this.isUtc = t1;
    },
    double: function double() {
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    Duration_toString_sixDigits: function Duration_toString_sixDigits() {
    },
    Duration_toString_twoDigits: function Duration_toString_twoDigits() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError() {
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {
      var _ = this;
      _._core$_receiver = t0;
      _._core$_memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Expando: function Expando(t0, t1, t2) {
      this._jsWeakMapOrKey = t0;
      this.name = t1;
      this.$ti = t2;
    },
    Function: function Function() {
    },
    int: function int() {
    },
    Iterable: function Iterable() {
    },
    Iterator: function Iterator() {
    },
    List: function List() {
    },
    Map: function Map() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    num: function num() {
    },
    Object: function Object() {
    },
    Match: function Match() {
    },
    RegExp: function RegExp() {
    },
    Set: function Set() {
    },
    StackTrace: function StackTrace() {
    },
    _StringStackTrace: function _StringStackTrace(t0) {
      this._stackTrace = t0;
    },
    String: function String() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Symbol0: function Symbol0() {
    },
    Type: function Type() {
    },
    convertNativeToDart_Dictionary: function(object) {
      var dict, keys, t1, _i, key;
      if (object == null)
        return;
      dict = P.LinkedHashMap_LinkedHashMap$_empty(P.String, null);
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
        key = H.stringTypeCheck(keys[_i]);
        dict.$indexSet(0, key, object[key]);
      }
      return dict;
    },
    convertDartToNative_Dictionary: function(dict, postCreate) {
      var object;
      H.interceptedTypeCheck(dict, "$isMap");
      H.functionTypeCheck(postCreate, {func: 1, ret: -1, args: [P.Object]});
      if (dict == null)
        return;
      object = {};
      if (postCreate != null)
        postCreate.call$1(object);
      J.forEach$1$ax(dict, new P.convertDartToNative_Dictionary_closure(object));
      return object;
    },
    convertNativePromiseToDartFuture: function(promise) {
      var t1 = new P._Future($.Zone__current, [null]),
        completer = new P._AsyncCompleter(t1, [null]);
      promise.then(H.convertDartClosureToJS(new P.convertNativePromiseToDartFuture_closure(completer), 1))["catch"](H.convertDartClosureToJS(new P.convertNativePromiseToDartFuture_closure0(completer), 1));
      return t1;
    },
    Device_isOpera: function() {
      var t1 = $.Device__isOpera;
      return t1 == null ? $.Device__isOpera = J.contains$2$asx(window.navigator.userAgent, "Opera", 0) : t1;
    },
    Device_isWebKit: function() {
      var t1 = $.Device__isWebKit;
      if (t1 == null)
        t1 = $.Device__isWebKit = !H.boolConversionCheck(P.Device_isOpera()) && J.contains$2$asx(window.navigator.userAgent, "WebKit", 0);
      return t1;
    },
    Device_cssPrefix: function() {
      var t1,
        prefix = $.Device__cachedCssPrefix;
      if (prefix != null)
        return prefix;
      t1 = $.Device__isFirefox;
      if (t1 == null ? $.Device__isFirefox = J.contains$2$asx(window.navigator.userAgent, "Firefox", 0) : t1)
        prefix = "-moz-";
      else {
        t1 = $.Device__isIE;
        if (t1 == null)
          t1 = $.Device__isIE = !H.boolConversionCheck(P.Device_isOpera()) && J.contains$2$asx(window.navigator.userAgent, "Trident/", 0);
        if (t1)
          prefix = "-ms-";
        else
          prefix = H.boolConversionCheck(P.Device_isOpera()) ? "-o-" : "-webkit-";
      }
      return $.Device__cachedCssPrefix = prefix;
    },
    _StructuredClone: function _StructuredClone() {
    },
    _StructuredClone_walk_closure: function _StructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    _AcceptStructuredClone_walk_closure: function _AcceptStructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    convertDartToNative_Dictionary_closure: function convertDartToNative_Dictionary_closure(t0) {
      this.object = t0;
    },
    _StructuredCloneDart2Js: function _StructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
      this.mustCopy = false;
    },
    convertNativePromiseToDartFuture_closure: function convertNativePromiseToDartFuture_closure(t0) {
      this.completer = t0;
    },
    convertNativePromiseToDartFuture_closure0: function convertNativePromiseToDartFuture_closure0(t0) {
      this.completer = t0;
    },
    CssClassSetImpl: function CssClassSetImpl() {
    },
    CssClassSetImpl_add_closure: function CssClassSetImpl_add_closure(t0) {
      this.value = t0;
    },
    CssClassSetImpl_addAll_closure: function CssClassSetImpl_addAll_closure(t0, t1) {
      this.$this = t0;
      this.iterable = t1;
    },
    CssClassSetImpl_removeAll_closure: function CssClassSetImpl_removeAll_closure(t0) {
      this.iterable = t0;
    },
    FilteredElementList: function FilteredElementList(t0, t1) {
      this._node = t0;
      this._childNodes = t1;
    },
    FilteredElementList__iterable_closure: function FilteredElementList__iterable_closure() {
    },
    FilteredElementList__iterable_closure0: function FilteredElementList__iterable_closure0() {
    },
    FilteredElementList_removeRange_closure: function FilteredElementList_removeRange_closure() {
    },
    _completeRequest: function(request, $T) {
      var t1 = new P._Future($.Zone__current, [$T]),
        completer = new P._SyncCompleter(t1, [$T]),
        t2 = W.Event,
        t3 = {func: 1, ret: -1, args: [t2]};
      W._EventStreamSubscription$(request, "success", H.functionTypeCheck(new P._completeRequest_closure(request, completer, $T), t3), false, t2);
      W._EventStreamSubscription$(request, "error", H.functionTypeCheck(completer.get$completeError(), t3), false, t2);
      return t1;
    },
    _completeRequest_closure: function _completeRequest_closure(t0, t1, t2) {
      this.request = t0;
      this.completer = t1;
      this.T = t2;
    },
    KeyRange: function KeyRange() {
    },
    ObjectStore: function ObjectStore() {
    },
    OpenDBRequest: function OpenDBRequest() {
    },
    Request: function Request() {
    },
    VersionChangeEvent: function VersionChangeEvent() {
    },
    _callDartFunction: function(callback, captureThis, $self, $arguments) {
      var arguments0, dartArgs;
      H.boolTypeCheck(captureThis);
      H.listTypeCheck($arguments);
      if (H.boolConversionCheck(captureThis)) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      dartArgs = P.List_List$from(J.map$1$1$ax($arguments, P.js___convertToDart$closure(), null), true, null);
      return P._convertToJS(P.Function_apply(H.interceptedTypeCheck(callback, "$isFunction"), dartArgs));
    },
    _defineProperty: function(o, $name, value) {
      var exception;
      try {
        if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name)) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
      return false;
    },
    _getOwnProperty: function(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return;
    },
    _convertToJS: function(o) {
      var t1;
      if (o == null || typeof o === "string" || typeof o === "number" || typeof o === "boolean")
        return o;
      t1 = J.getInterceptor$(o);
      if (!!t1.$isJsObject)
        return o._js$_jsObject;
      if (H.isBrowserObject(o))
        return o;
      if (!!t1.$isTypedData)
        return o;
      if (!!t1.$isDateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (!!t1.$isFunction)
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.$get$_dartProxyCtor()));
    },
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy;
      H.functionTypeCheck(createProxy, {func: 1, args: [,]});
      jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: function(o) {
      var ms, t1;
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else if (o instanceof Object && H.isBrowserObject(o))
        return o;
      else if (o instanceof Object && !!J.getInterceptor$(o).$isTypedData)
        return o;
      else if (o instanceof Date) {
        ms = H.intTypeCheck(o.getTime());
        t1 = new P.DateTime(ms, false);
        t1.DateTime$_withValue$2$isUtc(ms, false);
        return t1;
      } else if (o.constructor === $.$get$_dartProxyCtor())
        return o.o;
      else
        return P._wrapToDart(o);
    },
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy;
      H.functionTypeCheck(createProxy, {func: 1, args: [,]});
      dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    _convertDartFunctionFast: function(f) {
      var ret,
        existing = f.$dart_jsFunction;
      if (existing != null)
        return existing;
      ret = function(_call, f) {
        return function() {
          return _call(f, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunctionFast, f);
      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      f.$dart_jsFunction = ret;
      return ret;
    },
    _callDartFunctionFast: function(callback, $arguments) {
      H.listTypeCheck($arguments);
      return P.Function_apply(H.interceptedTypeCheck(callback, "$isFunction"), $arguments);
    },
    allowInterop: function(f, $F) {
      H.assertIsSubtype($F, P.Function, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'F' in 'allowInterop'.");
      H.assertSubtypeOfRuntimeType(f, $F);
      if (typeof f == "function")
        return f;
      else
        return H.assertSubtypeOfRuntimeType(P._convertDartFunctionFast(f), $F);
    },
    JsObject: function JsObject(t0) {
      this._js$_jsObject = t0;
    },
    JsFunction: function JsFunction(t0) {
      this._js$_jsObject = t0;
    },
    JsArray: function JsArray(t0, t1) {
      this._js$_jsObject = t0;
      this.$ti = t1;
    },
    _convertToJS_closure: function _convertToJS_closure() {
    },
    _convertToJS_closure0: function _convertToJS_closure0(t0) {
      this.ctor = t0;
    },
    _wrapToDart_closure: function _wrapToDart_closure() {
    },
    _wrapToDart_closure0: function _wrapToDart_closure0() {
    },
    _wrapToDart_closure1: function _wrapToDart_closure1() {
    },
    _JsArray_JsObject_ListMixin: function _JsArray_JsObject_ListMixin() {
    },
    _convertDataTree: function(data) {
      return new P._convertDataTree__convert(new P._IdentityHashMap([null, null])).call$1(data);
    },
    hasProperty: function(o, $name) {
      return $name in o;
    },
    _convertDataTree__convert: function _convertDataTree__convert(t0) {
      this._convertedObjects = t0;
    },
    max: function(a, b, $T) {
      H.assertIsSubtype($T, P.num, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'T' in 'max'.");
      H.assertSubtypeOfRuntimeType(a, $T);
      H.assertSubtypeOfRuntimeType(b, $T);
      return Math.max(H.checkNum(a), H.checkNum(b));
    },
    Random_Random: function() {
      return C.C__JSRandom;
    },
    _JenkinsSmiHash_combine0: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_finish: function(hash) {
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    Rectangle$: function(left, $top, width, height, $T) {
      var t1, t2;
      if (typeof width !== "number")
        return width.$lt();
      if (width < 0)
        t1 = -width * 0;
      else
        t1 = width;
      H.assertSubtypeOfRuntimeType(t1, $T);
      if (typeof height !== "number")
        return height.$lt();
      if (height < 0)
        t2 = -height * 0;
      else
        t2 = height;
      return new P.Rectangle(left, $top, t1, H.assertSubtypeOfRuntimeType(t2, $T), [$T]);
    },
    _JSRandom: function _JSRandom() {
    },
    Point: function Point(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.$ti = t2;
    },
    _RectangleBase: function _RectangleBase() {
    },
    Rectangle: function Rectangle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.width = t2;
      _.height = t3;
      _.$ti = t4;
    },
    MutableRectangle: function MutableRectangle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _._width = t2;
      _._height = t3;
      _.$ti = t4;
    },
    Length: function Length() {
    },
    LengthList: function LengthList() {
    },
    Number: function Number() {
    },
    NumberList: function NumberList() {
    },
    PointList: function PointList() {
    },
    StringList: function StringList() {
    },
    AttributeClassSet: function AttributeClassSet(t0) {
      this._svg$_element = t0;
    },
    SvgElement: function SvgElement() {
    },
    Transform: function Transform() {
    },
    TransformList: function TransformList() {
    },
    _LengthList_Interceptor_ListMixin: function _LengthList_Interceptor_ListMixin() {
    },
    _LengthList_Interceptor_ListMixin_ImmutableListMixin: function _LengthList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NumberList_Interceptor_ListMixin: function _NumberList_Interceptor_ListMixin() {
    },
    _NumberList_Interceptor_ListMixin_ImmutableListMixin: function _NumberList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _StringList_Interceptor_ListMixin: function _StringList_Interceptor_ListMixin() {
    },
    _StringList_Interceptor_ListMixin_ImmutableListMixin: function _StringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TransformList_Interceptor_ListMixin: function _TransformList_Interceptor_ListMixin() {
    },
    _TransformList_Interceptor_ListMixin_ImmutableListMixin: function _TransformList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioParamMap: function AudioParamMap() {
    },
    AudioParamMap_keys_closure: function AudioParamMap_keys_closure(t0) {
      this.keys = t0;
    },
    AudioTrackList: function AudioTrackList() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    _AudioParamMap_Interceptor_MapMixin: function _AudioParamMap_Interceptor_MapMixin() {
    },
    SqlResultSetRowList: function SqlResultSetRowList() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin: function _SqlResultSetRowList_Interceptor_ListMixin() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin: function _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  W = {
    document: function() {
      return document;
    },
    promiseToFuture: function(jsPromise, $T) {
      var t1 = new P._Future($.Zone__current, [$T]),
        completer = new P._AsyncCompleter(t1, [$T]);
      jsPromise.then(H.convertDartClosureToJS(new W.promiseToFuture_closure(completer, $T), 1), H.convertDartClosureToJS(new W.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    Comment_Comment: function() {
      var t1 = document;
      return t1.createComment("");
    },
    DivElement_DivElement: function() {
      return document.createElement("div");
    },
    Element__determineTransitionEventType: function(e) {
      H.interceptedTypeCheck(e, "$isEventTarget");
      if (H.boolConversionCheck(P.Device_isWebKit()))
        return "webkitTransitionEnd";
      else if (H.boolConversionCheck(P.Device_isOpera()))
        return "oTransitionEnd";
      return "transitionend";
    },
    Element__safeTagName: function(element) {
      var t1, t2, exception,
        result = "element tag unavailable";
      try {
        t1 = J.getInterceptor$x(element);
        t2 = t1.get$tagName(element);
        if (typeof t2 === "string")
          result = t1.get$tagName(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return result;
    },
    _JenkinsSmiHash_combine: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_hash4: function(a, b, c, d) {
      var t1 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, a), b), c), d),
        hash = 536870911 & t1 + ((67108863 & t1) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    _MultiElementCssClassSet__MultiElementCssClassSet: function(elements) {
      var t1;
      H.assertSubtype(elements, "$isIterable", [W.Element], "$asIterable");
      t1 = H.getTypeArgumentByIndex(elements, 0);
      return new W._MultiElementCssClassSet(elements, P.List_List$from(new H.MappedListIterable(elements, H.functionTypeCheck(new W._MultiElementCssClassSet__MultiElementCssClassSet_closure(), {func: 1, ret: null, args: [t1]}), [t1, null]), true, P.CssClassSetImpl));
    },
    _ElementCssClassSet__addAll: function(_element, iterable) {
      var list, t1;
      H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable");
      list = _element.classList;
      for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();)
        list.add(t1.get$current(t1));
    },
    _ElementCssClassSet__removeAll: function(_element, iterable) {
      var list, t1, t2;
      H.assertSubtype(iterable, "$isIterable", [P.Object], "$asIterable");
      list = _element.classList;
      for (t1 = J.get$iterator$ax(iterable.__internal$_iterable), t2 = new H.WhereIterator(t1, iterable._f, [H.getTypeArgumentByIndex(iterable, 0)]); t2.moveNext$0();)
        list.remove(H.stringTypeCheck(t1.get$current(t1)));
    },
    _EventStreamSubscription$: function(_target, _eventType, onData, _useCapture, $T) {
      var t1 = onData == null ? null : W._wrapZone(new W._EventStreamSubscription_closure(onData), W.Event);
      t1 = new W._EventStreamSubscription(_target, _eventType, t1, false, [$T]);
      t1._tryResume$0();
      return t1;
    },
    _Html5NodeValidator$: function(uriPolicy) {
      var e = document.createElement("a"),
        t1 = new W._SameOriginUriPolicy(e, window.location);
      t1 = new W._Html5NodeValidator(t1);
      t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
      return t1;
    },
    _Html5NodeValidator__standardAttributeValidator: function(element, attributeName, value, context) {
      H.interceptedTypeCheck(element, "$isElement");
      H.stringTypeCheck(attributeName);
      H.stringTypeCheck(value);
      H.interceptedTypeCheck(context, "$is_Html5NodeValidator");
      return true;
    },
    _Html5NodeValidator__uriAttributeValidator: function(element, attributeName, value, context) {
      var t1, t2, t3;
      H.interceptedTypeCheck(element, "$isElement");
      H.stringTypeCheck(attributeName);
      H.stringTypeCheck(value);
      t1 = H.interceptedTypeCheck(context, "$is_Html5NodeValidator").uriPolicy;
      t2 = t1._hiddenAnchor;
      t2.href = value;
      t3 = t2.hostname;
      t1 = t1._loc;
      if (!(t3 == t1.hostname && t2.port == t1.port && t2.protocol == t1.protocol))
        if (t3 === "")
          if (t2.port === "") {
            t1 = t2.protocol;
            t1 = t1 === ":" || t1 === "";
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    _TemplatingNodeValidator$: function() {
      var _null = null,
        t1 = P.String,
        t2 = P.LinkedHashSet_LinkedHashSet$from(C.List_wSV, t1),
        t3 = H.getTypeArgumentByIndex(C.List_wSV, 0),
        t4 = H.functionTypeCheck(new W._TemplatingNodeValidator_closure(), {func: 1, ret: t1, args: [t3]}),
        t5 = H.setRuntimeTypeInfo(["TEMPLATE"], [t1]);
      t2 = new W._TemplatingNodeValidator(t2, P.LinkedHashSet_LinkedHashSet(_null, _null, t1), P.LinkedHashSet_LinkedHashSet(_null, _null, t1), P.LinkedHashSet_LinkedHashSet(_null, _null, t1), _null);
      t2._SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(_null, new H.MappedListIterable(C.List_wSV, t4, [t3, t1]), t5, _null);
      return t2;
    },
    _convertNativeToDart_EventTarget: function(e) {
      var $window;
      if (e == null)
        return;
      if ("postMessage" in e) {
        $window = W._DOMWindowCrossFrame__createSafe(e);
        if (!!J.getInterceptor$($window).$isEventTarget)
          return $window;
        return;
      } else
        return H.interceptedTypeCheck(e, "$isEventTarget");
    },
    _DOMWindowCrossFrame__createSafe: function(w) {
      if (w === window)
        return H.interceptedTypeCheck(w, "$isWindowBase");
      else
        return new W._DOMWindowCrossFrame();
    },
    _wrapZone: function(callback, $T) {
      var t1;
      H.functionTypeCheck(callback, {func: 1, ret: -1, args: [$T]});
      t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    HtmlElement: function HtmlElement() {
    },
    AccessibleNode: function AccessibleNode() {
    },
    AccessibleNodeList: function AccessibleNodeList() {
    },
    AnchorElement: function AnchorElement() {
    },
    Animation: function Animation() {
    },
    AnimationEvent: function AnimationEvent() {
    },
    AreaElement: function AreaElement() {
    },
    BaseElement: function BaseElement() {
    },
    Blob: function Blob() {
    },
    BodyElement: function BodyElement() {
    },
    CharacterData: function CharacterData() {
    },
    Comment: function Comment() {
    },
    CssNumericValue: function CssNumericValue() {
    },
    CssPerspective: function CssPerspective() {
    },
    CssRule: function CssRule() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    CssStyleValue: function CssStyleValue() {
    },
    CssTransformComponent: function CssTransformComponent() {
    },
    CssTransformValue: function CssTransformValue() {
    },
    CssUnparsedValue: function CssUnparsedValue() {
    },
    DataTransferItemList: function DataTransferItemList() {
    },
    DivElement: function DivElement() {
    },
    Document: function Document() {
    },
    DomException: function DomException() {
    },
    DomRectList: function DomRectList() {
    },
    DomRectReadOnly: function DomRectReadOnly() {
    },
    DomStringList: function DomStringList() {
    },
    DomTokenList: function DomTokenList() {
    },
    _ChildrenElementList: function _ChildrenElementList(t0, t1) {
      this._html$_element = t0;
      this._childElements = t1;
    },
    _FrozenElementList: function _FrozenElementList(t0, t1) {
      this._nodeList = t0;
      this.$ti = t1;
    },
    Element: function Element() {
    },
    Element_animate_closure: function Element_animate_closure() {
    },
    Entry: function Entry() {
    },
    Entry_remove_closure: function Entry_remove_closure(t0) {
      this.completer = t0;
    },
    Entry_remove_closure0: function Entry_remove_closure0(t0) {
      this.completer = t0;
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    File: function File() {
    },
    FileList: function FileList() {
    },
    FileWriter: function FileWriter() {
    },
    FocusEvent: function FocusEvent() {
    },
    FontFace: function FontFace() {
    },
    FontFaceSet: function FontFaceSet() {
    },
    FormElement: function FormElement() {
    },
    Gamepad: function Gamepad() {
    },
    HeadElement: function HeadElement() {
    },
    History: function History() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HtmlDocument: function HtmlDocument() {
    },
    ImageData: function ImageData() {
    },
    InputElement: function InputElement() {
    },
    KeyboardEvent: function KeyboardEvent() {
    },
    Location: function Location() {
    },
    MediaKeySession: function MediaKeySession() {
    },
    MediaList: function MediaList() {
    },
    MessagePort: function MessagePort() {
    },
    MidiInputMap: function MidiInputMap() {
    },
    MidiInputMap_keys_closure: function MidiInputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiOutputMap: function MidiOutputMap() {
    },
    MidiOutputMap_keys_closure: function MidiOutputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MimeType: function MimeType() {
    },
    MimeTypeArray: function MimeTypeArray() {
    },
    MouseEvent: function MouseEvent() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    Plugin: function Plugin() {
    },
    PluginArray: function PluginArray() {
    },
    RtcStatsReport: function RtcStatsReport() {
    },
    RtcStatsReport_keys_closure: function RtcStatsReport_keys_closure(t0) {
      this.keys = t0;
    },
    SelectElement: function SelectElement() {
    },
    SourceBuffer: function SourceBuffer() {
    },
    SourceBufferList: function SourceBufferList() {
    },
    SpanElement: function SpanElement() {
    },
    SpeechGrammar: function SpeechGrammar() {
    },
    SpeechGrammarList: function SpeechGrammarList() {
    },
    SpeechRecognitionResult: function SpeechRecognitionResult() {
    },
    Storage: function Storage() {
    },
    Storage_keys_closure: function Storage_keys_closure(t0) {
      this.keys = t0;
    },
    StyleSheet: function StyleSheet() {
    },
    TableElement: function TableElement() {
    },
    TemplateElement: function TemplateElement() {
    },
    Text: function Text() {
    },
    TextAreaElement: function TextAreaElement() {
    },
    TextTrack: function TextTrack() {
    },
    TextTrackCue: function TextTrackCue() {
    },
    TextTrackCueList: function TextTrackCueList() {
    },
    TextTrackList: function TextTrackList() {
    },
    TimeRanges: function TimeRanges() {
    },
    Touch: function Touch() {
    },
    TouchList: function TouchList() {
    },
    TrackDefaultList: function TrackDefaultList() {
    },
    TransitionEvent: function TransitionEvent() {
    },
    UIEvent: function UIEvent() {
    },
    Url: function Url() {
    },
    VideoTrackList: function VideoTrackList() {
    },
    Window: function Window() {
    },
    WorkerGlobalScope: function WorkerGlobalScope() {
    },
    _Attr: function _Attr() {
    },
    _CssRuleList: function _CssRuleList() {
    },
    _DomRect: function _DomRect() {
    },
    _GamepadList: function _GamepadList() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _SpeechRecognitionResultList: function _SpeechRecognitionResultList() {
    },
    _StyleSheetList: function _StyleSheetList() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._html$_element = t0;
    },
    CssClassSet: function CssClassSet() {
    },
    _MultiElementCssClassSet: function _MultiElementCssClassSet(t0, t1) {
      this._elementIterable = t0;
      this._sets = t1;
    },
    _MultiElementCssClassSet__MultiElementCssClassSet_closure: function _MultiElementCssClassSet__MultiElementCssClassSet_closure() {
    },
    _MultiElementCssClassSet_readClasses_closure: function _MultiElementCssClassSet_readClasses_closure(t0) {
      this.s = t0;
    },
    _MultiElementCssClassSet_modify_closure: function _MultiElementCssClassSet_modify_closure(t0) {
      this.f = t0;
    },
    _ElementCssClassSet: function _ElementCssClassSet(t0) {
      this._html$_element = t0;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._pauseCount = 0;
      _._html$_target = t0;
      _._eventType = t1;
      _._html$_onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _Html5NodeValidator: function _Html5NodeValidator(t0) {
      this.uriPolicy = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    NodeValidatorBuilder: function NodeValidatorBuilder(t0) {
      this._validators = t0;
    },
    NodeValidatorBuilder_allowsElement_closure: function NodeValidatorBuilder_allowsElement_closure(t0) {
      this.element = t0;
    },
    NodeValidatorBuilder_allowsAttribute_closure: function NodeValidatorBuilder_allowsAttribute_closure(t0, t1, t2) {
      this.element = t0;
      this.attributeName = t1;
      this.value = t2;
    },
    _SimpleNodeValidator: function _SimpleNodeValidator() {
    },
    _SimpleNodeValidator_closure: function _SimpleNodeValidator_closure() {
    },
    _SimpleNodeValidator_closure0: function _SimpleNodeValidator_closure0() {
    },
    _TemplatingNodeValidator: function _TemplatingNodeValidator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._templateAttrs = t0;
      _.allowedElements = t1;
      _.allowedAttributes = t2;
      _.allowedUriAttributes = t3;
      _.uriPolicy = t4;
    },
    _TemplatingNodeValidator_closure: function _TemplatingNodeValidator_closure() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._html$_length = t1;
      _._position = -1;
      _._html$_current = null;
      _.$ti = t2;
    },
    _DOMWindowCrossFrame: function _DOMWindowCrossFrame() {
    },
    NodeValidator: function NodeValidator() {
    },
    _SameOriginUriPolicy: function _SameOriginUriPolicy(t0, t1) {
      this._hiddenAnchor = t0;
      this._loc = t1;
    },
    _ValidatingTreeSanitizer: function _ValidatingTreeSanitizer(t0) {
      this.validator = t0;
    },
    _ValidatingTreeSanitizer_sanitizeTree_walk: function _ValidatingTreeSanitizer_sanitizeTree_walk(t0) {
      this.$this = t0;
    },
    _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase: function _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase() {
    },
    _DomRectList_Interceptor_ListMixin: function _DomRectList_Interceptor_ListMixin() {
    },
    _DomRectList_Interceptor_ListMixin_ImmutableListMixin: function _DomRectList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _DomStringList_Interceptor_ListMixin: function _DomStringList_Interceptor_ListMixin() {
    },
    _DomStringList_Interceptor_ListMixin_ImmutableListMixin: function _DomStringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _FileList_Interceptor_ListMixin: function _FileList_Interceptor_ListMixin() {
    },
    _FileList_Interceptor_ListMixin_ImmutableListMixin: function _FileList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin: function _HtmlCollection_Interceptor_ListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin: function _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _MidiInputMap_Interceptor_MapMixin: function _MidiInputMap_Interceptor_MapMixin() {
    },
    _MidiOutputMap_Interceptor_MapMixin: function _MidiOutputMap_Interceptor_MapMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin: function _MimeTypeArray_Interceptor_ListMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin: function _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NodeList_Interceptor_ListMixin: function _NodeList_Interceptor_ListMixin() {
    },
    _NodeList_Interceptor_ListMixin_ImmutableListMixin: function _NodeList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _PluginArray_Interceptor_ListMixin: function _PluginArray_Interceptor_ListMixin() {
    },
    _PluginArray_Interceptor_ListMixin_ImmutableListMixin: function _PluginArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _RtcStatsReport_Interceptor_MapMixin: function _RtcStatsReport_Interceptor_MapMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin: function _SourceBufferList_EventTarget_ListMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: function _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin: function _SpeechGrammarList_Interceptor_ListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin: function _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _Storage_Interceptor_MapMixin: function _Storage_Interceptor_MapMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin: function _TextTrackCueList_Interceptor_ListMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin: function _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin: function _TextTrackList_EventTarget_ListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: function _TextTrackList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _TouchList_Interceptor_ListMixin: function _TouchList_Interceptor_ListMixin() {
    },
    _TouchList_Interceptor_ListMixin_ImmutableListMixin: function _TouchList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin: function __CssRuleList_Interceptor_ListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin_ImmutableListMixin: function __CssRuleList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __GamepadList_Interceptor_ListMixin: function __GamepadList_Interceptor_ListMixin() {
    },
    __GamepadList_Interceptor_ListMixin_ImmutableListMixin: function __GamepadList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin: function __NamedNodeMap_Interceptor_ListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin: function __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin: function __StyleSheetList_Interceptor_ListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin: function __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  G = {
    createNgZone: function() {
      return Y.NgZone$(false);
    },
    createRandomAppId: function() {
      var t1 = new G.createRandomAppId_char(C.C__JSRandom);
      return H.S(t1.call$0()) + H.S(t1.call$0()) + H.S(t1.call$0());
    },
    ThrowingSlowComponentLoader: function ThrowingSlowComponentLoader() {
    },
    createRandomAppId_char: function createRandomAppId_char(t0) {
      this.random = t0;
    },
    appInjector: function(userProvidedInjector) {
      var t3, ngZone, userInjector, t1 = {},
        t2 = {func: 1, ret: M.Injector, opt: [M.Injector]};
      H.functionTypeCheck(userProvidedInjector, t2);
      H.functionTypeCheck(G.modules__createNgZone$closure(), {func: 1, ret: Y.NgZone});
      t3 = $.$get$appGlobals();
      t3.toString;
      t3 = H.functionTypeCheck(Y.modules_template__minimalApp$Injector$closure(), t2).call$1(t3._app_host$_hostInjector);
      t1.applicationRef = null;
      ngZone = G.modules__createNgZone$closure().call$0();
      t2 = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_ApplicationRef_Aij, new G.appInjector_closure(t1), C.Type_AppViewUtils_NWH, new G.appInjector_closure0(), C.Type_NgZone_6ty, new G.appInjector_closure1(ngZone), C.Type_Testability_h8g, new G.appInjector_closure2(ngZone)], P.Object, {func: 1, ret: P.Object});
      userInjector = userProvidedInjector.call$1(new G._LazyInjector(t2, t3 == null ? C.EmptyInjector_null : t3));
      t2 = M.Injector;
      ngZone.toString;
      t1 = H.functionTypeCheck(new G.appInjector_closure3(t1, ngZone, userInjector), {func: 1, ret: t2});
      return ngZone._innerZone.run$1$1(t1, t2);
    },
    _identityInjector: function($parent) {
      return $parent;
    },
    appInjector_closure: function appInjector_closure(t0) {
      this._box_0 = t0;
    },
    appInjector_closure0: function appInjector_closure0() {
    },
    appInjector_closure1: function appInjector_closure1(t0) {
      this.ngZone = t0;
    },
    appInjector_closure2: function appInjector_closure2(t0) {
      this.ngZone = t0;
    },
    appInjector_closure3: function appInjector_closure3(t0, t1, t2) {
      this._box_0 = t0;
      this.ngZone = t1;
      this.userInjector = t2;
    },
    _LazyInjector: function _LazyInjector(t0, t1) {
      this._providers = t0;
      this.parent = t1;
    },
    ElementInjector: function ElementInjector(t0, t1, t2) {
      var _ = this;
      _._view = t0;
      _._element$_nodeIndex = t1;
      _._parent = null;
      _.parent = t2;
    },
    MaterialPersistentDrawerDirective: function MaterialPersistentDrawerDirective(t0, t1) {
      this._visible = t0;
      this._visibleChange = t1;
    },
    ViewMaterialCheckboxComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new G.ViewMaterialCheckboxComponent0(N.TextBinding$(), parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewMaterialCheckboxComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewMaterialCheckboxComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$MaterialCheckboxComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("material-checkbox");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      t1.updateChildClassNonHtml$2(t2, "themeable");
      return t1;
    },
    viewFactory_MaterialCheckboxComponent1: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new G._ViewMaterialCheckboxComponent1(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    ViewMaterialCheckboxComponent0: function ViewMaterialCheckboxComponent0(t0, t1, t2) {
      var _ = this;
      _._textBinding_4 = t0;
      _.componentStyles = _.ctx = _.rootEl = _._el_3 = _._material_checkbox_template$_el_1 = _._material_checkbox_template$_el_0 = _._material_checkbox_template$_expr_9 = _._material_checkbox_template$_expr_8 = _._material_checkbox_template$_expr_6 = _._material_checkbox_template$_expr_3 = _._material_checkbox_template$_expr_2 = _._material_checkbox_template$_expr_1 = _._material_checkbox_template$_expr_0 = _._material_checkbox_template$_NgIf_2_9 = _._material_checkbox_template$_appEl_2 = _._material_checkbox_template$_MaterialIconComponent_1_5 = _._material_checkbox_template$_compView_1 = null;
      _.parentView = t1;
      _.viewData = t2;
    },
    _ViewMaterialCheckboxComponent1: function _ViewMaterialCheckboxComponent1(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_checkbox_template$_el_0 = _._material_checkbox_template$_expr_0 = _._MaterialRippleComponent_0_5 = _._material_checkbox_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    MaterialPopupComponent$: function(_hierarchy, parentPopup, role, _ngZone, _overlayService, _domService, _zIndexer, _defaultPreferredPositions, _useRepositionLoop, _viewportBoundaries, _popupSizeProvider, _changeDetector, _viewContainer, elementRef) {
      var _null = null,
        t1 = [-1],
        t2 = [P.bool],
        t3 = $.$get$MaterialPopupComponent__idGenerator().nextId$0(),
        t4 = H.setRuntimeTypeInfo([], [W.Element]),
        t5 = P.Symbol0,
        t6 = P.LinkedHashMap_LinkedHashMap$_literal([C.Symbol_autoDismiss, true, C.Symbol_enforceSpaceConstraints, false, C.Symbol_matchMinSourceWidth, false, C.Symbol_offsetX, 0, C.Symbol_offsetY, 0, C.Symbol_preferredPositions, C.List_empty0, C.Symbol_source, null, C.Symbol_trackLayoutChanges, true, C.Symbol_constrainToViewport, true], t5, _null),
        t7 = P.LinkedHashMap_LinkedHashMap(t5, _null),
        t8 = Y.ChangeRecord,
        t9 = new H.TypeImpl(t8).$eq(0, C.Type_dynamic_0Rz) || new H.TypeImpl(t8).$eq(0, C.Type_ChangeRecord_INA),
        result = new Y.ObservableMap(t7, new B.ChangeNotifier([t8]), t9, [t5, null]);
      result.addAll$1(0, t6);
      t5 = Y.ChangeRecord;
      t6 = new H.TypeImpl(t5).$eq(0, C.Type_dynamic_0Rz) || new H.TypeImpl(t5).$eq(0, C.Type_ChangeRecord_INA);
      t1 = new G.MaterialPopupComponent(new P._SyncBroadcastStreamController(_null, _null, t1), new P._SyncBroadcastStreamController(_null, _null, t2), new P._SyncBroadcastStreamController(_null, _null, [W.Event]), _changeDetector, _viewContainer, new R.Disposer(true), new R.Disposer(false), _ngZone, _overlayService, _domService, _hierarchy, _defaultPreferredPositions, elementRef, "dialog", t3, new P.MutableRectangle(0, 0, 0, 0, [P.num]), _viewportBoundaries, _useRepositionLoop, t4, _zIndexer, _popupSizeProvider, new F.PopupState(result, new B.ChangeNotifier([t5]), t6), new P._SyncBroadcastStreamController(_null, _null, t1), new P._SyncBroadcastStreamController(_null, _null, t1), new P._SyncBroadcastStreamController(_null, _null, t2));
      t1.MaterialPopupComponent$14(_hierarchy, parentPopup, role, _ngZone, _overlayService, _domService, _zIndexer, _defaultPreferredPositions, _useRepositionLoop, _viewportBoundaries, _popupSizeProvider, _changeDetector, _viewContainer, elementRef);
      return t1;
    },
    _mergeStreams: function(streams, $T) {
      var t2, streamSubscriptions, cachedResults, streamController, t1 = {};
      H.assertSubtype(streams, "$isList", [[P.Stream, $T]], "$asList");
      t2 = new Array(2);
      t2.fixed$length = Array;
      streamSubscriptions = H.setRuntimeTypeInfo(t2, [[P.StreamSubscription, $T]]);
      t2 = new Array(2);
      t2.fixed$length = Array;
      cachedResults = H.setRuntimeTypeInfo(t2, [$T]);
      t1.streamController = null;
      t2 = [P.List, $T];
      streamController = new P._SyncBroadcastStreamController(new G._mergeStreams_closure(t1, streams, streamSubscriptions, cachedResults, $T), new G._mergeStreams_closure0(streamSubscriptions), [t2]);
      t1.streamController = streamController;
      return new P._BroadcastStream(streamController, [t2]);
    },
    _flatten: function($async$nested) {
      return P._makeSyncStarIterable(function() {
        var nested = $async$nested;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, item;
        return function $async$_flatten($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = J.get$iterator$ax(nested);
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                item = t1.get$current(t1);
                $async$goto = !!J.getInterceptor$(item).$isIterable ? 4 : 6;
                break;
              case 4:
                // then
                $async$goto = 7;
                return P._IterationMarker_yieldStar(G._flatten(item));
              case 7:
                // after yield
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                $async$goto = 8;
                return item;
              case 8:
                // after yield
              case 5:
                // join
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, null);
    },
    _boundRectangle: function(rect, boundaries) {
      var t2, t3, t4,
        t1 = P.num;
      H.assertSubtype(rect, "$isRectangle", [t1], "$asRectangle");
      t2 = rect.left;
      t3 = rect._width;
      boundaries.toString;
      if (typeof t3 !== "number")
        return t3.$sub();
      t4 = rect._height;
      if (typeof t4 !== "number")
        return t4.$sub();
      return P.Rectangle$(t2, rect.top, t3 - 0 - 0, t4 - 0 - 0, t1);
    },
    MaterialPopupComponent: function MaterialPopupComponent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _._onOpened = t0;
      _._onContentVisible = t1;
      _._onAutoDismissed = t2;
      _._material_popup$_changeDetector = t3;
      _._material_popup$_viewContainer = t4;
      _._material_popup$_disposer = t5;
      _._visibleDisposer = t6;
      _._material_popup$_ngZone = t7;
      _._overlayService = t8;
      _._material_popup$_domService = t9;
      _._hierarchy = t10;
      _._defaultPreferredPositions = t11;
      _._overlayRef = _._alignmentPosition = null;
      _.elementRef = t12;
      _.role = t13;
      _._material_popup$_uniqueId = t14;
      _._resolvedPopupRef = null;
      _._viewInitialized = false;
      _._animationTimer = null;
      _._viewportRect = t15;
      _._viewportBoundaries = t16;
      _._isOpening = false;
      _._material_popup$_useRepositionLoop = t17;
      _._initialSourceDimensions = null;
      _._repositionOffsetY = _._repositionOffsetX = 0;
      _._repositionLoopId = null;
      _._autoDismissBlockers = t18;
      _.showPopup = false;
      _._zIndex = null;
      _._material_popup$_zIndexer = t19;
      _._slide = null;
      _._popupSizeProvider = t20;
      _.maxWidth = _.maxHeight = _.minWidth = _.minHeight = null;
      _._matchMinSourceWidth = false;
      _.state = t21;
      _.templateRef = null;
      _._isVisible = false;
      _.PopupEvents_onOpenController = t22;
      _.PopupEvents_onCloseController = t23;
      _.PopupEvents_onVisibleController = t24;
    },
    MaterialPopupComponent_closure: function MaterialPopupComponent_closure(t0) {
      this.$this = t0;
    },
    MaterialPopupComponent__open_closure: function MaterialPopupComponent__open_closure(t0) {
      this.$this = t0;
    },
    MaterialPopupComponent__open_closure0: function MaterialPopupComponent__open_closure0(t0, t1) {
      this.$this = t0;
      this.initialData = t1;
    },
    MaterialPopupComponent__open__closure: function MaterialPopupComponent__open__closure() {
    },
    MaterialPopupComponent__onPopupOpened_closure: function MaterialPopupComponent__onPopupOpened_closure(t0) {
      this.$this = t0;
    },
    MaterialPopupComponent__close_closure: function MaterialPopupComponent__close_closure(t0) {
      this.$this = t0;
    },
    MaterialPopupComponent__close_closure0: function MaterialPopupComponent__close_closure0(t0) {
      this.$this = t0;
    },
    MaterialPopupComponent__startRepositionLoop_closure: function MaterialPopupComponent__startRepositionLoop_closure(t0) {
      this.$this = t0;
    },
    MaterialPopupRef: function MaterialPopupRef(t0) {
      this._popupComponent = t0;
    },
    _mergeStreams_closure: function _mergeStreams_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_1 = t0;
      _.streams = t1;
      _.streamSubscriptions = t2;
      _.cachedResults = t3;
      _.T = t4;
    },
    _mergeStreams__closure: function _mergeStreams__closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _._box_1 = t1;
      _.streamSubscriptions = t2;
      _.cachedResults = t3;
      _.T = t4;
    },
    _mergeStreams___closure: function _mergeStreams___closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_1 = t0;
      _.cachedResults = t1;
      _.n = t2;
      _.T = t3;
    },
    _mergeStreams_closure0: function _mergeStreams_closure0(t0) {
      this.streamSubscriptions = t0;
    },
    _MaterialPopupComponent_Object_PopupBase: function _MaterialPopupComponent_Object_PopupBase() {
    },
    _MaterialPopupComponent_Object_PopupBase_PopupEvents: function _MaterialPopupComponent_Object_PopupBase_PopupEvents() {
    },
    _MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement: function _MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement() {
    },
    LabeledList: function LabeledList() {
    },
    defaultItemRenderer: function(value) {
      return H.S(value);
    },
    _nullRenderer: function(value) {
      return H.throwExpression(P.StateError$("nullRenderer should never be called"));
    },
    HasRenderer: function HasRenderer() {
    },
    RendersValue: function RendersValue() {
    },
    ViewSkawaInfobarComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new G.ViewSkawaInfobarComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewSkawaInfobarComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaInfobarComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaInfobarComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-infobar");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewSkawaInfobarComponent0: function ViewSkawaInfobarComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._infobar_template$_el_2 = _._infobar_template$_el_0 = _._infobar_template$_expr_4 = _._infobar_template$_expr_3 = _._infobar_template$_expr_2 = _._infobar_template$_expr_1 = _._infobar_template$_expr_0 = _._MaterialIconComponent_1_5 = _._infobar_template$_compView_1 = _._infobar_template$_MaterialButtonComponent_0_6 = _._infobar_template$_AcxDarkTheme_0_5 = _._infobar_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    SchoolTableComponent: function SchoolTableComponent(t0) {
      this.selectableRowData = t0;
    },
    SchoolTableComponent_aggregate_closure: function SchoolTableComponent_aggregate_closure() {
    },
    SchoolTableComponent_sort_closure: function SchoolTableComponent_sort_closure() {
    },
    SchoolTableComponent_sort_closure0: function SchoolTableComponent_sort_closure0(t0) {
      this.column = t0;
    },
    SchoolRowData: function SchoolRowData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.category = t0;
      _.male = t1;
      _.female = t2;
      _.checked = t3;
      _.classes = t4;
    },
    SkawaDataTableColComponent$: function(columnRenderer, $T) {
      return new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, [$T]), columnRenderer, [$T]);
    },
    SkawaDataColRendererDirective$: function($T) {
      return new G.SkawaDataColRendererDirective([$T]);
    },
    SkawaDataTableColComponent: function SkawaDataTableColComponent(t0, t1, t2) {
      var _ = this;
      _._triggerController = t0;
      _.columnRenderer = t1;
      _.sortModel = _.footer = _.header = _.accessor = null;
      _.skipFooter = true;
      _.classString = null;
      _.$ti = t2;
    },
    SkawaDataTableColComponent_getClasses_closure: function SkawaDataTableColComponent_getClasses_closure(t0) {
      this.suffix = t0;
    },
    SkawaDataColRendererDirective: function SkawaDataColRendererDirective(t0) {
      this.factoryRenderer = this.SkawaDataColRendererDirective_factoryRenderer = null;
      this.$ti = t0;
    },
    getDefaultContainer: function($name, $parent, container) {
      if (container != null)
        return H.interceptedTypeCheck(container, "$isHtmlElement");
      container = $parent.querySelector("#default-acx-overlay-container");
      if (container == null) {
        container = document.createElement("div");
        container.id = "default-acx-overlay-container";
        container.classList.add("acx-overlay-container");
        $parent.appendChild(container);
      }
      container.setAttribute("container-name", $name);
      return H.interceptedTypeCheck(container, "$isHtmlElement");
    },
    getDefaultContainerName: function(containerName) {
      return H.stringTypeCheck(containerName == null ? "default" : containerName);
    },
    getOverlayContainerParent: function($document, containerParent) {
      return H.interceptedTypeCheck(containerParent == null ? $document.querySelector("body") : containerParent, "$isHtmlElement");
    },
    freezeInDevMode: function(list, $E) {
      H.assertSubtype(list, "$isList", [$E], "$asList");
      if (list == null)
        return C.List_empty2;
      return list;
    }
  },
  Y = {
    minimalApp$Injector: function($parent) {
      return new Y._Injector$minimalApp($parent);
    },
    _Injector$minimalApp: function _Injector$minimalApp(t0) {
      var _ = this;
      _._field5 = _._field3 = _._field2 = _._field1 = _._field0 = null;
      _.parent = t0;
    },
    NgClass: function NgClass(t0, t1) {
      var _ = this;
      _._ngEl = t0;
      _._keyValueDiffer = _._iterableDiffer = null;
      _._initialClasses = t1;
      _._rawClass = null;
    },
    NgClass__applyKeyValueChanges_closure: function NgClass__applyKeyValueChanges_closure(t0) {
      this.$this = t0;
    },
    NgClass__applyKeyValueChanges_closure0: function NgClass__applyKeyValueChanges_closure0(t0) {
      this.$this = t0;
    },
    NgClass__applyKeyValueChanges_closure1: function NgClass__applyKeyValueChanges_closure1(t0) {
      this.$this = t0;
    },
    NgClass__applyIterableChanges_closure: function NgClass__applyIterableChanges_closure(t0) {
      this.$this = t0;
    },
    NgClass__applyIterableChanges_closure0: function NgClass__applyIterableChanges_closure0(t0) {
      this.$this = t0;
    },
    NgClass__applyClasses_closure: function NgClass__applyClasses_closure(t0, t1) {
      this.$this = t0;
      this.isCleanup = t1;
    },
    ApplicationRef$_: function(_ngZone, _exceptionHandler, _injector) {
      var t1 = new Y.ApplicationRef(H.setRuntimeTypeInfo([], [{func: 1, ret: -1}]), H.setRuntimeTypeInfo([], [[D.ComponentRef, -1]]), _exceptionHandler, _injector, _ngZone, H.setRuntimeTypeInfo([], [S.ChangeDetectorRef]), H.setRuntimeTypeInfo([], [{func: 1, ret: -1, args: [[S.AppView, -1], W.Element]}]), H.setRuntimeTypeInfo([], [[S.AppView, -1]]), H.setRuntimeTypeInfo([], [W.Element]));
      t1.ApplicationRef$_$3(_ngZone, _exceptionHandler, _injector);
      return t1;
    },
    ApplicationRef: function ApplicationRef(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._disposeListeners = t0;
      _._rootComponents = t1;
      _._exceptionHandler = t2;
      _._injector = t3;
      _._application_ref$_ngZone = t4;
      _._lastCaughtTrace = _._lastCaughtException = _._lastGuardedView = null;
      _._runningTick = false;
      _._changeDetectors = t5;
      _._scheduledCallbacks = t6;
      _._scheduledViews = t7;
      _._scheduledElements = t8;
    },
    ApplicationRef$__closure: function ApplicationRef$__closure(t0) {
      this.$this = t0;
    },
    ApplicationRef$__closure0: function ApplicationRef$__closure0(t0) {
      this.$this = t0;
    },
    ApplicationRef_bootstrap_closure: function ApplicationRef_bootstrap_closure(t0, t1, t2) {
      this.$this = t0;
      this.componentFactory = t1;
      this.T = t2;
    },
    ApplicationRef__loadedRootComponent_closure: function ApplicationRef__loadedRootComponent_closure(t0, t1, t2) {
      this.$this = t0;
      this.component = t1;
      this.node = t2;
    },
    NgZone$: function(enableLongStackTrace) {
      var _null = null,
        t1 = [-1];
      t1 = new Y.NgZone(new P.Object(), new P._SyncBroadcastStreamController(_null, _null, t1), new P._SyncBroadcastStreamController(_null, _null, t1), new P._SyncBroadcastStreamController(_null, _null, t1), new P._SyncBroadcastStreamController(_null, _null, [Y.NgZoneError]), H.setRuntimeTypeInfo([], [Y._WrappedTimer]));
      t1.NgZone$1$enableLongStackTrace(false);
      return t1;
    },
    NgZone: function NgZone(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._thisZoneKey = t0;
      _._onTurnStart = t1;
      _._onMicrotaskEmpty = t2;
      _._onTurnDone = t3;
      _._ng_zone$_onError = t4;
      _._innerZone = _._outerZone = null;
      _._hasPendingMacrotasks = _._hasPendingMicrotasks = false;
      _._isStable = true;
      _._pendingMicrotasks = _._nesting = 0;
      _._pendingTimers = t5;
    },
    NgZone__scheduleMicrotask_closure: function NgZone__scheduleMicrotask_closure(t0, t1) {
      this.$this = t0;
      this.fn = t1;
    },
    NgZone__run_closure: function NgZone__run_closure(t0, t1, t2) {
      this.$this = t0;
      this.fn = t1;
      this.R = t2;
    },
    NgZone__runUnary_closure: function NgZone__runUnary_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.fn = t1;
      _.T = t2;
      _.R = t3;
    },
    NgZone__runBinary_closure: function NgZone__runBinary_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.fn = t1;
      _.T1 = t2;
      _.T2 = t3;
      _.R = t4;
    },
    NgZone__createTimer_closure: function NgZone__createTimer_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    NgZone__createTimer_closure0: function NgZone__createTimer_closure0(t0, t1) {
      this.fn = t0;
      this.onDone = t1;
    },
    NgZone__checkStable_closure: function NgZone__checkStable_closure(t0) {
      this.$this = t0;
    },
    _WrappedTimer: function _WrappedTimer(t0, t1) {
      this._timer = t0;
      this._ng_zone$_onCancel = t1;
    },
    NgZoneError: function NgZoneError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    MaterialIconComponent: function MaterialIconComponent(t0) {
      this._material_icon$_icon = null;
      this._material_icon$_element = t0;
    },
    ViewMaterialDropdownSelectComponent0: function ViewMaterialDropdownSelectComponent0(t0, t1, t2) {
      var _ = this;
      _.rootEl = _._material_dropdown_select_template$_el_2 = _._expr_21 = _._expr_20 = _._expr_19 = _._expr_18 = _._expr_17 = _._expr_16 = _._material_dropdown_select_template$_expr_14 = _._material_dropdown_select_template$_expr_12 = _._material_dropdown_select_template$_expr_11 = _._material_dropdown_select_template$_expr_9 = _._material_dropdown_select_template$_expr_8 = _._material_dropdown_select_template$_expr_7 = _._material_dropdown_select_template$_expr_5 = _._material_dropdown_select_template$_expr_4 = _._material_dropdown_select_template$_expr_3 = _._material_dropdown_select_template$_expr_2 = _._material_dropdown_select_template$_expr_1 = _._material_dropdown_select_template$_expr_0 = _._DeferredContentDirective_4_9 = _._material_dropdown_select_template$_appEl_4 = _.__PopupHierarchy_2_12 = _.__PopupRef_2_10 = _._MaterialPopupComponent_2_8 = _._material_dropdown_select_template$_appEl_2 = _._material_dropdown_select_template$_compView_2 = _._PopupSourceDirective_0_7 = _._DropdownButtonComponent_0_5 = _._material_dropdown_select_template$_compView_0 = null;
      _.componentStyles = _.ctx = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    ViewMaterialDropdownSelectComponent0_build_closure: function ViewMaterialDropdownSelectComponent0_build_closure(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent1: function _ViewMaterialDropdownSelectComponent1(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_dropdown_select_template$_el_0 = _._material_dropdown_select_template$_expr_4 = _._material_dropdown_select_template$_expr_2 = _._material_dropdown_select_template$_expr_1 = _._material_dropdown_select_template$_NgIf_2_9 = _._material_dropdown_select_template$_appEl_2 = _._MaterialListComponent_0_6 = _._AutoFocusDirective_0_5 = _._material_dropdown_select_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialDropdownSelectComponent1_build_closure: function _ViewMaterialDropdownSelectComponent1_build_closure(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent2: function _ViewMaterialDropdownSelectComponent2(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_dropdown_select_template$_expr_1 = _._NgFor_2_9 = _._material_dropdown_select_template$_appEl_2 = _._material_dropdown_select_template$_NgIf_1_9 = _._material_dropdown_select_template$_appEl_1 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialDropdownSelectComponent2_build_closure: function _ViewMaterialDropdownSelectComponent2_build_closure(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent2_build_closure0: function _ViewMaterialDropdownSelectComponent2_build_closure0(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent3: function _ViewMaterialDropdownSelectComponent3(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_dropdown_select_template$_el_0 = _._material_dropdown_select_template$_expr_5 = _._material_dropdown_select_template$_expr_4 = _._material_dropdown_select_template$_expr_3 = _._material_dropdown_select_template$_expr_1 = _._material_dropdown_select_template$_expr_0 = _._MaterialSelectDropdownItemComponent_0_6 = _._ActiveItemDirective_0_5 = _._material_dropdown_select_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialDropdownSelectComponent4: function _ViewMaterialDropdownSelectComponent4(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_dropdown_select_template$_el_0 = _._material_dropdown_select_template$_expr_0 = _._material_dropdown_select_template$_NgIf_1_9 = _._material_dropdown_select_template$_appEl_1 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialDropdownSelectComponent4_build_closure: function _ViewMaterialDropdownSelectComponent4_build_closure(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent5: function _ViewMaterialDropdownSelectComponent5(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._NgIf_3_9 = _._appEl_3 = _._material_dropdown_select_template$_NgIf_2_9 = _._material_dropdown_select_template$_appEl_2 = _._material_dropdown_select_template$_NgIf_1_9 = _._material_dropdown_select_template$_appEl_1 = _._NgIf_0_9 = _._appEl_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialDropdownSelectComponent5_build_closure: function _ViewMaterialDropdownSelectComponent5_build_closure(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent5_build_closure0: function _ViewMaterialDropdownSelectComponent5_build_closure0(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent5_build_closure1: function _ViewMaterialDropdownSelectComponent5_build_closure1(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent5_build_closure2: function _ViewMaterialDropdownSelectComponent5_build_closure2(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent6: function _ViewMaterialDropdownSelectComponent6(t0, t1, t2, t3) {
      var _ = this;
      _._material_dropdown_select_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t1;
      _.viewData = t2;
      _.$ti = t3;
    },
    _ViewMaterialDropdownSelectComponent7: function _ViewMaterialDropdownSelectComponent7(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_dropdown_select_template$_expr_1 = _._material_dropdown_select_template$_expr_0 = _._material_dropdown_select_template$_DynamicComponent_0_8 = _._appEl_0 = _._material_dropdown_select_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialDropdownSelectComponent8: function _ViewMaterialDropdownSelectComponent8(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_dropdown_select_template$_expr_0 = _._NgFor_0_9 = _._appEl_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialDropdownSelectComponent8_build_closure: function _ViewMaterialDropdownSelectComponent8_build_closure(t0) {
      this.$this = t0;
    },
    _ViewMaterialDropdownSelectComponent9: function _ViewMaterialDropdownSelectComponent9(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_dropdown_select_template$_el_0 = _._material_dropdown_select_template$_expr_10 = _._material_dropdown_select_template$_expr_9 = _._material_dropdown_select_template$_expr_8 = _._material_dropdown_select_template$_expr_7 = _._material_dropdown_select_template$_expr_6 = _._material_dropdown_select_template$_expr_5 = _._material_dropdown_select_template$_expr_4 = _._material_dropdown_select_template$_expr_3 = _._material_dropdown_select_template$_expr_1 = _._material_dropdown_select_template$_expr_0 = _._MaterialSelectDropdownItemComponent_0_6 = _._ActiveItemDirective_0_5 = _._material_dropdown_select_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialDropdownSelectComponent10: function _ViewMaterialDropdownSelectComponent10(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_dropdown_select_template$_expr_2 = _._MaterialSelectDropdownItemComponent_0_5 = _._material_dropdown_select_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    ObservableMap: function ObservableMap(t0, t1, t2, t3) {
      var _ = this;
      _._observable_map$_map = t0;
      _._delegate = t1;
      _._isNotGeneric = t2;
      _.$ti = t3;
    },
    ObservableMap_addAll_closure: function ObservableMap_addAll_closure(t0) {
      this.$this = t0;
    },
    ChangeRecord: function ChangeRecord() {
    },
    ChangeRecords: function ChangeRecords(t0, t1, t2, t3) {
      var _ = this;
      _._isAny = t0;
      _._records$_delegate = t1;
      _._base = t2;
      _.$ti = t3;
    },
    MapChangeRecord: function MapChangeRecord(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.key = t0;
      _.oldValue = t1;
      _.newValue = t2;
      _.isInsert = t3;
      _.isRemove = t4;
      _.$ti = t5;
    },
    PropertyChangeRecord: function PropertyChangeRecord(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.oldValue = t1;
      _.newValue = t2;
      _.$ti = t3;
    },
    LanguageDirectionDirective: function LanguageDirectionDirective(t0) {
      this._htmlElement = t0;
      this.textDirection = "ltr";
      this.textAlign = null;
    },
    ViewSkawaNavItemComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new Y.ViewSkawaNavItemComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewSkawaNavItemComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaNavItemComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaNavItemComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-nav-item");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewSkawaNavItemComponent0: function ViewSkawaNavItemComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._expr_9 = _._expr_8 = _._expr_7 = _._expr_6 = _._expr_5 = _._expr_4 = _._expr_3 = _._map_0 = _._nav_item_template$_expr_1 = _._nav_item_template$_expr_0 = _._MaterialRippleComponent_1_5 = _._nav_item_template$_compView_1 = _._NgClass_0_6 = _._SkawaSidebarItemComponent_0_5 = _._nav_item_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewSkawaNavItemComponent0_build_closure: function ViewSkawaNavItemComponent0_build_closure() {
    },
    ViewSidebarItemDemoComponent0: function ViewSidebarItemDemoComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._MaterialButtonComponent_1_6 = _._AcxDarkTheme_1_5 = _._sidebar_item_demo_template$_compView_1 = _._sidebar_item_demo_template$_DemoHeaderComponent_0_5 = _._sidebar_item_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewSkawaDataTableColComponent0$: function(parentView, parentIndex, $T) {
      var t2,
        t1 = new Y.ViewSkawaDataTableColComponent0(parentView, S.AppViewData_AppViewData(3, C.ViewType_1, parentIndex), [$T]),
        styles = $.ViewSkawaDataTableColComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewSkawaDataTableColComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-data-table-col");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewSkawaDataTableColComponent0: function ViewSkawaDataTableColComponent0(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    }
  },
  R = {NgFor: function NgFor(t0, t1) {
      var _ = this;
      _._ng_for$_viewContainer = t0;
      _._ngForTrackBy = _._ngForOf = _._differ = null;
      _._ng_for$_templateRef = t1;
    }, NgFor__applyChanges_closure: function NgFor__applyChanges_closure(t0, t1) {
      this.$this = t0;
      this.insertTuples = t1;
    }, NgFor__applyChanges_closure0: function NgFor__applyChanges_closure0(t0) {
      this.$this = t0;
    }, _RecordViewTuple: function _RecordViewTuple(t0, t1) {
      this.view = t0;
      this.record = t1;
    },
    _trackByIdentity: function(index, item) {
      H.intTypeCheck(index);
      return item;
    },
    DefaultIterableDiffer$: function(trackByFn) {
      return new R.DefaultIterableDiffer(trackByFn == null ? R.default_iterable_differ___trackByIdentity$closure() : trackByFn);
    },
    _getPreviousIndex: function(item, addRemoveOffset, moveOffsets) {
      var previousIndex, moveOffset;
      H.assertSubtype(moveOffsets, "$isList", [P.int], "$asList");
      previousIndex = item.previousIndex;
      if (previousIndex == null)
        return previousIndex;
      if (moveOffsets != null && previousIndex < moveOffsets.length) {
        if (previousIndex !== (previousIndex | 0) || previousIndex >= moveOffsets.length)
          return H.ioore(moveOffsets, previousIndex);
        moveOffset = moveOffsets[previousIndex];
      } else
        moveOffset = 0;
      if (typeof moveOffset !== "number")
        return H.iae(moveOffset);
      return previousIndex + addRemoveOffset + moveOffset;
    },
    DefaultIterableDiffer: function DefaultIterableDiffer(t0) {
      var _ = this;
      _._trackByFn = t0;
      _._identityChangesTail = _._identityChangesHead = _._removalsTail = _._default_iterable_differ$_removalsHead = _._movesTail = _._movesHead = _._default_iterable_differ$_additionsTail = _._default_iterable_differ$_additionsHead = _._itTail = _._itHead = _._previousItHead = _._unlinkedRecords = _._linkedRecords = _._collection = _._default_iterable_differ$_length = null;
    },
    DefaultIterableDiffer_check_closure: function DefaultIterableDiffer_check_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    CollectionChangeRecord: function CollectionChangeRecord(t0, t1) {
      var _ = this;
      _.item = t0;
      _.trackById = t1;
      _._nextIdentityChange = _._nextMoved = _._default_iterable_differ$_nextAdded = _._nextRemoved = _._prevRemoved = _._nextDup = _._prevDup = _._default_iterable_differ$_next = _._default_iterable_differ$_prev = _._default_iterable_differ$_nextPrevious = _.previousIndex = _.currentIndex = null;
    },
    _DuplicateItemRecordList: function _DuplicateItemRecordList() {
      this._tail = this._head = null;
    },
    _DuplicateMap: function _DuplicateMap(t0) {
      this._default_iterable_differ$_map = t0;
    },
    ViewType: function ViewType(t0) {
      this._name = t0;
    },
    EmptyInjector: function EmptyInjector(t0) {
      this.parent = t0;
    },
    DomSanitizationServiceImpl: function DomSanitizationServiceImpl() {
    },
    ButtonDirectiveNgCd: function ButtonDirectiveNgCd(t0) {
      var _ = this;
      _.instance = t0;
      _._button_decorator_template$_expr_3 = _._button_decorator_template$_expr_2 = _._button_decorator_template$_expr_1 = _._button_decorator_template$_expr_0 = null;
    },
    KeyboardHandlerMixin: function KeyboardHandlerMixin() {
    },
    _stringFormatSuggestion: function(value) {
      H.stringTypeCheck(value);
      value.toString;
      return H.stringReplaceAllUnchecked(value, " ", "").toLowerCase();
    },
    StringSelectionOptions: function StringSelectionOptions(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._string_selection_options$_optionGroups = null;
      _._toFilterableString = t0;
      _._suggestionFilter = null;
      _._sanitizeString = t1;
      _._shouldSort = t2;
      _._shouldFilterEmpty = t3;
      _._selection_options$_controller = t4;
      _._optionGroups = _._flattenedList = null;
      _.$ti = t5;
    },
    OverlayStyleConfig: function OverlayStyleConfig(t0, t1) {
      this._styleHost = t0;
      this._stylesRegistered = false;
      this._document = t1;
    },
    _RateLimitSink: function _RateLimitSink(t0, t1, t2) {
      var _ = this;
      _._outputSink = t0;
      _._rate_limit$_duration = t1;
      _._rateLimitStrategy = t2;
      _._addEvent = null;
    },
    RateLimitTransformer: function RateLimitTransformer(t0, t1, t2) {
      this._rate_limit$_duration = t0;
      this._rateLimitStrategy = t1;
      this.$ti = t2;
    },
    RateLimitTransformer_bind_closure: function RateLimitTransformer_bind_closure(t0) {
      this.$this = t0;
    },
    Disposable: function Disposable() {
    },
    _NoopDisposable: function _NoopDisposable() {
    },
    Disposer: function Disposer(t0) {
      var _ = this;
      _._disposeDisposables = _._disposeSinks = _._disposeSubs = _._disposeFunctions = null;
      _._oneShot = t0;
      _._disposeCalled = false;
    },
    SequentialIdGenerator$fromUUID: function() {
      return new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid());
    },
    SequentialIdGenerator__createUuid: function() {
      var t1, t2, chars,
        bytes = P.List_List$generate(16, new R.SequentialIdGenerator__createUuid_closure(), true, P.int);
      if (6 >= bytes.length)
        return H.ioore(bytes, 6);
      C.JSArray_methods.$indexSet(bytes, 6, (J.$and$bn(bytes[6], 15) | 64) >>> 0);
      if (8 >= bytes.length)
        return H.ioore(bytes, 8);
      C.JSArray_methods.$indexSet(bytes, 8, (J.$and$bn(bytes[8], 63) | 128) >>> 0);
      t1 = P.String;
      t2 = H.getTypeArgumentByIndex(bytes, 0);
      chars = new H.MappedListIterable(bytes, H.functionTypeCheck(new R.SequentialIdGenerator__createUuid_closure0(), {func: 1, ret: t1, args: [t2]}), [t2, t1]).join$0(0).toUpperCase();
      return C.JSString_methods.substring$2(chars, 0, 8) + "-" + C.JSString_methods.substring$2(chars, 8, 12) + "-" + C.JSString_methods.substring$2(chars, 12, 16) + "-" + C.JSString_methods.substring$2(chars, 16, 20) + "-" + C.JSString_methods.substring$2(chars, 20, 32);
    },
    IdGenerator: function IdGenerator() {
    },
    SequentialIdGenerator: function SequentialIdGenerator(t0) {
      this._prefix = t0;
      this._seq = 0;
    },
    SequentialIdGenerator__createUuid_closure: function SequentialIdGenerator__createUuid_closure() {
    },
    SequentialIdGenerator__createUuid_closure0: function SequentialIdGenerator__createUuid_closure0() {
    },
    throttleGuaranteeLast: function(delegate, interval, $T) {
      return R._throttle(H.functionTypeCheck(delegate, {func: 1, args: [$T]}), interval, true, $T);
    },
    _throttle: function(delegate, interval, guaranteeLast, $T) {
      var t1 = {};
      H.functionTypeCheck(delegate, {func: 1, args: [$T]});
      t1.hasLastArg = t1.onCooldown = false;
      t1.self = t1.lastArg = null;
      return t1.self = new R._throttle_closure(t1, interval, delegate, guaranteeLast, $T);
    },
    _throttle_closure: function _throttle_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.interval = t1;
      _.delegate = t2;
      _.guaranteeLast = t3;
      _.T = t4;
    },
    _throttle__closure: function _throttle__closure(t0, t1) {
      this._box_0 = t0;
      this.T = t1;
    },
    InlineParser$: function(source, $document) {
      var t1 = new R.InlineParser(source, $document, H.setRuntimeTypeInfo([], [R.InlineSyntax]), H.setRuntimeTypeInfo([], [R.TagState]));
      t1.InlineParser$2(source, $document);
      return t1;
    },
    TextSyntax$: function(pattern, sub) {
      return new R.TextSyntax(sub, P.RegExp_RegExp(pattern, true, true));
    },
    _DelimiterRun_tryParse: function(parser, runStart, runEnd) {
      var leftFlanking, rightFlanking,
        _s32_ = "!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~",
        _s4_ = " \t\r\n",
        preceding = runStart === 0 ? "\n" : J.substring$2$s(parser.source, runStart - 1, runStart),
        precededByPunctuation = C.JSString_methods.contains$1(_s32_, preceding),
        t1 = parser.source,
        following = runEnd === t1.length - 1 ? "\n" : J.substring$2$s(t1, runEnd + 1, runEnd + 2),
        followedByPunctuation = C.JSString_methods.contains$1(_s32_, following),
        t2 = C.JSString_methods.contains$1(_s4_, following);
      if (t2)
        leftFlanking = false;
      else
        leftFlanking = !followedByPunctuation || C.JSString_methods.contains$1(_s4_, preceding) || precededByPunctuation;
      if (C.JSString_methods.contains$1(_s4_, preceding))
        rightFlanking = false;
      else
        rightFlanking = !precededByPunctuation || t2 || followedByPunctuation;
      if (!leftFlanking && !rightFlanking)
        return;
      return new R._DelimiterRun(J.codeUnitAt$1$s(t1, runStart), runEnd - runStart + 1, leftFlanking, rightFlanking, precededByPunctuation, followedByPunctuation);
    },
    TagSyntax$: function(pattern, end, requiresDelimiterRun) {
      return new R.TagSyntax(P.RegExp_RegExp(end != null ? end : pattern, true, true), requiresDelimiterRun, P.RegExp_RegExp(pattern, true, true));
    },
    LinkSyntax$: function(linkResolver, pattern) {
      return new R.LinkSyntax(new R.LinkSyntax_closure(), P.RegExp_RegExp("\\]", true, true), false, P.RegExp_RegExp(pattern, true, true));
    },
    ImageSyntax$: function(linkResolver) {
      return new R.ImageSyntax(new R.LinkSyntax_closure(), P.RegExp_RegExp("\\]", true, true), false, P.RegExp_RegExp("!\\[", true, true));
    },
    InlineParser: function InlineParser(t0, t1, t2, t3) {
      var _ = this;
      _.source = t0;
      _.document = t1;
      _.syntaxes = t2;
      _.start = _.pos = 0;
      _._stack = t3;
    },
    InlineParser_closure: function InlineParser_closure(t0) {
      this.$this = t0;
    },
    InlineParser_parse_closure: function InlineParser_parse_closure(t0) {
      this.$this = t0;
    },
    InlineParser_parse_closure0: function InlineParser_parse_closure0(t0) {
      this.$this = t0;
    },
    InlineSyntax: function InlineSyntax() {
    },
    LineBreakSyntax: function LineBreakSyntax(t0) {
      this.pattern = t0;
    },
    TextSyntax: function TextSyntax(t0, t1) {
      this.substitute = t0;
      this.pattern = t1;
    },
    EscapeSyntax: function EscapeSyntax(t0) {
      this.pattern = t0;
    },
    InlineHtmlSyntax: function InlineHtmlSyntax(t0, t1) {
      this.substitute = t0;
      this.pattern = t1;
    },
    EmailAutolinkSyntax: function EmailAutolinkSyntax(t0) {
      this.pattern = t0;
    },
    AutolinkSyntax: function AutolinkSyntax(t0) {
      this.pattern = t0;
    },
    _DelimiterRun: function _DelimiterRun(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.char = t0;
      _.length = t1;
      _.isLeftFlanking = t2;
      _.isRightFlanking = t3;
      _.isPrecededByPunctuation = t4;
      _.isFollowedByPunctuation = t5;
    },
    TagSyntax: function TagSyntax(t0, t1, t2) {
      this.endPattern = t0;
      this.requiresDelimiterRun = t1;
      this.pattern = t2;
    },
    LinkSyntax: function LinkSyntax(t0, t1, t2, t3) {
      var _ = this;
      _.linkResolver = t0;
      _._pendingStatesAreActive = true;
      _.endPattern = t1;
      _.requiresDelimiterRun = t2;
      _.pattern = t3;
    },
    LinkSyntax_closure: function LinkSyntax_closure() {
    },
    ImageSyntax: function ImageSyntax(t0, t1, t2, t3) {
      var _ = this;
      _.linkResolver = t0;
      _._pendingStatesAreActive = true;
      _.endPattern = t1;
      _.requiresDelimiterRun = t2;
      _.pattern = t3;
    },
    CodeSyntax: function CodeSyntax(t0) {
      this.pattern = t0;
    },
    TagState: function TagState(t0, t1, t2, t3, t4) {
      var _ = this;
      _.startPos = t0;
      _.endPos = t1;
      _.syntax = t2;
      _.children = t3;
      _.openingDelimiterRun = t4;
    },
    TagState_textContent_closure: function TagState_textContent_closure() {
    },
    InlineLink: function InlineLink(t0, t1) {
      this.destination = t0;
      this.title = t1;
    },
    ExtendedMaterialIconComponent: function ExtendedMaterialIconComponent() {
      var _ = this;
      _.icon = null;
      _.spin = _.flipHorizontal = _.flipVertical = false;
      _.rotate = null;
    }
  },
  K = {NgIf: function NgIf(t0, t1) {
      this._templateRef = t0;
      this._viewContainer = t1;
      this._prevCondition = false;
    },
    InvalidPipeArgumentException$: function(type, value) {
      return new K.InvalidPipeArgumentException("Invalid argument '" + H.S(value) + "' for pipe '" + type.toString$0(0) + "'", null, null);
    },
    InvalidPipeArgumentException: function InvalidPipeArgumentException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    TransitionalAppHost: function TransitionalAppHost(t0) {
      this._app_host$_hostInjector = t0;
    },
    BrowserGetTestability: function BrowserGetTestability() {
    },
    BrowserGetTestability_addToWindow_closure: function BrowserGetTestability_addToWindow_closure() {
    },
    BrowserGetTestability_addToWindow_closure0: function BrowserGetTestability_addToWindow_closure0() {
    },
    BrowserGetTestability_addToWindow_closure1: function BrowserGetTestability_addToWindow_closure1(t0) {
      this.getAllAngularTestabilities = t0;
    },
    BrowserGetTestability_addToWindow__closure: function BrowserGetTestability_addToWindow__closure(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    BrowserGetTestability__createRegistry_closure: function BrowserGetTestability__createRegistry_closure(t0) {
      this.registry = t0;
    },
    BrowserGetTestability__createRegistry_closure0: function BrowserGetTestability__createRegistry_closure0(t0) {
      this.registry = t0;
    },
    BrowserGetTestability__createRegistry__closure: function BrowserGetTestability__createRegistry__closure() {
    },
    DeferredContentDirective$: function(_viewContainer, _template, $parent) {
      var t1 = new K.DeferredContentDirective(new R.Disposer(true), document.createElement("div"), _viewContainer, _template);
      t1.DeferredContentDirective$3(_viewContainer, _template, $parent);
      return t1;
    },
    DeferredContentDirective: function DeferredContentDirective(t0, t1, t2, t3) {
      var _ = this;
      _._deferred_content$_disposer = t0;
      _._placeholder = t1;
      _._deferred_content$_viewContainer = t2;
      _._viewRef = null;
      _._template = t3;
      _._deferred_content$_visible = _._shown = _.preserveDimensions = false;
    },
    DeferredContentDirective_closure: function DeferredContentDirective_closure(t0) {
      this.$this = t0;
    },
    Alignment: function Alignment(t0) {
      this._displayName = t0;
    },
    _CustomAlignment: function _CustomAlignment() {
    },
    BeforeCustomAlignment: function BeforeCustomAlignment(t0) {
      this._displayName = t0;
    },
    AfterCustomAlignment: function AfterCustomAlignment(t0) {
      this._displayName = t0;
    },
    RelativePosition: function RelativePosition(t0, t1, t2) {
      this.originX = t0;
      this.originY = t1;
      this.animationOrigin = t2;
    },
    DomRuler: function DomRuler() {
    },
    DomRulerImpl: function DomRulerImpl(t0, t1, t2) {
      this._dom_ruler$_document = t0;
      this._dom_ruler$_domService = t1;
      this._addedCssClasses = t2;
    },
    DomRulerImpl_removeCssClassesSync_closure: function DomRulerImpl_removeCssClassesSync_closure() {
    },
    DomRulerImpl_addCssClassesSync_closure: function DomRulerImpl_addCssClassesSync_closure() {
    },
    SelectionInputAdapter: function SelectionInputAdapter() {
    },
    OverlayDomRenderService: function OverlayDomRenderService(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.containerElement = t0;
      _._containerName = t1;
      _._overlay_dom_render_service$_domRuler = t2;
      _._domService = t3;
      _._imperativeViewUtils = t4;
      _._overlay_dom_render_service$_useDomSynchronously = t5;
      _._useRepositionLoop = t6;
      _._zIndexer = t7;
      _._lastZIndex = null;
      _._uniqueId = 0;
    },
    OverlayDomRenderService_applyState_closure: function OverlayDomRenderService_applyState_closure(t0, t1, t2) {
      this.$this = t0;
      this.state = t1;
      this.pane = t2;
    },
    OverlayDomRenderService_measureContainer_closure: function OverlayDomRenderService_measureContainer_closure(t0) {
      this.$this = t0;
    },
    DomPopupSourceFactory: function DomPopupSourceFactory(t0) {
      this._domRuler = t0;
    },
    DomPopupSource: function DomPopupSource(t0, t1, t2) {
      var _ = this;
      _._asyncMeasureSize = t0;
      _.sourceElement = t1;
      _._initAriaAttributes = t2;
      _._dom_popup_source$_id = _._alignOriginY = _._alignOriginX = null;
    },
    BlockParser$: function(lines, $document) {
      var t1 = [K.BlockSyntax],
        t2 = H.setRuntimeTypeInfo([], t1);
      t1 = H.setRuntimeTypeInfo([C.C_EmptyBlockSyntax, C.C_BlockTagBlockHtmlSyntax, new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<pre(?:\\s|>|$)", true, false), P.RegExp_RegExp("</pre>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<script(?:\\s|>|$)", true, false), P.RegExp_RegExp("</script>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<style(?:\\s|>|$)", true, false), P.RegExp_RegExp("</style>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<!--", true, false), P.RegExp_RegExp("-->", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<\\?", true, false), P.RegExp_RegExp("\\?>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<![A-Z]", true, false), P.RegExp_RegExp(">", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<!\\[CDATA\\[", true, false), P.RegExp_RegExp("\\]\\]>", true, false)), C.C_OtherTagBlockHtmlSyntax, C.C_SetextHeaderSyntax, C.C_HeaderSyntax, C.C_CodeBlockSyntax, C.C_BlockquoteSyntax, C.C_HorizontalRuleSyntax, C.C_UnorderedListSyntax, C.C_OrderedListSyntax, C.C_ParagraphSyntax], t1);
      C.JSArray_methods.addAll$1(t2, $document._blockSyntaxes);
      C.JSArray_methods.addAll$1(t2, t1);
      return new K.BlockParser(lines, $document, t2, t1);
    },
    BlockSyntax_isAtBlockEnd: function(parser) {
      if (parser._pos >= parser.lines.length)
        return true;
      return C.JSArray_methods.any$1(parser.blockSyntaxes, new K.BlockSyntax_isAtBlockEnd_closure(parser));
    },
    ListSyntax__expandedTabLength: function(input) {
      var t1, $length;
      for (input.toString, t1 = new H.CodeUnits(input), t1 = new H.ListIterator(t1, t1.get$length(t1), [P.int]), $length = 0; t1.moveNext$0();)
        $length += t1.__internal$_current === 9 ? 4 - C.JSInt_methods.$mod($length, 4) : 1;
      return $length;
    },
    BlockParser: function BlockParser(t0, t1, t2, t3) {
      var _ = this;
      _.lines = t0;
      _.document = t1;
      _.blockSyntaxes = t2;
      _._pos = 0;
      _.encounteredBlankLine = false;
      _.standardBlockSyntaxes = t3;
    },
    BlockSyntax: function BlockSyntax() {
    },
    BlockSyntax_isAtBlockEnd_closure: function BlockSyntax_isAtBlockEnd_closure(t0) {
      this.parser = t0;
    },
    EmptyBlockSyntax: function EmptyBlockSyntax() {
    },
    SetextHeaderSyntax: function SetextHeaderSyntax() {
    },
    HeaderSyntax: function HeaderSyntax() {
    },
    BlockquoteSyntax: function BlockquoteSyntax() {
    },
    BlockquoteSyntax_parseChildLines_closure: function BlockquoteSyntax_parseChildLines_closure(t0) {
      this.parser = t0;
    },
    CodeBlockSyntax: function CodeBlockSyntax() {
    },
    FencedCodeBlockSyntax: function FencedCodeBlockSyntax() {
    },
    HorizontalRuleSyntax: function HorizontalRuleSyntax() {
    },
    BlockHtmlSyntax: function BlockHtmlSyntax() {
    },
    BlockTagBlockHtmlSyntax: function BlockTagBlockHtmlSyntax() {
    },
    OtherTagBlockHtmlSyntax: function OtherTagBlockHtmlSyntax() {
    },
    LongBlockHtmlSyntax: function LongBlockHtmlSyntax(t0, t1) {
      this.pattern = t0;
      this._endPattern = t1;
    },
    ListItem: function ListItem(t0) {
      this.lines = t0;
    },
    ListSyntax: function ListSyntax() {
    },
    ListSyntax_parse_endItem: function ListSyntax_parse_endItem(t0, t1) {
      this._box_0 = t0;
      this.items = t1;
    },
    ListSyntax_parse_tryMatch: function ListSyntax_parse_tryMatch(t0, t1) {
      this._box_0 = t0;
      this.parser = t1;
    },
    UnorderedListSyntax: function UnorderedListSyntax() {
    },
    OrderedListSyntax: function OrderedListSyntax() {
    },
    ParagraphSyntax: function ParagraphSyntax() {
    },
    ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition: function ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition(t0) {
      this.lines = t0;
    },
    ParagraphSyntax__parseReflinkDefinition_closure: function ParagraphSyntax__parseReflinkDefinition_closure(t0, t1) {
      this._box_0 = t0;
      this.destination = t1;
    },
    ViewSkawaSidebarItemComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new K.ViewSkawaSidebarItemComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewSkawaSidebarItemComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaSidebarItemComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaSidebarItemComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-sidebar-item");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    viewFactory_SkawaSidebarItemComponent1: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new K._ViewSkawaSidebarItemComponent1(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    ViewSkawaSidebarItemComponent0: function ViewSkawaSidebarItemComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._sidebar_item_template$_el_1 = _._sidebar_item_template$_expr_2 = _._sidebar_item_template$_expr_1 = _._sidebar_item_template$_NgIf_0_9 = _._sidebar_item_template$_appEl_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewSkawaSidebarItemComponent1: function _ViewSkawaSidebarItemComponent1(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._sidebar_item_template$_expr_0 = _._sidebar_item_template$_MaterialIconComponent_0_5 = _._sidebar_item_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    CkeditorDemoComponent: function CkeditorDemoComponent(t0) {
      this.plugins = t0;
    },
    CarTableComponent: function CarTableComponent(t0) {
      this.rowData = t0;
    },
    CarRowData: function CarRowData(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.opinion = t1;
      _.checked = t2;
      _.classes = t3;
    }
  },
  S = {ChangeDetectorRef: function ChangeDetectorRef() {
    }, OpaqueToken: function OpaqueToken(t0, t1) {
      this._uniqueName = t0;
      this.$ti = t1;
    },
    AppViewData_AppViewData: function(cdMode, type, parentIndex) {
      return new S.AppViewData(type, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentIndex, cdMode);
    },
    AppViewData: function AppViewData(t0, t1, t2, t3) {
      var _ = this;
      _.type = t0;
      _.locals = t1;
      _.destroyed = false;
      _.rootFragment = _._onDestroyCallbacks = _.subscriptions = _._hostInjector = _.projectedNodes = _._viewContainerElement = null;
      _.parentIndex = t2;
      _._cdMode = t3;
      _._skipChangeDetection = false;
      _._cdState = 0;
    },
    AppView: function AppView() {
    },
    AppView_eventHandler0_closure: function AppView_eventHandler0_closure(t0, t1, t2) {
      this.$this = t0;
      this.handler = t1;
      this.E = t2;
    },
    AppView_eventHandler1_closure: function AppView_eventHandler1_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.handler = t1;
      _.E = t2;
      _.F = t3;
    },
    AppView_eventHandler1__closure: function AppView_eventHandler1__closure(t0, t1, t2) {
      this.handler = t0;
      this.event = t1;
      this.F = t2;
    },
    MaterialButtonBase: function MaterialButtonBase() {
    },
    MaterialButtonBase__setFocused_closure: function MaterialButtonBase__setFocused_closure(t0, t1) {
      this.$this = t0;
      this.newValue = t1;
    },
    ViewMaterialProgressComponent0: function ViewMaterialProgressComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_progress_template$_el_2 = _._material_progress_template$_el_1 = _._material_progress_template$_el_0 = _._material_progress_template$_expr_8 = _._material_progress_template$_expr_7 = _._material_progress_template$_expr_6 = _._material_progress_template$_expr_5 = _._material_progress_template$_expr_4 = _._material_progress_template$_expr_3 = _._material_progress_template$_expr_2 = _._material_progress_template$_expr_1 = _._material_progress_template$_expr_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    Box: function Box() {
    },
    Document0: function Document0(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.linkReferences = t0;
      _.extensionSet = t1;
      _.linkResolver = t2;
      _.imageLinkResolver = t3;
      _._blockSyntaxes = t4;
      _._inlineSyntaxes = t5;
    },
    LinkReference: function LinkReference(t0, t1) {
      this.destination = t0;
      this.title = t1;
    },
    ViewDemoHeaderComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new S.ViewDemoHeaderComponent0(N.TextBinding$(), parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewDemoHeaderComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewDemoHeaderComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$DemoHeaderComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("demo-header");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewDemoHeaderComponent0: function ViewDemoHeaderComponent0(t0, t1, t2) {
      var _ = this;
      _._textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = _._el_6 = _._el_2 = _._expr_2 = _._demo_header_template$_expr_0 = _._MaterialIconComponent_8_5 = _._demo_header_template$_compView_8 = _._MaterialButtonComponent_7_6 = _._AcxDarkTheme_7_5 = _._compView_7 = _._MaterialIconComponent_4_5 = _._demo_header_template$_compView_4 = _._MaterialButtonComponent_3_6 = _._AcxDarkTheme_3_5 = _._demo_header_template$_compView_3 = null;
      _.parentView = t1;
      _.viewData = t2;
    },
    viewFactory_GridDemoComponent1: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new S._ViewGridDemoComponent1(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    viewFactory_GridDemoComponent2: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new S._ViewGridDemoComponent2(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    ViewGridDemoComponent0: function ViewGridDemoComponent0(t0, t1) {
      var _ = this;
      _._compView_34 = _._SkawaCardComponent_33_6 = _._GridTileDirective_33_5 = _._compView_33 = _._SkawaCardHeaderSubheadDirective_31_5 = _._SkawaCardHeaderTitleDirective_29_5 = _._SkawaCardHeaderImageDirective_26_5 = _._SkawaCardHeaderComponent_25_5 = _._compView_25 = _._SkawaCardComponent_24_6 = _._GridTileDirective_24_5 = _._compView_24 = _._SkawaCardHeaderTitleDirective_22_5 = _._SkawaCardHeaderImageDirective_19_5 = _._SkawaCardHeaderComponent_18_5 = _._compView_18 = _._SkawaCardComponent_17_6 = _._GridTileDirective_17_5 = _._grid_demo_template$_compView_17 = _._GridComponent_16_5 = _._compView_16 = _._GridTileDirective_12_5 = _._GridTileDirective_10_5 = _._GridTileDirective_8_5 = _._GridTileDirective_6_5 = _._GridTileDirective_4_5 = _._GridComponent_3_5 = _._grid_demo_template$_compView_3 = _._grid_demo_template$_DemoHeaderComponent_0_5 = _._grid_demo_template$_compView_0 = null;
      _._SkawaCardActionsComponent_57_5 = _._compView_57 = _._MaterialIconComponent_56_5 = _._compView_56 = _._MaterialButtonComponent_55_6 = _._AcxDarkTheme_55_5 = _._grid_demo_template$_compView_55 = _._SkawaCardActionsComponent_54_5 = _._grid_demo_template$_compView_54 = _._SkawaCardHeaderTitleDirective_52_5 = _._SkawaCardHeaderComponent_51_5 = _._compView_51 = _._SkawaCardComponent_50_6 = _._GridTileDirective_50_5 = _._compView_50 = _._SkawaCardContentComponent_45_5 = _._compView_45 = _._SkawaCardHeaderSubheadDirective_43_5 = _._SkawaCardHeaderTitleDirective_41_5 = _._SkawaCardHeaderComponent_40_5 = _._compView_40 = _._SkawaCardComponent_39_6 = _._GridTileDirective_39_5 = _._compView_39 = _._MaterialButtonComponent_37_6 = _._AcxDarkTheme_37_5 = _._compView_37 = _._SkawaCardActionsComponent_36_5 = _._compView_36 = _._SkawaCardContentComponent_34_5 = null;
      _.componentStyles = _.ctx = _.rootEl = _._SkawaCardContentComponent_64_5 = _._grid_demo_template$_compView_64 = _._NgIf_63_9 = _._appEl_63 = _._NgIf_62_9 = _._appEl_62 = _._MaterialButtonComponent_61_6 = _._AcxDarkTheme_61_5 = _._grid_demo_template$_compView_61 = _._MaterialButtonComponent_58_6 = _._AcxDarkTheme_58_5 = _._compView_58 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewGridDemoComponent1: function _ViewGridDemoComponent1(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._MaterialIconComponent_0_5 = _._grid_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewGridDemoComponent2: function _ViewGridDemoComponent2(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._MaterialIconComponent_0_5 = _._grid_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    SkawaDataTableComponent$: function(changeDetectorRef, $T) {
      var _null = null,
        t1 = new S.SkawaDataTableComponent(new P._SyncBroadcastStreamController(_null, _null, [[P.List, $T]]), new P._SyncBroadcastStreamController(_null, _null, [$T]), new P._SyncBroadcastStreamController(_null, _null, [[G.SkawaDataTableColComponent, $T]]), new R.Disposer(true), changeDetectorRef, [$T]);
      t1.SkawaDataTableComponent$1(changeDetectorRef, $T);
      return t1;
    },
    SkawaDataTableComponent: function SkawaDataTableComponent(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._data_table$_changeController = t0;
      _._highlightController = t1;
      _._sortController = t2;
      _._data_table$_tearDownDisposer = t3;
      _.changeDetectorRef = t4;
      _.columns = _.highlightedRow = _.rows = _.selectable = null;
      _.$ti = t5;
    },
    SkawaDataTableComponent_closure: function SkawaDataTableComponent_closure(t0, t1) {
      this.$this = t0;
      this.T = t1;
    },
    SkawaDataTableComponent_markAllRowsChecked_closure: function SkawaDataTableComponent_markAllRowsChecked_closure(t0, t1) {
      this.$this = t0;
      this.checked = t1;
    },
    SkawaDataTableComponent__emitChange_closure: function SkawaDataTableComponent__emitChange_closure(t0) {
      this.$this = t0;
    },
    SkawaDataTableComponent_isEveryRowChecked_closure: function SkawaDataTableComponent_isEveryRowChecked_closure(t0) {
      this.$this = t0;
    },
    SkawaDataTableComponent_isEveryRowSkippedInFooter_closure: function SkawaDataTableComponent_isEveryRowSkippedInFooter_closure(t0) {
      this.$this = t0;
    },
    SkawaDataTableComponent_ngAfterViewInit_closure: function SkawaDataTableComponent_ngAfterViewInit_closure(t0) {
      this.$this = t0;
    },
    UnskippedInFooterPipe: function UnskippedInFooterPipe() {
    },
    UnskippedInFooterPipe_transform_closure: function UnskippedInFooterPipe_transform_closure() {
    },
    SortDirection: function SortDirection(t0) {
      this._sort$_name = t0;
    },
    SortModel: function SortModel(t0) {
      this.allowedDirections = t0;
      this.activeSort = null;
    },
    SkawaDataTableSortDirective: function SkawaDataTableSortDirective(t0) {
      this.column = t0;
    },
    SkawaDataTableSortDirective_allowedSorts_closure: function SkawaDataTableSortDirective_allowedSorts_closure() {
    },
    SkawaDataTableSortDirective_allowedSorts_closure0: function SkawaDataTableSortDirective_allowedSorts_closure0() {
    },
    SkawaDataTableSortDirective_allowedSorts_closure1: function SkawaDataTableSortDirective_allowedSorts_closure1() {
    },
    viewFactory_SkawaSnackbarComponent1: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      H.intTypeCheck(parentIndex);
      t1 = new S._ViewSkawaSnackbarComponent1(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    viewFactory_SkawaSnackbarComponent2: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      H.intTypeCheck(parentIndex);
      t1 = new S._ViewSkawaSnackbarComponent2(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    ViewSkawaSnackbarComponent0: function ViewSkawaSnackbarComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._snackbar_template$_el_0 = _._snackbar_template$_expr_0 = _._NgIf_1_9 = _._appEl_1 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewSkawaSnackbarComponent1: function _ViewSkawaSnackbarComponent1(t0, t1, t2) {
      var _ = this;
      _._snackbar_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = _._NgIf_2_9 = _._appEl_2 = null;
      _.parentView = t1;
      _.viewData = t2;
    },
    _ViewSkawaSnackbarComponent2: function _ViewSkawaSnackbarComponent2(t0, t1, t2) {
      var _ = this;
      _._snackbar_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = _._MaterialButtonComponent_0_6 = _._AcxDarkTheme_0_5 = _._snackbar_template$_compView_0 = null;
      _.parentView = t1;
      _.viewData = t2;
    },
    listsEqual: function(a, b) {
      var t2, i, t3,
        t1 = J.getInterceptor$(a);
      if (t1.$eq(a, b))
        return true;
      if (a == null || b == null)
        return false;
      t2 = J.getInterceptor$asx(b);
      if (t1.get$length(a) != t2.get$length(b))
        return false;
      i = 0;
      while (true) {
        t3 = t1.get$length(a);
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!(i < t3))
          break;
        if (!J.$eq$(t1.$index(a, i), t2.$index(b, i)))
          return false;
        ++i;
      }
      return true;
    }
  },
  N = {DefaultKeyValueDiffer: function DefaultKeyValueDiffer(t0) {
      var _ = this;
      _._records = t0;
      _._removalsHead = _._additionsTail = _._additionsHead = _._changesTail = _._changesHead = _._previousMapHead = _._appendAfter = _._mapHead = null;
    }, DefaultKeyValueDiffer_check_closure: function DefaultKeyValueDiffer_check_closure(t0) {
      this.$this = t0;
    }, DefaultKeyValueDiffer_check_closure0: function DefaultKeyValueDiffer_check_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    }, KeyValueChangeRecord: function KeyValueChangeRecord(t0) {
      var _ = this;
      _.key = t0;
      _._nextChanged = _._nextAdded = _._prev = _._default_keyvalue_differ$_next = _._nextPrevious = _.currentValue = _.previousValue = null;
    },
    TextBinding$: function() {
      return new N.TextBinding(document.createTextNode(""));
    },
    TextBinding: function TextBinding(t0) {
      this._currentValue = "";
      this.element = t0;
    },
    CardDemoComponent: function CardDemoComponent() {
    },
    WrTableComponent_nameAccessor: function(row) {
      return H.interceptedTypeCheck(row, "$isWrRowData").name;
    },
    WrTableComponent_teamAccessor: function(row) {
      return H.interceptedTypeCheck(row, "$isWrRowData").team;
    },
    WrTableComponent_recAccessor: function(row) {
      return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isWrRowData").rec);
    },
    WrTableComponent_yardsAccessor: function(row) {
      return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isWrRowData").yards);
    },
    WrTableComponent_avgAccessor: function(row) {
      H.interceptedTypeCheck(row, "$isWrRowData");
      return C.JSDouble_methods.toStringAsFixed$1(row.yards / row.rec, 2);
    },
    WrTableComponent_yardPerGameAccessor: function(row) {
      return C.JSDouble_methods.toStringAsFixed$1(H.interceptedTypeCheck(row, "$isWrRowData").yards / 16, 2);
    },
    WrTableComponent_firstDownAccessor: function(row) {
      return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isWrRowData").firstDowns);
    },
    WrTableComponent: function WrTableComponent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.columnModel = t0;
      _.columnOptions = t1;
      _.wrRowData = t2;
      _.columns = t3;
      _.icon = t4;
      _.dataTableComponent = null;
    },
    WrTableComponent_closure: function WrTableComponent_closure() {
    },
    WrTableComponent_ngOnInit_closure: function WrTableComponent_ngOnInit_closure(t0) {
      this.$this = t0;
    },
    WrTableComponent_ngOnInit__closure: function WrTableComponent_ngOnInit__closure(t0) {
      this.$this = t0;
    },
    WrRowData: function WrRowData(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.name = t0;
      _.team = t1;
      _.rec = t2;
      _.yards = t3;
      _.firstDowns = t4;
      _.checked = t5;
      _.classes = t6;
    },
    ViewSkawaDataTableComponent0$: function(parentView, parentIndex, $T) {
      var t2,
        t1 = new N.ViewSkawaDataTableComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex), [$T]),
        styles = $.ViewSkawaDataTableComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaDataTableComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaDataTableComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-data-table");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewSkawaDataTableComponent0: function ViewSkawaDataTableComponent0(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._data_table_template$_el_0 = _._pipe_unskippedInFooter_0 = _._data_table_template$_expr_4 = _._data_table_template$_expr_3 = _._data_table_template$_expr_1 = _._data_table_template$_expr_0 = _._NgIf_7_9 = _._appEl_7 = _._NgFor_6_9 = _._data_table_template$_appEl_6 = _._NgFor_4_9 = _._data_table_template$_appEl_4 = _._data_table_template$_NgIf_3_9 = _._data_table_template$_appEl_3 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    ViewSkawaDataTableComponent0_build_closure: function ViewSkawaDataTableComponent0_build_closure(t0) {
      this.$this = t0;
    },
    ViewSkawaDataTableComponent0_build_closure0: function ViewSkawaDataTableComponent0_build_closure0(t0) {
      this.$this = t0;
    },
    ViewSkawaDataTableComponent0_build_closure1: function ViewSkawaDataTableComponent0_build_closure1(t0) {
      this.$this = t0;
    },
    ViewSkawaDataTableComponent0_build_closure2: function ViewSkawaDataTableComponent0_build_closure2(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent1: function _ViewSkawaDataTableComponent1(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._data_table_template$_NgIf_1_9 = _._data_table_template$_appEl_1 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewSkawaDataTableComponent1_build_closure: function _ViewSkawaDataTableComponent1_build_closure(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent2: function _ViewSkawaDataTableComponent2(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._data_table_template$_expr_0 = _._data_table_template$_MaterialCheckboxComponent_0_5 = _._data_table_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewSkawaDataTableComponent3: function _ViewSkawaDataTableComponent3(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._data_table_template$_el_0 = _._data_table_template$_expr_3 = _._data_table_template$_expr_2 = _._data_table_template$_expr_1 = _._data_table_template$_expr_0 = _._data_table_template$_NgIf_3_9 = _._data_table_template$_appEl_3 = _._data_table_template$_NgIf_1_9 = _._data_table_template$_appEl_1 = _._data_table_template$_NgClass_0_5 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewSkawaDataTableComponent3_build_closure: function _ViewSkawaDataTableComponent3_build_closure(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent3_build_closure0: function _ViewSkawaDataTableComponent3_build_closure0(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent4: function _ViewSkawaDataTableComponent4(t0, t1, t2, t3) {
      var _ = this;
      _._textBinding_0 = t0;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t1;
      _.viewData = t2;
      _.$ti = t3;
    },
    _ViewSkawaDataTableComponent5: function _ViewSkawaDataTableComponent5(t0, t1, t2, t3) {
      var _ = this;
      _._data_table_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t1;
      _.viewData = t2;
      _.$ti = t3;
    },
    _ViewSkawaDataTableComponent6: function _ViewSkawaDataTableComponent6(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._data_table_template$_el_0 = _._data_table_template$_expr_6 = _._data_table_template$_expr_4 = _._data_table_template$_expr_3 = _._data_table_template$_expr_2 = _._data_table_template$_expr_1 = _._data_table_template$_expr_0 = _._data_table_template$_NgFor_2_9 = _._data_table_template$_appEl_2 = _._data_table_template$_NgIf_1_9 = _._data_table_template$_appEl_1 = _._data_table_template$_NgClass_0_5 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewSkawaDataTableComponent6_build_closure: function _ViewSkawaDataTableComponent6_build_closure(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent6_build_closure0: function _ViewSkawaDataTableComponent6_build_closure0(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent7: function _ViewSkawaDataTableComponent7(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._data_table_template$_expr_0 = _._MaterialCheckboxComponent_1_5 = _._data_table_template$_compView_1 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewSkawaDataTableComponent8: function _ViewSkawaDataTableComponent8(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._data_table_template$_expr_0 = _._data_table_template$_NgIf_4_9 = _._data_table_template$_appEl_4 = _._data_table_template$_NgIf_2_9 = _._data_table_template$_appEl_2 = _._data_table_template$_NgIf_1_9 = _._data_table_template$_appEl_1 = _._data_table_template$_NgClass_0_5 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewSkawaDataTableComponent8_build_closure: function _ViewSkawaDataTableComponent8_build_closure(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent8_build_closure0: function _ViewSkawaDataTableComponent8_build_closure0(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent8_build_closure1: function _ViewSkawaDataTableComponent8_build_closure1(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent9: function _ViewSkawaDataTableComponent9(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._data_table_template$_expr_1 = _._data_table_template$_expr_0 = _._data_table_template$_DynamicComponent_0_8 = _._data_table_template$_appEl_0 = _._data_table_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewSkawaDataTableComponent10: function _ViewSkawaDataTableComponent10(t0, t1, t2, t3) {
      var _ = this;
      _._data_table_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t1;
      _.viewData = t2;
      _.$ti = t3;
    },
    _ViewSkawaDataTableComponent11: function _ViewSkawaDataTableComponent11(t0, t1, t2, t3) {
      var _ = this;
      _._textBinding_0 = t0;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t1;
      _.viewData = t2;
      _.$ti = t3;
    },
    _ViewSkawaDataTableComponent12: function _ViewSkawaDataTableComponent12(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._pipe_unskippedInFooter_0_0 = _._data_table_template$_expr_0 = _._data_table_template$_NgFor_2_9 = _._data_table_template$_appEl_2 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewSkawaDataTableComponent12_build_closure: function _ViewSkawaDataTableComponent12_build_closure(t0) {
      this.$this = t0;
    },
    _ViewSkawaDataTableComponent13: function _ViewSkawaDataTableComponent13(t0, t1, t2, t3) {
      var _ = this;
      _._data_table_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = _._data_table_template$_el_0 = _._data_table_template$_expr_1 = _._data_table_template$_expr_0 = _._data_table_template$_NgClass_0_5 = null;
      _.parentView = t1;
      _.viewData = t2;
      _.$ti = t3;
    }
  },
  E = {DirectiveChangeDetector: function DirectiveChangeDetector() {
    }, SanitizationService: function SanitizationService() {
    }, HierarchicalInjector: function HierarchicalInjector() {
    }, DeferredContentAware: function DeferredContentAware() {
    }, RootFocusable: function RootFocusable() {
    }, AutoFocusDirective: function AutoFocusDirective(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._focus$_disposer = t0;
      _._autoFocus = null;
      _._focus$_focusable = t1;
      _._focus$_domService = t2;
      _._focus$_modal = t3;
      _._focus$_popupRef = t4;
      _._focus$_root = t5;
    },
    Selectable__isOptionCheck: function(isMaybeModel, item, option, defaultIfMissingInterface, $T) {
      H.assertSubtypeOfRuntimeType(item, $T);
      if (H.checkSubtype(isMaybeModel, "$isSelectable", [$T], null)) {
        isMaybeModel.getSelectable$1(item);
        return false;
      }
      return defaultIfMissingInterface;
    },
    SelectableOption: function SelectableOption(t0) {
      this._selectable$_name = t0;
    },
    _ZoneRunner: function _ZoneRunner() {
    },
    ZonedFuture: function ZonedFuture(t0, t1, t2) {
      this._innerFuture = t0;
      this._runInZoneFn = t1;
      this.$ti = t2;
    },
    ZonedFuture_then_closure: function ZonedFuture_then_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.onValue = t1;
      _.onError = t2;
      _.S = t3;
    },
    ZonedFuture_whenComplete_closure: function ZonedFuture_whenComplete_closure(t0, t1) {
      this.$this = t0;
      this.action = t1;
    },
    ZonedStream: function ZonedStream(t0, t1, t2) {
      this._innerStream = t0;
      this._runInZoneFn = t1;
      this.$ti = t2;
    },
    ZonedStream_listen_closure: function ZonedStream_listen_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.onData = t1;
      _.onError = t2;
      _.onDone = t3;
      _.cancelOnError = t4;
    },
    _ZonedStream_Stream__ZoneRunner: function _ZonedStream_Stream__ZoneRunner() {
    },
    ExtensionSet: function ExtensionSet(t0, t1) {
      this.blockSyntaxes = t0;
      this.inlineSyntaxes = t1;
    },
    Observable: function Observable() {
    },
    SkawaSidebarItemComponent: function SkawaSidebarItemComponent(t0) {
      this.icon = null;
      this.TextOnlyMixin_textOnly = t0;
    },
    TextOnlyMixin: function TextOnlyMixin() {
    },
    _SkawaSidebarItemComponent_Object_TextOnlyMixin: function _SkawaSidebarItemComponent_Object_TextOnlyMixin() {
    },
    ViewDataTableDemoComponent0: function ViewDataTableDemoComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._WrTableComponent_7_5 = _._data_table_demo_template$_compView_7 = _._SchoolTableComponent_6_5 = _._data_table_demo_template$_compView_6 = _._CarTableComponent_1_5 = _._data_table_demo_template$_compView_1 = _._data_table_demo_template$_DemoHeaderComponent_0_5 = _._data_table_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewSkawaCardComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new E.ViewSkawaCardComponent0(parentView, S.AppViewData_AppViewData(3, C.ViewType_1, parentIndex)),
        styles = $.ViewSkawaCardComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaCardComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaCardComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-card");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewSkawaCardContentComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new E.ViewSkawaCardContentComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewSkawaCardContentComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaCardContentComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaCardContentComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-card-content");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewSkawaCardHeaderComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new E.ViewSkawaCardHeaderComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewSkawaCardHeaderComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaCardHeaderComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaCardHeaderComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-card-header");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewSkawaCardComponent0: function ViewSkawaCardComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewSkawaCardContentComponent0: function ViewSkawaCardContentComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._card_template$_expr_1 = _._card_template$_expr_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewSkawaCardHeaderComponent0: function ViewSkawaCardHeaderComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._card_template$_expr_3 = _._card_template$_expr_2 = _._card_template$_expr_1 = _._card_template$_expr_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    internalSanitizeUrl: function(url) {
      var t1;
      if (url.length === 0)
        return url;
      t1 = $.$get$_safeUrlPattern()._nativeRegExp;
      if (!t1.test(url)) {
        t1 = $.$get$_dataUrlPattern()._nativeRegExp;
        t1 = t1.test(url);
      } else
        t1 = true;
      return t1 ? url : "unsafe:" + url;
    },
    _parseBool: function(strValue) {
      switch (strValue) {
        case "":
          return true;
        case "true":
          return true;
        case "false":
          return false;
        default:
          throw H.wrapException(P.ArgumentError$value(strValue, "strValue", 'Only "", "true", and "false" are acceptable values for parseBool. Found: '));
      }
    },
    getBool: function(inputValue) {
      return inputValue;
    },
    attributeToBool: function(inputValue, defaultValue) {
      return E._parseBool(inputValue);
    },
    getInt: function(inputValue) {
      return inputValue;
    }
  },
  M = {ChangeDetectionHost: function ChangeDetectionHost() {
    }, ChangeDetectionHost_run_closure: function ChangeDetectionHost_run_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.callback = t2;
      _.completer = t3;
      _.R = t4;
    }, ChangeDetectionHost_run__closure: function ChangeDetectionHost_run__closure(t0, t1) {
      this.completer = t0;
      this.R = t1;
    }, ChangeDetectionHost_run__closure0: function ChangeDetectionHost_run__closure0(t0, t1) {
      this.$this = t0;
      this.completer = t1;
    }, ComponentLoader: function ComponentLoader() {
    },
    throwsNotFound: function(injector, token) {
      throw H.wrapException(A.noProviderError(token));
    },
    Injector: function Injector() {
    },
    ViewGlyphComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new M.ViewGlyphComponent0(N.TextBinding$(), parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewGlyphComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewGlyphComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$GlyphComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("glyph");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewGlyphComponent0: function ViewGlyphComponent0(t0, t1, t2) {
      var _ = this;
      _._textBinding_2 = t0;
      _.componentStyles = _.ctx = _.rootEl = _._el_1 = _._glyph_template$_expr_0 = null;
      _.parentView = t1;
      _.viewData = t2;
    },
    ViewMaterialIconComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new M.ViewMaterialIconComponent0(N.TextBinding$(), parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewMaterialIconComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewMaterialIconComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$MaterialIconComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("material-icon");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewMaterialIconComponent0: function ViewMaterialIconComponent0(t0, t1, t2) {
      var _ = this;
      _._material_icon_template$_textBinding_2 = t0;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t1;
      _.viewData = t2;
    },
    MaterialDropdownSelectComponent$: function(idGenerator, _popupSizeDelegate, rtl, popupClass, buttonAriaRole, _changeDetector, element, $T) {
      var t6, _null = null,
        t1 = $.$get$indexIdentityFn(),
        t2 = [W.FocusEvent],
        t3 = P.HashMap_HashMap(_null, P.String),
        t4 = idGenerator == null,
        t5 = t4 ? new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid()) : idGenerator;
      t5 = new O.ActiveItemModel(new P._SyncBroadcastStreamController(_null, _null, [null]), t3, t5, [null]);
      t5._loop = false;
      t5.set$_items(C.List_empty2);
      if (t5._items.length !== 0)
        t5._activeIndex = 0;
      element.toString;
      t3 = Q.constructEncapsulatedCss(popupClass, new W._ElementCssClassSet(element));
      t6 = (t4 ? new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid()) : idGenerator).nextId$0();
      t4 = [P.bool];
      t1 = new M.MaterialDropdownSelectComponent(t1, t5, t6, buttonAriaRole, _popupSizeDelegate, t3, _changeDetector, new P._SyncBroadcastStreamController(_null, _null, t2), new P._SyncBroadcastStreamController(_null, _null, t2), _null, "", _null, true, _null, _null, false, _null, _null, false, _null, _null, new P._SyncBroadcastStreamController(_null, _null, t4), new P._SyncBroadcastStreamController(_null, _null, t4), false, false, true, _null, true, false, C.List_WrT, [$T]);
      t1.KeyboardHandlerMixin_isRtl = rtl;
      t1.MaterialDropdownBase_preferredPositions = C.List_adS;
      t1.MaterialButtonWrapper_iconName = "arrow_drop_down";
      return t1;
    },
    MaterialDropdownSelectComponent: function MaterialDropdownSelectComponent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30) {
      var _ = this;
      _.trackByIndexFn = t0;
      _.activeModel = t1;
      _.listId = t2;
      _.buttonAriaRole = t3;
      _._selectionListener = _._optionsListener = null;
      _._popupSizeDelegate = t4;
      _.showButtonBorder = null;
      _.popupClassName = t5;
      _._material_dropdown_select$_changeDetector = t6;
      _._disabledChanged = false;
      _.dropdownButton = null;
      _._focus = t7;
      _._blur = t8;
      _.ShiftClickSelectionMixin__pivot = t9;
      _.ActivateItemOnKeyPressMixin__enteredKeys = t10;
      _.KeyboardHandlerMixin_isRtl = t11;
      _.TrackLayoutChangesMixin_trackLayoutChanges = t12;
      _.MaterialButtonWrapper_buttonText = t13;
      _.MaterialButtonWrapper_buttonAriaLabel = t14;
      _.MaterialButtonWrapper_disabled = t15;
      _.MaterialButtonWrapper_icon = t16;
      _.MaterialButtonWrapper_iconName = t17;
      _.MaterialButtonWrapper_raised = t18;
      _.MaterialButtonWrapper__buttonIcon = t19;
      _.SelectionInputAdapter__selectionChangeController = t20;
      _.MaterialDropdownBase__visibleStream = t21;
      _.MaterialDropdownBase__contentVisible = t22;
      _.MaterialDropdownBase_enforceSpaceConstraints = t23;
      _.MaterialDropdownBase_constrainToViewport = t24;
      _.MaterialDropdownBase_popupMatchInputWidth = t25;
      _.MaterialDropdownBase_slide = t26;
      _.MaterialDropdownBase_autoDismiss = t27;
      _.MaterialDropdownBase__visible = t28;
      _.MaterialDropdownBase_preferredPositions = t29;
      _._itemRenderer = _._options = _._selection = null;
      _.$ti = t30;
    },
    MaterialDropdownSelectComponent_options_closure: function MaterialDropdownSelectComponent_options_closure(t0) {
      this.$this = t0;
    },
    MaterialDropdownSelectComponent_selection_closure: function MaterialDropdownSelectComponent_selection_closure(t0) {
      this.$this = t0;
    },
    ActivateItemOnKeyPressMixin: function ActivateItemOnKeyPressMixin() {
    },
    ActivateItemOnKeyPressMixin_activateOnKeyPress_closure: function ActivateItemOnKeyPressMixin_activateOnKeyPress_closure(t0, t1, t2) {
      this.$this = t0;
      this.searchMap = t1;
      this.itemRenderer = t2;
    },
    ActivateItemOnKeyPressMixin_activateOnKeyPress_closure0: function ActivateItemOnKeyPressMixin_activateOnKeyPress_closure0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.options = t1;
      _.startsWith = t2;
      _.activeModel = t3;
      _.selection = t4;
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase: function _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase() {
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter: function _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter() {
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper: function _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper() {
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin: function _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin() {
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin: function _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin() {
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin: function _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin() {
    },
    _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin_ShiftClickSelectionMixin: function _MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin_ShiftClickSelectionMixin() {
    },
    DropdownHandle: function DropdownHandle() {
    },
    MaterialDropdownBase: function MaterialDropdownBase() {
    },
    ActiveItemDirectiveNgCd: function ActiveItemDirectiveNgCd(t0) {
      this.instance = t0;
      this._active_item_directive_template$_expr_0 = null;
    },
    createDomServiceWebdriverTestability: function(domService) {
      if (H.boolConversionCheck($.$get$testabilitiesEnabled()))
        return M.DomServiceWebdriverTestability$_(domService);
      return new D.NullTestability();
    },
    DomServiceWebdriverTestability$_: function(_domService) {
      var t1 = new M.DomServiceWebdriverTestability(_domService, H.setRuntimeTypeInfo([], [{func: 1, ret: -1, args: [P.bool, P.String]}]));
      t1.DomServiceWebdriverTestability$_$1(_domService);
      return t1;
    },
    DomServiceWebdriverTestability: function DomServiceWebdriverTestability(t0, t1) {
      this._dom_service_webdriver_testability$_domService = t0;
      this._callbacks = t1;
    },
    DomServiceWebdriverTestability$__closure: function DomServiceWebdriverTestability$__closure(t0) {
      this.$this = t0;
    },
    _DelegatingIterableBase: function _DelegatingIterableBase() {
    },
    DelegatingIterable: function DelegatingIterable() {
    },
    DelegatingList: function DelegatingList() {
    },
    ViewCkeditorDemoComponent0: function ViewCkeditorDemoComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._ckeditor_demo_template$_expr_6 = _._SkawaCkeditorComponent_6_5 = _._ckeditor_demo_template$_compView_6 = _._SkawaCkeditorComponent_3_5 = _._ckeditor_demo_template$_compView_3 = _._ckeditor_demo_template$_DemoHeaderComponent_0_5 = _._ckeditor_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    escapeAttribute: function(value) {
      var ch,
        t1 = J.getInterceptor$s(value),
        t2 = value.length,
        i = 0, t3 = "";
      while (true) {
        if (!(i < t2)) {
          t1 = t3;
          break;
        }
        ch = t1._codeUnitAt$1(value, i);
        if (ch === 92) {
          ++i;
          if (i === t2) {
            t1 = t3 + H.Primitives_stringFromCharCode(ch);
            break;
          }
          ch = C.JSString_methods._codeUnitAt$1(value, i);
          switch (ch) {
            case 34:
              t3 += "&quot;";
              break;
            case 33:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 123:
            case 124:
            case 125:
            case 126:
              t3 += H.Primitives_stringFromCharCode(ch);
              break;
            default:
              t3 = t3 + "%5C" + H.Primitives_stringFromCharCode(ch);
          }
        } else
          t3 = ch === 34 ? t3 + "%22" : t3 + H.Primitives_stringFromCharCode(ch);
        ++i;
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  },
  Q = {AppViewUtils: function AppViewUtils(t0, t1, t2) {
      this.appId = t0;
      this.eventManager = t1;
      this.sanitizer = t2;
    },
    ViewDynamicComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new Q.ViewDynamicComponent0(parentView, S.AppViewData_AppViewData(3, C.ViewType_1, parentIndex)),
        styles = $.ViewDynamicComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewDynamicComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = document.createElement("dynamic-component");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewDynamicComponent0: function ViewDynamicComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._dynamic_component_template$_appEl_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    DropdownButtonComponent: function DropdownButtonComponent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._button = _._ariaRole = _._role = null;
      _.popupType = "dialog";
      _.ariaExpanded = _.ariaOwns = _.error = null;
      _.uuid = t0;
      _._showButtonBorder = _._ariaLabelledBy = null;
      _._dropdown_button$_blur = t1;
      _.MaterialButtonWrapper_buttonText = t2;
      _.MaterialButtonWrapper_buttonAriaLabel = t3;
      _.MaterialButtonWrapper_disabled = t4;
      _.MaterialButtonWrapper_icon = t5;
      _.MaterialButtonWrapper_iconName = t6;
      _.MaterialButtonWrapper_raised = t7;
      _.MaterialButtonWrapper__buttonIcon = t8;
      _.FocusableMixin__onFocus = t9;
      _.FocusableMixin__focusable = t10;
      _.FocusableMixin__focusPending = t11;
    },
    _DropdownButtonComponent_Object_FocusableMixin: function _DropdownButtonComponent_Object_FocusableMixin() {
    },
    _DropdownButtonComponent_Object_FocusableMixin_MaterialButtonWrapper: function _DropdownButtonComponent_Object_FocusableMixin_MaterialButtonWrapper() {
    },
    EditorRenderTarget: function EditorRenderTarget(t0, t1, t2) {
      this.htmlElement = t0;
      this.renderer = t1;
      this._onRenderController = t2;
    },
    EditorRenderTarget__updateElementChildren_closure: function EditorRenderTarget__updateElementChildren_closure(t0, t1) {
      this.$this = t0;
      this.classes = t1;
    },
    EditorRenderer: function EditorRenderer() {
    },
    MarkdownRenderer: function MarkdownRenderer() {
    },
    AppComponent: function AppComponent() {
    },
    GridDemoComponent: function GridDemoComponent() {
    },
    InfobarDemoComponent: function InfobarDemoComponent() {
    },
    MarkdownDemoComponent: function MarkdownDemoComponent() {
    },
    SidebarItemDemoComponent: function SidebarItemDemoComponent(t0) {
      this._openController = t0;
    },
    ViewExtendedMaterialIconComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new Q.ViewExtendedMaterialIconComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewExtendedMaterialIconComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewExtendedMaterialIconComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$ExtendedMaterialIconComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("extended-material-icon");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewExtendedMaterialIconComponent0: function ViewExtendedMaterialIconComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._expr_1 = _._expr_0 = _._NgClass_0_5 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    constructEncapsulatedCss: function(className, classes) {
      var t1, result, t2;
      for (t1 = classes.readClasses$0(), t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H.getTypeArgumentByIndex(t1, 0)), result = ""; t1.moveNext$0();) {
        t2 = t1._collection$_current;
        if (J.startsWith$1$s(t2, "_ngcontent"))
          result += " " + t2;
      }
      return result;
    }
  },
  D = {ComponentRef: function ComponentRef(t0, t1, t2, t3, t4) {
      var _ = this;
      _._parentView = t0;
      _._nodeIndex = t1;
      _._nativeElement = t2;
      _._component = t3;
      _.$ti = t4;
    }, ComponentFactory: function ComponentFactory(t0, t1, t2) {
      this.selector = t0;
      this._viewFactory = t1;
      this.$ti = t2;
    }, TemplateRef: function TemplateRef(t0, t1) {
      this._template_ref$_viewContainer = t0;
      this._template_ref$_viewFactory = t1;
    },
    ViewFragment_ViewFragment: function(nodesOrViewContainers) {
      return new D.ViewFragment(H.assertSubtype(nodesOrViewContainers, "$isList", [P.Object], "$asList"));
    },
    ViewFragment_appendDomNodes: function(target, nodesOrViewContainers) {
      var t1, $length, i, node, nestedViews, length0, n;
      H.assertSubtype(nodesOrViewContainers, "$isList", [P.Object], "$asList");
      t1 = J.getInterceptor$asx(nodesOrViewContainers);
      $length = t1.get$length(nodesOrViewContainers);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        node = t1.$index(nodesOrViewContainers, i);
        if (node instanceof V.ViewContainer) {
          target.appendChild(node.nativeElement);
          nestedViews = node.nestedViews;
          if (nestedViews != null) {
            length0 = nestedViews.length;
            for (n = 0; n < length0; ++n) {
              if (n >= nestedViews.length)
                return H.ioore(nestedViews, n);
              D.ViewFragment_appendDomNodes(target, nestedViews[n].viewData.rootFragment._nodesOrViewContainers);
            }
          }
        } else
          target.appendChild(H.interceptedTypeCheck(node, "$isNode"));
      }
    },
    ViewFragment__findLastDomNode: function(container) {
      var i,
        nestedViews = container.nestedViews;
      if (nestedViews != null) {
        i = nestedViews.length - 1;
        if (i >= 0)
          return nestedViews[i].viewData.rootFragment.findLastDomNode$0();
      }
      return container.nativeElement;
    },
    ViewFragment__flattenDomNodes: function(target, nodes) {
      var $length, i, node, nestedViews, length0, n;
      H.assertSubtype(target, "$isList", [W.Node], "$asList");
      H.assertSubtype(nodes, "$isList", [P.Object], "$asList");
      $length = nodes.length;
      for (i = 0; i < $length; ++i) {
        if (i >= nodes.length)
          return H.ioore(nodes, i);
        node = nodes[i];
        if (node instanceof V.ViewContainer) {
          C.JSArray_methods.add$1(target, node.nativeElement);
          nestedViews = node.nestedViews;
          if (nestedViews != null) {
            length0 = nestedViews.length;
            for (n = 0; n < length0; ++n) {
              if (n >= nestedViews.length)
                return H.ioore(nestedViews, n);
              D.ViewFragment__flattenDomNodes(target, nestedViews[n].viewData.rootFragment._nodesOrViewContainers);
            }
          }
        } else
          C.JSArray_methods.add$1(target, H.interceptedTypeCheck(node, "$isNode"));
      }
      return target;
    },
    ViewFragment: function ViewFragment(t0) {
      this._nodesOrViewContainers = t0;
    },
    Testability: function Testability(t0, t1) {
      var _ = this;
      _._testability$_ngZone = t0;
      _._isZoneStable = true;
      _._didWork = false;
      _._testability$_callbacks = t1;
    },
    Testability__watchAngularEvents_closure: function Testability__watchAngularEvents_closure(t0) {
      this.$this = t0;
    },
    Testability__watchAngularEvents_closure0: function Testability__watchAngularEvents_closure0(t0) {
      this.$this = t0;
    },
    Testability__watchAngularEvents__closure: function Testability__watchAngularEvents__closure(t0) {
      this.$this = t0;
    },
    Testability__watchAngularEvents___closure: function Testability__watchAngularEvents___closure(t0) {
      this.$this = t0;
    },
    Testability__runCallbacksIfReady_closure: function Testability__runCallbacksIfReady_closure(t0) {
      this.$this = t0;
    },
    TestabilityRegistry: function TestabilityRegistry(t0, t1) {
      this._applications = t0;
      this._testabilityGetter = t1;
    },
    _NoopGetTestability: function _NoopGetTestability() {
    },
    AbstractTestability: function AbstractTestability() {
    },
    AbstractTestability__runCallbacksIfStable_closure: function AbstractTestability__runCallbacksIfStable_closure(t0, t1) {
      this.$this = t0;
      this.newCallback = t1;
    },
    AbstractTestability__runCallbacksIfStable__closure: function AbstractTestability__runCallbacksIfStable__closure(t0, t1) {
      this.$this = t0;
      this.newCallback = t1;
    },
    NullTestability: function NullTestability() {
    },
    Modal: function Modal() {
    },
    ModalComponent: function ModalComponent() {
    },
    ViewCarTableComponent0: function ViewCarTableComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._car_table_template$_expr_1 = _._car_table_template$_SkawaDataTableColComponent_4_5 = _._car_table_template$_compView_4 = _._car_table_template$_SkawaDataTableColComponent_3_5 = _._car_table_template$_compView_3 = _._SkawaDataTableComponent_2_5 = _._car_table_template$_compView_2 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    DemoHeaderComponent: function DemoHeaderComponent() {
      this.exampleHref = this.sourceHref = this.title = null;
    },
    ViewSnackbarDemoComponent0: function ViewSnackbarDemoComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._MaterialButtonComponent_4_6 = _._AcxDarkTheme_4_5 = _._snackbar_demo_template$_compView_4 = _._MaterialButtonComponent_2_6 = _._AcxDarkTheme_2_5 = _._snackbar_demo_template$_compView_2 = _._SkawaSnackbarComponent_1_5 = _._snackbar_demo_template$_compView_1 = _._snackbar_demo_template$_DemoHeaderComponent_0_5 = _._snackbar_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    }
  },
  L = {SlowComponentLoader: function SlowComponentLoader() {
    }, ViewRef: function ViewRef() {
    }, EmbeddedViewRef: function EmbeddedViewRef() {
    }, EventManager: function EventManager(t0) {
      this.zone = t0;
    }, MaterialDrawerBase: function MaterialDrawerBase() {
    }, MaterialDrawerBase_visible_closure: function MaterialDrawerBase_visible_closure(t0) {
      this.$this = t0;
    }, GlyphComponent: function GlyphComponent(t0) {
      this._glyph$_icon = null;
      this._glyph$_element = t0;
    }, Visibility: function Visibility(t0, t1, t2) {
      this.displayName = t0;
      this._propertyName = t1;
      this._propertyValue = t2;
    }, BasePortalHost: function BasePortalHost() {
    }, DomPortalHost: function DomPortalHost() {
      this._detachPortal = this._attachedPortal = null;
    },
    ViewMaterialRippleComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new L.ViewMaterialRippleComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewMaterialRippleComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(null, $.styles$MaterialRippleComponent, "", "", "");
        styles._appendStyles$0();
        $.ViewMaterialRippleComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = document.createElement("material-ripple");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewMaterialRippleComponent0: function ViewMaterialRippleComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    SelectionContainer: function SelectionContainer() {
    },
    SelectionItem: function SelectionItem() {
    },
    Icon: function Icon(t0) {
      this.name = t0;
    },
    PopupEvents: function PopupEvents() {
    },
    PopupBase: function PopupBase() {
    },
    PopupSourceDirective$: function(_domPopupSourceFactory, _element, _referenceDirective, _focusable, initAriaAttributes) {
      return new L.PopupSourceDirective(_domPopupSourceFactory, E.attributeToBool(initAriaAttributes, true), _element, _referenceDirective, _focusable);
    },
    PopupSourceDirective: function PopupSourceDirective(t0, t1, t2, t3, t4) {
      var _ = this;
      _._domPopupSourceFactory = t0;
      _._popup_source_directive$_initAriaAttributes = t1;
      _._popup_source_directive$_element = t2;
      _._referenceDirective = t3;
      _._focusable = t4;
      _._popupId = _._popupSource = null;
    },
    RulerBase: function RulerBase() {
    },
    RulerBase_measure_closure: function RulerBase_measure_closure(t0, t1, t2) {
      this.$this = t0;
      this.element = t1;
      this.offset = t2;
    },
    RulerBase_track_closure0: function RulerBase_track_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.element = t2;
    },
    RulerBase_track__closure: function RulerBase_track__closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.element = t2;
    },
    RulerBase_track__closure0: function RulerBase_track__closure0(t0) {
      this._box_0 = t0;
    },
    RulerBase_track_closure: function RulerBase_track_closure(t0) {
      this._box_0 = t0;
    },
    RulerBase_track_closure1: function RulerBase_track_closure1() {
    },
    RulerBase_track_closure_withinEpsilon: function RulerBase_track_closure_withinEpsilon() {
    },
    RulerBase_updateSync_closure: function RulerBase_updateSync_closure(t0, t1) {
      this.$this = t0;
      this.element = t1;
    },
    SkawaMarkdownRendererComponent: function SkawaMarkdownRendererComponent() {
      this.editorRenderTarget = this._markdown_renderer$_source = this._emulatedCssClass = null;
    },
    SkawaMarkdownRendererComponent_ngOnInit_closure: function SkawaMarkdownRendererComponent_ngOnInit_closure() {
    },
    SkawaHexColorizePipe: function SkawaHexColorizePipe() {
    },
    viewFactory_CardDemoComponent1: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new L._ViewCardDemoComponent1(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    viewFactory_CardDemoComponent2: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new L._ViewCardDemoComponent2(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    ViewCardDemoComponent0: function ViewCardDemoComponent0(t0, t1) {
      var _ = this;
      _._SkawaCardHeaderSubheadDirective_39_5 = _._SkawaCardHeaderTitleDirective_37_5 = _._SkawaCardHeaderComponent_36_5 = _._card_demo_template$_compView_36 = _._SkawaCardComponent_35_5 = _._card_demo_template$_compView_35 = _._MaterialButtonComponent_29_6 = _._AcxDarkTheme_29_5 = _._card_demo_template$_compView_29 = _._SkawaCardActionsComponent_28_5 = _._compView_28 = _._SkawaCardContentComponent_26_5 = _._card_demo_template$_compView_26 = _._SkawaCardComponent_25_5 = _._card_demo_template$_compView_25 = _._SkawaCardHeaderSubheadDirective_21_5 = _._SkawaCardHeaderTitleDirective_19_5 = _._SkawaCardHeaderImageDirective_16_5 = _._SkawaCardHeaderComponent_15_5 = _._card_demo_template$_compView_15 = _._SkawaCardComponent_14_5 = _._card_demo_template$_compView_14 = _._SkawaCardHeaderTitleDirective_10_5 = _._SkawaCardHeaderImageDirective_7_5 = _._SkawaCardHeaderComponent_6_5 = _._card_demo_template$_compView_6 = _._SkawaCardComponent_5_5 = _._compView_5 = _._card_demo_template$_DemoHeaderComponent_0_5 = _._card_demo_template$_compView_0 = null;
      _.ctx = _.rootEl = _._SkawaCardContentComponent_62_5 = _._card_demo_template$_compView_62 = _._NgIf_61_9 = _._appEl_61 = _._NgIf_60_9 = _._appEl_60 = _._MaterialButtonComponent_59_6 = _._AcxDarkTheme_59_5 = _._compView_59 = _._MaterialButtonComponent_56_6 = _._AcxDarkTheme_56_5 = _._card_demo_template$_compView_56 = _._SkawaCardActionsComponent_55_5 = _._card_demo_template$_compView_55 = _._MaterialIconComponent_54_5 = _._card_demo_template$_compView_54 = _._MaterialButtonComponent_53_6 = _._AcxDarkTheme_53_5 = _._compView_53 = _._SkawaCardActionsComponent_52_5 = _._compView_52 = _._SkawaCardHeaderTitleDirective_50_5 = _._SkawaCardHeaderComponent_49_5 = _._compView_49 = _._SkawaCardComponent_48_5 = _._compView_48 = _._SkawaCardContentComponent_41_5 = _._card_demo_template$_compView_41 = null;
      _.componentStyles = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewCardDemoComponent1: function _ViewCardDemoComponent1(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._card_demo_template$_MaterialIconComponent_0_5 = _._card_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewCardDemoComponent2: function _ViewCardDemoComponent2(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._card_demo_template$_MaterialIconComponent_0_5 = _._card_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    FirstDownPercentComponent: function FirstDownPercentComponent() {
      this.value = null;
    },
    NavItemDemoComponent: function NavItemDemoComponent() {
    }
  },
  Z = {ElementRef: function ElementRef(t0) {
      this.nativeElement = t0;
    }, DomSanitizationService: function DomSanitizationService() {
    }, DynamicComponent: function DynamicComponent(t0, t1, t2, t3) {
      var _ = this;
      _._slowComponentLoader = t0;
      _._componentLoader = t1;
      _._dynamic_component$_changeDetectorRef = t2;
      _._onLoadController = t3;
      _._viewContainerRef = null;
      _._loadDeferred = false;
      _._componentType = _._childComponent = null;
      _._typeChanged = false;
      _._componentFactory = null;
      _._factoryChanged = false;
      _._dynamic_component$_value = null;
      _._valueChanged = false;
    }, DynamicComponent__initialize_closure: function DynamicComponent__initialize_closure(t0, t1) {
      this.$this = t0;
      this.loadType = t1;
    }, ActivationHandler: function ActivationHandler() {
    },
    viewFactory_DropdownButtonComponent1: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      H.intTypeCheck(parentIndex);
      t1 = new Z._ViewDropdownButtonComponent1(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    viewFactory_DropdownButtonComponent2: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new Z._ViewDropdownButtonComponent2(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    viewFactory_DropdownButtonComponent3: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      H.intTypeCheck(parentIndex);
      t1 = new Z._ViewDropdownButtonComponent3(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    ViewDropdownButtonComponent0: function ViewDropdownButtonComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._dropdown_button_template$_el_0 = _._dropdown_button_template$_expr_12 = _._dropdown_button_template$_expr_11 = _._dropdown_button_template$_expr_10 = _._dropdown_button_template$_expr_9 = _._dropdown_button_template$_expr_8 = _._dropdown_button_template$_expr_7 = _._dropdown_button_template$_expr_6 = _._dropdown_button_template$_expr_5 = _._dropdown_button_template$_expr_4 = _._dropdown_button_template$_expr_3 = _._dropdown_button_template$_expr_2 = _._dropdown_button_template$_expr_1 = _._dropdown_button_template$_NgIf_4_9 = _._dropdown_button_template$_appEl_4 = _._dropdown_button_template$_NgIf_3_9 = _._dropdown_button_template$_appEl_3 = _._dropdown_button_template$_NgIf_1_9 = _._dropdown_button_template$_appEl_1 = _._KeyboardOnlyFocusIndicatorDirective_0_6 = _._ButtonDirective_0_5 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewDropdownButtonComponent1: function _ViewDropdownButtonComponent1(t0, t1, t2) {
      var _ = this;
      _._dropdown_button_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t1;
      _.viewData = t2;
    },
    _ViewDropdownButtonComponent2: function _ViewDropdownButtonComponent2(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._dropdown_button_template$_expr_0 = _._dropdown_button_template$_GlyphComponent_0_5 = _._dropdown_button_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewDropdownButtonComponent3: function _ViewDropdownButtonComponent3(t0, t1, t2) {
      var _ = this;
      _._dropdown_button_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = _._dropdown_button_template$_el_0 = _._dropdown_button_template$_expr_1 = _._dropdown_button_template$_expr_0 = null;
      _.parentView = t1;
      _.viewData = t2;
    },
    _defaultKeyProvider: function(o) {
      return o;
    },
    _MultiSelectionModelImpl$: function(initialSelection, keyProvider, $T) {
      var t2, t3,
        t1 = P.LinkedHashSet_LinkedHashSet(new Z._MultiSelectionModelImpl_closure(keyProvider, $T), new Z._MultiSelectionModelImpl_closure0(keyProvider, $T), $T);
      t1.addAll$1(0, initialSelection);
      t2 = Y.ChangeRecord;
      t3 = new H.TypeImpl(t2).$eq(0, C.Type_dynamic_0Rz) || new H.TypeImpl(t2).$eq(0, C.Type_ChangeRecord_INA);
      return new Z._MultiSelectionModelImpl(t1, null, null, new B.ChangeNotifier([t2]), t3, [$T]);
    },
    CastIterable: function CastIterable() {
    },
    SelectionChangeRecord: function SelectionChangeRecord() {
    },
    _MultiSelectionModelImpl: function _MultiSelectionModelImpl(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.selectedValues = t0;
      _.SelectionChangeNotifier__selectionChangeController = t1;
      _.SelectionChangeNotifier__selectionChangeRecords = t2;
      _._delegate = t3;
      _._isNotGeneric = t4;
      _.$ti = t5;
    },
    _MultiSelectionModelImpl_closure: function _MultiSelectionModelImpl_closure(t0, t1) {
      this.keyProvider = t0;
      this.T = t1;
    },
    _MultiSelectionModelImpl_closure0: function _MultiSelectionModelImpl_closure0(t0, t1) {
      this.keyProvider = t0;
      this.T = t1;
    },
    SelectionChangeNotifier: function SelectionChangeNotifier() {
    },
    _SelectionChangeRecordImpl: function _SelectionChangeRecordImpl(t0, t1, t2) {
      this.added = t0;
      this.removed = t1;
      this.$ti = t2;
    },
    _SingleSelectionModelImpl: function _SingleSelectionModelImpl(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._keyOf = t0;
      _._selectedValues = t1;
      _._selectedKey = null;
      _.SelectionChangeNotifier__selectionChangeController = t2;
      _.SelectionChangeNotifier__selectionChangeRecords = t3;
      _._delegate = t4;
      _._isNotGeneric = t5;
      _.$ti = t6;
    },
    __MultiSelectionModelImpl_Observable_SelectionChangeNotifier: function __MultiSelectionModelImpl_Observable_SelectionChangeNotifier() {
    },
    __MultiSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable: function __MultiSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable() {
    },
    __SingleSelectionModelImpl_Observable_SelectionChangeNotifier: function __SingleSelectionModelImpl_Observable_SelectionChangeNotifier() {
    },
    __SingleSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable: function __SingleSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable() {
    },
    _stateEquals: function(a, b) {
      var t1;
      if (a === b)
        return true;
      a.get$captureEvents();
      b.get$captureEvents();
      if (a.get$left(a) == b.get$left(b))
        if (a.get$top(a) == b.get$top(b)) {
          a.get$right(a);
          b.get$right(b);
          a.get$bottom(a);
          b.get$bottom(b);
          a.get$width(a);
          b.get$width(b);
          if (a.get$minWidth(a) == b.get$minWidth(b)) {
            a.get$height(a);
            b.get$height(b);
            a.get$zIndex(a);
            b.get$zIndex(b);
            a.get$position(a);
            b.get$position(b);
            t1 = true;
          } else
            t1 = false;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    _stateHashCode: function(a) {
      a.get$captureEvents();
      return X.hashObjects([false, a.get$left(a), a.get$top(a), a.get$right(a), a.get$bottom(a), a.get$width(a), a.get$minWidth(a), a.get$height(a), a.get$zIndex(a), a.get$position(a)]);
    },
    MutableOverlayState_MutableOverlayState$from: function(other) {
      var _null = null;
      return Z.MutableOverlayState$(_null, false, _null, _null, _null, _null, _null, _null, C.Visibility_None_display_none, _null, _null);
    },
    MutableOverlayState$: function(bottom, $captureEvents, height, left, minWidth, position, right, $top, visibility, width, zIndex) {
      var t1 = new Z.MutableOverlayState(new Z.AsyncUpdateScheduler());
      t1._captureEvents = false;
      t1._left = left;
      t1._top = $top;
      t1._right = right;
      t1._bottom = bottom;
      t1._overlay_state$_width = width;
      t1._minWidth = minWidth;
      t1._overlay_state$_height = height;
      t1._overlay_state$_zIndex = zIndex;
      t1._visibility = visibility;
      return t1;
    },
    OverlayState: function OverlayState() {
    },
    _ImmutableOverlayState: function _ImmutableOverlayState() {
    },
    MutableOverlayState: function MutableOverlayState(t0) {
      var _ = this;
      _._asyncScheduler = t0;
      _._visibility = _._overlay_state$_zIndex = _._overlay_state$_height = _._minWidth = _._overlay_state$_width = _._bottom = _._right = _._top = _._left = _._captureEvents = null;
    },
    PopupHierarchy: function PopupHierarchy(t0) {
      var _ = this;
      _._visiblePopupStack = t0;
      _._lastTriggerEvent = _._keyUpListener = _._triggerListener = _._rootPane = null;
    },
    PopupHierarchyElement: function PopupHierarchyElement() {
    },
    AsyncUpdateScheduler: function AsyncUpdateScheduler() {
      this._isUpdateScheduled = false;
      this._onUpdateStreamController = null;
    },
    AsyncUpdateScheduler_scheduleUpdate_closure: function AsyncUpdateScheduler_scheduleUpdate_closure(t0) {
      this.$this = t0;
    },
    isSpaceKey: function($event) {
      var t1 = $event.keyCode;
      return t1 !== 0 ? t1 === 32 : $event.key === " ";
    },
    triggersOutside: function(element) {
      var t1 = {};
      t1.element = element;
      return Z.triggersOutsideAny(new Z.triggersOutside_closure(t1));
    },
    triggersOutsideAny: function(checkNodeInside) {
      var t2, controller, t1 = {};
      H.functionTypeCheck(checkNodeInside, {func: 1, ret: P.bool, args: [W.Node]});
      t1.listener = t1.mouseUpListener = t1.mouseDownListener = t1.clickListener = t1.controller = null;
      if ($.enableNewTriggerLogic == null)
        $.enableNewTriggerLogic = true;
      t2 = W.Event;
      controller = new P._SyncBroadcastStreamController(new Z.triggersOutsideAny_closure(t1, checkNodeInside), new Z.triggersOutsideAny_closure0(t1), [t2]);
      t1.controller = controller;
      return new P._BroadcastStream(controller, [t2]);
    },
    closestWithClass: function(target, className) {
      for (; target != null;) {
        if (H.boolConversionCheck(target.hasAttribute("class")) && J.get$classes$x(target).contains$1(0, className))
          return target;
        target = target.parentElement;
      }
      return;
    },
    isParentOf: function(element, node) {
      for (; node != null;)
        if (node === element)
          return true;
        else
          node = node.parentElement;
      return false;
    },
    triggersOutside_closure: function triggersOutside_closure(t0) {
      this._box_0 = t0;
    },
    triggersOutsideAny_closure: function triggersOutsideAny_closure(t0, t1) {
      this._box_1 = t0;
      this.checkNodeInside = t1;
    },
    triggersOutsideAny__closure: function triggersOutsideAny__closure(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.checkNodeInside = t2;
    },
    triggersOutsideAny__closure0: function triggersOutsideAny__closure0(t0) {
      this._box_0 = t0;
    },
    triggersOutsideAny__closure1: function triggersOutsideAny__closure1(t0, t1) {
      this._box_0 = t0;
      this._box_1 = t1;
    },
    triggersOutsideAny__closure2: function triggersOutsideAny__closure2(t0, t1) {
      this._box_0 = t0;
      this._box_1 = t1;
    },
    triggersOutsideAny_closure0: function triggersOutsideAny_closure0(t0) {
      this._box_1 = t0;
    },
    SkawaNavItemComponent: function SkawaNavItemComponent(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._changeDetector = t0;
      _.hovering = false;
      _.icon = null;
      _.TextOnlyMixin_textOnly = t1;
      _.raised = _._isMouseDown = _._clickFocused = _._focused = false;
      _._trigger = t2;
      _._nonTabbableIndex = t3;
      _._shouldHandleSpaceKey = t4;
      _.role = t5;
      _.disabled = false;
      _.tabbable = true;
      _.HasTabIndex__tabIndex = t6;
      _._focus$_root = t7;
    },
    _SkawaNavItemComponent_MaterialButtonBase_TextOnlyMixin: function _SkawaNavItemComponent_MaterialButtonBase_TextOnlyMixin() {
    },
    ViewMarkdownDemoComponent0: function ViewMarkdownDemoComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._markdown_demo_template$_expr_4 = _._markdown_demo_template$_expr_3 = _._SkawaMarkdownRendererComponent_6_5 = _._markdown_demo_template$_compView_6 = _._SkawaRawMarkdownRendererComponent_3_5 = _._markdown_demo_template$_compView_3 = _._markdown_demo_template$_DemoHeaderComponent_0_5 = _._markdown_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewNavItemDemoComponent0: function ViewNavItemDemoComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._SkawaNavItemComponent_8_5 = _._nav_item_demo_template$_compView_8 = _._SkawaNavItemComponent_6_5 = _._nav_item_demo_template$_compView_6 = _._SkawaNavItemComponent_4_5 = _._nav_item_demo_template$_compView_4 = _._MaterialTemporaryDrawerComponent_3_5 = _._nav_item_demo_template$_compView_3 = _._nav_item_demo_template$_MaterialButtonComponent_1_6 = _._nav_item_demo_template$_AcxDarkTheme_1_5 = _._nav_item_demo_template$_compView_1 = _._nav_item_demo_template$_DemoHeaderComponent_0_5 = _._nav_item_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    }
  },
  O = {
    ComponentStyles$_: function(_styles, contentPrefix, hostPrefix, _componentId, _componentUrl) {
      var t1 = new O.ComponentStyles(_componentUrl, _styles, _componentId, contentPrefix, hostPrefix);
      t1._appendStyles$0();
      return t1;
    },
    ComponentStyles_ComponentStyles$scoped: function(styles, componentUrl) {
      var t1, t2, componentId;
      H.assertSubtype(styles, "$isList", [P.Object], "$asList");
      t1 = H.S($.appViewUtils.appId) + "-";
      t2 = $.ComponentStyles__nextUniqueId;
      $.ComponentStyles__nextUniqueId = t2 + 1;
      componentId = t1 + t2;
      return O.ComponentStyles$_(styles, "_ngcontent-" + componentId, "_nghost-" + componentId, componentId, componentUrl);
    },
    _flattenStyles: function(styles, target, componentIdOrNull) {
      var t1, t2, l, i, styleOrList;
      H.assertSubtype(styles, "$isList", [P.Object], "$asList");
      H.assertSubtype(target, "$isList", [P.String], "$asList");
      t1 = J.getInterceptor$asx(styles);
      t2 = t1.get$isEmpty(styles);
      if (t2)
        return target;
      l = t1.get$length(styles);
      if (typeof l !== "number")
        return H.iae(l);
      i = 0;
      for (; i < l; ++i) {
        styleOrList = t1.$index(styles, i);
        if (!!J.getInterceptor$(styleOrList).$isList)
          O._flattenStyles(styleOrList, target, componentIdOrNull);
        else {
          H.stringTypeCheck(styleOrList);
          t2 = $.$get$_idPlaceholder();
          styleOrList.toString;
          C.JSArray_methods.add$1(target, H.stringReplaceAllUnchecked(styleOrList, t2, componentIdOrNull));
        }
      }
      return target;
    },
    ComponentStyles: function ComponentStyles(t0, t1, t2, t3, t4) {
      var _ = this;
      _._componentUrl = t0;
      _._styles = t1;
      _._componentId = t2;
      _.contentPrefix = t3;
      _.hostPrefix = t4;
    },
    _UnscopedComponentStyles: function _UnscopedComponentStyles(t0, t1, t2, t3, t4) {
      var _ = this;
      _._componentUrl = t0;
      _._styles = t1;
      _._componentId = t2;
      _.contentPrefix = t3;
      _.hostPrefix = t4;
    },
    MaterialPersistentDrawerDirectiveNgCd: function MaterialPersistentDrawerDirectiveNgCd(t0) {
      this.instance = t0;
      this._material_persistent_drawer_template$_expr_1 = this._material_persistent_drawer_template$_expr_0 = null;
    },
    Focusable: function Focusable() {
    },
    KeyboardOnlyFocusIndicatorDirective: function KeyboardOnlyFocusIndicatorDirective(t0, t1, t2) {
      this._keyboard_only_focus_indicator$_element = t0;
      this._keyboard_only_focus_indicator$_domService = t1;
      this._lastInteraction = t2;
    },
    KeyboardOnlyFocusIndicatorDirective_resetOutline_closure: function KeyboardOnlyFocusIndicatorDirective_resetOutline_closure(t0) {
      this.$this = t0;
    },
    KeyboardOnlyFocusIndicatorDirective_hideOutline_closure: function KeyboardOnlyFocusIndicatorDirective_hideOutline_closure(t0) {
      this.$this = t0;
    },
    _InteractionType: function _InteractionType(t0) {
      this._keyboard_only_focus_indicator$_name = t0;
    },
    ViewMaterialSelectDropdownItemComponent0$: function(parentView, parentIndex, $T) {
      var t2,
        t1 = new O.ViewMaterialSelectDropdownItemComponent0(parentView, S.AppViewData_AppViewData(3, C.ViewType_1, parentIndex), [$T]),
        styles = $.ViewMaterialSelectDropdownItemComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewMaterialSelectDropdownItemComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$MaterialSelectDropdownItemComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("material-select-dropdown-item");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      t1.updateChildClassNonHtml$2(t2, "item");
      return t1;
    },
    ViewMaterialSelectDropdownItemComponent0: function ViewMaterialSelectDropdownItemComponent0(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._expr_14 = _._expr_13 = _._expr_12 = _._expr_11 = _._expr_10 = _._material_select_dropdown_item_template$_expr_9 = _._material_select_dropdown_item_template$_expr_8 = _._material_select_dropdown_item_template$_expr_7 = _._material_select_dropdown_item_template$_expr_6 = _._material_select_dropdown_item_template$_expr_5 = _._material_select_dropdown_item_template$_expr_4 = _._NgIf_6_9 = _._appEl_6 = _._material_select_dropdown_item_template$_NgIf_4_9 = _._material_select_dropdown_item_template$_appEl_4 = _._material_select_dropdown_item_template$_NgIf_2_9 = _._material_select_dropdown_item_template$_appEl_2 = _._material_select_dropdown_item_template$_NgIf_0_9 = _._material_select_dropdown_item_template$_appEl_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    ViewMaterialSelectDropdownItemComponent0_build_closure: function ViewMaterialSelectDropdownItemComponent0_build_closure(t0) {
      this.$this = t0;
    },
    ViewMaterialSelectDropdownItemComponent0_build_closure0: function ViewMaterialSelectDropdownItemComponent0_build_closure0(t0) {
      this.$this = t0;
    },
    ViewMaterialSelectDropdownItemComponent0_build_closure1: function ViewMaterialSelectDropdownItemComponent0_build_closure1(t0) {
      this.$this = t0;
    },
    ViewMaterialSelectDropdownItemComponent0_build_closure2: function ViewMaterialSelectDropdownItemComponent0_build_closure2(t0) {
      this.$this = t0;
    },
    _ViewMaterialSelectDropdownItemComponent1: function _ViewMaterialSelectDropdownItemComponent1(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialSelectDropdownItemComponent2: function _ViewMaterialSelectDropdownItemComponent2(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_select_dropdown_item_template$_NgIf_2_9 = _._material_select_dropdown_item_template$_appEl_2 = _._material_select_dropdown_item_template$_NgIf_0_9 = _._material_select_dropdown_item_template$_appEl_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialSelectDropdownItemComponent2_build_closure: function _ViewMaterialSelectDropdownItemComponent2_build_closure(t0) {
      this.$this = t0;
    },
    _ViewMaterialSelectDropdownItemComponent2_build_closure0: function _ViewMaterialSelectDropdownItemComponent2_build_closure0(t0) {
      this.$this = t0;
    },
    _ViewMaterialSelectDropdownItemComponent3: function _ViewMaterialSelectDropdownItemComponent3(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_select_dropdown_item_template$_expr_1 = _._material_select_dropdown_item_template$_expr_0 = _._MaterialCheckboxComponent_0_5 = _._material_select_dropdown_item_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialSelectDropdownItemComponent4: function _ViewMaterialSelectDropdownItemComponent4(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_select_dropdown_item_template$_NgIf_1_9 = _._material_select_dropdown_item_template$_appEl_1 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialSelectDropdownItemComponent4_build_closure: function _ViewMaterialSelectDropdownItemComponent4_build_closure(t0) {
      this.$this = t0;
    },
    _ViewMaterialSelectDropdownItemComponent5: function _ViewMaterialSelectDropdownItemComponent5(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._GlyphComponent_0_5 = _._material_select_dropdown_item_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    _ViewMaterialSelectDropdownItemComponent6: function _ViewMaterialSelectDropdownItemComponent6(t0, t1, t2, t3) {
      var _ = this;
      _._material_select_dropdown_item_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = null;
      _.parentView = t1;
      _.viewData = t2;
      _.$ti = t3;
    },
    _ViewMaterialSelectDropdownItemComponent7: function _ViewMaterialSelectDropdownItemComponent7(t0, t1, t2) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_select_dropdown_item_template$_expr_2 = _._material_select_dropdown_item_template$_expr_1 = _._material_select_dropdown_item_template$_expr_0 = _._DynamicComponent_0_8 = _._material_select_dropdown_item_template$_appEl_0 = _._material_select_dropdown_item_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
      _.$ti = t2;
    },
    FocusableMixin: function FocusableMixin() {
    },
    ActiveItemModel: function ActiveItemModel(t0, t1, t2, t3) {
      var _ = this;
      _._modelChanged = t0;
      _._ids = t1;
      _._idGenerator = t2;
      _._loop = _._items = null;
      _._activeIndex = -1;
      _.$ti = t3;
    },
    HasFactoryRenderer: function HasFactoryRenderer() {
    },
    AcxImperativeViewUtils: function AcxImperativeViewUtils() {
    },
    SkawaInfobarComponent: function SkawaInfobarComponent(t0) {
      var _ = this;
      _._infobar$_changeDetectorRef = t0;
      _.primaryActionButton = _.url = _._icon = null;
    },
    ViewInfobarDemoComponent0: function ViewInfobarDemoComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._SkawaInfobarComponent_15_5 = _._infobar_demo_template$_compView_15 = _._SkawaInfobarComponent_11_5 = _._compView_11 = _._SkawaInfobarComponent_7_5 = _._infobar_demo_template$_compView_7 = _._SkawaInfobarComponent_3_5 = _._infobar_demo_template$_compView_3 = _._infobar_demo_template$_DemoHeaderComponent_0_5 = _._infobar_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    interpolate0: function(p) {
      if (typeof p === "string")
        return p;
      return p == null ? "" : H.S(p);
    }
  },
  V = {ViewContainer: function ViewContainer(t0, t1, t2, t3) {
      var _ = this;
      _.index = t0;
      _.parentIndex = t1;
      _.parentView = t2;
      _.nativeElement = t3;
      _.nestedViews = null;
    }, ViewMaterialTemporaryDrawerComponent0: function ViewMaterialTemporaryDrawerComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_temporary_drawer_template$_expr_1 = _._material_temporary_drawer_template$_expr_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    }, MaterialSelectBase: function MaterialSelectBase() {
    }, PopupRef: function PopupRef() {
    }, ManagedZone: function ManagedZone() {
    }, ManagedZoneBase: function ManagedZoneBase() {
    },
    systemTime: function() {
      return new P.DateTime(Date.now(), false);
    },
    Clock: function Clock() {
    },
    SkawaCkeditorComponent: function SkawaCkeditorComponent(t0) {
      var _ = this;
      _._changeController = t0;
      _.configUrl = _.content = _.extraPlugins = _.editorName = _._ckeditor = null;
    },
    ExtraPlugin: function ExtraPlugin(t0, t1, t2) {
      this.name = t0;
      this.path = t1;
      this.entrypoint = t2;
    },
    _CKEditor: function _CKEditor() {
    },
    viewFactory_AppComponentHost0: function(parentView, parentIndex) {
      return new V._ViewAppComponentHost0(parentView, S.AppViewData_AppViewData(3, C.ViewType_0, parentIndex));
    },
    ViewAppComponent0: function ViewAppComponent0(t0, t1) {
      var _ = this;
      _._compView_41 = _._SkawaSidebarItemComponent_38_5 = _._compView_38 = _._SkawaSidebarItemComponent_35_5 = _._compView_35 = _._SkawaSidebarItemComponent_32_5 = _._compView_32 = _._SkawaSidebarItemComponent_29_5 = _._compView_29 = _._SkawaSidebarItemComponent_26_5 = _._compView_26 = _._SkawaSidebarItemComponent_23_5 = _._compView_23 = _._SkawaSidebarItemComponent_20_5 = _._compView_20 = _._SkawaSidebarItemComponent_17_5 = _._compView_17 = _._SkawaSidebarItemComponent_15_5 = _._compView_15 = _._SkawaSidebarItemComponent_12_5 = _._compView_12 = _._SkawaSidebarItemComponent_9_5 = _._compView_9 = _._SkawaSidebarItemComponent_6_5 = _._compView_6 = _._SkawaSidebarItemComponent_3_5 = _._compView_3 = _._SkawaSidebarItemComponent_1_5 = _._compView_1 = _._MaterialPersistentDrawerDirective_0_5 = null;
      _._compView_70 = _._SidebarItemDemoComponent_69_5 = _._compView_69 = _._NavItemDemoComponent_68_5 = _._compView_68 = _.__EditorRenderer_67_6 = _._MarkdownDemoComponent_67_5 = _._compView_67 = _._InfobarDemoComponent_66_5 = _._compView_66 = _._HexColorizePipeDemoComponent_65_5 = _._compView_65 = _._GridDemoComponent_64_5 = _._compView_64 = _._DataTableDemoComponent_63_5 = _._compView_63 = _._CkeditorDemoComponent_62_5 = _._compView_62 = _._CardDemoComponent_61_5 = _._compView_61 = _._MaterialIconComponent_55_5 = _._compView_55 = _._MaterialButtonComponent_54_6 = _._AcxDarkTheme_54_5 = _._compView_54 = _._SkawaSidebarItemComponent_47_5 = _._compView_47 = _._SkawaSidebarItemComponent_44_5 = _._compView_44 = _._SkawaSidebarItemComponent_41_5 = null;
      _.componentStyles = _.ctx = _.rootEl = _._el_52 = _._el_0 = _._app_component_template$_expr_17 = _._ExtendedMaterialIconDemoComponent_71_5 = _._compView_71 = _._SnackbarDemoComponent_70_6 = _._SnackbarService_70_5 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewAppComponentHost0: function _ViewAppComponentHost0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _.__Clock_0_25 = _.__DomPopupSourceFactory_0_24 = _.__defaultPopupPositions_0_23 = _.__OverlayService_0_22 = _.__OverlayDomRenderService_0_21 = _.__ZIndexer_0_20 = _.__OverlayStyleConfig_0_19 = _.__overlayViewportBoundaries_0_18 = _.__overlayRepositionLoop_0_17 = _.__overlaySyncDom_0_16 = _.__overlayContainer_0_15 = _.__overlayContainerParent_0_14 = _.__overlayContainerName_0_13 = _.__ManagedZone_0_12 = _.__DomRuler_0_11 = _.__AcxImperativeViewUtils_0_10 = _.__DomService_0_9 = _.__Window_0_8 = _.__HtmlDocument_0_7 = _.__Document_0_6 = _._AppComponent_0_5 = _._compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewSchoolTableComponent0: function ViewSchoolTableComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._school_table_template$_expr_20 = _._expr_15 = _._school_table_template$_expr_9 = _._school_table_template$_expr_1 = _._SkawaDataTableSortDirective_4_6 = _._SkawaDataTableColComponent_4_5 = _._school_table_template$_compView_4 = _._SkawaDataTableSortDirective_3_6 = _._SkawaDataTableColComponent_3_5 = _._school_table_template$_compView_3 = _._SkawaDataTableSortDirective_2_6 = _._SkawaDataTableColComponent_2_5 = _._school_table_template$_compView_2 = _._SkawaDataTableColComponent_1_5 = _._school_table_template$_compView_1 = _._SkawaDataTableComponent_0_5 = _._school_table_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ExtendedMaterialIconDemoComponent: function ExtendedMaterialIconDemoComponent() {
    },
    viewFactory_HexColorizePipeDemoComponent1: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      H.intTypeCheck(parentIndex);
      t1 = new V._ViewHexColorizePipeDemoComponent1(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    ViewHexColorizePipeDemoComponent0: function ViewHexColorizePipeDemoComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._pipe_hedColorize_0 = _._hex_colorize_pipe_demo_template$_expr_3 = _._NgFor_1_9 = _._hex_colorize_pipe_demo_template$_appEl_1 = _._hex_colorize_pipe_demo_template$_DemoHeaderComponent_0_5 = _._hex_colorize_pipe_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewHexColorizePipeDemoComponent1: function _ViewHexColorizePipeDemoComponent1(t0, t1, t2) {
      var _ = this;
      _._hex_colorize_pipe_demo_template$_textBinding_1 = t0;
      _.componentStyles = _.ctx = _.rootEl = _._hex_colorize_pipe_demo_template$_el_0 = _._pipe_hedColorize_0_0 = _._hex_colorize_pipe_demo_template$_expr_0 = null;
      _.parentView = t1;
      _.viewData = t2;
    },
    SkawaCardComponent: function SkawaCardComponent() {
      this.cardHeader = null;
    },
    SkawaCardContentComponent: function SkawaCardContentComponent(t0) {
      this.parentCard = t0;
      this.collapsed = null;
    },
    SkawaCardHeaderComponent: function SkawaCardHeaderComponent() {
      var _ = this;
      _.headerActions = _.image = _.subhead = null;
      _.statusColor = "transparent";
    }
  },
  A = {View: function View() {
    }, MapInjector: function MapInjector(t0, t1) {
      this._map$_providers = t0;
      this.parent = t1;
    },
    pureProxy1: function(fn, $T, S0) {
      var t1 = {};
      H.functionTypeCheck(fn, {func: 1, ret: $T, args: [S0]});
      t1.result = null;
      t1.first = true;
      t1.v0 = null;
      return new A.pureProxy1_closure(t1, fn, S0, $T);
    },
    pureProxy2: function(fn, $T, S0, S1) {
      var t1 = {};
      H.functionTypeCheck(fn, {func: 1, ret: $T, args: [S0, S1]});
      t1.result = null;
      t1.first = true;
      t1.v1 = t1.v0 = null;
      return new A.pureProxy2_closure(t1, fn, S0, S1, $T);
    },
    pureProxy1_closure: function pureProxy1_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.fn = t1;
      _.S0 = t2;
      _.T = t3;
    },
    pureProxy2_closure: function pureProxy2_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.fn = t1;
      _.S0 = t2;
      _.S1 = t3;
      _.T = t4;
    },
    viewFactory_MaterialPopupComponent1: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new A._ViewMaterialPopupComponent1(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    ViewMaterialPopupComponent0: function ViewMaterialPopupComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_popup_template$_expr_0 = _._TemplateRef_1_7 = _._material_popup_template$_appEl_1 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewMaterialPopupComponent1: function _ViewMaterialPopupComponent1(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_popup_template$_el_3 = _._material_popup_template$_el_1 = _._material_popup_template$_expr_13 = _._material_popup_template$_expr_12 = _._material_popup_template$_expr_11 = _._material_popup_template$_expr_10 = _._material_popup_template$_expr_8 = _._material_popup_template$_expr_7 = _._material_popup_template$_expr_6 = _._material_popup_template$_expr_5 = _._material_popup_template$_expr_4 = _._material_popup_template$_expr_3 = _._material_popup_template$_expr_2 = _._material_popup_template$_expr_1 = _._material_popup_template$_expr_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewSkawaCkeditorComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new A.ViewSkawaCkeditorComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewSkawaCkeditorComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewSkawaCkeditorComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-ckeditor");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewSkawaCkeditorComponent0: function ViewSkawaCkeditorComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._ckeditor_template$_el_0 = _._ckeditor_template$_expr_2 = _._ckeditor_template$_expr_1 = _._ckeditor_template$_expr_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewSkawaMarkdownRendererComponent0: function ViewSkawaMarkdownRendererComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._markdown_renderer_template$_el_0 = _._LanguageDirectionDirective_0_6 = _._EditorRenderTarget_0_5 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    HexColorizePipeDemoComponent: function HexColorizePipeDemoComponent(t0) {
      this.parts = t0;
    },
    GridUpdate: function GridUpdate(t0, t1) {
      this.tilePositions = t0;
      this.gridHeight = t1;
    },
    GridTile: function GridTile() {
    },
    DomTransformReposition: function DomTransformReposition() {
    },
    GridBase: function GridBase() {
    },
    GridBase_calculateGridUpdate_closure: function GridBase_calculateGridUpdate_closure(t0, t1) {
      this.tileWidthWithGutter = t0;
      this.xAdjustmentForCentering = t1;
    },
    GridBase_calculateGridUpdate_closure0: function GridBase_calculateGridUpdate_closure0(t0) {
      this.maxYTranslation = t0;
    },
    noProviderError: function(token) {
      return new P.ArgumentError(false, null, null, "No provider found for " + token.toString$0(0));
    }
  },
  U = {ExceptionHandler: function ExceptionHandler() {
    }, JsTestability: function JsTestability() {
    }, JsTestabilityRegistry: function JsTestabilityRegistry() {
    }, HasDisabled: function HasDisabled() {
    },
    ViewMaterialButtonComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new U.ViewMaterialButtonComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewMaterialButtonComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewMaterialButtonComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$MaterialButtonComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("material-button");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      T.updateAttribute(t2, "animated", "true");
      return t1;
    },
    ViewMaterialButtonComponent0: function ViewMaterialButtonComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_button_template$_expr_7 = _._material_button_template$_expr_6 = _._material_button_template$_expr_5 = _._material_button_template$_expr_4 = _._material_button_template$_expr_3 = _._material_button_template$_expr_2 = _._material_button_template$_expr_1 = _._material_button_template$_expr_0 = _._MaterialRippleComponent_2_5 = _._material_button_template$_compView_2 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    MaterialButtonWrapper: function MaterialButtonWrapper() {
    },
    DefaultEquality: function DefaultEquality(t0) {
      this.$ti = t0;
    },
    ListEquality: function ListEquality(t0) {
      this.$ti = t0;
    },
    Node0: function Node0() {
    },
    Element0: function Element0(t0, t1, t2) {
      this.tag = t0;
      this.children = t1;
      this.attributes = t2;
    },
    Element_textContent_closure: function Element_textContent_closure() {
    },
    Text0: function Text0(t0) {
      this.text = t0;
    },
    UnparsedContent: function UnparsedContent(t0) {
      this.textContent = t0;
    },
    CKEditor: function CKEditor() {
    },
    CKEditorInstance: function CKEditorInstance() {
    },
    viewFactory_FirstDownPercentComponentHost0: function(parentView, parentIndex) {
      return new U._ViewFirstDownPercentComponentHost0(parentView, S.AppViewData_AppViewData(3, C.ViewType_0, parentIndex));
    },
    ViewFirstDownPercentComponent0: function ViewFirstDownPercentComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._first_down_percent_template$_expr_0 = _._MaterialProgressComponent_0_5 = _._first_down_percent_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewFirstDownPercentComponentHost0: function _ViewFirstDownPercentComponentHost0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._FirstDownPercentComponent_0_5 = _._first_down_percent_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    RowData: function RowData() {
    }
  },
  T = {BrowserExceptionHandler: function BrowserExceptionHandler() {
    },
    ButtonDirective$: function(element, role, addTabIndexWhenNonTabbable, handleSpacePresses) {
      var _null = null,
        t1 = role == null ? "button" : role;
      return new T.ButtonDirective(new P._SyncBroadcastStreamController(_null, _null, [W.UIEvent]), _null, true, t1, _null, element);
    },
    ButtonDirective: function ButtonDirective(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._trigger = t0;
      _._nonTabbableIndex = t1;
      _._shouldHandleSpaceKey = t2;
      _.role = t3;
      _.disabled = false;
      _.tabbable = true;
      _.HasTabIndex__tabIndex = t4;
      _._focus$_root = t5;
    },
    _ButtonDirective_RootFocusable_HasTabIndex: function _ButtonDirective_RootFocusable_HasTabIndex() {
    },
    closure: function closure() {
    },
    Angular2ManagedZone$: function(_ngZone) {
      var t1 = new T.Angular2ManagedZone(_ngZone);
      t1.Angular2ManagedZone$1(_ngZone);
      return t1;
    },
    Angular2ManagedZone: function Angular2ManagedZone(t0) {
      this._angular_2$_ngZone = t0;
      this._isDisposed = false;
      this.outerZone = null;
    },
    Angular2ManagedZone_closure: function Angular2ManagedZone_closure(t0) {
      this.$this = t0;
    },
    createDomService: function(service, disposer, zone, $window) {
      var t1;
      if (service != null)
        return service;
      t1 = $._singletonService;
      if (t1 != null)
        return t1;
      t1 = [{func: 1, ret: -1}];
      t1 = new F.DomService(H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), zone, $window, C.DomServiceState_0);
      $._singletonService = t1;
      M.createDomServiceWebdriverTestability(t1).register$0(0);
      if (disposer != null)
        disposer.addFunction$1(new T.createDomService_closure());
      return $._singletonService;
    },
    createDomService_closure: function createDomService_closure() {
    },
    Intl_message: function(message_str, args, desc, examples, $name) {
      var t1 = P.Object;
      H.assertSubtype(examples, "$isMap", [P.String, t1], "$asMap");
      H.assertSubtype(args, "$isList", [t1], "$asList");
      $.$get$messageLookup().toString;
      return message_str;
    },
    Bidi_estimateDirectionOfText: function(text) {
      var t1, t2, rtlCount, total, hasWeaklyLtr, _i, token, t3, t4;
      for (t1 = C.JSString_methods.split$1(text, P.RegExp_RegExp("\\s+", true, false)), t2 = t1.length, rtlCount = 0, total = 0, hasWeaklyLtr = false, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        token = t1[_i];
        t3 = P.RegExp_RegExp("^[^A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF]*[\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC]", true, false);
        t4 = typeof token !== "string";
        if (t4)
          H.throwExpression(H.argumentErrorValue(token));
        if (t3._nativeRegExp.test(token)) {
          ++rtlCount;
          ++total;
        } else {
          t3 = P.RegExp_RegExp("^http://", true, false);
          if (t4)
            H.throwExpression(H.argumentErrorValue(token));
          if (t3._nativeRegExp.test(token))
            hasWeaklyLtr = true;
          else {
            t3 = P.RegExp_RegExp("[A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF]", true, false);
            if (t4)
              H.throwExpression(H.argumentErrorValue(token));
            if (t3._nativeRegExp.test(token))
              ++total;
            else {
              t3 = P.RegExp_RegExp("\\d", true, false);
              if (t4)
                H.throwExpression(H.argumentErrorValue(token));
              if (t3._nativeRegExp.test(token))
                hasWeaklyLtr = true;
            }
          }
        }
      }
      if (total === 0)
        return hasWeaklyLtr ? C.TextDirection_ltr : C.TextDirection_ltr0;
      else if (rtlCount > 0.4 * total)
        return C.TextDirection_rtl;
      else
        return C.TextDirection_ltr;
    },
    TextDirection: function TextDirection(t0) {
      this.spanText = t0;
    },
    ViewSkawaRawMarkdownRendererComponent0: function ViewSkawaRawMarkdownRendererComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._raw_markdown_renderer_template$_el_0 = _._raw_markdown_renderer_template$_LanguageDirectionDirective_0_6 = _._raw_markdown_renderer_template$_EditorRenderTarget_0_5 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    DataTableDemoComponent: function DataTableDemoComponent() {
    },
    viewFactory_WrTableComponent1: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new T._ViewWrTableComponent1(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    viewFactory_WrTableComponent2: function(parentView, parentIndex) {
      var t1;
      H.interceptedTypeCheck(parentView, "$isAppView");
      t1 = new T._ViewWrTableComponent2(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)));
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    ViewWrTableComponent0: function ViewWrTableComponent0(t0, t1) {
      var _ = this;
      _._query_SkawaDataTableComponent_1_0_isDirty = true;
      _.componentStyles = _.ctx = _.rootEl = _._wr_table_template$_expr_0 = _._NgIf_4_9 = _._appEl_4 = _.__ActiveItemModel_3_13 = _._MaterialDropdownSelectComponent_3_5 = _._wr_table_template$_compView_3 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewWrTableComponent0_detectChangesInternal_closure: function ViewWrTableComponent0_detectChangesInternal_closure() {
    },
    _ViewWrTableComponent1: function _ViewWrTableComponent1(t0, t1) {
      var _ = this;
      _._query_SkawaDataTableColComponent_0_0_isDirty = true;
      _.componentStyles = _.ctx = _.rootEl = _._wr_table_template$_expr_2 = _._wr_table_template$_NgFor_1_9 = _._wr_table_template$_appEl_1 = _._wr_table_template$_SkawaDataTableComponent_0_5 = _._wr_table_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _ViewWrTableComponent1_detectChangesInternal_closure: function _ViewWrTableComponent1_detectChangesInternal_closure() {
    },
    _ViewWrTableComponent2: function _ViewWrTableComponent2(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._wr_table_template$_expr_3 = _._wr_table_template$_expr_2 = _._wr_table_template$_expr_1 = _._wr_table_template$_expr_0 = _._SkawaDataTableColComponent_0_6 = _._SkawaDataColRendererDirective_0_5 = _._wr_table_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    SnackbarDemoComponent: function SnackbarDemoComponent(t0) {
      this._snackbarService = t0;
    },
    SnackbarDemoComponent_showMessageWithCallback_closure: function SnackbarDemoComponent_showMessageWithCallback_closure() {
    },
    GridComponent: function GridComponent() {
      var _ = this;
      _._resizeTimer = _.grid = _.visibility = _._tiles = null;
      _._previousWidth = -1;
    },
    GridComponent_updateAndDisplay_closure: function GridComponent_updateAndDisplay_closure(t0, t1) {
      this.$this = t0;
      this.forceRefresh = t1;
    },
    GridComponent_ngOnInit_closure: function GridComponent_ngOnInit_closure(t0) {
      this.$this = t0;
    },
    GridTileDirective: function GridTileDirective(t0) {
      this.tile = t0;
    },
    _GridTileDirective_Object_DomTransformReposition: function _GridTileDirective_Object_DomTransformReposition() {
    },
    SnackbarService: function SnackbarService(t0) {
      this._messageQueue = t0;
    },
    SnackAction: function SnackAction() {
      this.callback = this.label = null;
    },
    SnackMessage: function SnackMessage() {
      this.action = this.duration = this.text = null;
    },
    SkawaSnackbarComponent: function SkawaSnackbarComponent(t0, t1, t2) {
      var _ = this;
      _._changeDetectorRef = t0;
      _._snackbar$_snackbarService = t1;
      _._tearDownDisposer = t2;
      _._animationBlocker = _.show = _._messageTimer = _.nextMessage = _.message = null;
    },
    SkawaSnackbarComponent_ngOnInit_closure: function SkawaSnackbarComponent_ngOnInit_closure(t0) {
      this.$this = t0;
    },
    SkawaSnackbarComponent__slideIn_closure: function SkawaSnackbarComponent__slideIn_closure(t0) {
      this.$this = t0;
    },
    SkawaSnackbarComponent_transitionEnd_closure: function SkawaSnackbarComponent_transitionEnd_closure(t0) {
      this.$this = t0;
    },
    updateClassBinding: function(element, className, isAdd) {
      if (H.boolConversionCheck(isAdd))
        element.classList.add(className);
      else
        element.classList.remove(className);
    },
    updateClassBindingNonHtml: function(element, className, isAdd) {
      var t1 = J.getInterceptor$x(element);
      if (isAdd)
        t1.get$classes(element).add$1(0, className);
      else
        t1.get$classes(element).remove$1(0, className);
    },
    updateAttribute: function(element, attribute, value) {
      if (value == null)
        element.removeAttribute(attribute);
      else
        T.setAttribute(element, attribute, value);
      $.domRootRendererIsDirty = true;
    },
    setAttribute: function(element, attribute, value) {
      element.setAttribute(attribute, value);
    },
    createText: function(contents) {
      return document.createTextNode(contents);
    },
    appendText: function($parent, text) {
      return H.interceptedTypeCheck($parent.appendChild(T.createText(text)), "$isText");
    },
    createAnchor: function() {
      return W.Comment_Comment();
    },
    appendAnchor: function($parent) {
      return H.interceptedTypeCheck($parent.appendChild(W.Comment_Comment()), "$isComment");
    },
    appendDiv: function(doc, $parent) {
      var t1 = doc.createElement("div");
      return H.interceptedTypeCheck($parent.appendChild(t1), "$isDivElement");
    },
    appendSpan: function(doc, $parent) {
      var t1 = doc.createElement("span");
      return H.interceptedTypeCheck($parent.appendChild(t1), "$isSpanElement");
    },
    appendElement: function(doc, $parent, tagName) {
      var t1 = doc.createElement(tagName);
      return H.interceptedTypeCheck($parent.appendChild(t1), "$isElement");
    },
    insertNodesBefore: function(nodes, $parent, sibling) {
      var l, i;
      H.assertSubtype(nodes, "$isList", [W.Node], "$asList");
      for (l = nodes.length, i = 0; i < l; ++i) {
        if (i >= nodes.length)
          return H.ioore(nodes, i);
        $parent.insertBefore(nodes[i], sibling);
      }
    },
    appendNodes: function(nodes, $parent) {
      var l, i;
      H.assertSubtype(nodes, "$isList", [W.Node], "$asList");
      for (l = nodes.length, i = 0; i < l; ++i) {
        if (i >= nodes.length)
          return H.ioore(nodes, i);
        $parent.appendChild(nodes[i]);
      }
    },
    removeNodes: function(nodes) {
      var l, i, t1, t2;
      H.assertSubtype(nodes, "$isList", [W.Node], "$asList");
      for (l = nodes.length, i = 0; i < l; ++i) {
        if (i >= nodes.length)
          return H.ioore(nodes, i);
        t1 = nodes[i];
        t2 = t1.parentNode;
        if (t2 != null)
          t2.removeChild(t1);
      }
    },
    insertNodesAsSibling: function(nodes, sibling) {
      var parentOfSibling, nextSibling;
      H.assertSubtype(nodes, "$isList", [W.Node], "$asList");
      parentOfSibling = sibling.parentNode;
      if (nodes.length === 0 || parentOfSibling == null)
        return;
      nextSibling = sibling.nextSibling;
      if (nextSibling == null)
        T.appendNodes(nodes, parentOfSibling);
      else
        T.insertNodesBefore(nodes, parentOfSibling, nextSibling);
    }
  },
  B = {MaterialTemporaryDrawerComponent: function MaterialTemporaryDrawerComponent(t0, t1) {
      this._visible = t0;
      this._visibleChange = t1;
    },
    MaterialButtonComponent$: function(element, darktheme, _changeDetector, role) {
      var _null = null;
      if (_changeDetector == null)
        H.throwExpression(P.Exception_Exception("Expecting change detector"));
      if (darktheme.isDarkTheme)
        element.classList.add("acx-theme-dark");
      return new B.MaterialButtonComponent(_changeDetector, new P._SyncBroadcastStreamController(_null, _null, [W.UIEvent]), _null, true, "button", _null, element);
    },
    MaterialButtonComponent: function MaterialButtonComponent(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._material_button$_changeDetector = t0;
      _.raised = _._isMouseDown = _._clickFocused = _._focused = false;
      _._trigger = t1;
      _._nonTabbableIndex = t2;
      _._shouldHandleSpaceKey = t3;
      _.role = t4;
      _.disabled = false;
      _.tabbable = true;
      _.HasTabIndex__tabIndex = t5;
      _._focus$_root = t6;
    },
    MaterialCheckboxComponent$: function(_root, _changeDetector, cd, hostTabIndex, role) {
      var _null = null,
        t1 = [P.bool],
        t2 = new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid()).nextId$0(),
        t3 = hostTabIndex == null ? _null : hostTabIndex.length !== 0;
      t3 = t3 === true ? hostTabIndex : "0";
      t1 = new B.MaterialCheckboxComponent(_changeDetector, _root, t3, "checkbox", new P._AsyncBroadcastStreamController(_null, _null, t1), new P._AsyncBroadcastStreamController(_null, _null, t1), new P._AsyncBroadcastStreamController(_null, _null, [P.String]), C.Icon_check_box_outline_blank, t2);
      t1._syncAriaChecked$0();
      return t1;
    },
    MaterialCheckboxComponent: function MaterialCheckboxComponent(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._material_checkbox$_changeDetector = t0;
      _._root = t1;
      _._defaultTabIndex = t2;
      _.role = t3;
      _._onChecked = t4;
      _._onIndeterminate = t5;
      _._onChange = t6;
      _._isKeyboardEvent = _._material_checkbox$_focused = _._checked = _.disabled = false;
      _._checkedStr = "false";
      _._indeterminate = false;
      _._material_checkbox$_icon = t7;
      _.contentId = t8;
    },
    MaterialListComponent: function MaterialListComponent() {
      this.size = "auto";
      this.role = "list";
    },
    ViewMaterialListComponent0: function ViewMaterialListComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._material_list_template$_expr_1 = _._material_list_template$_expr_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    _createRipple: function(clientX, clientY, container, center) {
      var ripple, t1, t2, containerWidth, containerHeight, minScale, maxScale, initialTransform, finalTransform, left, $top, t3, offsetX, offsetY, transformKeyframes,
        _s17_ = "calc(50% - 128px)",
        rect = container.getBoundingClientRect();
      if ($._numRipples < 3) {
        ripple = H.interceptedTypeCast($._rippleTemplate.cloneNode(false), "$isDivElement");
        t1 = $._ripplePool;
        (t1 && C.JSArray_methods).$indexSet(t1, $._rippleIndex, ripple);
        $._numRipples = $._numRipples + 1;
      } else {
        t1 = $._ripplePool;
        t2 = $._rippleIndex;
        t1.length;
        if (t2 >= 3)
          return H.ioore(t1, t2);
        ripple = t1[t2];
        (ripple && C.DivElement_methods).remove$0(ripple);
      }
      t1 = $._rippleIndex + 1;
      $._rippleIndex = t1;
      if (t1 === 3)
        $._rippleIndex = 0;
      if ($.$get$supportsAnimationApi()) {
        containerWidth = rect.width;
        containerHeight = rect.height;
        minScale = (containerWidth > containerHeight ? containerWidth : containerHeight) * 0.6 / 256;
        t1 = containerWidth / 2;
        t2 = containerHeight / 2;
        maxScale = (Math.sqrt(Math.pow(t1, 2) + Math.pow(t2, 2)) + 10) / 128;
        if (center) {
          initialTransform = "scale(" + H.S(minScale) + ")";
          finalTransform = "scale(" + H.S(maxScale) + ")";
          left = _s17_;
          $top = left;
        } else {
          t3 = rect.left;
          if (typeof clientX !== "number")
            return clientX.$sub();
          offsetX = clientX - t3 - 128;
          t3 = rect.top;
          if (typeof clientY !== "number")
            return clientY.$sub();
          offsetY = clientY - t3 - 128;
          $top = H.S(offsetY) + "px";
          left = H.S(offsetX) + "px";
          initialTransform = "translate(0, 0) scale(" + H.S(minScale) + ")";
          finalTransform = "translate(" + H.S(t1 - 128 - offsetX) + "px, " + H.S(t2 - 128 - offsetY) + "px) scale(" + H.S(maxScale) + ")";
        }
        t1 = P.String;
        transformKeyframes = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_literal(["transform", initialTransform], t1, null), P.LinkedHashMap_LinkedHashMap$_literal(["transform", finalTransform], t1, null)], [[P.Map, P.String,,]]);
        ripple.style.cssText = "top: " + $top + "; left: " + left + "; transform: " + finalTransform;
        (ripple && C.DivElement_methods).animate$2(ripple, $._opacityKeyframes, $._opacityTiming);
        C.DivElement_methods.animate$2(ripple, transformKeyframes, $._transformTiming);
      } else {
        if (center) {
          left = _s17_;
          $top = left;
        } else {
          t1 = rect.left;
          if (typeof clientX !== "number")
            return clientX.$sub();
          t2 = rect.top;
          if (typeof clientY !== "number")
            return clientY.$sub();
          $top = H.S(clientY - t2 - 128) + "px";
          left = H.S(clientX - t1 - 128) + "px";
        }
        t1 = ripple.style;
        t1.top = $top;
        t1 = ripple.style;
        t1.left = left;
      }
      container.appendChild(ripple);
    },
    MaterialRippleComponent$: function(_element) {
      var t1 = new B.MaterialRippleComponent(_element);
      t1.MaterialRippleComponent$1(_element);
      return t1;
    },
    MaterialRippleComponent: function MaterialRippleComponent(t0) {
      this._element = t0;
      this._onKeyDown = this._onMouseDown = null;
    },
    MaterialRippleComponent_closure: function MaterialRippleComponent_closure(t0) {
      this.$this = t0;
    },
    MaterialRippleComponent_closure0: function MaterialRippleComponent_closure0(t0) {
      this.$this = t0;
    },
    MaterialRippleComponent_ngOnDestroy_closure: function MaterialRippleComponent_ngOnDestroy_closure(t0) {
      this.$this = t0;
    },
    MaterialSelectItemComponent: function MaterialSelectItemComponent() {
    },
    MaterialSelectItemComponent_closure: function MaterialSelectItemComponent_closure(t0) {
      this.$this = t0;
    },
    MaterialSelectItemComponent_selection_closure: function MaterialSelectItemComponent_selection_closure(t0) {
      this.$this = t0;
    },
    HasTabIndex: function HasTabIndex() {
    },
    ActiveItemDirective: function ActiveItemDirective(t0, t1, t2, t3) {
      var _ = this;
      _._active_item_directive$_element = t0;
      _._active_item_directive$_domService = t1;
      _._modal = t2;
      _._popupRef = t3;
      _._initialized = _._active = false;
      _._visibilitySubscription = null;
      _._hasHover = false;
    },
    ActiveItemDirective__scrollIntoViewIfNecessary_closure: function ActiveItemDirective__scrollIntoViewIfNecessary_closure(t0) {
      this.$this = t0;
    },
    ActiveItemDirective__scrollIntoView_closure: function ActiveItemDirective__scrollIntoView_closure(t0) {
      this.$this = t0;
    },
    OverlayRef__isEqualSize: function(a, b) {
      var t2,
        t1 = [P.num];
      H.assertSubtype(a, "$isRectangle", t1, "$asRectangle");
      H.assertSubtype(b, "$isRectangle", t1, "$asRectangle");
      t1 = J.getInterceptor$x(a);
      t2 = J.getInterceptor$x(b);
      return t1.get$width(a) == t2.get$width(b) && t1.get$height(a) == t2.get$height(b);
    },
    OverlayRef$: function(_asyncApplyState, _asyncMeasureSize, _delegatePortalHost, containerElement, overlayElement, _runOutsideAngular, state) {
      var t1 = new B.OverlayRef(Z.MutableOverlayState_MutableOverlayState$from(state), containerElement, overlayElement, _asyncApplyState, _asyncMeasureSize, _delegatePortalHost, _runOutsideAngular);
      t1.OverlayRef$7$state(_asyncApplyState, _asyncMeasureSize, _delegatePortalHost, containerElement, overlayElement, _runOutsideAngular, state);
      return t1;
    },
    OverlayRef: function OverlayRef(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.state = t0;
      _.containerElement = t1;
      _.overlayElement = t2;
      _._asyncApplyState = t3;
      _._overlay_ref$_asyncMeasureSize = t4;
      _._delegatePortalHost = t5;
      _._runOutsideAngular = t6;
      _._lastVisible = false;
      _._stateUpdateListener = _._onVisibleController = null;
    },
    OverlayRef_measureSizeChanges_closure: function OverlayRef_measureSizeChanges_closure(t0) {
      this.$this = t0;
    },
    OverlayRef_closure: function OverlayRef_closure(t0) {
      this.$this = t0;
    },
    ChangeNotifier: function ChangeNotifier(t0) {
      this._scheduled = false;
      this._queue = null;
      this.$ti = t0;
    }
  },
  X = {ZIndexer: function ZIndexer() {
    }, MaterialProgressComponent: function MaterialProgressComponent(t0, t1, t2, t3) {
      var _ = this;
      _._material_progress$_changeDetector = t0;
      _._material_progress$_element = t1;
      _._useFancyAnimation = t2;
      _.activeProgress = 0;
      _.max = 100;
      _._isInitialized = false;
      _._loadingValue = t3;
      _._secondaryAnimation = _._secondaryIndicator = _._primaryAnimation = _._primaryIndicator = null;
    }, ShiftClickSelectionMixin: function ShiftClickSelectionMixin() {
    }, OverlayService: function OverlayService(t0, t1, t2) {
      this._useDomSynchronously = t0;
      this._ngZone = t1;
      this._renderService = t2;
    }, DisposableCallbackBase: function DisposableCallbackBase() {
    }, DisposableCallback: function DisposableCallback() {
      this._callback = null;
    }, UninitializedLocaleData: function UninitializedLocaleData(t0, t1, t2, t3) {
      var _ = this;
      _.message = t0;
      _.fallbackData = t1;
      _._badMessages = t2;
      _.$ti = t3;
    },
    markdownToHtml: function(markdown) {
      var nodes, _null = null,
        t1 = P.String,
        t2 = K.BlockSyntax,
        t3 = P.LinkedHashSet_LinkedHashSet(_null, _null, t2),
        t4 = R.InlineSyntax,
        t5 = P.LinkedHashSet_LinkedHashSet(_null, _null, t4),
        t6 = $.$get$ExtensionSet_commonMark(),
        $document = new S.Document0(P.LinkedHashMap_LinkedHashMap$_empty(t1, S.LinkReference), t6, _null, _null, t3, t5);
      t2 = H.setRuntimeTypeInfo([], [t2]);
      t3.addAll$1(0, t2);
      t3.addAll$1(0, t6.blockSyntaxes);
      t2 = H.setRuntimeTypeInfo([], [t4]);
      t5.addAll$1(0, t2);
      t5.addAll$1(0, t6.inlineSyntaxes);
      markdown.toString;
      nodes = K.BlockParser$(H.assertSubtype(H.setRuntimeTypeInfo(H.stringReplaceAllUnchecked(markdown, "\r\n", "\n").split("\n"), [t1]), "$isList", [t1], "$asList"), $document).parseLines$0();
      $document._parseInlineContent$1(nodes);
      return new X.HtmlRenderer().render$1(nodes) + "\n";
    },
    HtmlRenderer: function HtmlRenderer() {
      this.uniqueIds = this.buffer = null;
    },
    hashObjects: function(objects) {
      return X._finish(C.JSArray_methods.fold$1$2(objects, 0, new X.hashObjects_closure(), P.int));
    },
    _combine: function(hash, value) {
      if (typeof hash !== "number")
        return hash.$add();
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _finish: function(hash) {
      if (typeof hash !== "number")
        return H.iae(hash);
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    hashObjects_closure: function hashObjects_closure() {
    },
    LanguageDirectionDirectiveNgCd: function LanguageDirectionDirectiveNgCd(t0) {
      this.instance = t0;
      this._language_direction_directive_template$_expr_1 = this._language_direction_directive_template$_expr_0 = null;
    },
    SkawaRawMarkdownRendererComponent: function SkawaRawMarkdownRendererComponent() {
      this.editorRenderTarget = this._markdown_renderer$_source = this._emulatedCssClass = null;
    },
    ViewExtendedMaterialIconDemoComponent0: function ViewExtendedMaterialIconDemoComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._ExtendedMaterialIconComponent_14_5 = _._compView_14 = _._ExtendedMaterialIconComponent_12_5 = _._extended_material_icon_demo_template$_compView_12 = _._ExtendedMaterialIconComponent_10_5 = _._compView_10 = _._ExtendedMaterialIconComponent_8_5 = _._compView_8 = _._ExtendedMaterialIconComponent_6_5 = _._extended_material_icon_demo_template$_compView_6 = _._ExtendedMaterialIconComponent_4_5 = _._compView_4 = _._ExtendedMaterialIconComponent_2_5 = _._compView_2 = _._DemoHeaderComponent_0_5 = _._extended_material_icon_demo_template$_compView_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    SkawaCardActionsComponent: function SkawaCardActionsComponent(t0) {
      this.cardHeader = t0;
    },
    ViewSkawaCardActionsComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new X.ViewSkawaCardActionsComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewSkawaCardActionsComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaCardActionsComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaCardActionsComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-card-actions");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewSkawaCardActionsComponent0: function ViewSkawaCardActionsComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._card_actions_template$_expr_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    },
    ViewGridComponent0$: function(parentView, parentIndex) {
      var t2,
        t1 = new X.ViewGridComponent0(parentView, S.AppViewData_AppViewData(1, C.ViewType_1, parentIndex)),
        styles = $.ViewGridComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewGridComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$GridComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-grid");
      t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
      return t1;
    },
    ViewGridComponent0: function ViewGridComponent0(t0, t1) {
      var _ = this;
      _.componentStyles = _.ctx = _.rootEl = _._grid_component_template$_expr_0 = null;
      _.parentView = t0;
      _.viewData = t1;
    }
  },
  F = {
    MaterialSelectDropdownItemComponent$: function(element, role, dropdown, activationHandler, idGenerator, cdRef, $T) {
      var _null = null,
        t1 = (idGenerator == null ? new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid()) : idGenerator).nextId$0(),
        t2 = "option";
      t1 = new F.MaterialSelectDropdownItemComponent(t1, new R.Disposer(true), activationHandler, cdRef, dropdown, G.has_renderer___nullRenderer$closure(), new P._SyncBroadcastStreamController(_null, _null, [W.UIEvent]), _null, true, t2, _null, element, [$T]);
      t1.MaterialSelectItemComponent$6$addTabIndexWhenNonTabbable(element, dropdown, activationHandler, cdRef, "option", false, $T);
      t1.set$_material_select_item$_itemRenderer(H.functionTypeCheck(G.has_renderer__defaultItemRenderer$closure(), {func: 1, ret: P.String, args: [$T]}));
      return t1;
    },
    MaterialSelectDropdownItemComponent: function MaterialSelectDropdownItemComponent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _._generatedId = t0;
      _._id = null;
      _._customAriaHandling = false;
      _._disposer = t1;
      _._activationHandler = t2;
      _._cdRef = t3;
      _._dropdown = t4;
      _._selectionChangeStreamSub = null;
      _._isHidden = false;
      _._material_select_item$_value = null;
      _._supportsMultiSelect = false;
      _._material_select_item$_itemRenderer = t5;
      _.factoryRenderer = _.componentRenderer = null;
      _._deselectOnActivate = true;
      _._material_select_item$_selection = null;
      _._selected = false;
      _._trigger = t6;
      _._nonTabbableIndex = t7;
      _._shouldHandleSpaceKey = t8;
      _.role = t9;
      _.disabled = false;
      _.tabbable = true;
      _.HasTabIndex__tabIndex = t10;
      _._focus$_root = t11;
      _.$ti = t12;
    },
    TrackLayoutChangesMixin: function TrackLayoutChangesMixin() {
    },
    OptionGroup$withLabel: function(items, label, $T) {
      return new F.OptionGroup(null, null, items, [$T]);
    },
    OptionGroup: function OptionGroup(t0, t1, t2, t3) {
      var _ = this;
      _._emptyLabelFcn = t0;
      _._labelFcn = t1;
      _._base = t2;
      _.$ti = t3;
    },
    GroupedOptions: function GroupedOptions() {
    },
    SelectionOptions: function SelectionOptions(t0, t1) {
      var _ = this;
      _._selection_options$_controller = t0;
      _._optionGroups = _._flattenedList = null;
      _.$ti = t1;
    },
    SelectionOptions_optionGroups_closure: function SelectionOptions_optionGroups_closure(t0) {
      this.$this = t0;
    },
    PopupSizeProvider: function PopupSizeProvider() {
    },
    PopupState: function PopupState(t0, t1, t2) {
      this._backingMap = t0;
      this._delegate = t1;
      this._isNotGeneric = t2;
    },
    AcxDarkTheme$: function(dark) {
      return new F.AcxDarkTheme(dark === true);
    },
    AcxDarkTheme: function AcxDarkTheme(t0) {
      this.isDarkTheme = t0;
    },
    ReferenceDirective: function ReferenceDirective() {
    },
    DomService: function DomService(t0, t1, t2, t3, t4) {
      var _ = this;
      _._domReadQueue = t0;
      _._domWriteQueue = t1;
      _._dom_service$_ngZone = t2;
      _._window = t3;
      _._insideDigest = false;
      _._layoutObserveRead = null;
      _._scheduledProcessQueue = false;
      _._nextFrameFuture = _._nextFrameCompleter = _._onQueuesProcessedStream = _._onQueuesProcessedController = _._onLayoutChangedStream = _._onLayoutChangedController = null;
      _._dom_service$_state = t4;
      _._crossAppInitialized = false;
      _._idleTimerMillis = 4000;
      _._idleTimer = null;
      _._writeQueueChangedLayout = _._inDispatchTurnDoneEvent = false;
    },
    DomService_init_closure: function DomService_init_closure(t0) {
      this.$this = t0;
    },
    DomService_init__closure: function DomService_init__closure(t0) {
      this.$this = t0;
    },
    DomService_nextFrame_closure: function DomService_nextFrame_closure(t0, t1) {
      this.$this = t0;
      this.completer = t1;
    },
    DomService_nextFrame__closure: function DomService_nextFrame__closure(t0, t1) {
      this.$this = t0;
      this.completer = t1;
    },
    DomService_onLayoutChanged_closure: function DomService_onLayoutChanged_closure(t0) {
      this.$this = t0;
    },
    DomService_onLayoutChanged__closure: function DomService_onLayoutChanged__closure(t0) {
      this.$this = t0;
    },
    DomService_onLayoutChanged__closure0: function DomService_onLayoutChanged__closure0(t0) {
      this.$this = t0;
    },
    DomService_onLayoutChanged__closure1: function DomService_onLayoutChanged__closure1(t0) {
      this.$this = t0;
    },
    DomService__listenOnLayoutEvents_closure: function DomService__listenOnLayoutEvents_closure(t0) {
      this.$this = t0;
    },
    DomService__scheduleProcessQueue_closure: function DomService__scheduleProcessQueue_closure(t0) {
      this.$this = t0;
    },
    DomService__scheduleOnLayoutChanged_closure: function DomService__scheduleOnLayoutChanged_closure() {
    },
    DomService__scheduleOnLayoutChanged_closure0: function DomService__scheduleOnLayoutChanged_closure0(t0) {
      this.$this = t0;
    },
    DomServiceState: function DomServiceState(t0) {
      this._dom_service$_name = t0;
    },
    SkawaCardHeaderTitleDirective: function SkawaCardHeaderTitleDirective() {
    },
    SkawaCardHeaderSubheadDirective: function SkawaCardHeaderSubheadDirective() {
    },
    SkawaCardHeaderImageDirective: function SkawaCardHeaderImageDirective() {
    },
    main: function() {
      H.interceptedTypeCheck(G.appInjector(G.run___identityInjector$closure()).$get$1(0, C.Type_ApplicationRef_Aij), "$isApplicationRef").bootstrap$1$1(C.ComponentFactory_iyo, Q.AppComponent);
    }
  };
  var holders = [C, H, J, P, W, G, Y, R, K, S, N, E, M, Q, D, L, Z, O, V, A, U, T, B, X, F];
  hunkHelpers.setFunctionNamesIfNecessary(holders);
  var $ = {};
  H.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq: function(receiver, other) {
      return receiver === other;
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: function(receiver) {
      return "Instance of '" + H.Primitives_objectTypeName(receiver) + "'";
    },
    noSuchMethod$1: function(receiver, invocation) {
      H.interceptedTypeCheck(invocation, "$isInvocation");
      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    }
  };
  J.JSBool.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $and: function(receiver, other) {
      return H.checkBool(other) && receiver;
    },
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq: function(receiver, other) {
      return null == other;
    },
    toString$0: function(receiver) {
      return "null";
    },
    get$hashCode: function(receiver) {
      return 0;
    },
    noSuchMethod$1: function(receiver, invocation) {
      return this.super$Interceptor$noSuchMethod(receiver, H.interceptedTypeCheck(invocation, "$isInvocation"));
    },
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {
    get$hashCode: function(receiver) {
      return 0;
    },
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isJsTestability: 1,
    $isCKEditorInstance: 1
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0: function(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$JavaScriptObject$toString(receiver);
      return "JavaScript function for " + H.S(J.toString$0$(dartClosure));
    },
    $signature: function() {
      return {func: 1, opt: [,,,,,,,,,,,,,,,,]};
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    add$1: function(receiver, value) {
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1: function(receiver, index) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeAt"));
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(H.argumentErrorValue(index));
      if (index < 0 || index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    insert$2: function(receiver, index, value) {
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insert"));
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(H.argumentErrorValue(index));
      if (index < 0 || index > receiver.length)
        throw H.wrapException(P.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2: function(receiver, index, iterable) {
      var insertionLength, end;
      H.assertSubtype(iterable, "$isIterable", [H.getTypeArgumentByIndex(receiver, 0)], "$asIterable");
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insertAll"));
      P.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!J.getInterceptor$(iterable).$isEfficientLengthIterable)
        iterable = H.setRuntimeTypeInfo(iterable.slice(0), [H.getTypeArgumentByIndex(iterable, 0)]);
      insertionLength = iterable.length;
      this.set$length(receiver, receiver.length + insertionLength);
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    remove$1: function(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    where$1: function(receiver, f) {
      var t1 = H.getTypeArgumentByIndex(receiver, 0);
      return new H.WhereIterable(receiver, H.functionTypeCheck(f, {func: 1, ret: P.bool, args: [t1]}), [t1]);
    },
    addAll$1: function(receiver, collection) {
      var t1;
      H.assertSubtype(collection, "$isIterable", [H.getTypeArgumentByIndex(receiver, 0)], "$asIterable");
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("addAll"));
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current(t1));
    },
    forEach$1: function(receiver, f) {
      var end, i;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(receiver, 0)]});
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1: function(receiver, f, $T) {
      var t1 = H.getTypeArgumentByIndex(receiver, 0);
      return new H.MappedListIterable(receiver, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
    },
    join$1: function(receiver, separator) {
      var i,
        list = new Array(receiver.length);
      list.fixed$length = Array;
      for (i = 0; i < receiver.length; ++i)
        this.$indexSet(list, i, H.S(receiver[i]));
      return list.join(separator);
    },
    reduce$1: function(receiver, combine) {
      var $length, value, i,
        t1 = H.getTypeArgumentByIndex(receiver, 0);
      H.functionTypeCheck(combine, {func: 1, ret: t1, args: [t1, t1]});
      $length = receiver.length;
      if ($length === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      if (0 >= $length)
        return H.ioore(receiver, 0);
      value = receiver[0];
      for (i = 1; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if ($length !== receiver.length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    fold$1$2: function(receiver, initialValue, combine, $T) {
      var $length, value, i;
      H.assertSubtypeOfRuntimeType(initialValue, $T);
      H.functionTypeCheck(combine, {func: 1, ret: $T, args: [$T, H.getTypeArgumentByIndex(receiver, 0)]});
      $length = receiver.length;
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    firstWhere$2$orElse: function(receiver, test, orElse) {
      var end, i, element,
        t1 = H.getTypeArgumentByIndex(receiver, 0);
      H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]});
      H.functionTypeCheck(orElse, {func: 1, ret: t1});
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (H.boolConversionCheck(test.call$1(element)))
          return element;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(H.IterableElementError_noElement());
    },
    firstWhere$1: function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    sublist$2: function(receiver, start, end) {
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, "start", null));
      if (end == null)
        end = receiver.length;
      else if (end < start || end > receiver.length)
        throw H.wrapException(P.RangeError$range(end, start, receiver.length, "end", null));
      if (start === end)
        return H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(receiver, 0)]);
      return H.setRuntimeTypeInfo(receiver.slice(start, end), [H.getTypeArgumentByIndex(receiver, 0)]);
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(H.IterableElementError_noElement());
    },
    get$last: function(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw H.wrapException(H.IterableElementError_noElement());
    },
    get$single: function(receiver) {
      var t1 = receiver.length;
      if (t1 === 1) {
        if (0 >= t1)
          return H.ioore(receiver, 0);
        return receiver[0];
      }
      if (t1 === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      throw H.wrapException(H.IterableElementError_tooMany());
    },
    removeRange$2: function(receiver, start, end) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeRange"));
      P.RangeError_checkValidRange(start, end, receiver.length);
      receiver.splice(start, end - start);
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      var $length, t2, i,
        t1 = H.getTypeArgumentByIndex(receiver, 0);
      H.assertSubtype(iterable, "$isIterable", [t1], "$asIterable");
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("setRange"));
      P.RangeError_checkValidRange(start, end, receiver.length);
      if (typeof end !== "number")
        return end.$sub();
      if (typeof start !== "number")
        return H.iae(start);
      $length = end - start;
      if ($length === 0)
        return;
      P.RangeError_checkNotNegative(skipCount, "skipCount");
      H.assertSubtype(iterable, "$isList", [t1], "$asList");
      t1 = J.getInterceptor$asx(iterable);
      t2 = t1.get$length(iterable);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (skipCount + $length > t2)
        throw H.wrapException(H.IterableElementError_tooFew());
      if (skipCount < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(iterable, skipCount + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(iterable, skipCount + i);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    any$1: function(receiver, test) {
      var end, i;
      H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (H.boolConversionCheck(test.call$1(receiver[i])))
          return true;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    every$1: function(receiver, test) {
      var end, i;
      H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
      end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (!H.boolConversionCheck(test.call$1(receiver[i])))
          return false;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return true;
    },
    sort$1: function(receiver, compare) {
      var t1 = H.getTypeArgumentByIndex(receiver, 0);
      H.functionTypeCheck(compare, {func: 1, ret: P.int, args: [t1, t1]});
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("sort"));
      H.Sort_sort(receiver, compare, t1);
    },
    indexOf$2: function(receiver, element, start) {
      var i;
      if (start >= receiver.length)
        return -1;
      for (i = start; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element))
          return i;
      return -1;
    },
    indexOf$1: function($receiver, element) {
      return this.indexOf$2($receiver, element, 0);
    },
    contains$1: function(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.length !== 0;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    get$iterator: function(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, [H.getTypeArgumentByIndex(receiver, 0)]);
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      var _s9_ = "newLength";
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
        throw H.wrapException(P.ArgumentError$value(newLength, _s9_, null));
      if (newLength < 0)
        throw H.wrapException(P.RangeError$range(newLength, 0, null, _s9_, null));
      receiver.length = newLength;
    },
    $index: function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $add: function(receiver, other) {
      var totalLength,
        t1 = [H.getTypeArgumentByIndex(receiver, 0)];
      H.assertSubtype(other, "$isList", t1, "$asList");
      totalLength = C.JSInt_methods.$add(receiver.length, other.get$length(other));
      t1 = H.setRuntimeTypeInfo([], t1);
      this.set$length(t1, totalLength);
      this.setRange$3(t1, 0, receiver.length, receiver);
      this.setRange$3(t1, receiver.length, totalLength, other);
      return t1;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current: function(_) {
      return this._current;
    },
    moveNext$0: function() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length)
        throw H.wrapException(H.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.set$_current(null);
        return false;
      }
      _this.set$_current(t1[t2]);
      ++_this._index;
      return true;
    },
    set$_current: function(_current) {
      this._current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    compareTo$1: function(receiver, b) {
      var bIsNegative;
      H.numTypeCheck(b);
      if (typeof b !== "number")
        throw H.wrapException(H.argumentErrorValue(b));
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative: function(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    toInt$0: function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".toInt()"));
    },
    round$0: function(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".round()"));
    },
    clamp$2: function(receiver, lowerLimit, upperLimit) {
      if (C.JSInt_methods.compareTo$1(lowerLimit, upperLimit) > 0)
        throw H.wrapException(H.argumentErrorValue(lowerLimit));
      if (this.compareTo$1(receiver, lowerLimit) < 0)
        return lowerLimit;
      if (this.compareTo$1(receiver, upperLimit) > 0)
        return upperLimit;
      return receiver;
    },
    toStringAsFixed$1: function(receiver, fractionDigits) {
      var result;
      if (fractionDigits > 20)
        throw H.wrapException(P.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    },
    toRadixString$1: function(receiver, radix) {
      var result, match, t1, exponent;
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (C.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        H.throwExpression(P.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return H.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return H.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + C.JSString_methods.$mul("0", exponent);
    },
    toString$0: function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode: function(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return 536870911 & intValue;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return 536870911 & ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259;
    },
    $add: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver + other;
    },
    $mod: function(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    },
    $tdiv: function(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1: function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1: function(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw H.wrapException(P.UnsupportedError$("Result of truncating division is " + H.S(quotient) + ": " + H.S(receiver) + " ~/ " + other));
    },
    _shrOtherPositive$1: function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrBothPositive$1: function(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    $and: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return (receiver & other) >>> 0;
    },
    $gt: function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(H.argumentErrorValue(other));
      return receiver > other;
    },
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {$isint: 1};
  J.JSDouble.prototype = {};
  J.JSString.prototype = {
    codeUnitAt$1: function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        H.throwExpression(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    _codeUnitAt$1: function(receiver, index) {
      if (index >= receiver.length)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    allMatches$2: function(receiver, string, start) {
      var t1;
      if (typeof string !== "string")
        H.throwExpression(H.argumentErrorValue(string));
      t1 = string.length;
      if (start > t1)
        throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
      return new H._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1: function($receiver, string) {
      return this.allMatches$2($receiver, string, 0);
    },
    matchAsPrefix$2: function(receiver, string, start) {
      var t1, i;
      if (start < 0 || start > string.length)
        throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
      t1 = receiver.length;
      if (start + t1 > string.length)
        return;
      for (i = 0; i < t1; ++i)
        if (this.codeUnitAt$1(string, start + i) !== this._codeUnitAt$1(receiver, i))
          return;
      return new H.StringMatch(start, receiver);
    },
    $add: function(receiver, other) {
      if (typeof other !== "string")
        throw H.wrapException(P.ArgumentError$value(other, null, null));
      return receiver + other;
    },
    split$1: function(receiver, pattern) {
      if (pattern == null)
        H.throwExpression(H.argumentErrorValue(pattern));
      if (typeof pattern === "string")
        return H.setRuntimeTypeInfo(receiver.split(pattern), [P.String]);
      else if (pattern instanceof H.JSSyntaxRegExp && pattern.get$_nativeAnchoredVersion().exec("").length - 2 === 0)
        return H.setRuntimeTypeInfo(receiver.split(pattern._nativeRegExp), [P.String]);
      else
        return this._defaultSplit$1(receiver, pattern);
    },
    replaceRange$3: function(receiver, start, end, replacement) {
      end = P.RangeError_checkValidRange(start, end, receiver.length);
      if (typeof end !== "number" || Math.floor(end) !== end)
        H.throwExpression(H.argumentErrorValue(end));
      return H.stringReplaceRangeUnchecked(receiver, start, end, replacement);
    },
    _defaultSplit$1: function(receiver, pattern) {
      var t1, start, $length, match, matchStart, matchEnd,
        result = H.setRuntimeTypeInfo([], [P.String]);
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), start = 0, $length = 1; t1.moveNext$0();) {
        match = t1.get$current(t1);
        matchStart = match.get$start(match);
        matchEnd = match.get$end(match);
        $length = matchEnd - matchStart;
        if ($length === 0 && start === matchStart)
          continue;
        C.JSArray_methods.add$1(result, this.substring$2(receiver, start, matchStart));
        start = matchEnd;
      }
      if (start < receiver.length || $length > 0)
        C.JSArray_methods.add$1(result, this.substring$1(receiver, start));
      return result;
    },
    startsWith$2: function(receiver, pattern, index) {
      var endIndex;
      if (typeof index !== "number" || Math.floor(index) !== index)
        H.throwExpression(H.argumentErrorValue(index));
      if (typeof index !== "number")
        return index.$lt();
      if (index < 0 || index > receiver.length)
        throw H.wrapException(P.RangeError$range(index, 0, receiver.length, null, null));
      if (typeof pattern === "string") {
        endIndex = index + pattern.length;
        if (endIndex > receiver.length)
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    },
    startsWith$1: function($receiver, pattern) {
      return this.startsWith$2($receiver, pattern, 0);
    },
    substring$2: function(receiver, startIndex, endIndex) {
      if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
        H.throwExpression(H.argumentErrorValue(startIndex));
      if (endIndex == null)
        endIndex = receiver.length;
      if (typeof startIndex !== "number")
        return startIndex.$lt();
      if (startIndex < 0)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (startIndex > endIndex)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (endIndex > receiver.length)
        throw H.wrapException(P.RangeError$value(endIndex, null));
      return receiver.substring(startIndex, endIndex);
    },
    substring$1: function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    },
    toLowerCase$0: function(receiver) {
      return receiver.toLowerCase();
    },
    trim$0: function(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (this._codeUnitAt$1(result, 0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    $mul: function(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw H.wrapException(C.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2: function(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$2: function(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1: function($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    },
    contains$2: function(receiver, other, startIndex) {
      if (other == null)
        H.throwExpression(H.argumentErrorValue(other));
      if (startIndex > receiver.length)
        throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length, null, null));
      return H.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1: function($receiver, other) {
      return this.contains$2($receiver, other, 0);
    },
    compareTo$1: function(receiver, other) {
      var t1;
      H.stringTypeCheck(other);
      if (typeof other !== "string")
        throw H.wrapException(H.argumentErrorValue(other));
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0: function(receiver) {
      return receiver;
    },
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $isPattern: 1,
    $isString: 1
  };
  H.CodeUnits.prototype = {
    get$length: function(_) {
      return this.__internal$_string.length;
    },
    $index: function(_, i) {
      return C.JSString_methods.codeUnitAt$1(this.__internal$_string, i);
    },
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asUnmodifiableListMixin: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $asIterable: function() {
      return [P.int];
    },
    $asList: function() {
      return [P.int];
    }
  };
  H.EfficientLengthIterable.prototype = {};
  H.ListIterable.prototype = {
    get$iterator: function(_) {
      var _this = this;
      return new H.ListIterator(_this, _this.get$length(_this), [H.getRuntimeTypeArgument(_this, "ListIterable", 0)]);
    },
    forEach$1: function(_, action) {
      var $length, i, _this = this;
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(_this, "ListIterable", 0)]});
      $length = _this.get$length(_this);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(_this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    contains$1: function(_, element) {
      var i, _this = this,
        $length = _this.get$length(_this);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (J.$eq$(_this.elementAt$1(0, i), element))
          return true;
        if ($length !== _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
      return false;
    },
    any$1: function(_, test) {
      var $length, i, _this = this;
      H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgument(_this, "ListIterable", 0)]});
      $length = _this.get$length(_this);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (H.boolConversionCheck(test.call$1(_this.elementAt$1(0, i))))
          return true;
        if ($length !== _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
      return false;
    },
    join$1: function(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = H.S(_this.elementAt$1(0, 0));
        if ($length != _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = first;
        i = 1;
        for (; i < $length; ++i) {
          t1 = t1 + separator + H.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw H.wrapException(P.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        t1 = "";
        for (; i < $length; ++i) {
          t1 += H.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw H.wrapException(P.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    join$0: function($receiver) {
      return this.join$1($receiver, "");
    },
    where$1: function(_, test) {
      return this.super$Iterable$where(0, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgument(this, "ListIterable", 0)]}));
    },
    map$1$1: function(_, f, $T) {
      var t1 = H.getRuntimeTypeArgument(this, "ListIterable", 0);
      return new H.MappedListIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
    },
    toList$1$growable: function(_, growable) {
      var result, t2, i, _this = this,
        t1 = H.getRuntimeTypeArgument(_this, "ListIterable", 0);
      if (growable) {
        result = H.setRuntimeTypeInfo([], [t1]);
        C.JSArray_methods.set$length(result, _this.get$length(_this));
      } else {
        t2 = _this.get$length(_this);
        if (typeof t2 !== "number")
          return H.iae(t2);
        t2 = new Array(t2);
        t2.fixed$length = Array;
        result = H.setRuntimeTypeInfo(t2, [t1]);
      }
      i = 0;
      while (true) {
        t1 = _this.get$length(_this);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        C.JSArray_methods.$indexSet(result, i, _this.elementAt$1(0, i));
        ++i;
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  H.SubListIterable.prototype = {
    get$_endIndex: function() {
      var t2,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._endOrLength;
      if (t1 != null) {
        if (typeof $length !== "number")
          return H.iae($length);
        t2 = t1 > $length;
      } else
        t2 = true;
      if (t2)
        return $length;
      return t1;
    },
    get$_startIndex: function() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this.__internal$_start;
      if (typeof $length !== "number")
        return H.iae($length);
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length: function(_) {
      var t2,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this.__internal$_start;
      if (typeof $length !== "number")
        return H.iae($length);
      if (t1 >= $length)
        return 0;
      t2 = this._endOrLength;
      if (t2 == null || t2 >= $length)
        return $length - t1;
      if (typeof t2 !== "number")
        return t2.$sub();
      return t2 - t1;
    },
    elementAt$1: function(_, index) {
      var realIndex, _this = this,
        t1 = _this.get$_startIndex();
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof index !== "number")
        return H.iae(index);
      realIndex = t1 + index;
      if (index >= 0) {
        t1 = _this.get$_endIndex();
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = realIndex >= t1;
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(P.IndexError$(index, _this, "index", null, null));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    take$1: function(_, count) {
      var t1, t2, newEnd, _this = this;
      P.RangeError_checkNotNegative(count, "count");
      t1 = _this._endOrLength;
      t2 = _this.__internal$_start;
      newEnd = t2 + count;
      if (t1 == null)
        return H.SubListIterable$(_this.__internal$_iterable, t2, newEnd, H.getTypeArgumentByIndex(_this, 0));
      else {
        if (t1 < newEnd)
          return _this;
        return H.SubListIterable$(_this.__internal$_iterable, t2, newEnd, H.getTypeArgumentByIndex(_this, 0));
      }
    }
  };
  H.ListIterator.prototype = {
    get$current: function(_) {
      return this.__internal$_current;
    },
    moveNext$0: function() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length != $length)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (typeof $length !== "number")
        return H.iae($length);
      if (t3 >= $length) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, t3));
      ++_this.__internal$_index;
      return true;
    },
    set$__internal$_current: function(_current) {
      this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1
  };
  H.MappedIterable.prototype = {
    get$iterator: function(_) {
      return new H.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti);
    },
    get$length: function(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    },
    $asIterable: function($S, $T) {
      return [$T];
    }
  };
  H.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function($S, $T) {
      return [$T];
    }
  };
  H.MappedIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.set$__internal$_current(_this._f.call$1(t1.get$current(t1)));
        return true;
      }
      _this.set$__internal$_current(null);
      return false;
    },
    get$current: function(_) {
      return this.__internal$_current;
    },
    set$__internal$_current: function(_current) {
      this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 1));
    },
    $asIterator: function($S, $T) {
      return [$T];
    }
  };
  H.MappedListIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    },
    $asEfficientLengthIterable: function($S, $T) {
      return [$T];
    },
    $asListIterable: function($S, $T) {
      return [$T];
    },
    $asIterable: function($S, $T) {
      return [$T];
    }
  };
  H.WhereIterable.prototype = {
    get$iterator: function(_) {
      return new H.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti);
    },
    map$1$1: function(_, f, $T) {
      var t1 = H.getTypeArgumentByIndex(this, 0);
      return new H.MappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
    }
  };
  H.WhereIterator.prototype = {
    moveNext$0: function() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (H.boolConversionCheck(t2.call$1(t1.get$current(t1))))
          return true;
      return false;
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.ExpandIterable.prototype = {
    get$iterator: function(_) {
      return new H.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, C.C_EmptyIterator, this.$ti);
    },
    $asIterable: function($S, $T) {
      return [$T];
    }
  };
  H.ExpandIterator.prototype = {
    get$current: function(_) {
      return this.__internal$_current;
    },
    moveNext$0: function() {
      var t1, t2, _this = this;
      if (_this._currentExpansion == null)
        return false;
      for (t1 = _this._iterator, t2 = _this._f; !_this._currentExpansion.moveNext$0();) {
        _this.set$__internal$_current(null);
        if (t1.moveNext$0()) {
          _this.set$_currentExpansion(null);
          _this.set$_currentExpansion(J.get$iterator$ax(t2.call$1(t1.get$current(t1))));
        } else
          return false;
      }
      t1 = _this._currentExpansion;
      _this.set$__internal$_current(t1.get$current(t1));
      return true;
    },
    set$_currentExpansion: function(_currentExpansion) {
      this._currentExpansion = H.assertSubtype(_currentExpansion, "$isIterator", [H.getTypeArgumentByIndex(this, 1)], "$asIterator");
    },
    set$__internal$_current: function(_current) {
      this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 1));
    },
    $isIterator: 1,
    $asIterator: function($S, $T) {
      return [$T];
    }
  };
  H.TakeIterable.prototype = {
    get$iterator: function(_) {
      return new H.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, this.$ti);
    }
  };
  H.EfficientLengthTakeIterable.prototype = {
    get$length: function(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (typeof iterableLength !== "number")
        return iterableLength.$gt();
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  H.TakeIterator.prototype = {
    moveNext$0: function() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current: function(_) {
      var t1;
      if (this._remaining < 0)
        return;
      t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.SkipIterable.prototype = {
    get$iterator: function(_) {
      return new H.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, this.$ti);
    }
  };
  H.EfficientLengthSkipIterable.prototype = {
    get$length: function(_) {
      var $length,
        t1 = J.get$length$asx(this.__internal$_iterable);
      if (typeof t1 !== "number")
        return t1.$sub();
      $length = t1 - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    $isEfficientLengthIterable: 1
  };
  H.SkipIterator.prototype = {
    moveNext$0: function() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.EmptyIterator.prototype = {
    moveNext$0: function() {
      return false;
    },
    get$current: function(_) {
      return;
    },
    $isIterator: 1
  };
  H.FixedLengthListMixin.prototype = {
    set$length: function(receiver, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1: function(receiver, value) {
      H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgumentIntercepted(this, receiver, "FixedLengthListMixin", 0));
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    }
  };
  H.UnmodifiableListMixin.prototype = {
    $indexSet: function(_, index, value) {
      H.intTypeCheck(index);
      H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0));
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1: function(_, value) {
      H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0));
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    }
  };
  H.UnmodifiableListBase.prototype = {};
  H.ReversedListIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.get$length(t1);
      if (typeof t3 !== "number")
        return t3.$sub();
      if (typeof index !== "number")
        return H.iae(index);
      return t2.elementAt$1(t1, t3 - 1 - index);
    }
  };
  H.Symbol.prototype = {
    get$hashCode: function(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 536870911 & 664597 * J.get$hashCode$(this.__internal$_name);
      this._hashCode = hash;
      return hash;
    },
    toString$0: function(_) {
      return 'Symbol("' + H.S(this.__internal$_name) + '")';
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof H.Symbol && this.__internal$_name == other.__internal$_name;
    },
    $isSymbol0: 1
  };
  H.ConstantMapView.prototype = {};
  H.ConstantMap.prototype = {
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  H.ConstantStringMap.prototype = {
    get$length: function(_) {
      return this.__js_helper$_length;
    },
    containsKey$1: function(_, key) {
      if (typeof key !== "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index: function(_, key) {
      if (!this.containsKey$1(0, key))
        return;
      return this._fetch$1(key);
    },
    _fetch$1: function(key) {
      return this._jsObject[H.stringTypeCheck(key)];
    },
    forEach$1: function(_, f) {
      var keys, t2, i, key, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 1);
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(_this, 0), t1]});
      keys = _this._keys;
      for (t2 = keys.length, i = 0; i < t2; ++i) {
        key = keys[i];
        f.call$2(key, H.assertSubtypeOfRuntimeType(_this._fetch$1(key), t1));
      }
    },
    get$keys: function(_) {
      return new H._ConstantMapKeyIterable(this, [H.getTypeArgumentByIndex(this, 0)]);
    }
  };
  H._ConstantMapKeyIterable.prototype = {
    get$iterator: function(_) {
      var t1 = this._map._keys;
      return new J.ArrayIterator(t1, t1.length, [H.getTypeArgumentByIndex(t1, 0)]);
    },
    get$length: function(_) {
      return this._map._keys.length;
    }
  };
  H.Instantiation.prototype = {
    Instantiation$1: function(_genericClosure) {
      if (false)
        H.instantiatedGenericFunctionType(0, 0);
    },
    toString$0: function(_) {
      var types = "<" + C.JSArray_methods.join$1([new H.TypeImpl(H.getTypeArgumentByIndex(this, 0))], ", ") + ">";
      return H.S(this._genericClosure) + " with " + types;
    }
  };
  H.Instantiation1.prototype = {
    call$1: function(a0) {
      return this._genericClosure.call$1$1(a0, this.$ti[0]);
    },
    call$2: function(a0, a1) {
      return this._genericClosure.call$1$2(a0, a1, this.$ti[0]);
    },
    call$4: function(a0, a1, a2, a3) {
      return this._genericClosure.call$1$4(a0, a1, a2, a3, this.$ti[0]);
    },
    $signature: function() {
      return H.instantiatedGenericFunctionType(H.extractFunctionTypeObjectFromInternal(this._genericClosure), this.$ti);
    }
  };
  H.JSInvocationMirror.prototype = {
    get$memberName: function() {
      var t1 = this._memberName;
      return t1;
    },
    get$positionalArguments: function() {
      var t1, argumentCount, list, index, _this = this;
      if (_this._kind === 1)
        return C.List_empty0;
      t1 = _this._arguments;
      argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;
      if (argumentCount === 0)
        return C.List_empty0;
      list = [];
      for (index = 0; index < argumentCount; ++index) {
        if (index >= t1.length)
          return H.ioore(t1, index);
        list.push(t1[index]);
      }
      return J.JSArray_markUnmodifiableList(list);
    },
    get$namedArguments: function() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, t3, map, i, t4, t5, _this = this;
      if (_this._kind !== 0)
        return C.Map_empty;
      t1 = _this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = _this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;
      if (namedArgumentCount === 0)
        return C.Map_empty;
      t3 = P.Symbol0;
      map = new H.JsLinkedHashMap([t3, null]);
      for (i = 0; i < namedArgumentCount; ++i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t4 = t1[i];
        t5 = namedArgumentsStartIndex + i;
        if (t5 < 0 || t5 >= t2.length)
          return H.ioore(t2, t5);
        map.$indexSet(0, new H.Symbol(t4), t2[t5]);
      }
      return new H.ConstantMapView(map, [t3, null]);
    },
    $isInvocation: 1
  };
  H.Primitives_functionNoSuchMethod_closure.prototype = {
    call$2: function($name, argument) {
      var t1;
      H.stringTypeCheck($name);
      t1 = this._box_0;
      t1.names = t1.names + "$" + H.S($name);
      C.JSArray_methods.add$1(this.namedArgumentList, $name);
      C.JSArray_methods.add$1(this.$arguments, argument);
      ++t1.argumentCount;
    },
    $signature: 54
  };
  H.TypeErrorDecoder.prototype = {
    matchTypeError$1: function(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  H.NullError.prototype = {
    toString$0: function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this._message);
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  H.JsNoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(_this._message);
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + H.S(_this._message) + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + H.S(_this._message) + ")";
    }
  };
  H.UnknownJsTypeError.prototype = {
    toString$0: function(_) {
      var t1 = this._message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  H.ExceptionAndStackTrace.prototype = {};
  H.unwrapException_saveStackTrace.prototype = {
    call$1: function(error) {
      if (!!J.getInterceptor$(error).$isError)
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex;
      return error;
    },
    $signature: 6
  };
  H._StackTrace.prototype = {
    toString$0: function(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  H.Closure.prototype = {
    toString$0: function(_) {
      return "Closure '" + H.Primitives_objectTypeName(this).trim() + "'";
    },
    $isFunction: 1,
    get$$call: function() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  H.TearOffClosure.prototype = {};
  H.StaticClosure.prototype = {
    toString$0: function(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + H.unminifyOrTag($name) + "'";
    }
  };
  H.BoundClosure.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof H.BoundClosure))
        return false;
      return _this._self === other._self && _this._target === other._target && _this._receiver === other._receiver;
    },
    get$hashCode: function(_) {
      var receiverHashCode,
        t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      return (receiverHashCode ^ H.Primitives_objectHashCode(this._target)) >>> 0;
    },
    toString$0: function(_) {
      var receiver = this._receiver;
      if (receiver == null)
        receiver = this._self;
      return "Closure '" + H.S(this.__js_helper$_name) + "' of " + ("Instance of '" + H.Primitives_objectTypeName(receiver) + "'");
    }
  };
  H.TypeErrorImplementation.prototype = {
    toString$0: function(_) {
      return this.message;
    }
  };
  H.CastErrorImplementation.prototype = {
    toString$0: function(_) {
      return this.message;
    }
  };
  H.RuntimeError.prototype = {
    toString$0: function(_) {
      return "RuntimeError: " + H.S(this.message);
    }
  };
  H._AssertionError.prototype = {
    toString$0: function(_) {
      return "Assertion failed: " + P.Error_safeToString(this.message);
    }
  };
  H.TypeImpl.prototype = {
    get$_typeName: function() {
      var t1 = this.__typeName;
      return t1 == null ? this.__typeName = H.runtimeTypeToString(this._rti) : t1;
    },
    toString$0: function(_) {
      return this.get$_typeName();
    },
    get$hashCode: function(_) {
      var t1 = this._hashCode;
      return t1 == null ? this._hashCode = C.JSString_methods.get$hashCode(this.get$_typeName()) : t1;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof H.TypeImpl && this.get$_typeName() === other.get$_typeName();
    },
    $isType: 1
  };
  H.JsLinkedHashMap.prototype = {
    get$length: function(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty: function(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return !this.get$isEmpty(this);
    },
    get$keys: function(_) {
      return new H.LinkedHashMapKeyIterable(this, [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      var _this = this;
      return H.MappedIterable_MappedIterable(_this.get$keys(_this), new H.JsLinkedHashMap_values_closure(_this), H.getTypeArgumentByIndex(_this, 0), H.getTypeArgumentByIndex(_this, 1));
    },
    containsKey$1: function(_, key) {
      var strings, nums, _this = this;
      if (typeof key === "string") {
        strings = _this._strings;
        if (strings == null)
          return false;
        return _this._containsTableEntry$2(strings, key);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return false;
        return _this._containsTableEntry$2(nums, key);
      } else
        return _this.internalContainsKey$1(key);
    },
    internalContainsKey$1: function(key) {
      var _this = this,
        rest = _this._rest;
      if (rest == null)
        return false;
      return _this.internalFindBucketIndex$2(_this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key)), key) >= 0;
    },
    $index: function(_, key) {
      var strings, cell, t1, nums, _this = this;
      if (typeof key === "string") {
        strings = _this._strings;
        if (strings == null)
          return;
        cell = _this._getTableCell$2(strings, key);
        t1 = cell == null ? null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return;
        cell = _this._getTableCell$2(nums, key);
        t1 = cell == null ? null : cell.hashMapCellValue;
        return t1;
      } else
        return _this.internalGet$1(key);
    },
    internalGet$1: function(key) {
      var bucket, index, _this = this,
        rest = _this._rest;
      if (rest == null)
        return;
      bucket = _this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key));
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return;
      return bucket[index].hashMapCellValue;
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      if (typeof key === "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2: function(key, value) {
      var rest, hash, bucket, index, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      rest = _this._rest;
      if (rest == null)
        rest = _this._rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      if (bucket == null)
        _this._setTableEntry$3(rest, hash, [_this._newLinkedCell$2(key, value)]);
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      var value, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.functionTypeCheck(ifAbsent, {func: 1, ret: H.getTypeArgumentByIndex(_this, 1)});
      if (_this.containsKey$1(0, key))
        return _this.$index(0, key);
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1: function(_, key) {
      var _this = this;
      if (typeof key === "string")
        return _this.__js_helper$_removeHashTableEntry$2(_this._strings, key);
      else if (typeof key === "number" && (key & 0x3ffffff) === key)
        return _this.__js_helper$_removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1: function(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._rest;
      if (rest == null)
        return;
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return;
      cell = bucket.splice(index, 1)[0];
      _this.__js_helper$_unlinkCell$1(cell);
      if (bucket.length === 0)
        _this._deleteTableEntry$2(rest, hash);
      return cell.hashMapCellValue;
    },
    clear$0: function(_) {
      var _this = this;
      if (_this.__js_helper$_length > 0) {
        _this._strings = _this._nums = _this._rest = _this._first = _this._last = null;
        _this.__js_helper$_length = 0;
        _this._modified$0();
      }
    },
    forEach$1: function(_, action) {
      var cell, modifications, _this = this;
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(_this, 0), H.getTypeArgumentByIndex(_this, 1)]});
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3: function(table, key, value) {
      var cell, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      cell = _this._getTableCell$2(table, key);
      if (cell == null)
        _this._setTableEntry$3(table, key, _this._newLinkedCell$2(key, value));
      else
        cell.hashMapCellValue = value;
    },
    __js_helper$_removeHashTableEntry$2: function(table, key) {
      var cell;
      if (table == null)
        return;
      cell = this._getTableCell$2(table, key);
      if (cell == null)
        return;
      this.__js_helper$_unlinkCell$1(cell);
      this._deleteTableEntry$2(table, key);
      return cell.hashMapCellValue;
    },
    _modified$0: function() {
      this._modifications = this._modifications + 1 & 67108863;
    },
    _newLinkedCell$2: function(key, value) {
      var last, _this = this,
        cell = new H.LinkedHashMapCell(H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1)));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        last = _this._last;
        cell._previous = last;
        _this._last = last._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    __js_helper$_unlinkCell$1: function(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    internalFindBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    _getTableCell$2: function(table, key) {
      return table[key];
    },
    _getTableBucket$2: function(table, key) {
      return table[key];
    },
    _setTableEntry$3: function(table, key, value) {
      table[key] = value;
    },
    _deleteTableEntry$2: function(table, key) {
      delete table[key];
    },
    _containsTableEntry$2: function(table, key) {
      return this._getTableCell$2(table, key) != null;
    },
    _newHashTable$0: function() {
      var _s20_ = "<non-identifier-key>",
        table = Object.create(null);
      this._setTableEntry$3(table, _s20_, table);
      this._deleteTableEntry$2(table, _s20_);
      return table;
    },
    $isLinkedHashMap: 1
  };
  H.JsLinkedHashMap_values_closure.prototype = {
    call$1: function(each) {
      var t1 = this.$this;
      return t1.$index(0, H.assertSubtypeOfRuntimeType(each, H.getTypeArgumentByIndex(t1, 0)));
    },
    $signature: function() {
      var t1 = this.$this;
      return {func: 1, ret: H.getTypeArgumentByIndex(t1, 1), args: [H.getTypeArgumentByIndex(t1, 0)]};
    }
  };
  H.LinkedHashMapCell.prototype = {};
  H.LinkedHashMapKeyIterable.prototype = {
    get$length: function(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty: function(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator: function(_) {
      var t1 = this._map,
        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti);
      t2._cell = t1._first;
      return t2;
    },
    contains$1: function(_, element) {
      return this._map.containsKey$1(0, element);
    },
    forEach$1: function(_, f) {
      var t1, cell, modifications;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
      t1 = this._map;
      cell = t1._first;
      modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.hashMapCellKey);
        if (modifications !== t1._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        cell = cell._next;
      }
    }
  };
  H.LinkedHashMapKeyIterator.prototype = {
    get$current: function(_) {
      return this.__js_helper$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = _this._cell;
        if (t1 == null) {
          _this.set$__js_helper$_current(null);
          return false;
        } else {
          _this.set$__js_helper$_current(t1.hashMapCellKey);
          _this._cell = _this._cell._next;
          return true;
        }
      }
    },
    set$__js_helper$_current: function(_current) {
      this.__js_helper$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1
  };
  H.initHooks_closure.prototype = {
    call$1: function(o) {
      return this.getTag(o);
    },
    $signature: 6
  };
  H.initHooks_closure0.prototype = {
    call$2: function(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 153
  };
  H.initHooks_closure1.prototype = {
    call$1: function(tag) {
      return this.prototypeForTag(H.stringTypeCheck(tag));
    },
    $signature: 151
  };
  H.JSSyntaxRegExp.prototype = {
    toString$0: function(_) {
      return "RegExp/" + this.pattern + "/";
    },
    get$_nativeGlobalVersion: function() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = H.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, true);
    },
    get$_nativeAnchoredVersion: function() {
      var _this = this,
        t1 = _this._nativeAnchoredRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeAnchoredRegExp = H.JSSyntaxRegExp_makeNative(_this.pattern + "|()", t1.multiline, !t1.ignoreCase, true);
    },
    firstMatch$1: function(string) {
      var m;
      if (typeof string !== "string")
        H.throwExpression(H.argumentErrorValue(string));
      m = this._nativeRegExp.exec(string);
      if (m == null)
        return;
      return new H._MatchImplementation(m);
    },
    allMatches$2: function(_, string, start) {
      if (start > string.length)
        throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
      return new H._AllMatchesIterable(this, string, start);
    },
    allMatches$1: function($receiver, string) {
      return this.allMatches$2($receiver, string, 0);
    },
    _execGlobal$2: function(string, start) {
      var match,
        regexp = this.get$_nativeGlobalVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return;
      return new H._MatchImplementation(match);
    },
    _execAnchored$2: function(string, start) {
      var match,
        regexp = this.get$_nativeAnchoredVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return;
      if (0 >= match.length)
        return H.ioore(match, -1);
      if (match.pop() != null)
        return;
      return new H._MatchImplementation(match);
    },
    matchAsPrefix$2: function(_, string, start) {
      if (start < 0 || start > string.length)
        throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
      return this._execAnchored$2(string, start);
    },
    $isPattern: 1,
    $isRegExp: 1
  };
  H._MatchImplementation.prototype = {
    get$start: function(_) {
      return this._match.index;
    },
    get$end: function(_) {
      var t1 = this._match;
      return t1.index + t1[0].length;
    },
    $isMatch: 1
  };
  H._AllMatchesIterable.prototype = {
    get$iterator: function(_) {
      return new H._AllMatchesIterator(this._re, this._string, this._start);
    },
    $asIterable: function() {
      return [P.Match];
    }
  };
  H._AllMatchesIterator.prototype = {
    get$current: function(_) {
      return this.__js_helper$_current;
    },
    moveNext$0: function() {
      var t2, match, nextIndex, _this = this,
        t1 = _this._string;
      if (t1 == null)
        return false;
      t2 = _this._nextIndex;
      if (t2 <= t1.length) {
        match = _this._regExp._execGlobal$2(t1, t2);
        if (match != null) {
          _this.__js_helper$_current = match;
          nextIndex = match.get$end(match);
          _this._nextIndex = match._match.index === nextIndex ? nextIndex + 1 : nextIndex;
          return true;
        }
      }
      _this._string = _this.__js_helper$_current = null;
      return false;
    },
    $isIterator: 1,
    $asIterator: function() {
      return [P.Match];
    }
  };
  H.StringMatch.prototype = {
    get$end: function(_) {
      return this.start + this.pattern.length;
    },
    $isMatch: 1,
    get$start: function(receiver) {
      return this.start;
    }
  };
  H._StringAllMatchesIterable.prototype = {
    get$iterator: function(_) {
      return new H._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    },
    $asIterable: function() {
      return [P.Match];
    }
  };
  H._StringAllMatchesIterator.prototype = {
    moveNext$0: function() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new H.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current: function(_) {
      return this.__js_helper$_current;
    },
    $isIterator: 1,
    $asIterator: function() {
      return [P.Match];
    }
  };
  H.NativeByteBuffer.prototype = {$isNativeByteBuffer: 1};
  H.NativeTypedData.prototype = {$isNativeTypedData: 1, $isTypedData: 1};
  H.NativeTypedArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
    }
  };
  H.NativeTypedArrayOfDouble.prototype = {
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.doubleTypeCheck(value);
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.double];
    },
    $asFixedLengthListMixin: function() {
      return [P.double];
    },
    $asListMixin: function() {
      return [P.double];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.double];
    },
    $isList: 1,
    $asList: function() {
      return [P.double];
    }
  };
  H.NativeTypedArrayOfInt.prototype = {
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.intTypeCheck(value);
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.int];
    },
    $asFixedLengthListMixin: function() {
      return [P.int];
    },
    $asListMixin: function() {
      return [P.int];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.int];
    },
    $isList: 1,
    $asList: function() {
      return [P.int];
    }
  };
  H.NativeInt16List.prototype = {
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeInt32List.prototype = {
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeInt8List.prototype = {
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint16List.prototype = {
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint32List.prototype = {
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint8ClampedList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint8List.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    }
  };
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  P._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1: function(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 7
  };
  P._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1: function(callback) {
      var t1, t2;
      this._box_0.storedCallback = H.functionTypeCheck(callback, {func: 1, ret: -1});
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 147
  };
  P._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._TimerImpl.prototype = {
    _TimerImpl$2: function(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(H.convertDartClosureToJS(new P._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("`setTimeout()` not found."));
    },
    _TimerImpl$periodic$2: function(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setInterval(H.convertDartClosureToJS(new P._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("Periodic timer."));
    },
    cancel$0: function(_) {
      var t1;
      if (self.setTimeout != null) {
        t1 = this._handle;
        if (t1 == null)
          return;
        if (this._once)
          self.clearTimeout(t1);
        else
          self.clearInterval(t1);
        this._handle = null;
      } else
        throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
    },
    $isTimer: 1
  };
  P._TimerImpl_internalCallback.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._handle = null;
      t1._tick = 1;
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._TimerImpl$periodic_closure.prototype = {
    call$0: function() {
      var duration, _this = this,
        t1 = _this.$this,
        tick = t1._tick + 1,
        t2 = _this.milliseconds;
      if (t2 > 0) {
        duration = Date.now() - _this.start;
        if (duration > (tick + 1) * t2)
          tick = C.JSInt_methods.$tdiv(duration, t2);
      }
      t1._tick = tick;
      _this.callback.call$1(t1);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._AsyncAwaitCompleter.prototype = {
    complete$1: function(_, value) {
      var t1, _this = this;
      H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(_this, 0)});
      if (_this.isSync)
        _this._completer.complete$1(0, value);
      else if (H.checkSubtype(value, "$isFuture", _this.$ti, "$asFuture")) {
        t1 = _this._completer;
        value.then$1$2$onError(t1.get$complete(t1), t1.get$completeError(), -1);
      } else
        P.scheduleMicrotask(new P._AsyncAwaitCompleter_complete_closure(_this, value));
    },
    completeError$2: function(e, st) {
      if (this.isSync)
        this._completer.completeError$2(e, st);
      else
        P.scheduleMicrotask(new P._AsyncAwaitCompleter_completeError_closure(this, e, st));
    },
    $isCompleter: 1
  };
  P._AsyncAwaitCompleter_complete_closure.prototype = {
    call$0: function() {
      this.$this._completer.complete$1(0, this.value);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._AsyncAwaitCompleter_completeError_closure.prototype = {
    call$0: function() {
      this.$this._completer.completeError$2(this.e, this.st);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._awaitOnObject_closure.prototype = {
    call$1: function(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 2
  };
  P._awaitOnObject_closure0.prototype = {
    call$2: function(error, stackTrace) {
      this.bodyFunction.call$2(1, new H.ExceptionAndStackTrace(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace")));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 135
  };
  P._wrapJsFunctionForAsync_closure.prototype = {
    call$2: function(errorCode, result) {
      this.$protected(H.intTypeCheck(errorCode), result);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 124
  };
  P._asyncStarHelper_closure.prototype = {
    call$0: function() {
      var t1 = this.controller,
        t2 = t1.controller,
        t3 = t2._state;
      if ((t3 & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t3 & 2) === 0) {
        t1.isSuspended = true;
        return;
      }
      this.bodyFunctionOrErrorCode.call$2(null, 0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._asyncStarHelper_closure0.prototype = {
    call$1: function(_) {
      var errorCode = this.controller.cancelationCompleter != null ? 2 : 0;
      this.bodyFunctionOrErrorCode.call$2(errorCode, null);
    },
    $signature: 7
  };
  P._AsyncStarStreamController.prototype = {
    add$1: function(_, $event) {
      return this.controller.add$1(0, H.assertSubtypeOfRuntimeType($event, H.getTypeArgumentByIndex(this, 0)));
    },
    _AsyncStarStreamController$1: function(body, $T) {
      var t1 = new P._AsyncStarStreamController__resumeBody(body);
      this.set$controller(0, P.StreamController_StreamController(new P._AsyncStarStreamController_closure(this, body), new P._AsyncStarStreamController_closure0(t1), new P._AsyncStarStreamController_closure1(this, t1), false, $T));
    },
    set$controller: function(_, controller) {
      this.controller = H.assertSubtype(controller, "$isStreamController", this.$ti, "$asStreamController");
    }
  };
  P._AsyncStarStreamController__resumeBody.prototype = {
    call$0: function() {
      P.scheduleMicrotask(new P._AsyncStarStreamController__resumeBody_closure(this.body));
    },
    $signature: 0
  };
  P._AsyncStarStreamController__resumeBody_closure.prototype = {
    call$0: function() {
      this.body.call$2(0, null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._AsyncStarStreamController_closure0.prototype = {
    call$0: function() {
      this._resumeBody.call$0();
    },
    $signature: 0
  };
  P._AsyncStarStreamController_closure1.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1.isSuspended) {
        t1.isSuspended = false;
        this._resumeBody.call$0();
      }
    },
    $signature: 0
  };
  P._AsyncStarStreamController_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if ((t1.controller._state & 4) === 0) {
        t1.cancelationCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, [null]), [null]);
        if (t1.isSuspended) {
          t1.isSuspended = false;
          P.scheduleMicrotask(new P._AsyncStarStreamController__closure(this.body));
        }
        return t1.cancelationCompleter.future;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 15
  };
  P._AsyncStarStreamController__closure.prototype = {
    call$0: function() {
      this.body.call$2(2, null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._IterationMarker.prototype = {
    toString$0: function(_) {
      return "IterationMarker(" + this.state + ", " + H.S(this.value) + ")";
    }
  };
  P._SyncStarIterator.prototype = {
    get$current: function(_) {
      var t1 = this._nestedIterator;
      if (t1 == null)
        return this._async$_current;
      return H.assertSubtypeOfRuntimeType(t1.get$current(t1), H.getTypeArgumentByIndex(this, 0));
    },
    moveNext$0: function() {
      var t1, value, state, inner, _this = this;
      for (; true;) {
        t1 = _this._nestedIterator;
        if (t1 != null)
          if (t1.moveNext$0())
            return true;
          else
            _this._nestedIterator = null;
        value = function(body, SUCCESS, ERROR) {
          var errorValue,
            errorCode = SUCCESS;
          while (true)
            try {
              return body(errorCode, errorValue);
            } catch (error) {
              errorValue = error;
              errorCode = ERROR;
            }
        }(_this._body, 0, 1);
        if (value instanceof P._IterationMarker) {
          state = value.state;
          if (state === 2) {
            t1 = _this._suspendedBodies;
            if (t1 == null || t1.length === 0) {
              _this.set$_async$_current(null);
              return false;
            }
            if (0 >= t1.length)
              return H.ioore(t1, -1);
            _this._body = t1.pop();
            continue;
          } else {
            t1 = value.value;
            if (state === 3)
              throw t1;
            else {
              inner = J.get$iterator$ax(t1);
              if (!!inner.$is_SyncStarIterator) {
                t1 = _this._suspendedBodies;
                if (t1 == null)
                  t1 = _this._suspendedBodies = [];
                C.JSArray_methods.add$1(t1, _this._body);
                _this._body = inner._body;
                continue;
              } else {
                _this._nestedIterator = inner;
                continue;
              }
            }
          }
        } else {
          _this.set$_async$_current(value);
          return true;
        }
      }
      return false;
    },
    set$_async$_current: function(_current) {
      this._async$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1
  };
  P._SyncStarIterable.prototype = {
    get$iterator: function(_) {
      return new P._SyncStarIterator(this._outerHelper(), this.$ti);
    }
  };
  P._BroadcastStream.prototype = {};
  P._BroadcastSubscription.prototype = {
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    set$_async$_next: function(_next) {
      this._async$_next = H.assertSubtype(_next, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
    },
    set$_async$_previous: function(_previous) {
      this._async$_previous = H.assertSubtype(_previous, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
    }
  };
  P._BroadcastStreamController.prototype = {
    get$_mayAddEvent: function() {
      return this._state < 4;
    },
    _ensureDoneFuture$0: function() {
      var t1 = this._doneFuture;
      if (t1 != null)
        return t1;
      return this._doneFuture = new P._Future($.Zone__current, [null]);
    },
    _removeListener$1: function(subscription) {
      var previous, next;
      H.assertSubtype(subscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      previous = subscription._async$_previous;
      next = subscription._async$_next;
      if (previous == null)
        this.set$_firstSubscription(next);
      else
        previous.set$_async$_next(next);
      if (next == null)
        this.set$_lastSubscription(previous);
      else
        next.set$_async$_previous(previous);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
    },
    _subscribe$4: function(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, subscription, oldLast, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      if ((_this._state & 4) !== 0) {
        if (onDone == null)
          onDone = P.async___nullDoneHandler$closure();
        t1 = new P._DoneStreamSubscription($.Zone__current, onDone, _this.$ti);
        t1._schedule$0();
        return t1;
      }
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      t4 = _this.$ti;
      subscription = new P._BroadcastSubscription(_this, t2, t3, t4);
      subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
      H.assertSubtype(subscription, "$is_BroadcastSubscription", t4, "$as_BroadcastSubscription");
      subscription._eventState = _this._state & 1;
      oldLast = _this._lastSubscription;
      _this.set$_lastSubscription(subscription);
      subscription.set$_async$_next(null);
      subscription.set$_async$_previous(oldLast);
      if (oldLast == null)
        _this.set$_firstSubscription(subscription);
      else
        oldLast.set$_async$_next(subscription);
      if (_this._firstSubscription == _this._lastSubscription)
        P._runGuarded(_this.onListen);
      return subscription;
    },
    _recordCancel$1: function(sub) {
      var _this = this,
        t1 = _this.$ti;
      sub = H.assertSubtype(H.assertSubtype(sub, "$isStreamSubscription", t1, "$asStreamSubscription"), "$is_BroadcastSubscription", t1, "$as_BroadcastSubscription");
      if (sub._async$_next === sub)
        return;
      t1 = sub._eventState;
      if ((t1 & 2) !== 0)
        sub._eventState = t1 | 4;
      else {
        _this._removeListener$1(sub);
        if ((_this._state & 2) === 0 && _this._firstSubscription == null)
          _this._callOnCancel$0();
      }
      return;
    },
    _recordPause$1: function(subscription) {
      H.assertSubtype(subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
    },
    _recordResume$1: function(subscription) {
      H.assertSubtype(subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
    },
    _addEventError$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add new events after calling close");
      return new P.StateError("Cannot add new events while doing an addStream");
    },
    add$1: function(_, data) {
      var _this = this;
      H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(_this, 0));
      if (!_this.get$_mayAddEvent())
        throw H.wrapException(_this._addEventError$0());
      _this._sendData$1(data);
    },
    addError$2: function(error, stackTrace) {
      var replacement;
      if (error == null)
        error = new P.NullThrownError();
      if (!this.get$_mayAddEvent())
        throw H.wrapException(this._addEventError$0());
      replacement = $.Zone__current.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = replacement.error;
        if (error == null)
          error = new P.NullThrownError();
        stackTrace = replacement.stackTrace;
      }
      this._sendError$2(error, stackTrace);
    },
    close$0: function(_) {
      var doneFuture, _this = this;
      if ((_this._state & 4) !== 0)
        return _this._doneFuture;
      if (!_this.get$_mayAddEvent())
        throw H.wrapException(_this._addEventError$0());
      _this._state |= 4;
      doneFuture = _this._ensureDoneFuture$0();
      _this._sendDone$0();
      return doneFuture;
    },
    get$done: function() {
      return this._ensureDoneFuture$0();
    },
    _add$1: function(_, data) {
      this._sendData$1(H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0)));
    },
    _addError$2: function(error, stackTrace) {
      this._sendError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
    },
    _forEachListener$1: function(action) {
      var t1, subscription, id, next, _this = this;
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(_this, 0)]]});
      t1 = _this._state;
      if ((t1 & 2) !== 0)
        throw H.wrapException(P.StateError$("Cannot fire new event. Controller is already firing an event"));
      subscription = _this._firstSubscription;
      if (subscription == null)
        return;
      id = t1 & 1;
      _this._state = t1 ^ 3;
      for (; subscription != null;) {
        t1 = subscription._eventState;
        if ((t1 & 1) === id) {
          subscription._eventState = t1 | 2;
          action.call$1(subscription);
          t1 = subscription._eventState ^= 1;
          next = subscription._async$_next;
          if ((t1 & 4) !== 0)
            _this._removeListener$1(subscription);
          subscription._eventState &= 4294967293;
          subscription = next;
        } else
          subscription = subscription._async$_next;
      }
      _this._state &= 4294967293;
      if (_this._firstSubscription == null)
        _this._callOnCancel$0();
    },
    _callOnCancel$0: function() {
      var _this = this;
      if ((_this._state & 4) !== 0 && _this._doneFuture._state === 0)
        _this._doneFuture._asyncComplete$1(null);
      P._runGuarded(_this.onCancel);
    },
    set$_firstSubscription: function(_firstSubscription) {
      this._firstSubscription = H.assertSubtype(_firstSubscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
    },
    set$_lastSubscription: function(_lastSubscription) {
      this._lastSubscription = H.assertSubtype(_lastSubscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
    },
    $isEventSink: 1,
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1
  };
  P._SyncBroadcastStreamController.prototype = {
    get$_mayAddEvent: function() {
      return P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
    },
    _addEventError$0: function() {
      if ((this._state & 2) !== 0)
        return new P.StateError("Cannot fire new event. Controller is already firing an event");
      return this.super$_BroadcastStreamController$_addEventError();
    },
    _sendData$1: function(data) {
      var t1, _this = this;
      H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(_this, 0));
      t1 = _this._firstSubscription;
      if (t1 == null)
        return;
      if (t1 === _this._lastSubscription) {
        _this._state |= 2;
        t1._add$1(0, data);
        _this._state &= 4294967293;
        if (_this._firstSubscription == null)
          _this._callOnCancel$0();
        return;
      }
      _this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(_this, data));
    },
    _sendError$2: function(error, stackTrace) {
      if (this._firstSubscription == null)
        return;
      this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
    },
    _sendDone$0: function() {
      var _this = this;
      if (_this._firstSubscription != null)
        _this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(_this));
      else
        _this._doneFuture._asyncComplete$1(null);
    }
  };
  P._SyncBroadcastStreamController__sendData_closure.prototype = {
    call$1: function(subscription) {
      H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._add$1(0, this.data);
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
    }
  };
  P._SyncBroadcastStreamController__sendError_closure.prototype = {
    call$1: function(subscription) {
      H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._addError$2(this.error, this.stackTrace);
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
    }
  };
  P._SyncBroadcastStreamController__sendDone_closure.prototype = {
    call$1: function(subscription) {
      H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._async$_close$0();
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
    }
  };
  P._AsyncBroadcastStreamController.prototype = {
    _sendData$1: function(data) {
      var subscription, t1;
      H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
      for (subscription = this._firstSubscription, t1 = this.$ti; subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new P._DelayedData(data, t1));
    },
    _sendError$2: function(error, stackTrace) {
      var subscription;
      for (subscription = this._firstSubscription; subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new P._DelayedError(error, stackTrace));
    },
    _sendDone$0: function() {
      var subscription = this._firstSubscription;
      if (subscription != null)
        for (; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(C.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }
  };
  P._AsBroadcastStreamController.prototype = {
    get$_hasPending: function() {
      var t1 = this._pending;
      return t1 != null && t1.lastPendingEvent != null;
    },
    _addPendingEvent$1: function($event) {
      var _this = this;
      if (_this._pending == null)
        _this.set$_pending(new P._StreamImplEvents(_this.$ti));
      _this._pending.add$1(0, $event);
    },
    add$1: function(_, data) {
      var t1, $event, t2, _this = this;
      H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(_this, 0));
      t1 = _this._state;
      if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
        _this._addPendingEvent$1(new P._DelayedData(data, _this.$ti));
        return;
      }
      _this.super$_BroadcastStreamController$add(0, data);
      while (true) {
        t1 = _this._pending;
        if (!(t1 != null && t1.lastPendingEvent != null))
          break;
        t1.toString;
        H.assertSubtype(_this, "$is_EventDispatch", [H.getTypeArgumentByIndex(t1, 0)], "$as_EventDispatch");
        $event = t1.firstPendingEvent;
        t2 = $event.get$next($event);
        t1.firstPendingEvent = t2;
        if (t2 == null)
          t1.lastPendingEvent = null;
        $event.perform$1(_this);
      }
    },
    addError$2: function(error, stackTrace) {
      var t1, $event, t2, _this = this;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      t1 = _this._state;
      if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
        _this._addPendingEvent$1(new P._DelayedError(error, stackTrace));
        return;
      }
      if (!(P._BroadcastStreamController.prototype.get$_mayAddEvent.call(_this) && (_this._state & 2) === 0))
        throw H.wrapException(_this._addEventError$0());
      _this._sendError$2(error, stackTrace);
      while (true) {
        t1 = _this._pending;
        if (!(t1 != null && t1.lastPendingEvent != null))
          break;
        t1.toString;
        H.assertSubtype(_this, "$is_EventDispatch", [H.getTypeArgumentByIndex(t1, 0)], "$as_EventDispatch");
        $event = t1.firstPendingEvent;
        t2 = $event.get$next($event);
        t1.firstPendingEvent = t2;
        if (t2 == null)
          t1.lastPendingEvent = null;
        $event.perform$1(_this);
      }
    },
    addError$1: function(error) {
      return this.addError$2(error, null);
    },
    close$0: function(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
        _this._addPendingEvent$1(C.C__DelayedDone);
        _this._state |= 4;
        return P._BroadcastStreamController.prototype.get$done.call(_this);
      }
      return _this.super$_BroadcastStreamController$close(0);
    },
    _callOnCancel$0: function() {
      var t1, _this = this;
      if (_this.get$_hasPending()) {
        t1 = _this._pending;
        if (t1._state === 1)
          t1._state = 3;
        t1.firstPendingEvent = t1.lastPendingEvent = null;
        _this.set$_pending(null);
      }
      _this.super$_BroadcastStreamController$_callOnCancel();
    },
    set$_pending: function(_pending) {
      this._pending = H.assertSubtype(_pending, "$is_StreamImplEvents", this.$ti, "$as_StreamImplEvents");
    }
  };
  P.Future.prototype = {};
  P.Future_Future_closure.prototype = {
    call$0: function() {
      var e, s, exception, error, stackTrace, replacement;
      try {
        this.result._complete$1(this.computation.call$0());
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        error = e;
        stackTrace = s;
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = replacement.error;
          if (error == null)
            error = new P.NullThrownError();
          stackTrace = replacement.stackTrace;
        }
        this.result._completeError$2(error, stackTrace);
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._Completer.prototype = {
    completeError$2: function(error, stackTrace) {
      var replacement;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      if (error == null)
        error = new P.NullThrownError();
      if (this.future._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      replacement = $.Zone__current.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = replacement.error;
        if (error == null)
          error = new P.NullThrownError();
        stackTrace = replacement.stackTrace;
      }
      this._completeError$2(error, stackTrace);
    },
    completeError$1: function(error) {
      return this.completeError$2(error, null);
    },
    $isCompleter: 1
  };
  P._AsyncCompleter.prototype = {
    complete$1: function(_, value) {
      var t1;
      H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
      t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    },
    complete$0: function($receiver) {
      return this.complete$1($receiver, null);
    },
    _completeError$2: function(error, stackTrace) {
      this.future._asyncCompleteError$2(error, stackTrace);
    }
  };
  P._SyncCompleter.prototype = {
    complete$1: function(_, value) {
      var t1;
      H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
      t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._complete$1(value);
    },
    complete$0: function($receiver) {
      return this.complete$1($receiver, null);
    },
    _completeError$2: function(error, stackTrace) {
      this.future._completeError$2(error, stackTrace);
    }
  };
  P._FutureListener.prototype = {
    matchesErrorTest$1: function(asyncError) {
      if (this.state !== 6)
        return true;
      return this.result._zone.runUnary$2$2(H.functionTypeCheck(this.callback, {func: 1, ret: P.bool, args: [P.Object]}), asyncError.error, P.bool, P.Object);
    },
    handleError$1: function(asyncError) {
      var errorCallback = this.errorCallback,
        t1 = P.Object,
        t2 = {futureOr: 1, type: H.getTypeArgumentByIndex(this, 1)},
        t3 = this.result._zone;
      if (H.functionTypeTest(errorCallback, {func: 1, args: [P.Object, P.StackTrace]}))
        return H.futureOrCheck(t3.runBinary$3$3(errorCallback, asyncError.error, asyncError.stackTrace, null, t1, P.StackTrace), t2);
      else
        return H.futureOrCheck(t3.runUnary$2$2(H.functionTypeCheck(errorCallback, {func: 1, args: [P.Object]}), asyncError.error, null, t1), t2);
    }
  };
  P._Future.prototype = {
    then$1$2$onError: function(f, onError, $R) {
      var currentZone,
        t1 = H.getTypeArgumentByIndex(this, 0);
      H.functionTypeCheck(f, {func: 1, ret: {futureOr: 1, type: $R}, args: [t1]});
      currentZone = $.Zone__current;
      if (currentZone !== C.C__RootZone) {
        f = currentZone.registerUnaryCallback$2$1(f, {futureOr: 1, type: $R}, t1);
        if (onError != null)
          onError = P._registerErrorHandler(onError, currentZone);
      }
      return this._thenNoZoneRegistration$1$2(f, onError, $R);
    },
    then$1$1: function(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    then$1: function(f) {
      return this.then$1$2$onError(f, null, null);
    },
    _thenNoZoneRegistration$1$2: function(f, onError, $E) {
      var result, t2,
        t1 = H.getTypeArgumentByIndex(this, 0);
      H.functionTypeCheck(f, {func: 1, ret: {futureOr: 1, type: $E}, args: [t1]});
      result = new P._Future($.Zone__current, [$E]);
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new P._FutureListener(result, t2, f, onError, [t1, $E]));
      return result;
    },
    whenComplete$1: function(action) {
      var t1, result;
      H.functionTypeCheck(action, {func: 1});
      t1 = $.Zone__current;
      result = new P._Future(t1, this.$ti);
      if (t1 !== C.C__RootZone)
        action = t1.registerCallback$1$1(action, null);
      t1 = H.getTypeArgumentByIndex(this, 0);
      this._addListener$1(new P._FutureListener(result, 8, action, null, [t1, t1]));
      return result;
    },
    asStream$0: function() {
      return P.Stream_Stream$fromFuture(this, H.getTypeArgumentByIndex(this, 0));
    },
    _addListener$1: function(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 1) {
        listener._nextListener = H.interceptedTypeCheck(_this._resultOrListeners, "$is_FutureListener");
        _this._resultOrListeners = listener;
      } else {
        if (t1 === 2) {
          source = H.interceptedTypeCheck(_this._resultOrListeners, "$is_Future");
          t1 = source._state;
          if (t1 < 4) {
            source._addListener$1(listener);
            return;
          }
          _this._state = t1;
          _this._resultOrListeners = source._resultOrListeners;
        }
        _this._zone.scheduleMicrotask$1(new P._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1: function(listeners) {
      var t1, existingListeners, cursor, cursor0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 1) {
        existingListeners = H.interceptedTypeCheck(_this._resultOrListeners, "$is_FutureListener");
        cursor = _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          for (; cursor0 = cursor._nextListener, cursor0 != null; cursor = cursor0)
            ;
          cursor._nextListener = existingListeners;
        }
      } else {
        if (t1 === 2) {
          source = H.interceptedTypeCheck(_this._resultOrListeners, "$is_Future");
          t1 = source._state;
          if (t1 < 4) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._state = t1;
          _this._resultOrListeners = source._resultOrListeners;
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        _this._zone.scheduleMicrotask$1(new P._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0: function() {
      var current = H.interceptedTypeCheck(this._resultOrListeners, "$is_FutureListener");
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1: function(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _complete$1: function(value) {
      var t2, listeners, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.futureOrCheck(value, {futureOr: 1, type: t1});
      t2 = _this.$ti;
      if (H.checkSubtype(value, "$isFuture", t2, "$asFuture"))
        if (H.checkSubtype(value, "$is_Future", t2, null))
          P._Future__chainCoreFuture(value, _this);
        else
          P._Future__chainForeignFuture(value, _this);
      else {
        listeners = _this._removeListeners$0();
        H.assertSubtypeOfRuntimeType(value, t1);
        _this._state = 4;
        _this._resultOrListeners = value;
        P._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeError$2: function(error, stackTrace) {
      var listeners, _this = this;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = new P.AsyncError(error, stackTrace);
      P._Future__propagateToListeners(_this, listeners);
    },
    _completeError$1: function(error) {
      return this._completeError$2(error, null);
    },
    _asyncComplete$1: function(value) {
      var _this = this;
      H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(_this, 0)});
      if (H.checkSubtype(value, "$isFuture", _this.$ti, "$asFuture")) {
        _this._chainFuture$1(value);
        return;
      }
      _this._state = 1;
      _this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure(_this, value));
    },
    _chainFuture$1: function(value) {
      var _this = this,
        t1 = _this.$ti;
      H.assertSubtype(value, "$isFuture", t1, "$asFuture");
      if (H.checkSubtype(value, "$is_Future", t1, null)) {
        if (value._state === 8) {
          _this._state = 1;
          _this._zone.scheduleMicrotask$1(new P._Future__chainFuture_closure(_this, value));
        } else
          P._Future__chainCoreFuture(value, _this);
        return;
      }
      P._Future__chainForeignFuture(value, _this);
    },
    _asyncCompleteError$2: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      this._state = 1;
      this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
    },
    $isFuture: 1
  };
  P._Future__addListener_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this.listener);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._Future__prependListeners_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._Future__chainForeignFuture_closure.prototype = {
    call$1: function(value) {
      var t1 = this.target;
      t1._state = 0;
      t1._complete$1(value);
    },
    $signature: 7
  };
  P._Future__chainForeignFuture_closure0.prototype = {
    call$2: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      this.target._completeError$2(error, stackTrace);
    },
    call$1: function(error) {
      return this.call$2(error, null);
    },
    "call*": "call$2",
    $defaultValues: function() {
      return [null];
    },
    $signature: 119
  };
  P._Future__chainForeignFuture_closure1.prototype = {
    call$0: function() {
      this.target._completeError$2(this.e, this.s);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._Future__asyncComplete_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = H.assertSubtypeOfRuntimeType(this.value, H.getTypeArgumentByIndex(t1, 0)),
        listeners = t1._removeListeners$0();
      t1._state = 4;
      t1._resultOrListeners = t2;
      P._Future__propagateToListeners(t1, listeners);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._Future__chainFuture_closure.prototype = {
    call$0: function() {
      P._Future__chainCoreFuture(this.value, this.$this);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._Future__asyncCompleteError_closure.prototype = {
    call$0: function() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0: function() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this.listener;
        completeResult = t1.result._zone.run$1$1(H.functionTypeCheck(t1.callback, {func: 1}), null);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        if (_this.hasError) {
          t1 = H.interceptedTypeCheck(_this._box_1.source._resultOrListeners, "$isAsyncError").error;
          t2 = e;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = H.interceptedTypeCheck(_this._box_1.source._resultOrListeners, "$isAsyncError");
        else
          t2.listenerValueOrError = new P.AsyncError(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (!!J.getInterceptor$(completeResult).$isFuture) {
        if (completeResult instanceof P._Future && completeResult._state >= 4) {
          if (completeResult._state === 8) {
            t1 = _this._box_0;
            t1.listenerValueOrError = H.interceptedTypeCheck(completeResult._resultOrListeners, "$isAsyncError");
            t1.listenerHasError = true;
          }
          return;
        }
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), null);
        t1.listenerHasError = false;
      }
    },
    $signature: 1
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1: function(_) {
      return this.originalSource;
    },
    $signature: 118
  };
  P._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0: function() {
      var e, s, t1, t2, t3, t4, exception, _this = this;
      try {
        t1 = _this.listener;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        t3 = H.assertSubtypeOfRuntimeType(_this.sourceResult, t2);
        t4 = H.getTypeArgumentByIndex(t1, 1);
        _this._box_0.listenerValueOrError = t1.result._zone.runUnary$2$2(H.functionTypeCheck(t1.callback, {func: 1, ret: {futureOr: 1, type: t4}, args: [t2]}), t3, {futureOr: 1, type: t4}, t2);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = _this._box_0;
        t1.listenerValueOrError = new P.AsyncError(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 1
  };
  P._Future__propagateToListeners_handleError.prototype = {
    call$0: function() {
      var asyncError, e, s, t1, t2, exception, t3, t4, _this = this;
      try {
        asyncError = H.interceptedTypeCheck(_this._box_1.source._resultOrListeners, "$isAsyncError");
        t1 = _this.listener;
        if (H.boolConversionCheck(t1.matchesErrorTest$1(asyncError)) && t1.errorCallback != null) {
          t2 = _this._box_0;
          t2.listenerValueOrError = t1.handleError$1(asyncError);
          t2.listenerHasError = false;
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = H.interceptedTypeCheck(_this._box_1.source._resultOrListeners, "$isAsyncError");
        t2 = t1.error;
        t3 = e;
        t4 = _this._box_0;
        if (t2 == null ? t3 == null : t2 === t3)
          t4.listenerValueOrError = t1;
        else
          t4.listenerValueOrError = new P.AsyncError(e, s);
        t4.listenerHasError = true;
      }
    },
    $signature: 1
  };
  P._AsyncCallbackEntry.prototype = {};
  P.Stream.prototype = {
    get$length: function(_) {
      var t1 = {},
        future = new P._Future($.Zone__current, [P.int]);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1, this), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  };
  P.Stream_Stream$fromFuture_closure.prototype = {
    call$1: function(value) {
      var t1 = this.controller;
      t1._add$1(0, H.assertSubtypeOfRuntimeType(value, this.T));
      t1._closeUnchecked$0();
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [this.T]};
    }
  };
  P.Stream_Stream$fromFuture_closure0.prototype = {
    call$2: function(error, stackTrace) {
      var t1 = this.controller;
      t1._addError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
      t1._closeUnchecked$0();
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 11
  };
  P.Stream_Stream$fromIterable_closure.prototype = {
    call$0: function() {
      var t1 = this.elements;
      return new P._IterablePendingEvents(new J.ArrayIterator(t1, 1, [H.getTypeArgumentByIndex(t1, 0)]), [this.T]);
    },
    $signature: function() {
      return {func: 1, ret: [P._IterablePendingEvents, this.T]};
    }
  };
  P.Stream_length_closure.prototype = {
    call$1: function(_) {
      H.assertSubtypeOfRuntimeType(_, H.getRuntimeTypeArgument(this.$this, "Stream", 0));
      ++this._box_0.count;
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [H.getRuntimeTypeArgument(this.$this, "Stream", 0)]};
    }
  };
  P.Stream_length_closure0.prototype = {
    call$0: function() {
      this.future._complete$1(this._box_0.count);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P.StreamSubscription.prototype = {};
  P.EventSink.prototype = {};
  P.StreamTransformerBase.prototype = {$isStreamTransformer: 1};
  P._StreamController.prototype = {
    get$_pendingEvents: function() {
      var t1, _this = this;
      if ((_this._state & 8) === 0)
        return H.assertSubtype(_this._varData, "$is_PendingEvents", _this.$ti, "$as_PendingEvents");
      t1 = _this.$ti;
      return H.assertSubtype(H.assertSubtype(_this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").varData, "$is_PendingEvents", t1, "$as_PendingEvents");
    },
    _ensurePendingEvents$0: function() {
      var t1, state, t2, _this = this;
      if ((_this._state & 8) === 0) {
        t1 = _this._varData;
        if (t1 == null)
          t1 = _this._varData = new P._StreamImplEvents(_this.$ti);
        return H.assertSubtype(t1, "$is_StreamImplEvents", _this.$ti, "$as_StreamImplEvents");
      }
      t1 = _this.$ti;
      state = H.assertSubtype(_this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState");
      t2 = state.varData;
      return H.assertSubtype(t2 == null ? state.varData = new P._StreamImplEvents(t1) : t2, "$is_StreamImplEvents", t1, "$as_StreamImplEvents");
    },
    get$_subscription: function() {
      var t1, _this = this;
      if ((_this._state & 8) !== 0) {
        t1 = _this.$ti;
        return H.assertSubtype(H.assertSubtype(_this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").varData, "$is_ControllerSubscription", t1, "$as_ControllerSubscription");
      }
      return H.assertSubtype(_this._varData, "$is_ControllerSubscription", _this.$ti, "$as_ControllerSubscription");
    },
    _badEventState$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add event after closing");
      return new P.StateError("Cannot add event while adding a stream");
    },
    addStream$2$cancelOnError: function(_, source, cancelOnError) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.$ti;
      H.assertSubtype(source, "$isStream", t1, "$asStream");
      t2 = _this._state;
      if (t2 >= 4)
        throw H.wrapException(_this._badEventState$0());
      if ((t2 & 2) !== 0) {
        t1 = new P._Future($.Zone__current, [null]);
        t1._asyncComplete$1(null);
        return t1;
      }
      t2 = _this._varData;
      t3 = new P._Future($.Zone__current, [null]);
      t4 = source.listen$4$cancelOnError$onDone$onError(_this.get$_add(_this), false, _this.get$_async$_close(), _this.get$_addError());
      t5 = _this._state;
      if ((t5 & 1) !== 0 ? (_this.get$_subscription()._state & 4) !== 0 : (t5 & 2) === 0)
        t4.pause$0(0);
      _this._varData = new P._StreamControllerAddStreamState(t2, t3, t4, t1);
      _this._state |= 8;
      return t3;
    },
    _ensureDoneFuture$0: function() {
      var t1 = this._doneFuture;
      if (t1 == null)
        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new P._Future($.Zone__current, [null]);
      return t1;
    },
    add$1: function(_, value) {
      var _this = this;
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 0));
      if (_this._state >= 4)
        throw H.wrapException(_this._badEventState$0());
      _this._add$1(0, value);
    },
    addError$2: function(error, stackTrace) {
      var replacement;
      if (this._state >= 4)
        throw H.wrapException(this._badEventState$0());
      if (error == null)
        error = new P.NullThrownError();
      replacement = $.Zone__current.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = replacement.error;
        if (error == null)
          error = new P.NullThrownError();
        stackTrace = replacement.stackTrace;
      }
      this._addError$2(error, stackTrace);
    },
    close$0: function(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return _this._ensureDoneFuture$0();
      if (t1 >= 4)
        throw H.wrapException(_this._badEventState$0());
      _this._closeUnchecked$0();
      return _this._ensureDoneFuture$0();
    },
    _closeUnchecked$0: function() {
      var t1 = this._state |= 4;
      if ((t1 & 1) !== 0)
        this._sendDone$0();
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, C.C__DelayedDone);
    },
    _add$1: function(_, value) {
      var t1, _this = this;
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 0));
      t1 = _this._state;
      if ((t1 & 1) !== 0)
        _this._sendData$1(value);
      else if ((t1 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new P._DelayedData(value, _this.$ti));
    },
    _addError$2: function(error, stackTrace) {
      var t1;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendError$2(error, stackTrace);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new P._DelayedError(error, stackTrace));
    },
    _async$_close$0: function() {
      var _this = this,
        addState = H.assertSubtype(_this._varData, "$is_StreamControllerAddStreamState", _this.$ti, "$as_StreamControllerAddStreamState");
      _this._varData = addState.varData;
      _this._state &= 4294967287;
      addState.addStreamFuture._asyncComplete$1(null);
    },
    _subscribe$4: function(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, subscription, pendingEvents, addState, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      if ((_this._state & 3) !== 0)
        throw H.wrapException(P.StateError$("Stream has already been listened to."));
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      t4 = _this.$ti;
      subscription = new P._ControllerSubscription(_this, t2, t3, t4);
      subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
      pendingEvents = _this.get$_pendingEvents();
      t1 = _this._state |= 1;
      if ((t1 & 8) !== 0) {
        addState = H.assertSubtype(_this._varData, "$is_StreamControllerAddStreamState", t4, "$as_StreamControllerAddStreamState");
        addState.varData = subscription;
        addState.addSubscription.resume$0(0);
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new P._StreamController__subscribe_closure(_this));
      return subscription;
    },
    _recordCancel$1: function(subscription) {
      var result, e, s, exception, result0, _this = this,
        t1 = _this.$ti;
      H.assertSubtype(subscription, "$isStreamSubscription", t1, "$asStreamSubscription");
      result = null;
      if ((_this._state & 8) !== 0)
        result = H.assertSubtype(_this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").cancel$0(0);
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      t1 = _this.onCancel;
      if (t1 != null)
        if (result == null)
          try {
            result = H.interceptedTypeCheck(_this.onCancel.call$0(), "$isFuture");
          } catch (exception) {
            e = H.unwrapException(exception);
            s = H.getTraceFromException(exception);
            result0 = new P._Future($.Zone__current, [null]);
            result0._asyncCompleteError$2(e, s);
            result = result0;
          }
        else
          result = result.whenComplete$1(t1);
      t1 = new P._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    },
    _recordPause$1: function(subscription) {
      var _this = this,
        t1 = _this.$ti;
      H.assertSubtype(subscription, "$isStreamSubscription", t1, "$asStreamSubscription");
      if ((_this._state & 8) !== 0)
        H.assertSubtype(_this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").addSubscription.pause$0(0);
      P._runGuarded(_this.onPause);
    },
    _recordResume$1: function(subscription) {
      var _this = this,
        t1 = _this.$ti;
      H.assertSubtype(subscription, "$isStreamSubscription", t1, "$asStreamSubscription");
      if ((_this._state & 8) !== 0)
        H.assertSubtype(_this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").addSubscription.resume$0(0);
      P._runGuarded(_this.onResume);
    },
    $isEventSink: 1,
    $isStreamController: 1,
    $is_StreamControllerLifecycle: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1
  };
  P._StreamController__subscribe_closure.prototype = {
    call$0: function() {
      P._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  P._StreamController__recordCancel_complete.prototype = {
    call$0: function() {
      var t1 = this.$this._doneFuture;
      if (t1 != null && t1._state === 0)
        t1._asyncComplete$1(null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._SyncStreamControllerDispatch.prototype = {
    _sendData$1: function(data) {
      H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
      this.get$_subscription()._add$1(0, data);
    },
    _sendError$2: function(error, stackTrace) {
      this.get$_subscription()._addError$2(error, stackTrace);
    },
    _sendDone$0: function() {
      this.get$_subscription()._async$_close$0();
    }
  };
  P._AsyncStreamControllerDispatch.prototype = {
    _sendData$1: function(data) {
      var t1 = H.getTypeArgumentByIndex(this, 0);
      H.assertSubtypeOfRuntimeType(data, t1);
      this.get$_subscription()._addPending$1(new P._DelayedData(data, [t1]));
    },
    _sendError$2: function(error, stackTrace) {
      this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace));
    },
    _sendDone$0: function() {
      this.get$_subscription()._addPending$1(C.C__DelayedDone);
    }
  };
  P._AsyncStreamController.prototype = {};
  P._SyncStreamController.prototype = {};
  P._ControllerStream.prototype = {
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      return this._controller._subscribe$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError);
    },
    get$hashCode: function(_) {
      return (H.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof P._ControllerStream && other._controller === this._controller;
    }
  };
  P._ControllerSubscription.prototype = {
    _onCancel$0: function() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0: function() {
      this._controller._recordPause$1(this);
    },
    _onResume$0: function() {
      this._controller._recordResume$1(this);
    }
  };
  P._AddStreamState.prototype = {
    cancel$0: function(_) {
      var cancel = this.addSubscription.cancel$0(0);
      if (cancel == null) {
        this.addStreamFuture._asyncComplete$1(null);
        return;
      }
      return cancel.whenComplete$1(new P._AddStreamState_cancel_closure(this));
    }
  };
  P._AddStreamState_cancel_closure.prototype = {
    call$0: function() {
      this.$this.addStreamFuture._asyncComplete$1(null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._StreamControllerAddStreamState.prototype = {};
  P._BufferingStreamSubscription.prototype = {
    _BufferingStreamSubscription$4: function(onData, onError, onDone, cancelOnError, $T) {
      var handleData, t2, handleError, handleDone, _this = this,
        t1 = H.getRuntimeTypeArgument(_this, "_BufferingStreamSubscription", 0);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      handleData = onData == null ? P.async___nullDataHandler$closure() : onData;
      t2 = _this._zone;
      _this.set$_onData(t2.registerUnaryCallback$2$1(handleData, null, t1));
      handleError = onError == null ? P.async___nullErrorHandler$closure() : onError;
      if (H.functionTypeTest(handleError, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}))
        _this._onError = t2.registerBinaryCallback$3$1(handleError, null, P.Object, P.StackTrace);
      else if (H.functionTypeTest(handleError, {func: 1, ret: -1, args: [P.Object]}))
        _this._onError = t2.registerUnaryCallback$2$1(handleError, null, P.Object);
      else
        H.throwExpression(P.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace."));
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      handleDone = onDone == null ? P.async___nullDoneHandler$closure() : onDone;
      _this.set$_onDone(t2.registerCallback$1$1(handleDone, -1));
    },
    _setPendingEvents$1: function(pendingEvents) {
      var _this = this;
      H.assertSubtype(pendingEvents, "$is_PendingEvents", [H.getRuntimeTypeArgument(_this, "_BufferingStreamSubscription", 0)], "$as_PendingEvents");
      if (pendingEvents == null)
        return;
      _this.set$_pending(pendingEvents);
      if (!pendingEvents.get$isEmpty(pendingEvents)) {
        _this._state = (_this._state | 64) >>> 0;
        _this._pending.schedule$1(_this);
      }
    },
    pause$1: function(_, resumeSignal) {
      var t2, t3, _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t2 = (t1 + 128 | 4) >>> 0;
      _this._state = t2;
      if (t1 < 128 && _this._pending != null) {
        t3 = _this._pending;
        if (t3._state === 1)
          t3._state = 3;
      }
      if ((t1 & 4) === 0 && (t2 & 32) === 0)
        _this._guardCallback$1(_this.get$_onPause());
    },
    pause$0: function($receiver) {
      return this.pause$1($receiver, null);
    },
    resume$0: function(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 = _this._state = t1 - 128;
        if (t1 < 128) {
          if ((t1 & 64) !== 0) {
            t1 = _this._pending;
            t1 = !t1.get$isEmpty(t1);
          } else
            t1 = false;
          if (t1)
            _this._pending.schedule$1(_this);
          else {
            t1 = (_this._state & 4294967291) >>> 0;
            _this._state = t1;
            if ((t1 & 32) === 0)
              _this._guardCallback$1(_this.get$_onResume());
          }
        }
      }
    },
    cancel$0: function(_) {
      var _this = this,
        t1 = (_this._state & 4294967279) >>> 0;
      _this._state = t1;
      if ((t1 & 8) === 0)
        _this._cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    _cancel$0: function() {
      var t2, _this = this,
        t1 = _this._state = (_this._state | 8) >>> 0;
      if ((t1 & 64) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 32) === 0)
        _this.set$_pending(null);
      _this._cancelFuture = _this._onCancel$0();
    },
    _add$1: function(_, data) {
      var t2, _this = this,
        t1 = H.getRuntimeTypeArgument(_this, "_BufferingStreamSubscription", 0);
      H.assertSubtypeOfRuntimeType(data, t1);
      t2 = _this._state;
      if ((t2 & 8) !== 0)
        return;
      if (t2 < 32)
        _this._sendData$1(data);
      else
        _this._addPending$1(new P._DelayedData(data, [t1]));
    },
    _addError$2: function(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendError$2(error, stackTrace);
      else
        this._addPending$1(new P._DelayedError(error, stackTrace));
    },
    _async$_close$0: function() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      _this._state = t1;
      if (t1 < 32)
        _this._sendDone$0();
      else
        _this._addPending$1(C.C__DelayedDone);
    },
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    _onCancel$0: function() {
      return;
    },
    _addPending$1: function($event) {
      var _this = this,
        t1 = [H.getRuntimeTypeArgument(_this, "_BufferingStreamSubscription", 0)],
        pending = H.assertSubtype(_this._pending, "$is_StreamImplEvents", t1, "$as_StreamImplEvents");
      if (pending == null) {
        pending = new P._StreamImplEvents(t1);
        _this.set$_pending(pending);
      }
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        _this._state = t1;
        if (t1 < 128)
          _this._pending.schedule$1(_this);
      }
    },
    _sendData$1: function(data) {
      var t2, _this = this,
        t1 = H.getRuntimeTypeArgument(_this, "_BufferingStreamSubscription", 0);
      H.assertSubtypeOfRuntimeType(data, t1);
      t2 = _this._state;
      _this._state = (t2 | 32) >>> 0;
      _this._zone.runUnaryGuarded$1$2(_this._onData, data, t1);
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t2 & 4) !== 0);
    },
    _sendError$2: function(error, stackTrace) {
      var t1, t2, _this = this;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      t1 = _this._state;
      t2 = new P._BufferingStreamSubscription__sendError_sendError(_this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        _this._state = (t1 | 16) >>> 0;
        _this._cancel$0();
        t1 = _this._cancelFuture;
        if (t1 != null && t1 !== $.$get$Future__nullFuture())
          t1.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        _this._checkState$1((t1 & 4) !== 0);
      }
    },
    _sendDone$0: function() {
      var t2, _this = this,
        t1 = new P._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._cancel$0();
      _this._state = (_this._state | 16) >>> 0;
      t2 = _this._cancelFuture;
      if (t2 != null && t2 !== $.$get$Future__nullFuture())
        t2.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1: function(callback) {
      var t1, _this = this;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      t1 = _this._state;
      _this._state = (t1 | 32) >>> 0;
      callback.call$0();
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1: function(wasInputPaused) {
      var t1, isInputPaused, _this = this;
      if ((_this._state & 64) !== 0) {
        t1 = _this._pending;
        t1 = t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = _this._state = (_this._state & 4294967231) >>> 0;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t1 = _this._pending;
            t1 = t1 == null || t1.get$isEmpty(t1);
          } else
            t1 = false;
        else
          t1 = false;
        if (t1)
          _this._state = (_this._state & 4294967291) >>> 0;
      }
      for (; true; wasInputPaused = isInputPaused) {
        t1 = _this._state;
        if ((t1 & 8) !== 0) {
          _this.set$_pending(null);
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        _this._state = (_this._state & 4294967263) >>> 0;
      }
      t1 = _this._state;
      if ((t1 & 64) !== 0 && t1 < 128)
        _this._pending.schedule$1(_this);
    },
    set$_onData: function(_onData) {
      this._onData = H.functionTypeCheck(_onData, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)]});
    },
    set$_onDone: function(_onDone) {
      this._onDone = H.functionTypeCheck(_onDone, {func: 1, ret: -1});
    },
    set$_pending: function(_pending) {
      this._pending = H.assertSubtype(_pending, "$is_PendingEvents", [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)], "$as_PendingEvents");
    },
    $isStreamSubscription: 1,
    $is_EventSink: 1,
    $is_EventDispatch: 1
  };
  P._BufferingStreamSubscription__sendError_sendError.prototype = {
    call$0: function() {
      var onError, t3, t4,
        t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 32) >>> 0;
      onError = t1._onError;
      t2 = this.error;
      t3 = P.Object;
      t4 = t1._zone;
      if (H.functionTypeTest(onError, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}))
        t4.runBinaryGuarded$2$3(onError, t2, this.stackTrace, t3, P.StackTrace);
      else
        t4.runUnaryGuarded$1$2(H.functionTypeCheck(t1._onError, {func: 1, ret: -1, args: [P.Object]}), t2, t3);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      return this._createSubscription$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), true === cancelOnError);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      var t1 = H.getTypeArgumentByIndex(this, 0);
      return P._BufferingStreamSubscription$(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError, t1);
    }
  };
  P._GeneratedStreamImpl.prototype = {
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      var _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      if (_this._isUsed)
        throw H.wrapException(P.StateError$("Stream has already been listened to."));
      _this._isUsed = true;
      t1 = P._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError, t1);
      t1._setPendingEvents$1(_this._pending.call$0());
      return t1;
    }
  };
  P._IterablePendingEvents.prototype = {
    get$isEmpty: function(_) {
      return this._async$_iterator == null;
    },
    handleNext$1: function(dispatch) {
      var hasMore, e, s, t1, exception, _this = this;
      H.assertSubtype(dispatch, "$is_EventDispatch", _this.$ti, "$as_EventDispatch");
      t1 = _this._async$_iterator;
      if (t1 == null)
        throw H.wrapException(P.StateError$("No events pending."));
      hasMore = null;
      try {
        hasMore = t1.moveNext$0();
        if (H.boolConversionCheck(hasMore)) {
          t1 = _this._async$_iterator;
          dispatch._sendData$1(t1.get$current(t1));
        } else {
          _this.set$_async$_iterator(null);
          dispatch._sendDone$0();
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        if (hasMore == null) {
          _this.set$_async$_iterator(C.C_EmptyIterator);
          dispatch._sendError$2(e, s);
        } else
          dispatch._sendError$2(e, s);
      }
    },
    set$_async$_iterator: function(_iterator) {
      this._async$_iterator = H.assertSubtype(_iterator, "$isIterator", this.$ti, "$asIterator");
    }
  };
  P._DelayedEvent.prototype = {
    set$next: function(_, next) {
      this.next = H.interceptedTypeCheck(next, "$is_DelayedEvent");
    },
    get$next: function(receiver) {
      return this.next;
    }
  };
  P._DelayedData.prototype = {
    perform$1: function(dispatch) {
      H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch")._sendData$1(this.value);
    }
  };
  P._DelayedError.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    },
    $as_DelayedEvent: function() {
    }
  };
  P._DelayedDone.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendDone$0();
    },
    get$next: function(_) {
      return;
    },
    set$next: function(_, _0) {
      throw H.wrapException(P.StateError$("No events after a done."));
    },
    $is_DelayedEvent: 1,
    $as_DelayedEvent: function() {
    }
  };
  P._PendingEvents.prototype = {
    schedule$1: function(dispatch) {
      var t1, _this = this;
      H.assertSubtype(dispatch, "$is_EventDispatch", _this.$ti, "$as_EventDispatch");
      t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    }
  };
  P._PendingEvents_schedule_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._StreamImplEvents.prototype = {
    get$isEmpty: function(_) {
      return this.lastPendingEvent == null;
    },
    add$1: function(_, $event) {
      var t1, _this = this;
      H.interceptedTypeCheck($event, "$is_DelayedEvent");
      t1 = _this.lastPendingEvent;
      if (t1 == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        t1.set$next(0, $event);
        _this.lastPendingEvent = $event;
      }
    },
    handleNext$1: function(dispatch) {
      var $event, t1, _this = this;
      H.assertSubtype(dispatch, "$is_EventDispatch", _this.$ti, "$as_EventDispatch");
      $event = _this.firstPendingEvent;
      t1 = $event.get$next($event);
      _this.firstPendingEvent = t1;
      if (t1 == null)
        _this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }
  };
  P._DoneStreamSubscription.prototype = {
    _schedule$0: function() {
      var _this = this;
      if ((_this._state & 2) !== 0)
        return;
      _this._zone.scheduleMicrotask$1(_this.get$_sendDone());
      _this._state = (_this._state | 2) >>> 0;
    },
    pause$1: function(_, resumeSignal) {
      this._state += 4;
    },
    pause$0: function($receiver) {
      return this.pause$1($receiver, null);
    },
    resume$0: function(_) {
      var t1 = this._state;
      if (t1 >= 4) {
        t1 = this._state = t1 - 4;
        if (t1 < 4 && (t1 & 1) === 0)
          this._schedule$0();
      }
    },
    cancel$0: function(_) {
      return $.$get$Future__nullFuture();
    },
    _sendDone$0: function() {
      var _this = this,
        t1 = _this._state = (_this._state & 4294967293) >>> 0;
      if (t1 >= 4)
        return;
      _this._state = (t1 | 1) >>> 0;
      t1 = _this._onDone;
      if (t1 != null)
        _this._zone.runGuarded$1(t1);
    },
    $isStreamSubscription: 1
  };
  P._AsBroadcastStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1, t2, t3, _this = this;
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(_this, 0)]});
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      t1 = _this._controller;
      if (t1 == null || (t1._state & 4) !== 0) {
        t1 = new P._DoneStreamSubscription($.Zone__current, onDone, _this.$ti);
        t1._schedule$0();
        return t1;
      }
      if (_this._subscription == null) {
        t2 = t1.get$add(t1);
        t3 = t1.get$addError();
        _this.set$_subscription(_this._async$_source.listen$3$onDone$onError(t2, t1.get$close(t1), t3));
      }
      return _this._controller._subscribe$4(onData, onError, onDone, true === cancelOnError);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    _onCancel$0: function() {
      var _this = this,
        t1 = _this._controller,
        shutdown = t1 == null || (t1._state & 4) !== 0;
      t1 = _this._onCancelHandler;
      if (t1 != null)
        _this._zone.runUnary$2$2(t1, new P._BroadcastSubscriptionWrapper(_this, _this.$ti), -1, [P._BroadcastSubscriptionWrapper, H.getTypeArgumentByIndex(_this, 0)]);
      if (shutdown) {
        t1 = _this._subscription;
        if (t1 != null) {
          t1.cancel$0(0);
          _this.set$_subscription(null);
        }
      }
    },
    _onListen$0: function() {
      var _this = this,
        t1 = _this._onListenHandler;
      if (t1 != null)
        _this._zone.runUnary$2$2(t1, new P._BroadcastSubscriptionWrapper(_this, _this.$ti), -1, [P._BroadcastSubscriptionWrapper, H.getTypeArgumentByIndex(_this, 0)]);
    },
    _cancelSubscription$0: function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      this.set$_subscription(null);
      this.set$_controller(null);
      t1.cancel$0(0);
    },
    _pauseSubscription$1: function(resumeSignal) {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.pause$1(0, resumeSignal);
    },
    _resumeSubscription$0: function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.resume$0(0);
    },
    set$_controller: function(_controller) {
      this._controller = H.assertSubtype(_controller, "$is_AsBroadcastStreamController", this.$ti, "$as_AsBroadcastStreamController");
    },
    set$_subscription: function(_subscription) {
      this._subscription = H.assertSubtype(_subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
    }
  };
  P._BroadcastSubscriptionWrapper.prototype = {
    pause$1: function(_, resumeSignal) {
      this._stream._pauseSubscription$1(resumeSignal);
    },
    pause$0: function($receiver) {
      return this.pause$1($receiver, null);
    },
    resume$0: function(_) {
      this._stream._resumeSubscription$0();
    },
    cancel$0: function(_) {
      this._stream._cancelSubscription$0();
      return $.$get$Future__nullFuture();
    },
    $isStreamSubscription: 1
  };
  P._StreamIterator.prototype = {};
  P._ForwardingStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      return this._createSubscription$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "_ForwardingStream", 1)]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), true === cancelOnError);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      var t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
      return P._ForwardingStreamSubscription$(this, H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError, H.getRuntimeTypeArgument(this, "_ForwardingStream", 0), t1);
    },
    _handleData$2: function(data, sink) {
      var t1;
      H.assertSubtypeOfRuntimeType(data, H.getRuntimeTypeArgument(this, "_ForwardingStream", 0));
      t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
      H.assertSubtype(sink, "$is_EventSink", [t1], "$as_EventSink")._add$1(0, H.assertSubtypeOfRuntimeType(data, t1));
    },
    $asStream: function($S, $T) {
      return [$T];
    }
  };
  P._ForwardingStreamSubscription.prototype = {
    _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
      var _this = this;
      _this.set$_subscription(_this._stream._async$_source.listen$3$onDone$onError(_this.get$_handleData(), _this.get$_handleDone(), _this.get$_handleError()));
    },
    _add$1: function(_, data) {
      H.assertSubtypeOfRuntimeType(data, H.getRuntimeTypeArgument(this, "_ForwardingStreamSubscription", 1));
      if ((this._state & 2) !== 0)
        return;
      this.super$_BufferingStreamSubscription$_add(0, data);
    },
    _addError$2: function(error, stackTrace) {
      if ((this._state & 2) !== 0)
        return;
      this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
    },
    _onPause$0: function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.pause$0(0);
    },
    _onResume$0: function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.resume$0(0);
    },
    _onCancel$0: function() {
      var t1 = this._subscription;
      if (t1 != null) {
        this.set$_subscription(null);
        return t1.cancel$0(0);
      }
      return;
    },
    _handleData$1: function(data) {
      this._stream._handleData$2(H.assertSubtypeOfRuntimeType(data, H.getRuntimeTypeArgument(this, "_ForwardingStreamSubscription", 0)), this);
    },
    _handleError$2: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      H.assertSubtype(this, "$is_EventSink", [H.getRuntimeTypeArgument(this._stream, "_ForwardingStream", 1)], "$as_EventSink")._addError$2(error, stackTrace);
    },
    _handleDone$0: function() {
      H.assertSubtype(this, "$is_EventSink", [H.getRuntimeTypeArgument(this._stream, "_ForwardingStream", 1)], "$as_EventSink")._async$_close$0();
    },
    set$_subscription: function(_subscription) {
      this._subscription = H.assertSubtype(_subscription, "$isStreamSubscription", [H.getRuntimeTypeArgument(this, "_ForwardingStreamSubscription", 0)], "$asStreamSubscription");
    },
    $asStreamSubscription: function($S, $T) {
      return [$T];
    },
    $as_EventSink: function($S, $T) {
      return [$T];
    },
    $as_EventDispatch: function($S, $T) {
      return [$T];
    },
    $as_BufferingStreamSubscription: function($S, $T) {
      return [$T];
    }
  };
  P._TakeStream.prototype = {
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      t2 = _this._count;
      if (t2 === 0) {
        _this._async$_source.listen$1(null).cancel$0(0);
        t1 = new P._DoneStreamSubscription($.Zone__current, onDone, _this.$ti);
        t1._schedule$0();
        return t1;
      }
      t3 = $.Zone__current;
      t4 = cancelOnError ? 1 : 0;
      t4 = new P._StateStreamSubscription(t2, _this, t3, t4, _this.$ti);
      t4._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
      t4._ForwardingStreamSubscription$5(_this, onData, onError, onDone, cancelOnError, t1, t1);
      return t4;
    },
    _handleData$2: function(inputEvent, sink) {
      var t1, count;
      H.assertSubtypeOfRuntimeType(inputEvent, H.getTypeArgumentByIndex(this, 0));
      t1 = this.$ti;
      sink = H.assertSubtype(H.assertSubtype(sink, "$is_EventSink", t1, "$as_EventSink"), "$is_StateStreamSubscription", t1, "$as_StateStreamSubscription");
      count = H.intTypeCheck(sink._sharedState);
      if (typeof count !== "number")
        return count.$gt();
      if (count > 0) {
        sink._add$1(0, inputEvent);
        --count;
        sink._sharedState = count;
        if (count === 0)
          sink._async$_close$0();
      }
    },
    $asStream: null,
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    }
  };
  P._StateStreamSubscription.prototype = {$asStreamSubscription: null, $as_EventSink: null, $as_EventDispatch: null, $as_BufferingStreamSubscription: null,
    $as_ForwardingStreamSubscription: function($T) {
      return [$T, $T];
    }
  };
  P._DistinctStream.prototype = {
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      var t2, t3, t4, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      t2 = $.$get$_DistinctStream__SENTINEL();
      t3 = $.Zone__current;
      t4 = cancelOnError ? 1 : 0;
      t4 = new P._StateStreamSubscription(t2, _this, t3, t4, _this.$ti);
      t4._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
      t4._ForwardingStreamSubscription$5(_this, onData, onError, onDone, cancelOnError, t1, t1);
      return t4;
    },
    _handleData$2: function(inputEvent, sink) {
      var previousEvent, isEqual, e, s, t2, subscription, previous, exception, error, stackTrace, replacement,
        t1 = H.getTypeArgumentByIndex(this, 0);
      H.assertSubtypeOfRuntimeType(inputEvent, t1);
      t2 = this.$ti;
      H.assertSubtype(sink, "$is_EventSink", t2, "$as_EventSink");
      subscription = H.assertSubtype(sink, "$is_StateStreamSubscription", t2, "$as_StateStreamSubscription");
      previous = subscription._sharedState;
      t2 = $.$get$_DistinctStream__SENTINEL();
      if (previous == null ? t2 == null : previous === t2) {
        subscription._sharedState = inputEvent;
        J._add$1$x(sink, inputEvent);
      } else {
        previousEvent = H.assertSubtypeOfRuntimeType(previous, t1);
        isEqual = null;
        try {
          t1 = this._equals;
          if (t1 == null)
            isEqual = J.$eq$(previousEvent, inputEvent);
          else
            isEqual = t1.call$2(previousEvent, inputEvent);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          error = e;
          stackTrace = s;
          replacement = $.Zone__current.errorCallback$2(error, stackTrace);
          if (replacement != null) {
            error = replacement.error;
            if (error == null)
              error = new P.NullThrownError();
            stackTrace = replacement.stackTrace;
          }
          sink._addError$2(error, stackTrace);
          return;
        }
        if (!H.boolConversionCheck(isEqual)) {
          J._add$1$x(sink, inputEvent);
          subscription._sharedState = inputEvent;
        }
      }
    },
    $asStream: null,
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    }
  };
  P._EventSinkWrapper.prototype = {
    add$1: function(_, data) {
      var t1 = this._sink;
      data = H.assertSubtypeOfRuntimeType(H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0)), H.getTypeArgumentByIndex(t1, 1));
      if ((t1._state & 2) !== 0)
        H.throwExpression(P.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_add(0, data);
    },
    addError$2: function(error, stackTrace) {
      var t1 = this._sink;
      if ((t1._state & 2) !== 0)
        H.throwExpression(P.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_addError(error, stackTrace);
    },
    close$0: function(_) {
      var t1 = this._sink;
      if ((t1._state & 2) !== 0)
        H.throwExpression(P.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_close();
    },
    $isEventSink: 1
  };
  P._SinkTransformerStreamSubscription.prototype = {
    _add$1: function(_, data) {
      H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 1));
      if ((this._state & 2) !== 0)
        throw H.wrapException(P.StateError$("Stream is already closed"));
      this.super$_BufferingStreamSubscription$_add(0, data);
    },
    _addError$2: function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      if ((this._state & 2) !== 0)
        throw H.wrapException(P.StateError$("Stream is already closed"));
      this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
    },
    _onPause$0: function() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.pause$0(0);
    },
    _onResume$0: function() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.resume$0(0);
    },
    _onCancel$0: function() {
      var t1 = this._subscription;
      if (t1 != null) {
        this.set$_subscription(null);
        return t1.cancel$0(0);
      }
      return;
    },
    _handleData$1: function(data) {
      var e, s, exception, t1, _this = this;
      H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(_this, 0));
      try {
        _this._transformerSink.add$1(0, data);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = H.interceptedTypeCheck(s, "$isStackTrace");
        if ((_this._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        _this.super$_BufferingStreamSubscription$_addError(e, t1);
      }
    },
    _handleError$2: function(error, stackTrace) {
      var e, s, exception, t1, _this = this,
        _s24_ = "Stream is already closed";
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      try {
        _this._transformerSink.addError$2(error, stackTrace);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = e;
        if (t1 == null ? error == null : t1 === error) {
          t1 = H.interceptedTypeCheck(stackTrace, "$isStackTrace");
          if ((_this._state & 2) !== 0)
            H.throwExpression(P.StateError$(_s24_));
          _this.super$_BufferingStreamSubscription$_addError(error, t1);
        } else {
          t1 = H.interceptedTypeCheck(s, "$isStackTrace");
          if ((_this._state & 2) !== 0)
            H.throwExpression(P.StateError$(_s24_));
          _this.super$_BufferingStreamSubscription$_addError(e, t1);
        }
      }
    },
    _handleError$1: function(error) {
      return this._handleError$2(error, null);
    },
    _handleDone$0: function() {
      var e, s, exception, t1, _this = this;
      try {
        _this.set$_subscription(null);
        _this._transformerSink.close$0(0);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = H.interceptedTypeCheck(s, "$isStackTrace");
        if ((_this._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        _this.super$_BufferingStreamSubscription$_addError(e, t1);
      }
    },
    set$_transformerSink: function(_transformerSink) {
      this._transformerSink = H.assertSubtype(_transformerSink, "$isEventSink", [H.getTypeArgumentByIndex(this, 0)], "$asEventSink");
    },
    set$_subscription: function(_subscription) {
      this._subscription = H.assertSubtype(_subscription, "$isStreamSubscription", [H.getTypeArgumentByIndex(this, 0)], "$asStreamSubscription");
    },
    $asStreamSubscription: function($S, $T) {
      return [$T];
    },
    $as_EventSink: function($S, $T) {
      return [$T];
    },
    $as_EventDispatch: function($S, $T) {
      return [$T];
    },
    $as_BufferingStreamSubscription: function($S, $T) {
      return [$T];
    }
  };
  P._BoundSinkStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t2, t3, subscription, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 1);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      cancelOnError = true === cancelOnError;
      t2 = $.Zone__current;
      t3 = cancelOnError ? 1 : 0;
      subscription = new P._SinkTransformerStreamSubscription(t2, t3, _this.$ti);
      subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
      subscription.set$_transformerSink(_this._sinkMapper.call$1(new P._EventSinkWrapper(subscription, [t1])));
      subscription.set$_subscription(_this._stream.listen$3$onDone$onError(subscription.get$_handleData(), subscription.get$_handleDone(), subscription.get$_handleError()));
      return subscription;
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    $asStream: function($S, $T) {
      return [$T];
    }
  };
  P.Timer.prototype = {};
  P.AsyncError.prototype = {
    toString$0: function(_) {
      return H.S(this.error);
    },
    $isError: 1
  };
  P._ZoneFunction.prototype = {};
  P.ZoneSpecification.prototype = {};
  P._ZoneSpecification.prototype = {$isZoneSpecification: 1};
  P.ZoneDelegate.prototype = {};
  P.Zone.prototype = {};
  P._ZoneDelegate.prototype = {$isZoneDelegate: 1};
  P._Zone.prototype = {$isZone: 1};
  P._CustomZone.prototype = {
    get$_async$_delegate: function() {
      var t1 = this._delegateCache;
      if (t1 != null)
        return t1;
      return this._delegateCache = new P._ZoneDelegate(this);
    },
    get$errorZone: function() {
      return this._handleUncaughtError.zone;
    },
    runGuarded$1: function(f) {
      var e, s, exception;
      H.functionTypeCheck(f, {func: 1, ret: -1});
      try {
        this.run$1$1(f, -1);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        this.handleUncaughtError$2(e, s);
      }
    },
    runUnaryGuarded$1$2: function(f, arg, $T) {
      var e, s, exception;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      try {
        this.runUnary$2$2(f, arg, -1, $T);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        this.handleUncaughtError$2(e, s);
      }
    },
    runBinaryGuarded$2$3: function(f, arg1, arg2, T1, T2) {
      var e, s, exception;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      try {
        this.runBinary$3$3(f, arg1, arg2, -1, T1, T2);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        this.handleUncaughtError$2(e, s);
      }
    },
    bindCallback$1$1: function(f, $R) {
      return new P._CustomZone_bindCallback_closure(this, this.registerCallback$1$1(H.functionTypeCheck(f, {func: 1, ret: $R}), $R), $R);
    },
    bindUnaryCallback$2$1: function(f, $R, $T) {
      return new P._CustomZone_bindUnaryCallback_closure(this, this.registerUnaryCallback$2$1(H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]}), $R, $T), $T, $R);
    },
    bindCallbackGuarded$1: function(f) {
      return new P._CustomZone_bindCallbackGuarded_closure(this, this.registerCallback$1$1(H.functionTypeCheck(f, {func: 1, ret: -1}), -1));
    },
    bindUnaryCallbackGuarded$1$1: function(f, $T) {
      return new P._CustomZone_bindUnaryCallbackGuarded_closure(this, this.registerUnaryCallback$2$1(H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]}), -1, $T), $T);
    },
    $index: function(_, key) {
      var t2, value,
        t1 = this._async$_map,
        result = t1.$index(0, key);
      if (result != null || t1.containsKey$1(0, key))
        return result;
      t2 = this.parent;
      if (t2 != null) {
        value = t2.$index(0, key);
        if (value != null)
          t1.$indexSet(0, key, value);
        return value;
      }
      return;
    },
    handleUncaughtError$2: function(error, stackTrace) {
      var implementation, t1, parentDelegate;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      implementation = this._handleUncaughtError;
      t1 = implementation.zone;
      parentDelegate = P._parentDelegate(t1);
      return implementation.$function.call$5(t1, parentDelegate, this, error, stackTrace);
    },
    fork$2$specification$zoneValues: function(specification, zoneValues) {
      var implementation = this._fork,
        t1 = implementation.zone,
        parentDelegate = P._parentDelegate(t1);
      return implementation.$function.call$5(t1, parentDelegate, this, specification, zoneValues);
    },
    run$1$1: function(f, $R) {
      var implementation, t1, parentDelegate;
      H.functionTypeCheck(f, {func: 1, ret: $R});
      implementation = this._async$_run;
      t1 = implementation.zone;
      parentDelegate = P._parentDelegate(t1);
      return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}).call$1$4(t1, parentDelegate, this, f, $R);
    },
    runUnary$2$2: function(f, arg, $R, $T) {
      var implementation, t1, parentDelegate;
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      implementation = this._async$_runUnary;
      t1 = implementation.zone;
      parentDelegate = P._parentDelegate(t1);
      return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}, 1]}).call$2$5(t1, parentDelegate, this, f, arg, $R, $T);
    },
    runBinary$3$3: function(f, arg1, arg2, $R, T1, T2) {
      var implementation, t1, parentDelegate;
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      implementation = this._async$_runBinary;
      t1 = implementation.zone;
      parentDelegate = P._parentDelegate(t1);
      return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}, 1, 2]}).call$3$6(t1, parentDelegate, this, f, arg1, arg2, $R, T1, T2);
    },
    registerCallback$1$1: function(callback, $R) {
      var implementation, t1, parentDelegate;
      H.functionTypeCheck(callback, {func: 1, ret: $R});
      implementation = this._registerCallback;
      t1 = implementation.zone;
      parentDelegate = P._parentDelegate(t1);
      return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object], ret: {func: 1, ret: 0}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}).call$1$4(t1, parentDelegate, this, callback, $R);
    },
    registerUnaryCallback$2$1: function(callback, $R, $T) {
      var implementation, t1, parentDelegate;
      H.functionTypeCheck(callback, {func: 1, ret: $R, args: [$T]});
      implementation = this._registerUnaryCallback;
      t1 = implementation.zone;
      parentDelegate = P._parentDelegate(t1);
      return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object], ret: {func: 1, ret: 0, args: [1]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}]}).call$2$4(t1, parentDelegate, this, callback, $R, $T);
    },
    registerBinaryCallback$3$1: function(callback, $R, T1, T2) {
      var implementation, t1, parentDelegate;
      H.functionTypeCheck(callback, {func: 1, ret: $R, args: [T1, T2]});
      implementation = this._registerBinaryCallback;
      t1 = implementation.zone;
      parentDelegate = P._parentDelegate(t1);
      return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: {func: 1, ret: 0, args: [1, 2]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}]}).call$3$4(t1, parentDelegate, this, callback, $R, T1, T2);
    },
    errorCallback$2: function(error, stackTrace) {
      var parentDelegate,
        implementation = this._errorCallback,
        implementationZone = implementation.zone;
      if (implementationZone === C.C__RootZone)
        return;
      parentDelegate = P._parentDelegate(implementationZone);
      return implementation.$function.call$5(implementationZone, parentDelegate, this, error, stackTrace);
    },
    scheduleMicrotask$1: function(f) {
      var implementation, t1, parentDelegate;
      H.functionTypeCheck(f, {func: 1, ret: -1});
      implementation = this._scheduleMicrotask;
      t1 = implementation.zone;
      parentDelegate = P._parentDelegate(t1);
      return implementation.$function.call$4(t1, parentDelegate, this, f);
    },
    createTimer$2: function(duration, f) {
      var implementation, t1, parentDelegate;
      H.functionTypeCheck(f, {func: 1, ret: -1});
      implementation = this._async$_createTimer;
      t1 = implementation.zone;
      parentDelegate = P._parentDelegate(t1);
      return implementation.$function.call$5(t1, parentDelegate, this, duration, f);
    },
    set$_async$_run: function(_run) {
      this._async$_run = H.assertSubtype(_run, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
    },
    set$_async$_runUnary: function(_runUnary) {
      this._async$_runUnary = H.assertSubtype(_runUnary, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
    },
    set$_async$_runBinary: function(_runBinary) {
      this._async$_runBinary = H.assertSubtype(_runBinary, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
    },
    set$_registerCallback: function(_registerCallback) {
      this._registerCallback = H.assertSubtype(_registerCallback, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
    },
    set$_registerUnaryCallback: function(_registerUnaryCallback) {
      this._registerUnaryCallback = H.assertSubtype(_registerUnaryCallback, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
    },
    set$_registerBinaryCallback: function(_registerBinaryCallback) {
      this._registerBinaryCallback = H.assertSubtype(_registerBinaryCallback, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
    },
    set$_errorCallback: function(_errorCallback) {
      this._errorCallback = H.assertSubtype(_errorCallback, "$is_ZoneFunction", [{func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}], "$as_ZoneFunction");
    },
    set$_scheduleMicrotask: function(_scheduleMicrotask) {
      this._scheduleMicrotask = H.assertSubtype(_scheduleMicrotask, "$is_ZoneFunction", [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}], "$as_ZoneFunction");
    },
    set$_async$_createTimer: function(_createTimer) {
      this._async$_createTimer = H.assertSubtype(_createTimer, "$is_ZoneFunction", [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}], "$as_ZoneFunction");
    },
    set$_createPeriodicTimer: function(_createPeriodicTimer) {
      this._createPeriodicTimer = H.assertSubtype(_createPeriodicTimer, "$is_ZoneFunction", [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1, args: [P.Timer]}]}], "$as_ZoneFunction");
    },
    set$_print: function(_print) {
      this._print = H.assertSubtype(_print, "$is_ZoneFunction", [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}], "$as_ZoneFunction");
    },
    set$_fork: function(_fork) {
      this._fork = H.assertSubtype(_fork, "$is_ZoneFunction", [{func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map,,,]]}], "$as_ZoneFunction");
    },
    set$_handleUncaughtError: function(_handleUncaughtError) {
      this._handleUncaughtError = H.assertSubtype(_handleUncaughtError, "$is_ZoneFunction", [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}], "$as_ZoneFunction");
    },
    get$_async$_run: function() {
      return this._async$_run;
    },
    get$_async$_runUnary: function() {
      return this._async$_runUnary;
    },
    get$_async$_runBinary: function() {
      return this._async$_runBinary;
    },
    get$_registerCallback: function() {
      return this._registerCallback;
    },
    get$_registerUnaryCallback: function() {
      return this._registerUnaryCallback;
    },
    get$_registerBinaryCallback: function() {
      return this._registerBinaryCallback;
    },
    get$_errorCallback: function() {
      return this._errorCallback;
    },
    get$_scheduleMicrotask: function() {
      return this._scheduleMicrotask;
    },
    get$_async$_createTimer: function() {
      return this._async$_createTimer;
    },
    get$_createPeriodicTimer: function() {
      return this._createPeriodicTimer;
    },
    get$_print: function() {
      return this._print;
    },
    get$_fork: function() {
      return this._fork;
    },
    get$_handleUncaughtError: function() {
      return this._handleUncaughtError;
    },
    get$parent: function(receiver) {
      return this.parent;
    },
    get$_async$_map: function() {
      return this._async$_map;
    }
  };
  P._CustomZone_bindCallback_closure.prototype = {
    call$0: function() {
      return this.$this.run$1$1(this.registered, this.R);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: function() {
      return {func: 1, ret: this.R};
    }
  };
  P._CustomZone_bindUnaryCallback_closure.prototype = {
    call$1: function(arg) {
      var _this = this,
        t1 = _this.T;
      return _this.$this.runUnary$2$2(_this.registered, H.assertSubtypeOfRuntimeType(arg, t1), _this.R, t1);
    },
    $signature: function() {
      return {func: 1, ret: this.R, args: [this.T]};
    }
  };
  P._CustomZone_bindCallbackGuarded_closure.prototype = {
    call$0: function() {
      return this.$this.runGuarded$1(this.registered);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._CustomZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1: function(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.registered, H.assertSubtypeOfRuntimeType(arg, t1), t1);
    },
    $signature: function() {
      return {func: 1, ret: -1, args: [this.T]};
    }
  };
  P._rootHandleUncaughtError_closure.prototype = {
    call$0: function() {
      var error,
        t1 = this._box_0,
        t2 = t1.error;
      t1 = t2 == null ? t1.error = new P.NullThrownError() : t2;
      t2 = this.stackTrace;
      if (t2 == null)
        throw H.wrapException(t1);
      error = H.wrapException(t1);
      error.stack = t2.toString$0(0);
      throw error;
    },
    $signature: 0
  };
  P._RootZone.prototype = {
    get$_async$_run: function() {
      return C._ZoneFunction__RootZone__rootRun;
    },
    get$_async$_runUnary: function() {
      return C._ZoneFunction__RootZone__rootRunUnary;
    },
    get$_async$_runBinary: function() {
      return C._ZoneFunction__RootZone__rootRunBinary;
    },
    get$_registerCallback: function() {
      return C._ZoneFunction__RootZone__rootRegisterCallback;
    },
    get$_registerUnaryCallback: function() {
      return C._ZoneFunction_Eeh;
    },
    get$_registerBinaryCallback: function() {
      return C._ZoneFunction_7G2;
    },
    get$_errorCallback: function() {
      return C._ZoneFunction__RootZone__rootErrorCallback;
    },
    get$_scheduleMicrotask: function() {
      return C._ZoneFunction__RootZone__rootScheduleMicrotask;
    },
    get$_async$_createTimer: function() {
      return C._ZoneFunction__RootZone__rootCreateTimer;
    },
    get$_createPeriodicTimer: function() {
      return C._ZoneFunction_3bB;
    },
    get$_print: function() {
      return C._ZoneFunction__RootZone__rootPrint;
    },
    get$_fork: function() {
      return C._ZoneFunction__RootZone__rootFork;
    },
    get$_handleUncaughtError: function() {
      return C._ZoneFunction_NMc;
    },
    get$parent: function(_) {
      return;
    },
    get$_async$_map: function() {
      return $.$get$_RootZone__rootMap();
    },
    get$_async$_delegate: function() {
      var t1 = $._RootZone__rootDelegate;
      if (t1 != null)
        return t1;
      return $._RootZone__rootDelegate = new P._ZoneDelegate(this);
    },
    get$errorZone: function() {
      return this;
    },
    runGuarded$1: function(f) {
      var e, s, exception, _null = null;
      H.functionTypeCheck(f, {func: 1, ret: -1});
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        P._rootRun(_null, _null, this, f, -1);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, H.interceptedTypeCheck(s, "$isStackTrace"));
      }
    },
    runUnaryGuarded$1$2: function(f, arg, $T) {
      var e, s, exception, _null = null;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        P._rootRunUnary(_null, _null, this, f, arg, -1, $T);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, H.interceptedTypeCheck(s, "$isStackTrace"));
      }
    },
    runBinaryGuarded$2$3: function(f, arg1, arg2, T1, T2) {
      var e, s, exception, _null = null;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$2(arg1, arg2);
          return;
        }
        P._rootRunBinary(_null, _null, this, f, arg1, arg2, -1, T1, T2);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, H.interceptedTypeCheck(s, "$isStackTrace"));
      }
    },
    bindCallback$1$1: function(f, $R) {
      return new P._RootZone_bindCallback_closure(this, H.functionTypeCheck(f, {func: 1, ret: $R}), $R);
    },
    bindCallbackGuarded$1: function(f) {
      return new P._RootZone_bindCallbackGuarded_closure(this, H.functionTypeCheck(f, {func: 1, ret: -1}));
    },
    bindUnaryCallbackGuarded$1$1: function(f, $T) {
      return new P._RootZone_bindUnaryCallbackGuarded_closure(this, H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]}), $T);
    },
    $index: function(_, key) {
      return;
    },
    handleUncaughtError$2: function(error, stackTrace) {
      P._rootHandleUncaughtError(null, null, this, error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
    },
    fork$2$specification$zoneValues: function(specification, zoneValues) {
      return P._rootFork(null, null, this, specification, zoneValues);
    },
    run$1$1: function(f, $R) {
      H.functionTypeCheck(f, {func: 1, ret: $R});
      if ($.Zone__current === C.C__RootZone)
        return f.call$0();
      return P._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2: function(f, arg, $R, $T) {
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      if ($.Zone__current === C.C__RootZone)
        return f.call$1(arg);
      return P._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3: function(f, arg1, arg2, $R, T1, T2) {
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      if ($.Zone__current === C.C__RootZone)
        return f.call$2(arg1, arg2);
      return P._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerCallback$1$1: function(f, $R) {
      return H.functionTypeCheck(f, {func: 1, ret: $R});
    },
    registerUnaryCallback$2$1: function(f, $R, $T) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
    },
    registerBinaryCallback$3$1: function(f, $R, T1, T2) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
    },
    errorCallback$2: function(error, stackTrace) {
      return;
    },
    scheduleMicrotask$1: function(f) {
      P._rootScheduleMicrotask(null, null, this, H.functionTypeCheck(f, {func: 1, ret: -1}));
    },
    createTimer$2: function(duration, f) {
      return P.Timer__createTimer(duration, H.functionTypeCheck(f, {func: 1, ret: -1}));
    }
  };
  P._RootZone_bindCallback_closure.prototype = {
    call$0: function() {
      return this.$this.run$1$1(this.f, this.R);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: function() {
      return {func: 1, ret: this.R};
    }
  };
  P._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0: function() {
      return this.$this.runGuarded$1(this.f);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  P._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1: function(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, H.assertSubtypeOfRuntimeType(arg, t1), t1);
    },
    $signature: function() {
      return {func: 1, ret: -1, args: [this.T]};
    }
  };
  P._HashMap.prototype = {
    get$length: function(_) {
      return this._collection$_length;
    },
    get$keys: function(_) {
      return new P._HashMapKeyIterable(this, [H.getTypeArgumentByIndex(this, 0)]);
    },
    containsKey$1: function(_, key) {
      var strings, nums;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key === "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1: function(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index: function(_, key) {
      var strings, t1, nums;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : P._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key === "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : P._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(0, key);
    },
    _get$1: function(_, key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      if (typeof key === "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = P._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key === "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = P._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2: function(key, value) {
      var rest, hash, bucket, index, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        P._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._collection$_keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._collection$_keys = null;
        }
      }
    },
    clear$0: function(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._collection$_keys = null;
        _this._collection$_length = 0;
      }
    },
    forEach$1: function(_, action) {
      var keys, $length, i, key, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [t1, H.getTypeArgumentByIndex(_this, 1)]});
      keys = _this._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        key = keys[i];
        action.call$2(H.assertSubtypeOfRuntimeType(key, t1), _this.$index(0, key));
        if (keys !== _this._collection$_keys)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0: function() {
      var result, strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        t1 = _this._collection$_keys;
      if (t1 != null)
        return t1;
      result = new Array(_this._collection$_length);
      result.fixed$length = Array;
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _collection$_addHashTableEntry$3: function(table, key, value) {
      var _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      if (table[key] == null) {
        ++_this._collection$_length;
        _this._collection$_keys = null;
      }
      P._HashMap__setTableEntry(table, key, value);
    },
    _computeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2: function(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    },
    $isHashMap: 1
  };
  P._IdentityHashMap.prototype = {
    _computeHashCode$1: function(key) {
      return H.objectHashCode(key) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  P._HashMapKeyIterable.prototype = {
    get$length: function(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$iterator: function(_) {
      var t1 = this._collection$_map;
      return new P._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti);
    },
    contains$1: function(_, element) {
      return this._collection$_map.containsKey$1(0, element);
    },
    forEach$1: function(_, f) {
      var t1, keys, $length, i;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
      t1 = this._collection$_map;
      keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._collection$_keys)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
      }
    }
  };
  P._HashMapKeyIterator.prototype = {
    get$current: function(_) {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._collection$_keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(keys[offset]);
        _this._offset = offset + 1;
        return true;
      }
    },
    set$_collection$_current: function(_current) {
      this._collection$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1
  };
  P._LinkedIdentityHashMap.prototype = {
    internalComputeHashCode$1: function(key) {
      return H.objectHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2: function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].hashMapCellKey;
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  P._LinkedHashSet.prototype = {
    get$iterator: function(_) {
      var _this = this,
        t1 = new P._LinkedHashSetIterator(_this, _this._collection$_modifications, _this.$ti);
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    contains$1: function(_, object) {
      var strings, nums;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return H.interceptedTypeCheck(strings[object], "$is_LinkedHashSetCell") != null;
      } else if (typeof object === "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        if (nums == null)
          return false;
        return H.interceptedTypeCheck(nums[object], "$is_LinkedHashSetCell") != null;
      } else
        return this._contains$1(object);
    },
    _contains$1: function(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, object), object) >= 0;
    },
    forEach$1: function(_, action) {
      var cell, modifications, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [t1]});
      cell = _this._collection$_first;
      modifications = _this._collection$_modifications;
      for (; cell != null;) {
        action.call$1(H.assertSubtypeOfRuntimeType(cell._collection$_element, t1));
        if (modifications !== _this._collection$_modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._collection$_next;
      }
    },
    get$first: function(_) {
      var t1 = this._collection$_first;
      if (t1 == null)
        throw H.wrapException(P.StateError$("No elements"));
      return H.assertSubtypeOfRuntimeType(t1._collection$_element, H.getTypeArgumentByIndex(this, 0));
    },
    add$1: function(_, element) {
      var strings, nums, _this = this;
      H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(_this, 0));
      if (typeof element === "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = P._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element === "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = P._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._collection$_add$1(0, element);
    },
    _collection$_add$1: function(_, element) {
      var rest, hash, bucket, _this = this;
      H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(_this, 0));
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1: function(_, object) {
      var _this = this;
      if (typeof object === "string" && object !== "__proto__")
        return _this._removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object === "number" && (object & 1073741823) === object)
        return _this._removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(0, object);
    },
    _remove$1: function(_, object) {
      var bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      bucket = _this._getBucket$2(rest, object);
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      _this._unlinkCell$1(bucket.splice(index, 1)[0]);
      return true;
    },
    _collection$_addHashTableEntry$2: function(table, element) {
      H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
      if (H.interceptedTypeCheck(table[element], "$is_LinkedHashSetCell") != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _removeHashTableEntry$2: function(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = H.interceptedTypeCheck(table[element], "$is_LinkedHashSetCell");
      if (cell == null)
        return false;
      this._unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0: function() {
      this._collection$_modifications = 1073741823 & this._collection$_modifications + 1;
    },
    _collection$_newLinkedCell$1: function(element) {
      var last, _this = this,
        cell = new P._LinkedHashSetCell(H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(_this, 0)));
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        last = _this._collection$_last;
        cell._collection$_previous = last;
        _this._collection$_last = last._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _unlinkCell$1: function(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _getBucket$2: function(table, element) {
      return table[this._computeHashCode$1(element)];
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._collection$_element, element))
          return i;
      return -1;
    },
    $isLinkedHashSet: 1
  };
  P._LinkedIdentityHashSet.prototype = {
    _computeHashCode$1: function(key) {
      return H.objectHashCode(key) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i]._collection$_element;
        if (t1 == null ? element == null : t1 === element)
          return i;
      }
      return -1;
    }
  };
  P._LinkedCustomHashSet.prototype = {
    _findBucketIndex$2: function(bucket, element) {
      var $length, t1, i, t2;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = H.getTypeArgumentByIndex(this, 0), i = 0; i < $length; ++i) {
        t2 = H.assertSubtypeOfRuntimeType(bucket[i]._collection$_element, t1);
        H.assertSubtypeOfRuntimeType(element, t1);
        if (H.boolConversionCheck(this._equality.call$2(t2, element)))
          return i;
      }
      return -1;
    },
    _computeHashCode$1: function(element) {
      H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
      return this._hasher.call$1(element) & 1073741823;
    },
    add$1: function(_, element) {
      return this.super$_LinkedHashSet$_add(0, H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0)));
    },
    contains$1: function(_, object) {
      if (!H.boolConversionCheck(this._validKey.call$1(object)))
        return false;
      return this.super$_LinkedHashSet$_contains(object);
    },
    remove$1: function(_, object) {
      if (!H.boolConversionCheck(this._validKey.call$1(object)))
        return false;
      return this.super$_LinkedHashSet$_remove(0, object);
    },
    removeAll$1: function(elements) {
      var t1, element;
      for (t1 = J.get$iterator$ax(H.assertSubtype(elements, "$isIterable", [P.Object], "$asIterable")); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (H.boolConversionCheck(this._validKey.call$1(element)))
          this.super$_LinkedHashSet$_remove(0, element);
      }
    }
  };
  P._LinkedCustomHashSet_closure.prototype = {
    call$1: function(x) {
      return H.checkSubtypeOfRuntimeType(x, this.E);
    },
    $signature: 106
  };
  P._LinkedHashSetCell.prototype = {};
  P._LinkedHashSetIterator.prototype = {
    get$current: function(_) {
      return this._collection$_current;
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = _this._collection$_cell;
        if (t1 == null) {
          _this.set$_collection$_current(null);
          return false;
        } else {
          _this.set$_collection$_current(H.assertSubtypeOfRuntimeType(t1._collection$_element, H.getTypeArgumentByIndex(_this, 0)));
          _this._collection$_cell = _this._collection$_cell._collection$_next;
          return true;
        }
      }
    },
    set$_collection$_current: function(_current) {
      this._collection$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1
  };
  P.UnmodifiableListView.prototype = {
    get$length: function(_) {
      return this._collection$_source.length;
    },
    $index: function(_, index) {
      var t1 = this._collection$_source;
      return (t1 && C.JSArray_methods).$index(t1, index);
    }
  };
  P.HashMap_HashMap$from_closure.prototype = {
    call$2: function(k, v) {
      this.result.$indexSet(0, H.assertSubtypeOfRuntimeType(k, this.K), H.assertSubtypeOfRuntimeType(v, this.V));
    },
    $signature: 11
  };
  P.IterableBase.prototype = {};
  P.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  P.ListMixin.prototype = {
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, this.get$length(receiver), [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]);
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1: function(receiver, action) {
      var $length, i, _this = this;
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0)]});
      $length = _this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(_this.$index(receiver, i));
        if ($length !== _this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    get$isEmpty: function(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty: function(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first: function(receiver) {
      if (this.get$length(receiver) === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    get$last: function(receiver) {
      var t1;
      if (this.get$length(receiver) === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        return t1.$sub();
      return this.$index(receiver, t1 - 1);
    },
    contains$1: function(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (J.$eq$(this.$index(receiver, i), element))
          return true;
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    every$1: function(receiver, test) {
      var $length, i, _this = this;
      H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0)]});
      $length = _this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (!H.boolConversionCheck(test.call$1(_this.$index(receiver, i))))
          return false;
        if ($length !== _this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return true;
    },
    join$1: function(receiver, separator) {
      var t1;
      if (this.get$length(receiver) === 0)
        return "";
      t1 = P.StringBuffer__writeAll("", receiver, separator);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    where$1: function(receiver, test) {
      var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
      return new H.WhereIterable(receiver, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), [t1]);
    },
    map$1$1: function(receiver, f, $T) {
      var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
      return new H.MappedListIterable(receiver, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
    },
    toList$1$growable: function(receiver, growable) {
      var i, t1, _this = this,
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0)]);
      C.JSArray_methods.set$length(result, _this.get$length(receiver));
      i = 0;
      while (true) {
        t1 = _this.get$length(receiver);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        C.JSArray_methods.$indexSet(result, i, _this.$index(receiver, i));
        ++i;
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    add$1: function(receiver, element) {
      var t1, _this = this;
      H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0));
      t1 = _this.get$length(receiver);
      if (typeof t1 !== "number")
        return t1.$add();
      _this.set$length(receiver, t1 + 1);
      _this.$indexSet(receiver, t1, element);
    },
    $add: function(receiver, other) {
      var result, t2, _this = this,
        t1 = [H.getRuntimeTypeArgumentIntercepted(_this, receiver, "ListMixin", 0)];
      H.assertSubtype(other, "$isList", t1, "$asList");
      result = H.setRuntimeTypeInfo([], t1);
      t1 = _this.get$length(receiver);
      t2 = other.get$length(other);
      if (typeof t1 !== "number")
        return t1.$add();
      C.JSArray_methods.set$length(result, C.JSInt_methods.$add(t1, t2));
      C.JSArray_methods.setRange$3(result, 0, _this.get$length(receiver), receiver);
      C.JSArray_methods.setRange$3(result, _this.get$length(receiver), result.length, other);
      return result;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  P.MapBase.prototype = {};
  P.MapBase_mapToString_closure.prototype = {
    call$2: function(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += H.S(k);
      t1._contents = t2 + ": ";
      t1._contents += H.S(v);
    },
    $signature: 11
  };
  P.MapMixin.prototype = {
    forEach$1: function(receiver, action) {
      var t1, key, _this = this;
      H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgumentIntercepted(_this, receiver, "MapMixin", 0), H.getRuntimeTypeArgumentIntercepted(_this, receiver, "MapMixin", 1)]});
      for (t1 = J.get$iterator$ax(_this.get$keys(receiver)); t1.moveNext$0();) {
        key = t1.get$current(t1);
        action.call$2(key, _this.$index(receiver, key));
      }
    },
    get$entries: function(receiver) {
      return J.map$1$1$ax(this.get$keys(receiver), new P.MapMixin_entries_closure(receiver), [P.MapEntry, H.getRuntimeTypeArgumentIntercepted(this, receiver, "MapMixin", 0), H.getRuntimeTypeArgumentIntercepted(this, receiver, "MapMixin", 1)]);
    },
    get$length: function(receiver) {
      return J.get$length$asx(this.get$keys(receiver));
    },
    toString$0: function(receiver) {
      return P.MapBase_mapToString(receiver);
    },
    $isMap: 1
  };
  P.MapMixin_entries_closure.prototype = {
    call$1: function(key) {
      var t1 = this.$this,
        t2 = J.getInterceptor$(t1),
        t3 = H.getRuntimeTypeArgumentIntercepted(t2, t1, "MapMixin", 0);
      H.assertSubtypeOfRuntimeType(key, t3);
      return new P.MapEntry(key, t2.$index(t1, key), [t3, H.getRuntimeTypeArgumentIntercepted(t2, t1, "MapMixin", 1)]);
    },
    $signature: function() {
      var t1 = this.$this,
        t2 = J.getInterceptor$(t1),
        t3 = H.getRuntimeTypeArgumentIntercepted(t2, t1, "MapMixin", 0);
      return {func: 1, ret: [P.MapEntry, t3, H.getRuntimeTypeArgumentIntercepted(t2, t1, "MapMixin", 1)], args: [t3]};
    }
  };
  P._UnmodifiableMapMixin.prototype = {};
  P.MapView.prototype = {
    $index: function(_, key) {
      return this._collection$_map.$index(0, key);
    },
    containsKey$1: function(_, key) {
      return this._collection$_map.containsKey$1(0, key);
    },
    forEach$1: function(_, action) {
      this._collection$_map.forEach$1(0, H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]}));
    },
    get$length: function(_) {
      var t1 = this._collection$_map;
      return t1.get$length(t1);
    },
    get$keys: function(_) {
      var t1 = this._collection$_map;
      return t1.get$keys(t1);
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this._collection$_map);
    },
    $isMap: 1
  };
  P.UnmodifiableMapView.prototype = {};
  P.SetMixin.prototype = {
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    map$1$1: function(_, f, $T) {
      var t1 = H.getRuntimeTypeArgument(this, "SetMixin", 0);
      return new H.EfficientLengthMappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    forEach$1: function(_, f) {
      var t1;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "SetMixin", 0)]});
      for (t1 = this.readClasses$0(), t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H.getTypeArgumentByIndex(t1, 0)); t1.moveNext$0();)
        f.call$1(t1._collection$_current);
    },
    join$1: function(_, separator) {
      var t1 = this.readClasses$0(),
        iterator = P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H.getTypeArgumentByIndex(t1, 0));
      if (!iterator.moveNext$0())
        return "";
      if (separator === "") {
        t1 = "";
        do
          t1 += H.S(iterator._collection$_current);
        while (iterator.moveNext$0());
      } else {
        t1 = H.S(iterator._collection$_current);
        for (; iterator.moveNext$0();)
          t1 = t1 + separator + H.S(iterator._collection$_current);
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      if (index == null)
        H.throwExpression(P.ArgumentError$notNull(_s5_));
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.readClasses$0(), t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H.getTypeArgumentByIndex(t1, 0)), elementIndex = 0; t1.moveNext$0();) {
        element = t1._collection$_current;
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    }
  };
  P.SetBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
  P._SetBase.prototype = {
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    addAll$1: function(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(H.assertSubtype(elements, "$isIterable", this.$ti, "$asIterable")); t1.moveNext$0();)
        this.add$1(0, t1.get$current(t1));
    },
    removeAll$1: function(elements) {
      var t1;
      for (t1 = J.get$iterator$ax(H.assertSubtype(elements, "$isIterable", [P.Object], "$asIterable")); t1.moveNext$0();)
        this.remove$1(0, t1.get$current(t1));
    },
    map$1$1: function(_, f, $T) {
      var t1 = H.getTypeArgumentByIndex(this, 0);
      return new H.EfficientLengthMappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
    },
    get$single: function(_) {
      var it, _this = this;
      if (_this._collection$_length > 1)
        throw H.wrapException(H.IterableElementError_tooMany());
      it = P._LinkedHashSetIterator$(_this, _this._collection$_modifications, H.getTypeArgumentByIndex(_this, 0));
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      return it._collection$_current;
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    forEach$1: function(_, f) {
      var t1, _this = this;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(_this, 0)]});
      for (t1 = P._LinkedHashSetIterator$(_this, _this._collection$_modifications, H.getTypeArgumentByIndex(_this, 0)); t1.moveNext$0();)
        f.call$1(t1._collection$_current);
    },
    join$1: function(_, separator) {
      var t1,
        iterator = P._LinkedHashSetIterator$(this, this._collection$_modifications, H.getTypeArgumentByIndex(this, 0));
      if (!iterator.moveNext$0())
        return "";
      if (separator === "") {
        t1 = "";
        do
          t1 += H.S(iterator._collection$_current);
        while (iterator.moveNext$0());
      } else {
        t1 = H.S(iterator._collection$_current);
        for (; iterator.moveNext$0();)
          t1 = t1 + separator + H.S(iterator._collection$_current);
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    any$1: function(_, test) {
      var t1, _this = this;
      H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(_this, 0)]});
      for (t1 = P._LinkedHashSetIterator$(_this, _this._collection$_modifications, H.getTypeArgumentByIndex(_this, 0)); t1.moveNext$0();)
        if (H.boolConversionCheck(test.call$1(t1._collection$_current)))
          return true;
      return false;
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _this = this, _s5_ = "index";
      if (index == null)
        H.throwExpression(P.ArgumentError$notNull(_s5_));
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = P._LinkedHashSetIterator$(_this, _this._collection$_modifications, H.getTypeArgumentByIndex(_this, 0)), elementIndex = 0; t1.moveNext$0();) {
        element = t1._collection$_current;
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, _this, _s5_, null, elementIndex));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  P._ListBase_Object_ListMixin.prototype = {};
  P._SetBase_Object_SetMixin.prototype = {};
  P._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  P.Codec.prototype = {};
  P.Converter.prototype = {};
  P.Encoding.prototype = {
    $asCodec: function() {
      return [P.String, [P.List, P.int]];
    }
  };
  P.HtmlEscapeMode.prototype = {
    toString$0: function(_) {
      return this._convert$_name;
    }
  };
  P.HtmlEscape.prototype = {
    convert$1: function(text) {
      var val;
      H.stringTypeCheck(text);
      val = this._convert$3(text, 0, text.length);
      return val == null ? text : val;
    },
    _convert$3: function(text, start, end) {
      var t1, t2, t3, i, result, replacement, _null = null;
      for (t1 = this.mode, t2 = t1.escapeSlash, t3 = t1.escapeApos, t1 = t1.escapeQuot, i = start, result = _null; i < end; ++i) {
        if (i >= text.length)
          return H.ioore(text, i);
        switch (text[i]) {
          case "&":
            replacement = "&amp;";
            break;
          case '"':
            replacement = t1 ? "&quot;" : _null;
            break;
          case "'":
            replacement = t3 ? "&#39;" : _null;
            break;
          case "<":
            replacement = "&lt;";
            break;
          case ">":
            replacement = "&gt;";
            break;
          case "/":
            replacement = t2 ? "&#47;" : _null;
            break;
          default:
            replacement = _null;
        }
        if (replacement != null) {
          if (result == null)
            result = new P.StringBuffer("");
          if (i > start)
            result._contents += C.JSString_methods.substring$2(text, start, i);
          result._contents += replacement;
          start = i + 1;
        }
      }
      if (result == null)
        return;
      if (end > start)
        result._contents += J.substring$2$s(text, start, end);
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $asStreamTransformer: function() {
      return [P.String, P.String];
    },
    $asConverter: function() {
      return [P.String, P.String];
    }
  };
  P.Utf8Codec.prototype = {
    get$encoder: function() {
      return C.C_Utf8Encoder;
    }
  };
  P.Utf8Encoder.prototype = {
    convert$1: function(string) {
      var end, $length, t1, encoder;
      H.stringTypeCheck(string);
      end = P.RangeError_checkValidRange(0, null, string.length);
      if (typeof end !== "number")
        return end.$sub();
      $length = end - 0;
      if ($length === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array($length * 3);
      encoder = new P._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end)
        encoder._writeSurrogate$2(J.codeUnitAt$1$s(string, end - 1), 0);
      return C.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    },
    $asStreamTransformer: function() {
      return [P.String, [P.List, P.int]];
    },
    $asConverter: function() {
      return [P.String, [P.List, P.int]];
    }
  };
  P._Utf8Encoder.prototype = {
    _writeSurrogate$2: function(leadingSurrogate, nextCodeUnit) {
      var rune, _this = this,
        t1 = _this._buffer,
        t2 = _this._bufferIndex,
        t3 = t2 + 1,
        t4 = t1.length;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        _this._bufferIndex = t3;
        if (t2 >= t4)
          return H.ioore(t1, t2);
        t1[t2] = 240 | rune >>> 18;
        t2 = _this._bufferIndex = t3 + 1;
        if (t3 >= t4)
          return H.ioore(t1, t3);
        t1[t3] = 128 | rune >>> 12 & 63;
        t3 = _this._bufferIndex = t2 + 1;
        if (t2 >= t4)
          return H.ioore(t1, t2);
        t1[t2] = 128 | rune >>> 6 & 63;
        _this._bufferIndex = t3 + 1;
        if (t3 >= t4)
          return H.ioore(t1, t3);
        t1[t3] = 128 | rune & 63;
        return true;
      } else {
        _this._bufferIndex = t3;
        if (t2 >= t4)
          return H.ioore(t1, t2);
        t1[t2] = 224 | leadingSurrogate >>> 12;
        t2 = _this._bufferIndex = t3 + 1;
        if (t3 >= t4)
          return H.ioore(t1, t3);
        t1[t3] = 128 | leadingSurrogate >>> 6 & 63;
        _this._bufferIndex = t2 + 1;
        if (t2 >= t4)
          return H.ioore(t1, t2);
        t1[t2] = 128 | leadingSurrogate & 63;
        return false;
      }
    },
    _fillBuffer$3: function(str, start, end) {
      var t1, t2, t3, stringIndex, codeUnit, t4, stringIndex0, t5, _this = this;
      if (start !== end && (J.codeUnitAt$1$s(str, end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._buffer, t2 = t1.length, t3 = J.getInterceptor$s(str), stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = t3._codeUnitAt$1(str, stringIndex);
        if (codeUnit <= 127) {
          t4 = _this._bufferIndex;
          if (t4 >= t2)
            break;
          _this._bufferIndex = t4 + 1;
          t1[t4] = codeUnit;
        } else if ((codeUnit & 64512) === 55296) {
          if (_this._bufferIndex + 3 >= t2)
            break;
          stringIndex0 = stringIndex + 1;
          if (_this._writeSurrogate$2(codeUnit, C.JSString_methods._codeUnitAt$1(str, stringIndex0)))
            stringIndex = stringIndex0;
        } else if (codeUnit <= 2047) {
          t4 = _this._bufferIndex;
          t5 = t4 + 1;
          if (t5 >= t2)
            break;
          _this._bufferIndex = t5;
          if (t4 >= t2)
            return H.ioore(t1, t4);
          t1[t4] = 192 | codeUnit >>> 6;
          _this._bufferIndex = t5 + 1;
          t1[t5] = 128 | codeUnit & 63;
        } else {
          t4 = _this._bufferIndex;
          if (t4 + 2 >= t2)
            break;
          t5 = _this._bufferIndex = t4 + 1;
          if (t4 >= t2)
            return H.ioore(t1, t4);
          t1[t4] = 224 | codeUnit >>> 12;
          t4 = _this._bufferIndex = t5 + 1;
          if (t5 >= t2)
            return H.ioore(t1, t5);
          t1[t5] = 128 | codeUnit >>> 6 & 63;
          _this._bufferIndex = t4 + 1;
          if (t4 >= t2)
            return H.ioore(t1, t4);
          t1[t4] = 128 | codeUnit & 63;
        }
      }
      return stringIndex;
    }
  };
  P.NoSuchMethodError_toString_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2, t3;
      H.interceptedTypeCheck(key, "$isSymbol0");
      t1 = this.sb;
      t2 = this._box_0;
      t1._contents += t2.comma;
      t3 = t1._contents += H.S(key.__internal$_name);
      t1._contents = t3 + ": ";
      t1._contents += P.Error_safeToString(value);
      t2.comma = ", ";
    },
    $signature: 105
  };
  P.bool.prototype = {};
  P.DateTime.prototype = {
    add$1: function(_, duration) {
      return P.DateTime$_withValue(this._value + C.JSInt_methods._tdivFast$1(H.interceptedTypeCheck(duration, "$isDuration")._duration, 1000), this.isUtc);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.DateTime && this._value === other._value && this.isUtc === other.isUtc;
    },
    DateTime$_withValue$2$isUtc: function(_value, isUtc) {
      var t2,
        t1 = this._value;
      if (Math.abs(t1) <= 864e13)
        t2 = false;
      else
        t2 = true;
      if (t2)
        throw H.wrapException(P.ArgumentError$("DateTime is outside valid range: " + t1));
    },
    get$hashCode: function(_) {
      var t1 = this._value;
      return (t1 ^ C.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0: function(_) {
      var _this = this,
        y = P.DateTime__fourDigits(H.Primitives_getYear(_this)),
        m = P.DateTime__twoDigits(H.Primitives_getMonth(_this)),
        d = P.DateTime__twoDigits(H.Primitives_getDay(_this)),
        h = P.DateTime__twoDigits(H.Primitives_getHours(_this)),
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(_this)),
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(_this)),
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(_this));
      if (_this.isUtc)
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
    }
  };
  P.double.prototype = {};
  P.Duration.prototype = {
    $add: function(_, other) {
      return new P.Duration(C.JSInt_methods.$add(this._duration, other.get$_duration()));
    },
    $gt: function(_, other) {
      return C.JSInt_methods.$gt(this._duration, other.get$_duration());
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Duration && this._duration === other._duration;
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this._duration);
    },
    toString$0: function(_) {
      var twoDigitMinutes, twoDigitSeconds, sixDigitUs,
        t1 = new P.Duration_toString_twoDigits(),
        t2 = this._duration;
      if (t2 < 0)
        return "-" + new P.Duration(0 - t2).toString$0(0);
      twoDigitMinutes = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 60000000) % 60);
      twoDigitSeconds = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 1000000) % 60);
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(t2 % 1000000);
      return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    }
  };
  P.Duration_toString_sixDigits.prototype = {
    call$1: function(n) {
      if (n >= 100000)
        return "" + n;
      if (n >= 10000)
        return "0" + n;
      if (n >= 1000)
        return "00" + n;
      if (n >= 100)
        return "000" + n;
      if (n >= 10)
        return "0000" + n;
      return "00000" + n;
    },
    $signature: 23
  };
  P.Duration_toString_twoDigits.prototype = {
    call$1: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    $signature: 23
  };
  P.Error.prototype = {};
  P.AssertionError.prototype = {
    toString$0: function(_) {
      return "Assertion failed";
    }
  };
  P.NullThrownError.prototype = {
    toString$0: function(_) {
      return "Throw of null.";
    }
  };
  P.ArgumentError.prototype = {
    get$_errorName: function() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation: function() {
      return "";
    },
    toString$0: function(_) {
      var message, prefix, explanation, errorValue, _this = this,
        t1 = _this.name,
        nameString = t1 != null ? " (" + t1 + ")" : "";
      t1 = _this.message;
      message = t1 == null ? "" : ": " + H.S(t1);
      prefix = _this.get$_errorName() + nameString + message;
      if (!_this._hasValue)
        return prefix;
      explanation = _this.get$_errorExplanation();
      errorValue = P.Error_safeToString(_this.invalidValue);
      return prefix + explanation + ": " + errorValue;
    }
  };
  P.RangeError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var explanation, t2,
        t1 = this.start;
      if (t1 == null) {
        t1 = this.end;
        explanation = t1 != null ? ": Not less than or equal to " + H.S(t1) : "";
      } else {
        t2 = this.end;
        if (t2 == null)
          explanation = ": Not greater than or equal to " + H.S(t1);
        else if (t2 > t1)
          explanation = ": Not in range " + H.S(t1) + ".." + H.S(t2) + ", inclusive";
        else
          explanation = t2 < t1 ? ": Valid value range is empty" : ": Only valid value is " + H.S(t1);
      }
      return explanation;
    }
  };
  P.IndexError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var t1,
        invalidValue = H.intTypeCheck(this.invalidValue);
      if (typeof invalidValue !== "number")
        return invalidValue.$lt();
      if (invalidValue < 0)
        return ": index must not be negative";
      t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + H.S(t1);
    },
    get$length: function(receiver) {
      return this.length;
    }
  };
  P.NoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t1, t2, _i, t3, t4, argument, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = new P.StringBuffer("");
      _box_0.comma = "";
      for (t1 = _this._core$_arguments, t2 = t1.length, _i = 0, t3 = "", t4 = ""; _i < t2; ++_i, t4 = ", ") {
        argument = t1[_i];
        sb._contents = t3 + t4;
        t3 = sb._contents += P.Error_safeToString(argument);
        _box_0.comma = ", ";
      }
      _this._namedArguments.forEach$1(0, new P.NoSuchMethodError_toString_closure(_box_0, sb));
      receiverText = P.Error_safeToString(_this._core$_receiver);
      actualParameters = sb.toString$0(0);
      t1 = "NoSuchMethodError: method not found: '" + H.S(_this._core$_memberName.__internal$_name) + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
      return t1;
    }
  };
  P.UnsupportedError.prototype = {
    toString$0: function(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  P.UnimplementedError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + t1 : "UnimplementedError";
    }
  };
  P.StateError.prototype = {
    toString$0: function(_) {
      return "Bad state: " + this.message;
    }
  };
  P.ConcurrentModificationError.prototype = {
    toString$0: function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + P.Error_safeToString(t1) + ".";
    }
  };
  P.OutOfMemoryError.prototype = {
    toString$0: function(_) {
      return "Out of Memory";
    },
    $isError: 1
  };
  P.StackOverflowError.prototype = {
    toString$0: function(_) {
      return "Stack Overflow";
    },
    $isError: 1
  };
  P.CyclicInitializationError.prototype = {
    toString$0: function(_) {
      var t1 = this.variableName;
      return t1 == null ? "Reading static variable during its initialization" : "Reading static variable '" + t1 + "' during its initialization";
    }
  };
  P._Exception.prototype = {
    toString$0: function(_) {
      return "Exception: " + this.message;
    }
  };
  P.FormatException.prototype = {
    toString$0: function(_) {
      var source, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix, slice,
        t1 = this.message,
        report = t1 != null && "" !== t1 ? "FormatException: " + H.S(t1) : "FormatException",
        offset = this.offset,
        objectSource = this.source;
      if (typeof objectSource === "string") {
        if (offset != null)
          t1 = offset < 0 || offset > objectSource.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          source = objectSource.length > 78 ? C.JSString_methods.substring$2(objectSource, 0, 75) + "..." : objectSource;
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = C.JSString_methods._codeUnitAt$1(objectSource, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = objectSource.length;
        for (i = offset; i < lineEnd; ++i) {
          char = C.JSString_methods.codeUnitAt$1(objectSource, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        slice = C.JSString_methods.substring$2(objectSource, start, end);
        return report + prefix + slice + postfix + "\n" + C.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + H.S(offset) + ")") : report;
    }
  };
  P.Expando.prototype = {
    $index: function(_, object) {
      var t2, values,
        t1 = this._jsWeakMapOrKey;
      if (typeof t1 !== "string") {
        if (object != null)
          t2 = typeof object === "number" || false;
        else
          t2 = true;
        if (t2)
          H.throwExpression(P.ArgumentError$value(object, "Expandos are not allowed on strings, numbers, booleans or null", null));
        return t1.get(object);
      }
      values = H.Primitives_getProperty(object, "expando$values");
      t1 = values == null ? null : H.Primitives_getProperty(values, t1);
      return H.assertSubtypeOfRuntimeType(t1, H.getTypeArgumentByIndex(this, 0));
    },
    $indexSet: function(_, object, value) {
      var t1, values,
        _s14_ = "expando$values";
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
      t1 = this._jsWeakMapOrKey;
      if (typeof t1 !== "string")
        t1.set(object, value);
      else {
        values = H.Primitives_getProperty(object, _s14_);
        if (values == null) {
          values = new P.Object();
          H.Primitives_setProperty(object, _s14_, values);
        }
        H.Primitives_setProperty(values, t1, value);
      }
    },
    toString$0: function(_) {
      return "Expando:" + H.S(this.name);
    }
  };
  P.Function.prototype = {};
  P.int.prototype = {};
  P.Iterable.prototype = {
    map$1$1: function(_, f, $T) {
      var t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
      return H.MappedIterable_MappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), t1, $T);
    },
    where$1: function(_, test) {
      var t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
      return new H.WhereIterable(this, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), [t1]);
    },
    contains$1: function(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq$(t1.get$current(t1), element))
          return true;
      return false;
    },
    forEach$1: function(_, f) {
      var t1;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "Iterable", 0)]});
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current(t1));
    },
    reduce$1: function(_, combine) {
      var iterator, value,
        t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
      H.functionTypeCheck(combine, {func: 1, ret: t1, args: [t1, t1]});
      iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      value = iterator.get$current(iterator);
      for (; iterator.moveNext$0();)
        value = combine.call$2(value, iterator.get$current(iterator));
      return value;
    },
    join$1: function(_, separator) {
      var t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      if (separator === "") {
        t1 = "";
        do
          t1 += H.S(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        t1 = H.S(iterator.get$current(iterator));
        for (; iterator.moveNext$0();)
          t1 = t1 + separator + H.S(iterator.get$current(iterator));
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    get$length: function(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty: function(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$first: function(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      return it.get$current(it);
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      if (index == null)
        H.throwExpression(P.ArgumentError$notNull(_s5_));
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  P.Iterator.prototype = {};
  P.List.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1};
  P.Map.prototype = {};
  P.MapEntry.prototype = {
    toString$0: function(_) {
      return "MapEntry(" + H.S(this.key) + ": " + H.S(this.value) + ")";
    }
  };
  P.Null.prototype = {
    get$hashCode: function(_) {
      return P.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0: function(_) {
      return "null";
    }
  };
  P.num.prototype = {};
  P.Object.prototype = {constructor: P.Object, $isObject: 1,
    $eq: function(_, other) {
      return this === other;
    },
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: function(_) {
      return "Instance of '" + H.Primitives_objectTypeName(this) + "'";
    },
    noSuchMethod$1: function(_, invocation) {
      H.interceptedTypeCheck(invocation, "$isInvocation");
      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    toString: function() {
      return this.toString$0(this);
    }
  };
  P.Match.prototype = {};
  P.RegExp.prototype = {$isPattern: 1};
  P.Set.prototype = {};
  P.StackTrace.prototype = {};
  P._StringStackTrace.prototype = {
    toString$0: function(_) {
      return this._stackTrace;
    },
    $isStackTrace: 1
  };
  P.String.prototype = {$isPattern: 1};
  P.StringBuffer.prototype = {
    get$length: function(_) {
      return this._contents.length;
    },
    toString$0: function(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P.Symbol0.prototype = {};
  P.Type.prototype = {};
  W.promiseToFuture_closure.prototype = {
    call$1: function(promiseValue) {
      return this.completer.complete$1(0, H.futureOrCheck(promiseValue, {futureOr: 1, type: this.T}));
    },
    $signature: 2
  };
  W.promiseToFuture_closure0.prototype = {
    call$1: function(promiseError) {
      return this.completer.completeError$1(promiseError);
    },
    $signature: 2
  };
  W.HtmlElement.prototype = {$isHtmlElement: 1};
  W.AccessibleNode.prototype = {
    set$checked: function(receiver, checked) {
      receiver.checked = H.stringTypeCheck(checked);
    },
    get$checked: function(receiver) {
      return receiver.checked;
    }
  };
  W.AccessibleNodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.AnchorElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isAnchorElement: 1
  };
  W.Animation.prototype = {$isAnimation: 1};
  W.AnimationEvent.prototype = {$isAnimationEvent: 1};
  W.AreaElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.BaseElement.prototype = {$isBaseElement: 1};
  W.Blob.prototype = {$isBlob: 1};
  W.BodyElement.prototype = {$isBodyElement: 1};
  W.CharacterData.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Comment.prototype = {$isComment: 1};
  W.CssNumericValue.prototype = {
    add$1: function(receiver, value) {
      return receiver.add(H.interceptedTypeCheck(value, "$isCssNumericValue"));
    },
    $isCssNumericValue: 1
  };
  W.CssPerspective.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssRule.prototype = {$isCssRule: 1};
  W.CssStyleDeclaration.prototype = {
    _browserPropertyName$1: function(receiver, propertyName) {
      var t1 = $.$get$CssStyleDeclaration__propertyCache(),
        $name = t1[propertyName];
      if (typeof $name === "string")
        return $name;
      $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
      t1[propertyName] = $name;
      return $name;
    },
    _supportedBrowserPropertyName$1: function(receiver, propertyName) {
      var prefixed;
      if (propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
        return letter.toUpperCase();
      }) in receiver)
        return propertyName;
      prefixed = P.Device_cssPrefix() + H.S(propertyName);
      if (prefixed in receiver)
        return prefixed;
      return propertyName;
    },
    _setPropertyHelper$3: function(receiver, propertyName, value, priority) {
      if (value == null)
        value = "";
      if (priority == null)
        priority = "";
      receiver.setProperty(propertyName, value, priority);
    },
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssStyleDeclarationBase.prototype = {};
  W.CssStyleValue.prototype = {};
  W.CssTransformComponent.prototype = {};
  W.CssTransformValue.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssUnparsedValue.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.DataTransferItemList.prototype = {
    add$1: function(receiver, data_OR_file) {
      return receiver.add(data_OR_file);
    },
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.DivElement.prototype = {$isDivElement: 1};
  W.Document.prototype = {$isDocument: 1};
  W.DomException.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isDomException: 1
  };
  W.DomRectList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.assertSubtype(value, "$isRectangle", [P.num], "$asRectangle");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [[P.Rectangle, P.num]];
    },
    $asListMixin: function() {
      return [[P.Rectangle, P.num]];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [[P.Rectangle, P.num]];
    },
    $isList: 1,
    $asList: function() {
      return [[P.Rectangle, P.num]];
    },
    $asImmutableListMixin: function() {
      return [[P.Rectangle, P.num]];
    }
  };
  W.DomRectReadOnly.prototype = {
    toString$0: function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(this.get$width(receiver)) + " x " + H.S(this.get$height(receiver));
    },
    $eq: function(receiver, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor$(other);
      if (!t1.$isRectangle)
        return false;
      return receiver.left === t1.get$left(other) && receiver.top === t1.get$top(other) && this.get$width(receiver) === t1.get$width(other) && this.get$height(receiver) === t1.get$height(other);
    },
    get$hashCode: function(receiver) {
      return W._JenkinsSmiHash_hash4(C.JSNumber_methods.get$hashCode(receiver.left), C.JSNumber_methods.get$hashCode(receiver.top), C.JSNumber_methods.get$hashCode(this.get$width(receiver)), C.JSNumber_methods.get$hashCode(this.get$height(receiver)));
    },
    get$topLeft: function(receiver) {
      return new P.Point(receiver.left, receiver.top, [P.num]);
    },
    get$bottom: function(receiver) {
      return receiver.bottom;
    },
    get$height: function(receiver) {
      return receiver.height;
    },
    get$left: function(receiver) {
      return receiver.left;
    },
    get$right: function(receiver) {
      return receiver.right;
    },
    get$top: function(receiver) {
      return receiver.top;
    },
    get$width: function(receiver) {
      return receiver.width;
    },
    $isRectangle: 1,
    $asRectangle: function() {
      return [P.num];
    }
  };
  W.DomStringList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.stringTypeCheck(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [P.String];
    },
    $asListMixin: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isList: 1,
    $asList: function() {
      return [P.String];
    },
    $asImmutableListMixin: function() {
      return [P.String];
    }
  };
  W.DomTokenList.prototype = {
    add$1: function(receiver, tokens) {
      return receiver.add(H.stringTypeCheck(tokens));
    },
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W._ChildrenElementList.prototype = {
    contains$1: function(_, element) {
      return J.contains$1$asx(this._childElements, element);
    },
    get$isEmpty: function(_) {
      return this._html$_element.firstElementChild == null;
    },
    get$length: function(_) {
      return this._childElements.length;
    },
    $index: function(_, index) {
      return H.interceptedTypeCheck(J.$index$asx(this._childElements, index), "$isElement");
    },
    $indexSet: function(_, index, value) {
      H.intTypeCheck(index);
      this._html$_element.replaceChild(H.interceptedTypeCheck(value, "$isElement"), J.$index$asx(this._childElements, index));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize element lists"));
    },
    add$1: function(_, value) {
      H.interceptedTypeCheck(value, "$isElement");
      this._html$_element.appendChild(value);
      return value;
    },
    get$iterator: function(_) {
      var t1 = this.toList$0(this);
      return new J.ArrayIterator(t1, t1.length, [H.getTypeArgumentByIndex(t1, 0)]);
    },
    get$last: function(_) {
      var result = this._html$_element.lastElementChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    },
    $asEfficientLengthIterable: function() {
      return [W.Element];
    },
    $asListMixin: function() {
      return [W.Element];
    },
    $asIterable: function() {
      return [W.Element];
    },
    $asList: function() {
      return [W.Element];
    }
  };
  W._FrozenElementList.prototype = {
    get$length: function(_) {
      return this._nodeList.length;
    },
    $index: function(_, index) {
      return H.assertSubtypeOfRuntimeType(C.NodeList_methods.$index(this._nodeList, index), H.getTypeArgumentByIndex(this, 0));
    },
    $indexSet: function(_, index, value) {
      H.intTypeCheck(index);
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    get$last: function(_) {
      return H.assertSubtypeOfRuntimeType(C.NodeList_methods.get$last(this._nodeList), H.getTypeArgumentByIndex(this, 0));
    },
    get$classes: function(_) {
      return W._MultiElementCssClassSet__MultiElementCssClassSet(this);
    }
  };
  W.Element.prototype = {
    get$attributes: function(receiver) {
      return new W._ElementAttributeMap(receiver);
    },
    get$children: function(receiver) {
      return new W._ChildrenElementList(receiver, receiver.children);
    },
    get$classes: function(receiver) {
      return new W._ElementCssClassSet(receiver);
    },
    animate$2: function(receiver, $frames, timing) {
      var t1, convertedFrames, convertedTiming;
      H.assertSubtype($frames, "$isIterable", [[P.Map, P.String,,]], "$asIterable");
      t1 = !!J.getInterceptor$($frames).$isIterable;
      if (!t1 || !C.JSArray_methods.every$1($frames, new W.Element_animate_closure()))
        throw H.wrapException(P.ArgumentError$("The frames parameter should be a List of Maps with frame information"));
      if (t1) {
        t1 = H.getTypeArgumentByIndex($frames, 0);
        convertedFrames = new H.MappedListIterable($frames, H.functionTypeCheck(P.html_common__convertDartToNative_Dictionary$closure(), {func: 1, ret: null, args: [t1]}), [t1, null]).toList$0(0);
      } else
        convertedFrames = $frames;
      convertedTiming = !!J.getInterceptor$(timing).$isMap ? P.convertDartToNative_Dictionary(timing, null) : timing;
      return convertedTiming == null ? receiver.animate(convertedFrames) : receiver.animate(convertedFrames, convertedTiming);
    },
    toString$0: function(receiver) {
      return receiver.localName;
    },
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t2, contextElement, fragment,
        t1 = $.Element__defaultValidator;
      if (t1 == null) {
        t1 = H.setRuntimeTypeInfo([], [W.NodeValidator]);
        t2 = new W.NodeValidatorBuilder(t1);
        C.JSArray_methods.add$1(t1, W._Html5NodeValidator$(null));
        C.JSArray_methods.add$1(t1, W._TemplatingNodeValidator$());
        $.Element__defaultValidator = t2;
        validator = t2;
      } else
        validator = t1;
      t1 = $.Element__defaultSanitizer;
      if (t1 == null) {
        t1 = new W._ValidatingTreeSanitizer(validator);
        $.Element__defaultSanitizer = t1;
        treeSanitizer = t1;
      } else {
        t1.validator = validator;
        treeSanitizer = t1;
      }
      if ($.Element__parseDocument == null) {
        t1 = document;
        t2 = t1.implementation.createHTMLDocument("");
        $.Element__parseDocument = t2;
        $.Element__parseRange = t2.createRange();
        t2 = $.Element__parseDocument.createElement("base");
        H.interceptedTypeCheck(t2, "$isBaseElement");
        t2.href = t1.baseURI;
        $.Element__parseDocument.head.appendChild(t2);
      }
      t1 = $.Element__parseDocument;
      if (t1.body == null) {
        t2 = t1.createElement("body");
        t1.body = H.interceptedTypeCheck(t2, "$isBodyElement");
      }
      t1 = $.Element__parseDocument;
      if (!!this.$isBodyElement)
        contextElement = t1.body;
      else {
        contextElement = t1.createElement(receiver.tagName);
        $.Element__parseDocument.body.appendChild(contextElement);
      }
      if ("createContextualFragment" in window.Range.prototype && !C.JSArray_methods.contains$1(C.List_ego, receiver.tagName)) {
        $.Element__parseRange.selectNodeContents(contextElement);
        fragment = $.Element__parseRange.createContextualFragment(html);
      } else {
        contextElement.innerHTML = html;
        fragment = $.Element__parseDocument.createDocumentFragment();
        for (; t1 = contextElement.firstChild, t1 != null;)
          fragment.appendChild(t1);
      }
      t1 = $.Element__parseDocument.body;
      if (contextElement == null ? t1 != null : contextElement !== t1)
        J.remove$0$ax(contextElement);
      treeSanitizer.sanitizeTree$1(fragment);
      document.adoptNode(fragment);
      return fragment;
    },
    $isElement: 1,
    get$className: function(receiver) {
      return receiver.className;
    },
    get$tagName: function(receiver) {
      return receiver.tagName;
    }
  };
  W.Element_animate_closure.prototype = {
    call$1: function(x) {
      return !!J.getInterceptor$(H.assertSubtype(x, "$isMap", [P.String, null], "$asMap")).$isMap;
    },
    $signature: 102
  };
  W.Entry.prototype = {
    _html$_remove$2: function(receiver, successCallback, errorCallback) {
      H.functionTypeCheck(successCallback, {func: 1, ret: -1});
      H.functionTypeCheck(errorCallback, {func: 1, ret: -1, args: [W.DomException]});
      return receiver.remove(H.convertDartClosureToJS(successCallback, 0), H.convertDartClosureToJS(errorCallback, 1));
    },
    remove$0: function(receiver) {
      var t1 = new P._Future($.Zone__current, [null]),
        completer = new P._AsyncCompleter(t1, [null]);
      this._html$_remove$2(receiver, new W.Entry_remove_closure(completer), new W.Entry_remove_closure0(completer));
      return t1;
    }
  };
  W.Entry_remove_closure.prototype = {
    call$0: function() {
      this.completer.complete$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  W.Entry_remove_closure0.prototype = {
    call$1: function(error) {
      this.completer.completeError$1(H.interceptedTypeCheck(error, "$isDomException"));
    },
    $signature: 97
  };
  W.Event.prototype = {
    get$target: function(receiver) {
      return W._convertNativeToDart_EventTarget(receiver.target);
    },
    preventDefault$0: function(receiver) {
      return receiver.preventDefault();
    },
    stopPropagation$0: function(receiver) {
      return receiver.stopPropagation();
    },
    $isEvent: 1
  };
  W.EventTarget.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      H.functionTypeCheck(listener, {func: 1, args: [W.Event]});
      if (listener != null)
        this._addEventListener$3(receiver, type, listener, useCapture);
    },
    addEventListener$2: function($receiver, type, listener) {
      return this.addEventListener$3($receiver, type, listener, null);
    },
    removeEventListener$3: function(receiver, type, listener, useCapture) {
      H.functionTypeCheck(listener, {func: 1, args: [W.Event]});
      if (listener != null)
        this._removeEventListener$3(receiver, type, listener, useCapture);
    },
    removeEventListener$2: function($receiver, type, listener) {
      return this.removeEventListener$3($receiver, type, listener, null);
    },
    _addEventListener$3: function(receiver, type, listener, options) {
      return receiver.addEventListener(type, H.convertDartClosureToJS(H.functionTypeCheck(listener, {func: 1, args: [W.Event]}), 1), options);
    },
    _removeEventListener$3: function(receiver, type, listener, options) {
      return receiver.removeEventListener(type, H.convertDartClosureToJS(H.functionTypeCheck(listener, {func: 1, args: [W.Event]}), 1), options);
    },
    $isEventTarget: 1
  };
  W.File.prototype = {$isFile: 1};
  W.FileList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isFile");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.File];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.File];
    },
    $asListMixin: function() {
      return [W.File];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.File];
    },
    $isList: 1,
    $asList: function() {
      return [W.File];
    },
    $isFileList: 1,
    $asImmutableListMixin: function() {
      return [W.File];
    }
  };
  W.FileWriter.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.FocusEvent.prototype = {$isFocusEvent: 1};
  W.FontFace.prototype = {$isFontFace: 1};
  W.FontFaceSet.prototype = {
    add$1: function(receiver, arg) {
      return receiver.add(H.interceptedTypeCheck(arg, "$isFontFace"));
    }
  };
  W.FormElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Gamepad.prototype = {$isGamepad: 1};
  W.HeadElement.prototype = {$isHeadElement: 1};
  W.History.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.HtmlCollection.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isNode");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Node];
    },
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    },
    $isHtmlCollection: 1,
    $asImmutableListMixin: function() {
      return [W.Node];
    }
  };
  W.HtmlDocument.prototype = {$isHtmlDocument: 1};
  W.ImageData.prototype = {$isImageData: 1};
  W.InputElement.prototype = {
    set$checked: function(receiver, checked) {
      receiver.checked = H.boolTypeCheck(checked);
    },
    get$checked: function(receiver) {
      return receiver.checked;
    }
  };
  W.KeyboardEvent.prototype = {$isKeyboardEvent: 1};
  W.Location.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isLocation: 1
  };
  W.MediaKeySession.prototype = {
    remove$0: function(receiver) {
      return W.promiseToFuture(receiver.remove(), null);
    }
  };
  W.MediaList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.MessagePort.prototype = {$isMessagePort: 1};
  W.MidiInputMap.prototype = {
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
    },
    forEach$1: function(receiver, f) {
      var entries, entry;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], [P.String]);
      this.forEach$1(receiver, new W.MidiInputMap_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    }
  };
  W.MidiInputMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 18
  };
  W.MidiOutputMap.prototype = {
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
    },
    forEach$1: function(receiver, f) {
      var entries, entry;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], [P.String]);
      this.forEach$1(receiver, new W.MidiOutputMap_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    }
  };
  W.MidiOutputMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 18
  };
  W.MimeType.prototype = {$isMimeType: 1};
  W.MimeTypeArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isMimeType");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.MimeType];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.MimeType];
    },
    $asListMixin: function() {
      return [W.MimeType];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.MimeType];
    },
    $isList: 1,
    $asList: function() {
      return [W.MimeType];
    },
    $asImmutableListMixin: function() {
      return [W.MimeType];
    }
  };
  W.MouseEvent.prototype = {$isMouseEvent: 1};
  W._ChildNodeListLazy.prototype = {
    get$last: function(_) {
      var result = this._this.lastChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    },
    add$1: function(_, value) {
      this._this.appendChild(H.interceptedTypeCheck(value, "$isNode"));
    },
    $indexSet: function(_, index, value) {
      var t1;
      H.intTypeCheck(index);
      t1 = this._this;
      t1.replaceChild(H.interceptedTypeCheck(value, "$isNode"), C.NodeList_methods.$index(t1.childNodes, index));
    },
    get$iterator: function(_) {
      var t1 = this._this.childNodes;
      return new W.FixedSizeListIterator(t1, t1.length, [H.getRuntimeTypeArgumentIntercepted(C.NodeList_methods, t1, "ImmutableListMixin", 0)]);
    },
    get$length: function(_) {
      return this._this.childNodes.length;
    },
    set$length: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index: function(_, index) {
      return C.NodeList_methods.$index(this._this.childNodes, index);
    },
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $asListMixin: function() {
      return [W.Node];
    },
    $asIterable: function() {
      return [W.Node];
    },
    $asList: function() {
      return [W.Node];
    }
  };
  W.Node.prototype = {
    remove$0: function(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver);
    },
    replaceWith$1: function(receiver, otherNode) {
      var $parent, exception;
      try {
        $parent = receiver.parentNode;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return receiver;
    },
    _clearChildren$0: function(receiver) {
      var t1;
      for (; t1 = receiver.firstChild, t1 != null;)
        receiver.removeChild(t1);
    },
    toString$0: function(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    contains$1: function(receiver, other) {
      return receiver.contains(other);
    },
    _replaceChild$2: function(receiver, node, child) {
      return receiver.replaceChild(node, child);
    },
    $isNode: 1
  };
  W.NodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isNode");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Node];
    },
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    },
    $asImmutableListMixin: function() {
      return [W.Node];
    }
  };
  W.Plugin.prototype = {$isPlugin: 1,
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.PluginArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isPlugin");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Plugin];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Plugin];
    },
    $asListMixin: function() {
      return [W.Plugin];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Plugin];
    },
    $isList: 1,
    $asList: function() {
      return [W.Plugin];
    },
    $asImmutableListMixin: function() {
      return [W.Plugin];
    }
  };
  W.RtcStatsReport.prototype = {
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
    },
    forEach$1: function(receiver, f) {
      var entries, entry;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], [P.String]);
      this.forEach$1(receiver, new W.RtcStatsReport_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    }
  };
  W.RtcStatsReport_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 18
  };
  W.SelectElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.SourceBuffer.prototype = {$isSourceBuffer: 1};
  W.SourceBufferList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isSourceBuffer");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SourceBuffer];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.SourceBuffer];
    },
    $asListMixin: function() {
      return [W.SourceBuffer];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SourceBuffer];
    },
    $isList: 1,
    $asList: function() {
      return [W.SourceBuffer];
    },
    $asImmutableListMixin: function() {
      return [W.SourceBuffer];
    }
  };
  W.SpanElement.prototype = {$isSpanElement: 1};
  W.SpeechGrammar.prototype = {$isSpeechGrammar: 1};
  W.SpeechGrammarList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isSpeechGrammar");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SpeechGrammar];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.SpeechGrammar];
    },
    $asListMixin: function() {
      return [W.SpeechGrammar];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SpeechGrammar];
    },
    $isList: 1,
    $asList: function() {
      return [W.SpeechGrammar];
    },
    $asImmutableListMixin: function() {
      return [W.SpeechGrammar];
    }
  };
  W.SpeechRecognitionResult.prototype = {$isSpeechRecognitionResult: 1,
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Storage.prototype = {
    $index: function(receiver, key) {
      return receiver.getItem(H.stringTypeCheck(key));
    },
    forEach$1: function(receiver, f) {
      var i, key;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String, P.String]});
      for (i = 0; true; ++i) {
        key = receiver.key(i);
        if (key == null)
          return;
        f.call$2(key, receiver.getItem(key));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], [P.String]);
      this.forEach$1(receiver, new W.Storage_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $asMapMixin: function() {
      return [P.String, P.String];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, P.String];
    }
  };
  W.Storage_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 93
  };
  W.StyleSheet.prototype = {$isStyleSheet: 1};
  W.TableElement.prototype = {$isTableElement: 1};
  W.TemplateElement.prototype = {$isTemplateElement: 1};
  W.Text.prototype = {$isText: 1};
  W.TextAreaElement.prototype = {$isTextAreaElement: 1};
  W.TextTrack.prototype = {$isTextTrack: 1};
  W.TextTrackCue.prototype = {$isTextTrackCue: 1};
  W.TextTrackCueList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isTextTrackCue");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.TextTrackCue];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.TextTrackCue];
    },
    $asListMixin: function() {
      return [W.TextTrackCue];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.TextTrackCue];
    },
    $isList: 1,
    $asList: function() {
      return [W.TextTrackCue];
    },
    $asImmutableListMixin: function() {
      return [W.TextTrackCue];
    }
  };
  W.TextTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isTextTrack");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.TextTrack];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.TextTrack];
    },
    $asListMixin: function() {
      return [W.TextTrack];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.TextTrack];
    },
    $isList: 1,
    $asList: function() {
      return [W.TextTrack];
    },
    $asImmutableListMixin: function() {
      return [W.TextTrack];
    }
  };
  W.TimeRanges.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Touch.prototype = {$isTouch: 1};
  W.TouchList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isTouch");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Touch];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Touch];
    },
    $asListMixin: function() {
      return [W.Touch];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Touch];
    },
    $isList: 1,
    $asList: function() {
      return [W.Touch];
    },
    $asImmutableListMixin: function() {
      return [W.Touch];
    }
  };
  W.TrackDefaultList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.TransitionEvent.prototype = {$isTransitionEvent: 1};
  W.UIEvent.prototype = {$isUIEvent: 1};
  W.Url.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.VideoTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Window.prototype = {
    open$2: function(receiver, url, $name) {
      var t1 = W._DOMWindowCrossFrame__createSafe(receiver.open(url, $name));
      return t1;
    },
    requestAnimationFrame$1: function(receiver, callback) {
      H.functionTypeCheck(callback, {func: 1, ret: -1, args: [P.num]});
      this._ensureRequestAnimationFrame$0(receiver);
      return this._requestAnimationFrame$1(receiver, W._wrapZone(callback, P.num));
    },
    _requestAnimationFrame$1: function(receiver, callback) {
      return receiver.requestAnimationFrame(H.convertDartClosureToJS(H.functionTypeCheck(callback, {func: 1, ret: -1, args: [P.num]}), 1));
    },
    _ensureRequestAnimationFrame$0: function(receiver) {
      if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
        return;
      (function($this) {
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
          $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
          $this.cancelAnimationFrame = $this[vendors[i] + 'CancelAnimationFrame'] || $this[vendors[i] + 'CancelRequestAnimationFrame'];
        }
        if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
          return;
        $this.requestAnimationFrame = function(callback) {
          return window.setTimeout(function() {
            callback(Date.now());
          }, 16);
        };
        $this.cancelAnimationFrame = function(id) {
          clearTimeout(id);
        };
      })(receiver);
    },
    $isWindow: 1,
    $isWindowBase: 1
  };
  W.WorkerGlobalScope.prototype = {$isWorkerGlobalScope: 1};
  W._Attr.prototype = {$is_Attr: 1};
  W._CssRuleList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isCssRule");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.CssRule];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.CssRule];
    },
    $asListMixin: function() {
      return [W.CssRule];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.CssRule];
    },
    $isList: 1,
    $asList: function() {
      return [W.CssRule];
    },
    $asImmutableListMixin: function() {
      return [W.CssRule];
    }
  };
  W._DomRect.prototype = {
    toString$0: function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
    },
    $eq: function(receiver, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor$(other);
      if (!t1.$isRectangle)
        return false;
      return receiver.left === t1.get$left(other) && receiver.top === t1.get$top(other) && receiver.width === t1.get$width(other) && receiver.height === t1.get$height(other);
    },
    get$hashCode: function(receiver) {
      return W._JenkinsSmiHash_hash4(C.JSNumber_methods.get$hashCode(receiver.left), C.JSNumber_methods.get$hashCode(receiver.top), C.JSNumber_methods.get$hashCode(receiver.width), C.JSNumber_methods.get$hashCode(receiver.height));
    },
    get$topLeft: function(receiver) {
      return new P.Point(receiver.left, receiver.top, [P.num]);
    },
    get$height: function(receiver) {
      return receiver.height;
    },
    get$width: function(receiver) {
      return receiver.width;
    }
  };
  W._GamepadList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isGamepad");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Gamepad];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Gamepad];
    },
    $asListMixin: function() {
      return [W.Gamepad];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Gamepad];
    },
    $isList: 1,
    $asList: function() {
      return [W.Gamepad];
    },
    $asImmutableListMixin: function() {
      return [W.Gamepad];
    }
  };
  W._NamedNodeMap.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isNode");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.Node];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.Node];
    },
    $asListMixin: function() {
      return [W.Node];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.Node];
    },
    $isList: 1,
    $asList: function() {
      return [W.Node];
    },
    $asImmutableListMixin: function() {
      return [W.Node];
    }
  };
  W._SpeechRecognitionResultList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isSpeechRecognitionResult");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.SpeechRecognitionResult];
    },
    $asListMixin: function() {
      return [W.SpeechRecognitionResult];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isList: 1,
    $asList: function() {
      return [W.SpeechRecognitionResult];
    },
    $asImmutableListMixin: function() {
      return [W.SpeechRecognitionResult];
    }
  };
  W._StyleSheetList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isStyleSheet");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [W.StyleSheet];
    },
    $isJavaScriptIndexingBehavior: 1,
    $asJavaScriptIndexingBehavior: function() {
      return [W.StyleSheet];
    },
    $asListMixin: function() {
      return [W.StyleSheet];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [W.StyleSheet];
    },
    $isList: 1,
    $asList: function() {
      return [W.StyleSheet];
    },
    $asImmutableListMixin: function() {
      return [W.StyleSheet];
    }
  };
  W._AttributeMap.prototype = {
    forEach$1: function(_, f) {
      var t1, t2, t3, _i, key;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String, P.String]});
      for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._html$_element, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        f.call$2(key, t3.getAttribute(key));
      }
    },
    get$keys: function(_) {
      var len, i, attr,
        attributes = this._html$_element.attributes,
        keys = H.setRuntimeTypeInfo([], [P.String]);
      for (len = attributes.length, i = 0; i < len; ++i) {
        if (i >= attributes.length)
          return H.ioore(attributes, i);
        attr = H.interceptedTypeCheck(attributes[i], "$is_Attr");
        if (attr.namespaceURI == null)
          C.JSArray_methods.add$1(keys, attr.name);
      }
      return keys;
    },
    $asMapMixin: function() {
      return [P.String, P.String];
    },
    $asMap: function() {
      return [P.String, P.String];
    }
  };
  W._ElementAttributeMap.prototype = {
    $index: function(_, key) {
      return this._html$_element.getAttribute(H.stringTypeCheck(key));
    },
    get$length: function(_) {
      return this.get$keys(this).length;
    }
  };
  W.CssClassSet.prototype = {$isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isSet: 1,
    $asSet: function() {
      return [P.String];
    }
  };
  W._MultiElementCssClassSet.prototype = {
    readClasses$0: function() {
      var s = P.LinkedHashSet_LinkedHashSet(null, null, P.String);
      C.JSArray_methods.forEach$1(this._sets, new W._MultiElementCssClassSet_readClasses_closure(s));
      return s;
    },
    writeClasses$1: function(s) {
      var t1,
        classes = H.assertSubtype(s, "$isSet", [P.String], "$asSet").join$1(0, " ");
      for (t1 = this._elementIterable, t1 = new H.ListIterator(t1, t1.get$length(t1), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        t1.__internal$_current.className = classes;
    },
    modify$1: function(_, f) {
      C.JSArray_methods.forEach$1(this._sets, new W._MultiElementCssClassSet_modify_closure(H.functionTypeCheck(f, {func: 1, args: [[P.Set, P.String]]})));
    }
  };
  W._MultiElementCssClassSet__MultiElementCssClassSet_closure.prototype = {
    call$1: function(e) {
      return J.get$classes$x(H.interceptedTypeCheck(e, "$isElement"));
    },
    $signature: 88
  };
  W._MultiElementCssClassSet_readClasses_closure.prototype = {
    call$1: function(e) {
      return this.s.addAll$1(0, H.interceptedTypeCheck(e, "$isCssClassSetImpl").readClasses$0());
    },
    $signature: 86
  };
  W._MultiElementCssClassSet_modify_closure.prototype = {
    call$1: function(e) {
      return H.interceptedTypeCheck(e, "$isCssClassSetImpl").modify$1(0, this.f);
    },
    $signature: 85
  };
  W._ElementCssClassSet.prototype = {
    readClasses$0: function() {
      var t1, t2, _i, trimmed,
        s = P.LinkedHashSet_LinkedHashSet(null, null, P.String);
      for (t1 = this._html$_element.className.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        trimmed = J.trim$0$s(t1[_i]);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    },
    writeClasses$1: function(s) {
      this._html$_element.className = H.assertSubtype(s, "$isSet", [P.String], "$asSet").join$1(0, " ");
    },
    get$length: function(_) {
      return this._html$_element.classList.length;
    },
    get$isEmpty: function(_) {
      return this._html$_element.classList.length === 0;
    },
    contains$1: function(_, value) {
      var t1 = this._html$_element.classList.contains(value);
      return t1;
    },
    add$1: function(_, value) {
      var list, t1;
      H.stringTypeCheck(value);
      list = this._html$_element.classList;
      t1 = list.contains(value);
      list.add(value);
      return !t1;
    },
    remove$1: function(_, value) {
      var list, removed, t1;
      if (typeof value === "string") {
        list = this._html$_element.classList;
        removed = list.contains(value);
        list.remove(value);
        t1 = removed;
      } else
        t1 = false;
      return t1;
    },
    addAll$1: function(_, iterable) {
      W._ElementCssClassSet__addAll(this._html$_element, H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable"));
    },
    removeAll$1: function(iterable) {
      W._ElementCssClassSet__removeAll(this._html$_element, H.assertSubtype(iterable, "$isIterable", [P.Object], "$asIterable"));
    }
  };
  W._EventStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1 = H.getTypeArgumentByIndex(this, 0);
      H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
      H.functionTypeCheck(onDone, {func: 1, ret: -1});
      return W._EventStreamSubscription$(this._html$_target, this._eventType, onData, false, t1);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }
  };
  W._EventStreamSubscription.prototype = {
    cancel$0: function(_) {
      var _this = this;
      if (_this._html$_target == null)
        return;
      _this._unlisten$0();
      _this._html$_target = null;
      _this.set$_html$_onData(null);
      return;
    },
    pause$1: function(_, resumeSignal) {
      if (this._html$_target == null)
        return;
      ++this._pauseCount;
      this._unlisten$0();
    },
    pause$0: function($receiver) {
      return this.pause$1($receiver, null);
    },
    resume$0: function(_) {
      var _this = this;
      if (_this._html$_target == null || _this._pauseCount <= 0)
        return;
      --_this._pauseCount;
      _this._tryResume$0();
    },
    _tryResume$0: function() {
      var _this = this,
        t1 = _this._html$_onData;
      if (t1 != null && _this._pauseCount <= 0)
        J.addEventListener$3$x(_this._html$_target, _this._eventType, t1, false);
    },
    _unlisten$0: function() {
      var t1 = this._html$_onData;
      if (t1 != null)
        J.removeEventListener$3$x(this._html$_target, this._eventType, t1, false);
    },
    set$_html$_onData: function(_onData) {
      this._html$_onData = H.functionTypeCheck(_onData, {func: 1, args: [W.Event]});
    }
  };
  W._EventStreamSubscription_closure.prototype = {
    call$1: function(e) {
      return this.onData.call$1(H.interceptedTypeCheck(e, "$isEvent"));
    },
    $signature: 84
  };
  W._Html5NodeValidator.prototype = {
    _Html5NodeValidator$1$uriPolicy: function(uriPolicy) {
      var _i;
      if ($._Html5NodeValidator__attributeValidators.get$isEmpty($._Html5NodeValidator__attributeValidators)) {
        for (_i = 0; _i < 262; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_2Zi[_i], W.html__Html5NodeValidator__standardAttributeValidator$closure());
        for (_i = 0; _i < 12; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_yrN[_i], W.html__Html5NodeValidator__uriAttributeValidator$closure());
      }
    },
    allowsElement$1: function(element) {
      return $.$get$_Html5NodeValidator__allowedElements().contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var validator = $._Html5NodeValidator__attributeValidators.$index(0, H.S(W.Element__safeTagName(element)) + "::" + attributeName);
      if (validator == null)
        validator = $._Html5NodeValidator__attributeValidators.$index(0, "*::" + attributeName);
      if (validator == null)
        return false;
      return H.boolTypeCheck(validator.call$4(element, attributeName, value, this));
    },
    $isNodeValidator: 1
  };
  W.ImmutableListMixin.prototype = {
    get$iterator: function(receiver) {
      return new W.FixedSizeListIterator(receiver, this.get$length(receiver), [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0)]);
    },
    add$1: function(receiver, value) {
      H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0));
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    }
  };
  W.NodeValidatorBuilder.prototype = {
    add$1: function(_, validator) {
      C.JSArray_methods.add$1(this._validators, H.interceptedTypeCheck(validator, "$isNodeValidator"));
    },
    allowsElement$1: function(element) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsElement_closure(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
    },
    $isNodeValidator: 1
  };
  W.NodeValidatorBuilder_allowsElement_closure.prototype = {
    call$1: function(v) {
      return H.interceptedTypeCheck(v, "$isNodeValidator").allowsElement$1(this.element);
    },
    $signature: 37
  };
  W.NodeValidatorBuilder_allowsAttribute_closure.prototype = {
    call$1: function(v) {
      return H.interceptedTypeCheck(v, "$isNodeValidator").allowsAttribute$3(this.element, this.attributeName, this.value);
    },
    $signature: 37
  };
  W._SimpleNodeValidator.prototype = {
    _SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes: function(uriPolicy, allowedAttributes, allowedElements, allowedUriAttributes) {
      var legalAttributes, extraUriAttributes, t1;
      this.allowedElements.addAll$1(0, allowedElements);
      legalAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure());
      extraUriAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure0());
      this.allowedAttributes.addAll$1(0, legalAttributes);
      t1 = this.allowedUriAttributes;
      t1.addAll$1(0, C.List_empty1);
      t1.addAll$1(0, extraUriAttributes);
    },
    allowsElement$1: function(element) {
      return this.allowedElements.contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var _this = this,
        tagName = W.Element__safeTagName(element),
        t1 = _this.allowedUriAttributes;
      if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else if (t1.contains$1(0, "*::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else {
        t1 = _this.allowedAttributes;
        if (t1.contains$1(0, H.S(tagName) + "::" + attributeName))
          return true;
        else if (t1.contains$1(0, "*::" + attributeName))
          return true;
        else if (t1.contains$1(0, H.S(tagName) + "::*"))
          return true;
        else if (t1.contains$1(0, "*::*"))
          return true;
      }
      return false;
    },
    $isNodeValidator: 1
  };
  W._SimpleNodeValidator_closure.prototype = {
    call$1: function(x) {
      return !C.JSArray_methods.contains$1(C.List_yrN, H.stringTypeCheck(x));
    },
    $signature: 12
  };
  W._SimpleNodeValidator_closure0.prototype = {
    call$1: function(x) {
      return C.JSArray_methods.contains$1(C.List_yrN, H.stringTypeCheck(x));
    },
    $signature: 12
  };
  W._TemplatingNodeValidator.prototype = {
    allowsAttribute$3: function(element, attributeName, value) {
      if (this.super$_SimpleNodeValidator$allowsAttribute(element, attributeName, value))
        return true;
      if (attributeName === "template" && value === "")
        return true;
      if (element.getAttribute("template") === "")
        return this._templateAttrs.contains$1(0, attributeName);
      return false;
    }
  };
  W._TemplatingNodeValidator_closure.prototype = {
    call$1: function(attr) {
      return "TEMPLATE::" + H.S(H.stringTypeCheck(attr));
    },
    $signature: 14
  };
  W.FixedSizeListIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._html$_length;
      if (nextPosition < t1) {
        _this.set$_html$_current(J.$index$asx(_this._array, nextPosition));
        _this._position = nextPosition;
        return true;
      }
      _this.set$_html$_current(null);
      _this._position = t1;
      return false;
    },
    get$current: function(_) {
      return this._html$_current;
    },
    set$_html$_current: function(_current) {
      this._html$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
    },
    $isIterator: 1
  };
  W._DOMWindowCrossFrame.prototype = {$isEventTarget: 1, $isWindowBase: 1};
  W.NodeValidator.prototype = {};
  W._SameOriginUriPolicy.prototype = {$isUriPolicy: 1};
  W._ValidatingTreeSanitizer.prototype = {
    sanitizeTree$1: function(node) {
      new W._ValidatingTreeSanitizer_sanitizeTree_walk(this).call$2(node, null);
    },
    _removeNode$2: function(node, $parent) {
      if ($parent == null)
        J.remove$0$ax(node);
      else
        $parent.removeChild(node);
    },
    _sanitizeUntrustedElement$2: function(element, $parent) {
      var corruptedTest1, elementText, elementTagName, exception, t1,
        corrupted = true,
        attrs = null, isAttr = null;
      try {
        attrs = J.get$attributes$x(element);
        isAttr = attrs._html$_element.getAttribute("is");
        H.interceptedTypeCheck(element, "$isElement");
        corruptedTest1 = function(element) {
          if (!(element.attributes instanceof NamedNodeMap))
            return true;
          var childNodes = element.childNodes;
          if (element.lastChild && element.lastChild !== childNodes[childNodes.length - 1])
            return true;
          if (element.children)
            if (!(element.children instanceof HTMLCollection || element.children instanceof NodeList))
              return true;
          var length = 0;
          if (element.children)
            length = element.children.length;
          for (var i = 0; i < length; i++) {
            var child = element.children[i];
            if (child.id == 'attributes' || child.name == 'attributes' || child.id == 'lastChild' || child.name == 'lastChild' || child.id == 'children' || child.name == 'children')
              return true;
          }
          return false;
        }(element);
        corrupted = H.boolConversionCheck(corruptedTest1) ? true : !(element.attributes instanceof NamedNodeMap);
      } catch (exception) {
        H.unwrapException(exception);
      }
      elementText = "element unprintable";
      try {
        elementText = J.toString$0$(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      try {
        elementTagName = W.Element__safeTagName(element);
        this._sanitizeElement$7(H.interceptedTypeCheck(element, "$isElement"), $parent, corrupted, elementText, elementTagName, H.interceptedTypeCheck(attrs, "$isMap"), H.stringTypeCheck(isAttr));
      } catch (exception) {
        if (H.unwrapException(exception) instanceof P.ArgumentError)
          throw exception;
        else {
          this._removeNode$2(element, $parent);
          window;
          t1 = "Removing corrupted element " + H.S(elementText);
          if (typeof console != "undefined")
            window.console.warn(t1);
        }
      }
    },
    _sanitizeElement$7: function(element, $parent, corrupted, text, tag, attrs, isAttr) {
      var t1, keys, i, $name, t2, t3, _this = this;
      if (corrupted) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing element due to corrupted attributes on <" + text + ">";
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (!_this.validator.allowsElement$1(element)) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing disallowed element <" + H.S(tag) + "> from " + H.S($parent);
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (isAttr != null)
        if (!_this.validator.allowsAttribute$3(element, "is", isAttr)) {
          _this._removeNode$2(element, $parent);
          window;
          t1 = "Removing disallowed type extension <" + H.S(tag) + ' is="' + isAttr + '">';
          if (typeof console != "undefined")
            window.console.warn(t1);
          return;
        }
      t1 = attrs.get$keys(attrs);
      keys = H.setRuntimeTypeInfo(t1.slice(0), [H.getTypeArgumentByIndex(t1, 0)]);
      for (i = attrs.get$keys(attrs).length - 1, t1 = attrs._html$_element; i >= 0; --i) {
        if (i >= keys.length)
          return H.ioore(keys, i);
        $name = keys[i];
        t2 = _this.validator;
        t3 = J.toLowerCase$0$s($name);
        H.stringTypeCheck($name);
        if (!t2.allowsAttribute$3(element, t3, t1.getAttribute($name))) {
          window;
          t2 = "Removing disallowed attribute <" + H.S(tag) + " " + $name + '="' + H.S(t1.getAttribute($name)) + '">';
          if (typeof console != "undefined")
            window.console.warn(t2);
          t1.removeAttribute($name);
        }
      }
      if (!!J.getInterceptor$(element).$isTemplateElement)
        _this.sanitizeTree$1(element.content);
    },
    $isNodeTreeSanitizer: 1
  };
  W._ValidatingTreeSanitizer_sanitizeTree_walk.prototype = {
    call$2: function(node, $parent) {
      var child, nextChild, exception, t2, t3,
        t1 = this.$this;
      switch (node.nodeType) {
        case 1:
          t1._sanitizeUntrustedElement$2(node, $parent);
          break;
        case 8:
        case 11:
        case 3:
        case 4:
          break;
        default:
          t1._removeNode$2(node, $parent);
      }
      child = node.lastChild;
      for (t1 = node == null; null != child;) {
        nextChild = null;
        try {
          nextChild = child.previousSibling;
        } catch (exception) {
          H.unwrapException(exception);
          t2 = H.interceptedTypeCheck(child, "$isNode");
          if (t1) {
            t3 = t2.parentNode;
            if (t3 != null)
              t3.removeChild(t2);
          } else
            node.removeChild(t2);
          child = null;
          nextChild = node.lastChild;
        }
        if (child != null)
          this.call$2(child, node);
        child = H.interceptedTypeCheck(nextChild, "$isNode");
      }
    },
    $signature: 79
  };
  W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase.prototype = {};
  W._DomRectList_Interceptor_ListMixin.prototype = {};
  W._DomRectList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._DomStringList_Interceptor_ListMixin.prototype = {};
  W._DomStringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._FileList_Interceptor_ListMixin.prototype = {};
  W._FileList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._MidiInputMap_Interceptor_MapMixin.prototype = {};
  W._MidiOutputMap_Interceptor_MapMixin.prototype = {};
  W._MimeTypeArray_Interceptor_ListMixin.prototype = {};
  W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._PluginArray_Interceptor_ListMixin.prototype = {};
  W._PluginArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._RtcStatsReport_Interceptor_MapMixin.prototype = {};
  W._SourceBufferList_EventTarget_ListMixin.prototype = {};
  W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  W._SpeechGrammarList_Interceptor_ListMixin.prototype = {};
  W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._Storage_Interceptor_MapMixin.prototype = {};
  W._TextTrackCueList_Interceptor_ListMixin.prototype = {};
  W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._TextTrackList_EventTarget_ListMixin.prototype = {};
  W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__CssRuleList_Interceptor_ListMixin.prototype = {};
  W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__GamepadList_Interceptor_ListMixin.prototype = {};
  W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__SpeechRecognitionResultList_Interceptor_ListMixin.prototype = {};
  W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__StyleSheetList_Interceptor_ListMixin.prototype = {};
  W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._StructuredClone.prototype = {
    findSlot$1: function(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      C.JSArray_methods.add$1(t1, value);
      C.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1: function(e) {
      var t2, slot, t3, copy, _this = this, t1 = {};
      if (e == null)
        return e;
      if (typeof e === "boolean")
        return e;
      if (typeof e === "number")
        return e;
      if (typeof e === "string")
        return e;
      t2 = J.getInterceptor$(e);
      if (!!t2.$isDateTime)
        return new Date(e._value);
      if (!!t2.$isRegExp)
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (!!t2.$isFile)
        return e;
      if (!!t2.$isBlob)
        return e;
      if (!!t2.$isFileList)
        return e;
      if (!!t2.$isImageData)
        return e;
      if (!!t2.$isNativeByteBuffer || !!t2.$isNativeTypedData || !!t2.$isMessagePort)
        return e;
      if (!!t2.$isMap) {
        slot = _this.findSlot$1(e);
        t3 = _this.copies;
        if (slot >= t3.length)
          return H.ioore(t3, slot);
        copy = t1.copy = t3[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        C.JSArray_methods.$indexSet(t3, slot, copy);
        t2.forEach$1(e, new P._StructuredClone_walk_closure(t1, _this));
        return t1.copy;
      }
      if (!!t2.$isList) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (slot >= t1.length)
          return H.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        return _this.copyList$2(e, slot);
      }
      throw H.wrapException(P.UnimplementedError$("structured clone of other type"));
    },
    copyList$2: function(e, slot) {
      var i,
        t1 = J.getInterceptor$asx(e),
        $length = t1.get$length(e),
        copy = new Array($length);
      C.JSArray_methods.$indexSet(this.copies, slot, copy);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i)
        C.JSArray_methods.$indexSet(copy, i, this.walk$1(t1.$index(e, i)));
      return copy;
    }
  };
  P._StructuredClone_walk_closure.prototype = {
    call$2: function(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 11
  };
  P._AcceptStructuredClone.prototype = {
    findSlot$1: function(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      C.JSArray_methods.add$1(t1, value);
      C.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1: function(e) {
      var millisSinceEpoch, t1, proto, slot, copy, l, t2, $length, i, _this = this, _box_0 = {};
      if (e == null)
        return e;
      if (typeof e === "boolean")
        return e;
      if (typeof e === "number")
        return e;
      if (typeof e === "string")
        return e;
      if (e instanceof Date) {
        millisSinceEpoch = e.getTime();
        t1 = new P.DateTime(millisSinceEpoch, true);
        t1.DateTime$_withValue$2$isUtc(millisSinceEpoch, true);
        return t1;
      }
      if (e instanceof RegExp)
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (typeof Promise != "undefined" && e instanceof Promise)
        return P.convertNativePromiseToDartFuture(e);
      proto = Object.getPrototypeOf(e);
      if (proto === Object.prototype || proto === null) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (slot >= t1.length)
          return H.ioore(t1, slot);
        copy = _box_0.copy = t1[slot];
        if (copy != null)
          return copy;
        copy = P.LinkedHashMap__makeEmpty();
        _box_0.copy = copy;
        C.JSArray_methods.$indexSet(t1, slot, copy);
        _this.forEachJsField$2(e, new P._AcceptStructuredClone_walk_closure(_box_0, _this));
        return _box_0.copy;
      }
      if (e instanceof Array) {
        l = e;
        slot = _this.findSlot$1(l);
        t1 = _this.copies;
        if (slot >= t1.length)
          return H.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = J.getInterceptor$asx(l);
        $length = t2.get$length(l);
        C.JSArray_methods.$indexSet(t1, slot, l);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i)
          t2.$indexSet(l, i, _this.walk$1(t2.$index(l, i)));
        return l;
      }
      return e;
    }
  };
  P._AcceptStructuredClone_walk_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this._box_0.copy,
        t2 = this.$this.walk$1(value);
      J.$indexSet$ax(t1, key, t2);
      return t2;
    },
    $signature: 78
  };
  P.convertDartToNative_Dictionary_closure.prototype = {
    call$2: function(key, value) {
      this.object[key] = value;
    },
    $signature: 11
  };
  P._StructuredCloneDart2Js.prototype = {};
  P._AcceptStructuredCloneDart2Js.prototype = {
    forEachJsField$2: function(object, action) {
      var t1, t2, _i, key;
      H.functionTypeCheck(action, {func: 1, args: [,,]});
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  P.convertNativePromiseToDartFuture_closure.prototype = {
    call$1: function(result) {
      return this.completer.complete$1(0, result);
    },
    $signature: 2
  };
  P.convertNativePromiseToDartFuture_closure0.prototype = {
    call$1: function(result) {
      return this.completer.completeError$1(result);
    },
    $signature: 2
  };
  P.CssClassSetImpl.prototype = {
    _validateToken$1: function(value) {
      var t1;
      H.stringTypeCheck(value);
      t1 = $.$get$CssClassSetImpl__validTokenRE()._nativeRegExp;
      if (typeof value !== "string")
        H.throwExpression(H.argumentErrorValue(value));
      if (t1.test(value))
        return value;
      throw H.wrapException(P.ArgumentError$value(value, "value", "Not a valid class token"));
    },
    toString$0: function(_) {
      return this.readClasses$0().join$1(0, " ");
    },
    get$iterator: function(_) {
      var t1 = this.readClasses$0();
      return P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H.getTypeArgumentByIndex(t1, 0));
    },
    forEach$1: function(_, f) {
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String]});
      this.readClasses$0().forEach$1(0, f);
    },
    join$1: function(_, separator) {
      return this.readClasses$0().join$1(0, separator);
    },
    map$1$1: function(_, f, $T) {
      var t1, t2;
      H.functionTypeCheck(f, {func: 1, ret: $T, args: [P.String]});
      t1 = this.readClasses$0();
      t2 = H.getTypeArgumentByIndex(t1, 0);
      return new H.EfficientLengthMappedIterable(t1, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t2]}), [t2, $T]);
    },
    get$isEmpty: function(_) {
      return this.readClasses$0()._collection$_length === 0;
    },
    get$length: function(_) {
      return this.readClasses$0()._collection$_length;
    },
    contains$1: function(_, value) {
      this._validateToken$1(value);
      return this.readClasses$0().contains$1(0, value);
    },
    add$1: function(_, value) {
      H.stringTypeCheck(value);
      this._validateToken$1(value);
      return H.boolTypeCheck(this.modify$1(0, new P.CssClassSetImpl_add_closure(value)));
    },
    remove$1: function(_, value) {
      var s, result;
      this._validateToken$1(value);
      if (typeof value !== "string")
        return false;
      s = this.readClasses$0();
      result = s.remove$1(0, value);
      this.writeClasses$1(s);
      return result;
    },
    addAll$1: function(_, iterable) {
      this.modify$1(0, new P.CssClassSetImpl_addAll_closure(this, H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable")));
    },
    removeAll$1: function(iterable) {
      this.modify$1(0, new P.CssClassSetImpl_removeAll_closure(H.assertSubtype(iterable, "$isIterable", [P.Object], "$asIterable")));
    },
    elementAt$1: function(_, index) {
      return this.readClasses$0().elementAt$1(0, index);
    },
    modify$1: function(_, f) {
      var s, ret;
      H.functionTypeCheck(f, {func: 1, args: [[P.Set, P.String]]});
      s = this.readClasses$0();
      ret = f.call$1(s);
      this.writeClasses$1(s);
      return ret;
    },
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $asSetMixin: function() {
      return [P.String];
    },
    $asIterable: function() {
      return [P.String];
    },
    $asSet: function() {
      return [P.String];
    },
    $isCssClassSet: 1
  };
  P.CssClassSetImpl_add_closure.prototype = {
    call$1: function(s) {
      return H.assertSubtype(s, "$isSet", [P.String], "$asSet").add$1(0, this.value);
    },
    $signature: 76
  };
  P.CssClassSetImpl_addAll_closure.prototype = {
    call$1: function(s) {
      var t1 = P.String;
      return H.assertSubtype(s, "$isSet", [t1], "$asSet").addAll$1(0, J.map$1$1$ax(this.iterable, this.$this.get$_validateToken(), t1));
    },
    $signature: 42
  };
  P.CssClassSetImpl_removeAll_closure.prototype = {
    call$1: function(s) {
      return H.assertSubtype(s, "$isSet", [P.String], "$asSet").removeAll$1(this.iterable);
    },
    $signature: 42
  };
  P.FilteredElementList.prototype = {
    get$_html_common$_iterable: function() {
      var t1 = this._childNodes,
        t2 = H.getRuntimeTypeArgument(t1, "ListMixin", 0),
        t3 = W.Element;
      return new H.MappedIterable(new H.WhereIterable(t1, H.functionTypeCheck(new P.FilteredElementList__iterable_closure(), {func: 1, ret: P.bool, args: [t2]}), [t2]), H.functionTypeCheck(new P.FilteredElementList__iterable_closure0(), {func: 1, ret: t3, args: [t2]}), [t2, t3]);
    },
    forEach$1: function(_, f) {
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [W.Element]});
      C.JSArray_methods.forEach$1(P.List_List$from(this.get$_html_common$_iterable(), false, W.Element), f);
    },
    $indexSet: function(_, index, value) {
      var t1;
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isElement");
      t1 = this.get$_html_common$_iterable();
      J.replaceWith$1$x(t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index)), value);
    },
    set$length: function(_, newLength) {
      var len = J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
      if (typeof len !== "number")
        return H.iae(len);
      if (newLength >= len)
        return;
      else if (newLength < 0)
        throw H.wrapException(P.ArgumentError$("Invalid list length"));
      this.removeRange$2(0, newLength, len);
    },
    add$1: function(_, value) {
      this._childNodes._this.appendChild(H.interceptedTypeCheck(value, "$isElement"));
    },
    contains$1: function(_, needle) {
      needle.get$parentNode(needle);
      return false;
    },
    removeRange$2: function(_, start, end) {
      var t1 = this.get$_html_common$_iterable();
      t1 = H.SkipIterable_SkipIterable(t1, start, H.getRuntimeTypeArgument(t1, "Iterable", 0));
      if (typeof end !== "number")
        return end.$sub();
      C.JSArray_methods.forEach$1(P.List_List$from(H.TakeIterable_TakeIterable(t1, end - start, H.getRuntimeTypeArgument(t1, "Iterable", 0)), true, null), new P.FilteredElementList_removeRange_closure());
    },
    get$length: function(_) {
      return J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
    },
    $index: function(_, index) {
      var t1 = this.get$_html_common$_iterable();
      return t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
    },
    get$iterator: function(_) {
      var t1 = P.List_List$from(this.get$_html_common$_iterable(), false, W.Element);
      return new J.ArrayIterator(t1, t1.length, [H.getTypeArgumentByIndex(t1, 0)]);
    },
    $asEfficientLengthIterable: function() {
      return [W.Element];
    },
    $asListMixin: function() {
      return [W.Element];
    },
    $asIterable: function() {
      return [W.Element];
    },
    $asList: function() {
      return [W.Element];
    }
  };
  P.FilteredElementList__iterable_closure.prototype = {
    call$1: function(n) {
      return !!J.getInterceptor$(H.interceptedTypeCheck(n, "$isNode")).$isElement;
    },
    $signature: 43
  };
  P.FilteredElementList__iterable_closure0.prototype = {
    call$1: function(n) {
      return H.interceptedTypeCast(H.interceptedTypeCheck(n, "$isNode"), "$isElement");
    },
    $signature: 74
  };
  P.FilteredElementList_removeRange_closure.prototype = {
    call$1: function(el) {
      return J.remove$0$ax(el);
    },
    $signature: 6
  };
  P._completeRequest_closure.prototype = {
    call$1: function(e) {
      this.completer.complete$1(0, H.assertSubtypeOfRuntimeType(new P._AcceptStructuredCloneDart2Js([], []).walk$1(this.request.result), this.T));
    },
    $signature: 13
  };
  P.KeyRange.prototype = {$isKeyRange: 1};
  P.ObjectStore.prototype = {
    add$1: function(receiver, value) {
      var request, e, stacktrace, t1, exception, error, stackTrace, replacement, key = null;
      try {
        request = null;
        if (key != null)
          request = this._indexed_db$_add$2(receiver, value, key);
        else
          request = this._indexed_db$_add$1(receiver, value);
        t1 = P._completeRequest(H.interceptedTypeCheck(request, "$isRequest"), null);
        return t1;
      } catch (exception) {
        e = H.unwrapException(exception);
        stacktrace = H.getTraceFromException(exception);
        error = e;
        stackTrace = stacktrace;
        if (error == null)
          error = new P.NullThrownError();
        t1 = $.Zone__current;
        if (t1 !== C.C__RootZone) {
          replacement = t1.errorCallback$2(error, stackTrace);
          if (replacement != null) {
            error = replacement.error;
            if (error == null)
              error = new P.NullThrownError();
            stackTrace = replacement.stackTrace;
          }
        }
        t1 = new P._Future($.Zone__current, [null]);
        t1._asyncCompleteError$2(error, stackTrace);
        return t1;
      }
    },
    _indexed_db$_add$2: function(receiver, value, key) {
      return receiver.add(new P._StructuredCloneDart2Js([], []).walk$1(value));
    },
    _indexed_db$_add$1: function($receiver, value) {
      return this._indexed_db$_add$2($receiver, value, null);
    }
  };
  P.OpenDBRequest.prototype = {$isOpenDBRequest: 1};
  P.Request.prototype = {$isRequest: 1};
  P.VersionChangeEvent.prototype = {
    get$target: function(receiver) {
      return receiver.target;
    }
  };
  P.JsObject.prototype = {
    $index: function(_, property) {
      if (typeof property !== "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      return P._convertToDart(this._js$_jsObject[property]);
    },
    $indexSet: function(_, property, value) {
      if (typeof property !== "string" && typeof property !== "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      this._js$_jsObject[property] = P._convertToJS(value);
    },
    get$hashCode: function(_) {
      return 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.JsObject && this._js$_jsObject === other._js$_jsObject;
    },
    toString$0: function(_) {
      var t1, exception;
      try {
        t1 = String(this._js$_jsObject);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        t1 = this.super$Object$toString(this);
        return t1;
      }
    },
    callMethod$2: function(method, args) {
      var t2,
        t1 = this._js$_jsObject;
      if (args == null)
        t2 = null;
      else {
        t2 = H.getTypeArgumentByIndex(args, 0);
        t2 = P.List_List$from(new H.MappedListIterable(args, H.functionTypeCheck(P.js___convertToJS$closure(), {func: 1, ret: null, args: [t2]}), [t2, null]), true, null);
      }
      return P._convertToDart(t1[method].apply(t1, t2));
    }
  };
  P.JsFunction.prototype = {};
  P.JsArray.prototype = {
    _checkIndex$1: function(index) {
      var _this = this,
        t1 = index < 0 || index >= _this.get$length(_this);
      if (t1)
        throw H.wrapException(P.RangeError$range(index, 0, _this.get$length(_this), null, null));
    },
    $index: function(_, index) {
      if (typeof index === "number" && index === C.JSInt_methods.toInt$0(index))
        this._checkIndex$1(index);
      return H.assertSubtypeOfRuntimeType(this.super$JsObject$$index(0, index), H.getTypeArgumentByIndex(this, 0));
    },
    $indexSet: function(_, index, value) {
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
      if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index))
        this._checkIndex$1(H.intTypeCheck(index));
      this.super$JsObject$$indexSet(0, index, value);
    },
    get$length: function(_) {
      var len = this._js$_jsObject.length;
      if (typeof len === "number" && len >>> 0 === len)
        return len;
      throw H.wrapException(P.StateError$("Bad JsArray length"));
    },
    set$length: function(_, $length) {
      this.super$JsObject$$indexSet(0, "length", $length);
    },
    add$1: function(_, value) {
      this.callMethod$2("push", [H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0))]);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._convertToJS_closure.prototype = {
    call$1: function(o) {
      var jsFunction;
      H.interceptedTypeCheck(o, "$isFunction");
      jsFunction = function(_call, f, captureThis) {
        return function() {
          return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunction, o, false);
      P._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
      return jsFunction;
    },
    $signature: 6
  };
  P._convertToJS_closure0.prototype = {
    call$1: function(o) {
      return new this.ctor(o);
    },
    $signature: 6
  };
  P._wrapToDart_closure.prototype = {
    call$1: function(o) {
      return new P.JsFunction(o);
    },
    $signature: 73
  };
  P._wrapToDart_closure0.prototype = {
    call$1: function(o) {
      return new P.JsArray(o, [null]);
    },
    $signature: 69
  };
  P._wrapToDart_closure1.prototype = {
    call$1: function(o) {
      return new P.JsObject(o);
    },
    $signature: 65
  };
  P._JsArray_JsObject_ListMixin.prototype = {};
  P._convertDataTree__convert.prototype = {
    call$1: function(o) {
      var t2, convertedMap, key, convertedList,
        t1 = this._convertedObjects;
      if (t1.containsKey$1(0, o))
        return t1.$index(0, o);
      t2 = J.getInterceptor$(o);
      if (!!t2.$isMap) {
        convertedMap = {};
        t1.$indexSet(0, o, convertedMap);
        for (t1 = J.get$iterator$ax(t2.get$keys(o)); t1.moveNext$0();) {
          key = t1.get$current(t1);
          convertedMap[key] = this.call$1(t2.$index(o, key));
        }
        return convertedMap;
      } else if (!!t2.$isIterable) {
        convertedList = [];
        t1.$indexSet(0, o, convertedList);
        C.JSArray_methods.addAll$1(convertedList, t2.map$1$1(o, this, null));
        return convertedList;
      } else
        return o;
    },
    $signature: 6
  };
  P._JSRandom.prototype = {
    nextInt$1: function(max) {
      if (max <= 0 || max > 4294967296)
        throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + max));
      return Math.random() * max >>> 0;
    }
  };
  P.Point.prototype = {
    toString$0: function(_) {
      return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return !!J.getInterceptor$(other).$isPoint && this.x == other.x && this.y == other.y;
    },
    get$hashCode: function(_) {
      var t1 = J.get$hashCode$(this.x),
        t2 = J.get$hashCode$(this.y);
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2));
    },
    $add: function(_, other) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.$ti;
      H.assertSubtype(other, "$isPoint", t1, "$asPoint");
      t2 = _this.x;
      t3 = other.x;
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t3 !== "number")
        return H.iae(t3);
      t4 = H.getTypeArgumentByIndex(_this, 0);
      t3 = H.assertSubtypeOfRuntimeType(t2 + t3, t4);
      t2 = _this.y;
      t5 = other.y;
      if (typeof t2 !== "number")
        return t2.$add();
      if (typeof t5 !== "number")
        return H.iae(t5);
      return new P.Point(t3, H.assertSubtypeOfRuntimeType(t2 + t5, t4), t1);
    }
  };
  P._RectangleBase.prototype = {
    get$right: function(_) {
      var _this = this,
        t1 = _this.get$left(_this),
        t2 = _this.get$width(_this);
      if (typeof t2 !== "number")
        return H.iae(t2);
      return H.assertSubtypeOfRuntimeType(t1 + t2, H.getTypeArgumentByIndex(_this, 0));
    },
    get$bottom: function(_) {
      var _this = this,
        t1 = _this.get$top(_this),
        t2 = _this.get$height(_this);
      if (typeof t2 !== "number")
        return H.iae(t2);
      return H.assertSubtypeOfRuntimeType(t1 + t2, H.getTypeArgumentByIndex(_this, 0));
    },
    toString$0: function(_) {
      var _this = this;
      return "Rectangle (" + H.S(_this.get$left(_this)) + ", " + H.S(_this.get$top(_this)) + ") " + H.S(_this.get$width(_this)) + " x " + H.S(_this.get$height(_this));
    },
    $eq: function(_, other) {
      var t1, t2, t3, t4, _this = this;
      if (other == null)
        return false;
      t1 = J.getInterceptor$(other);
      if (!!t1.$isRectangle)
        if (_this.get$left(_this) === t1.get$left(other))
          if (_this.get$top(_this) === t1.get$top(other)) {
            t2 = _this.get$left(_this);
            t3 = _this.get$width(_this);
            if (typeof t3 !== "number")
              return H.iae(t3);
            t4 = H.getTypeArgumentByIndex(_this, 0);
            if (H.assertSubtypeOfRuntimeType(t2 + t3, t4) === t1.get$right(other)) {
              t2 = _this.get$top(_this);
              t3 = _this.get$height(_this);
              if (typeof t3 !== "number")
                return H.iae(t3);
              t1 = H.assertSubtypeOfRuntimeType(t2 + t3, t4) === t1.get$bottom(other);
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t5, t6, _this = this,
        t1 = C.JSNumber_methods.get$hashCode(_this.get$left(_this)),
        t2 = C.JSNumber_methods.get$hashCode(_this.get$top(_this)),
        t3 = _this.get$left(_this),
        t4 = _this.get$width(_this);
      if (typeof t4 !== "number")
        return H.iae(t4);
      t5 = H.getTypeArgumentByIndex(_this, 0);
      t4 = C.JSNumber_methods.get$hashCode(H.assertSubtypeOfRuntimeType(t3 + t4, t5));
      t3 = _this.get$top(_this);
      t6 = _this.get$height(_this);
      if (typeof t6 !== "number")
        return H.iae(t6);
      t5 = C.JSNumber_methods.get$hashCode(H.assertSubtypeOfRuntimeType(t3 + t6, t5));
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2), t4), t5));
    },
    intersection$1: function(_, other) {
      var t1, x0, t2, t3, t4, x1, y0, y1, _this = this;
      H.assertSubtype(other, "$isRectangle", _this.$ti, "$asRectangle");
      t1 = other.left;
      x0 = Math.max(_this.get$left(_this), t1);
      t2 = _this.get$left(_this);
      t3 = _this.get$width(_this);
      if (typeof t3 !== "number")
        return H.iae(t3);
      t4 = other.width;
      if (typeof t4 !== "number")
        return H.iae(t4);
      x1 = Math.min(t2 + t3, t1 + t4);
      if (x0 <= x1) {
        t1 = other.top;
        y0 = Math.max(_this.get$top(_this), t1);
        t2 = _this.get$top(_this);
        t3 = _this.get$height(_this);
        if (typeof t3 !== "number")
          return H.iae(t3);
        t4 = other.height;
        if (typeof t4 !== "number")
          return H.iae(t4);
        y1 = Math.min(t2 + t3, t1 + t4);
        if (y0 <= y1) {
          t1 = H.getTypeArgumentByIndex(_this, 0);
          return P.Rectangle$(x0, y0, H.assertSubtypeOfRuntimeType(x1 - x0, t1), H.assertSubtypeOfRuntimeType(y1 - y0, t1), t1);
        }
      }
      return;
    },
    get$topLeft: function(_) {
      var _this = this;
      return new P.Point(_this.get$left(_this), _this.get$top(_this), _this.$ti);
    }
  };
  P.Rectangle.prototype = {
    get$left: function(receiver) {
      return this.left;
    },
    get$top: function(receiver) {
      return this.top;
    },
    get$width: function(receiver) {
      return this.width;
    },
    get$height: function(receiver) {
      return this.height;
    }
  };
  P.MutableRectangle.prototype = {
    get$width: function(_) {
      return this._width;
    },
    get$height: function(_) {
      return this._height;
    },
    set$_width: function(_, _width) {
      this._width = H.assertSubtypeOfRuntimeType(_width, H.getTypeArgumentByIndex(this, 0));
    },
    set$_height: function(_, _height) {
      this._height = H.assertSubtypeOfRuntimeType(_height, H.getTypeArgumentByIndex(this, 0));
    },
    $isRectangle: 1,
    get$left: function(receiver) {
      return this.left;
    },
    get$top: function(receiver) {
      return this.top;
    }
  };
  P.Length.prototype = {$isLength: 1};
  P.LengthList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isLength");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Length];
    },
    $asListMixin: function() {
      return [P.Length];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Length];
    },
    $isList: 1,
    $asList: function() {
      return [P.Length];
    },
    $asImmutableListMixin: function() {
      return [P.Length];
    }
  };
  P.Number.prototype = {$isNumber: 1};
  P.NumberList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isNumber");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Number];
    },
    $asListMixin: function() {
      return [P.Number];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Number];
    },
    $isList: 1,
    $asList: function() {
      return [P.Number];
    },
    $asImmutableListMixin: function() {
      return [P.Number];
    }
  };
  P.PointList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.StringList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.stringTypeCheck(value);
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.String];
    },
    $asListMixin: function() {
      return [P.String];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.String];
    },
    $isList: 1,
    $asList: function() {
      return [P.String];
    },
    $asImmutableListMixin: function() {
      return [P.String];
    }
  };
  P.AttributeClassSet.prototype = {
    readClasses$0: function() {
      var t1, t2, _i, trimmed,
        classname = this._svg$_element.getAttribute("class"),
        s = P.LinkedHashSet_LinkedHashSet(null, null, P.String);
      if (classname == null)
        return s;
      for (t1 = classname.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        trimmed = J.trim$0$s(t1[_i]);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    },
    writeClasses$1: function(s) {
      this._svg$_element.setAttribute("class", s.join$1(0, " "));
    }
  };
  P.SvgElement.prototype = {
    get$classes: function(receiver) {
      return new P.AttributeClassSet(receiver);
    },
    get$children: function(receiver) {
      return new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
    }
  };
  P.Transform.prototype = {$isTransform: 1};
  P.TransformList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isTransform");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [P.Transform];
    },
    $asListMixin: function() {
      return [P.Transform];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [P.Transform];
    },
    $isList: 1,
    $asList: function() {
      return [P.Transform];
    },
    $asImmutableListMixin: function() {
      return [P.Transform];
    }
  };
  P._LengthList_Interceptor_ListMixin.prototype = {};
  P._LengthList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._NumberList_Interceptor_ListMixin.prototype = {};
  P._NumberList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._StringList_Interceptor_ListMixin.prototype = {};
  P._StringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._TransformList_Interceptor_ListMixin.prototype = {};
  P._TransformList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P.AudioBuffer.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.AudioParamMap.prototype = {
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
    },
    forEach$1: function(receiver, f) {
      var entries, entry;
      H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
      entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], [P.String]);
      this.forEach$1(receiver, new P.AudioParamMap_keys_closure(keys));
      return keys;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    $asMapMixin: function() {
      return [P.String, null];
    },
    $isMap: 1,
    $asMap: function() {
      return [P.String, null];
    }
  };
  P.AudioParamMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return C.JSArray_methods.add$1(this.keys, k);
    },
    $signature: 18
  };
  P.AudioTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.BaseAudioContext.prototype = {};
  P.OfflineAudioContext.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P._AudioParamMap_Interceptor_MapMixin.prototype = {};
  P.SqlResultSetRowList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return P.convertNativeToDart_Dictionary(receiver.item(index));
    },
    $indexSet: function(receiver, index, value) {
      H.intTypeCheck(index);
      H.interceptedTypeCheck(value, "$isMap");
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $asEfficientLengthIterable: function() {
      return [[P.Map,,,]];
    },
    $asListMixin: function() {
      return [[P.Map,,,]];
    },
    $isIterable: 1,
    $asIterable: function() {
      return [[P.Map,,,]];
    },
    $isList: 1,
    $asList: function() {
      return [[P.Map,,,]];
    },
    $asImmutableListMixin: function() {
      return [[P.Map,,,]];
    }
  };
  P._SqlResultSetRowList_Interceptor_ListMixin.prototype = {};
  P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  G.ThrowingSlowComponentLoader.prototype = {
    loadNextToLocation$1$2: function(_, __) {
      throw H.wrapException(P.UnsupportedError$("You are using runApp or runAppAsync, which does not support loading a component with SlowComponentLoader. Please migrate this code to use ComponentLoader instead."));
    },
    $isSlowComponentLoader: 1
  };
  G.createRandomAppId_char.prototype = {
    call$0: function() {
      return H.Primitives_stringFromCharCode(97 + this.random.nextInt$1(26));
    },
    $signature: 64
  };
  Y._Injector$minimalApp.prototype = {
    injectFromSelfOptional$2: function(token, orElse) {
      var t1, _this = this;
      if (token === C.Type_SlowComponentLoader_qxe) {
        t1 = _this._field0;
        return t1 == null ? _this._field0 = new G.ThrowingSlowComponentLoader() : t1;
      }
      if (token === C.Type_ComponentLoader_7xV) {
        t1 = _this._field1;
        return t1 == null ? _this._field1 = new M.ComponentLoader() : t1;
      }
      if (token === C.OpaqueToken_APP_ID) {
        t1 = _this._field2;
        return t1 == null ? _this._field2 = G.createRandomAppId() : t1;
      }
      if (token === C.Type_DomSanitizationService_cKo) {
        t1 = _this._field3;
        return t1 == null ? _this._field3 = C.C_DomSanitizationServiceImpl : t1;
      }
      if (token === C.Type_SanitizationService_bRS)
        return _this.$get$1(0, C.Type_DomSanitizationService_cKo);
      if (token === C.Type_ExceptionHandler_qBE) {
        t1 = _this._field5;
        return t1 == null ? _this._field5 = new T.BrowserExceptionHandler() : t1;
      }
      if (token === C.Type_Injector_aJC)
        return _this;
      return orElse;
    }
  };
  G.appInjector_closure.prototype = {
    call$0: function() {
      return this._box_0.applicationRef;
    },
    $signature: 63
  };
  G.appInjector_closure0.prototype = {
    call$0: function() {
      return $.appViewUtils;
    },
    $signature: 62
  };
  G.appInjector_closure1.prototype = {
    call$0: function() {
      return this.ngZone;
    },
    $signature: 51
  };
  G.appInjector_closure2.prototype = {
    call$0: function() {
      var t1 = new D.Testability(this.ngZone, H.setRuntimeTypeInfo([], [P.Function]));
      t1._watchAngularEvents$0();
      return t1;
    },
    $signature: 61
  };
  G.appInjector_closure3.prototype = {
    call$0: function() {
      var t1 = this.ngZone,
        t2 = this.userInjector;
      this._box_0.applicationRef = Y.ApplicationRef$_(t1, H.interceptedTypeCheck(t2.$get$1(0, C.Type_ExceptionHandler_qBE), "$isExceptionHandler"), t2);
      $.appViewUtils = new Q.AppViewUtils(H.stringTypeCheck(t2.$get$1(0, H.assertSubtype(C.OpaqueToken_APP_ID, "$isOpaqueToken", [P.String], "$asOpaqueToken"))), new L.EventManager(t1), H.interceptedTypeCheck(t2.$get$1(0, C.Type_SanitizationService_bRS), "$isSanitizationService"));
      return t2;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 60
  };
  G._LazyInjector.prototype = {
    injectFromSelfOptional$2: function(token, orElse) {
      var result = this._providers.$index(0, token);
      if (result == null) {
        if (token === C.Type_Injector_aJC)
          return this;
        return orElse;
      }
      return result.call$0();
    }
  };
  Y.NgClass.prototype = {
    set$initialClasses: function(v) {
      var t1, _this = this;
      _this._applyInitialClasses$1(true);
      t1 = H.setRuntimeTypeInfo(v.split(" "), [P.String]);
      _this.set$_initialClasses(t1);
      _this._applyInitialClasses$1(false);
      _this._applyClasses$2(_this._rawClass, false);
    },
    set$rawClass: function(v) {
      var _this = this;
      _this._applyClasses$2(_this._rawClass, true);
      _this._applyInitialClasses$1(false);
      _this._rawClass = v;
      _this._keyValueDiffer = _this._iterableDiffer = null;
      if (v != null)
        if (!!J.getInterceptor$(v).$isIterable)
          _this._iterableDiffer = R.DefaultIterableDiffer$(null);
        else
          _this._keyValueDiffer = new N.DefaultKeyValueDiffer(new H.JsLinkedHashMap([null, N.KeyValueChangeRecord]));
    },
    ngDoCheck$0: function() {
      var changes, _this = this,
        t1 = _this._iterableDiffer;
      if (t1 != null) {
        changes = t1.diff$1(H.assertSubtypeOfRuntimeType(_this._rawClass, [P.Iterable, P.Object]));
        if (changes != null)
          _this._applyIterableChanges$1(changes);
      }
      t1 = _this._keyValueDiffer;
      if (t1 != null) {
        changes = t1.diff$1(H.assertSubtypeOfRuntimeType(_this._rawClass, [P.Map, P.Object, P.Object]));
        if (changes != null)
          _this._applyKeyValueChanges$1(changes);
      }
    },
    _applyKeyValueChanges$1: function(changes) {
      changes.forEachAddedItem$1(new Y.NgClass__applyKeyValueChanges_closure(this));
      changes.forEachChangedItem$1(new Y.NgClass__applyKeyValueChanges_closure0(this));
      changes.forEachRemovedItem$1(new Y.NgClass__applyKeyValueChanges_closure1(this));
    },
    _applyIterableChanges$1: function(changes) {
      changes.forEachAddedItem$1(new Y.NgClass__applyIterableChanges_closure(this));
      changes.forEachRemovedItem$1(new Y.NgClass__applyIterableChanges_closure0(this));
    },
    _applyInitialClasses$1: function(isCleanup) {
      var t1, t2, t3, _i;
      for (t1 = this._initialClasses, t2 = t1.length, t3 = !isCleanup, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        this._toggleClass$2(t1[_i], t3);
    },
    _applyClasses$2: function(rawClassVal, isCleanup) {
      var t1, len, t2, i;
      if (rawClassVal != null) {
        t1 = J.getInterceptor$(rawClassVal);
        if (!!t1.$isList) {
          len = t1.get$length(rawClassVal);
          if (typeof len !== "number")
            return H.iae(len);
          t2 = !isCleanup;
          i = 0;
          for (; i < len; ++i)
            this._toggleClass$2(H.stringTypeCheck(t1.$index(rawClassVal, i)), t2);
        } else if (!!t1.$isIterable)
          for (t1 = t1.get$iterator(rawClassVal), t2 = !isCleanup; t1.moveNext$0();)
            this._toggleClass$2(H.stringTypeCheck(t1.get$current(t1)), t2);
        else {
          t2 = P.Object;
          t1.forEach$1(H.subtypeCast(rawClassVal, "$isMap", [t2, t2], "$asMap"), new Y.NgClass__applyClasses_closure(this, isCleanup));
        }
      }
    },
    _toggleClass$2: function(className, enabled) {
      var classList, t1, classes, len, i;
      className = J.trim$0$s(className);
      if (className.length === 0)
        return;
      classList = J.get$classes$x(this._ngEl);
      if (C.JSString_methods.contains$1(className, " ")) {
        t1 = $.NgClass__separator;
        classes = C.JSString_methods.split$1(className, t1 == null ? $.NgClass__separator = P.RegExp_RegExp("\\s+", true, false) : t1);
        for (len = classes.length, i = 0; i < len; ++i) {
          H.boolConversionCheck(enabled);
          t1 = classes.length;
          if (enabled) {
            if (i >= t1)
              return H.ioore(classes, i);
            classList.add$1(0, classes[i]);
          } else {
            if (i >= t1)
              return H.ioore(classes, i);
            classList.remove$1(0, classes[i]);
          }
        }
      } else if (H.boolConversionCheck(enabled))
        classList.add$1(0, className);
      else
        classList.remove$1(0, className);
    },
    set$_initialClasses: function(_initialClasses) {
      this._initialClasses = H.assertSubtype(_initialClasses, "$isList", [P.String], "$asList");
    }
  };
  Y.NgClass__applyKeyValueChanges_closure.prototype = {
    call$1: function(record) {
      this.$this._toggleClass$2(H.stringTypeCheck(record.key), H.boolTypeCheck(record.currentValue));
    },
    $signature: 28
  };
  Y.NgClass__applyKeyValueChanges_closure0.prototype = {
    call$1: function(record) {
      this.$this._toggleClass$2(H.stringTypeCheck(record.key), H.boolTypeCheck(record.currentValue));
    },
    $signature: 28
  };
  Y.NgClass__applyKeyValueChanges_closure1.prototype = {
    call$1: function(record) {
      if (record.previousValue != null)
        this.$this._toggleClass$2(H.stringTypeCheck(record.key), false);
    },
    $signature: 28
  };
  Y.NgClass__applyIterableChanges_closure.prototype = {
    call$1: function(record) {
      this.$this._toggleClass$2(H.stringTypeCheck(record.item), true);
    },
    $signature: 29
  };
  Y.NgClass__applyIterableChanges_closure0.prototype = {
    call$1: function(record) {
      this.$this._toggleClass$2(H.stringTypeCheck(record.item), false);
    },
    $signature: 29
  };
  Y.NgClass__applyClasses_closure.prototype = {
    call$2: function(className, expVal) {
      if (expVal != null)
        this.$this._toggleClass$2(H.stringTypeCheck(className), !this.isCleanup);
    },
    $signature: 22
  };
  R.NgFor.prototype = {
    set$ngForOf: function(value) {
      var _this = this;
      H.assertSubtype(value, "$isIterable", [P.Object], "$asIterable");
      _this.set$_ngForOf(value);
      if (_this._differ == null && value != null)
        _this._differ = R.DefaultIterableDiffer$(_this._ngForTrackBy);
    },
    ngDoCheck$0: function() {
      var changes,
        t1 = this._differ;
      if (t1 != null) {
        changes = t1.diff$1(this._ngForOf);
        if (changes != null)
          this._ng_for$_applyChanges$1(changes);
      }
    },
    _ng_for$_applyChanges$1: function(changes) {
      var i, t1, t2, t3, len,
        insertTuples = H.setRuntimeTypeInfo([], [R._RecordViewTuple]);
      changes.forEachOperation$1(new R.NgFor__applyChanges_closure(this, insertTuples));
      for (i = 0; i < insertTuples.length; ++i) {
        t1 = insertTuples[i];
        t2 = t1.record;
        t3 = t2.item;
        t1 = t1.view.viewData.locals;
        t1.$indexSet(0, "$implicit", t3);
        t3 = t2.currentIndex;
        t3.toString;
        if (typeof t3 !== "number")
          return t3.$and();
        t1.$indexSet(0, "even", (t3 & 1) === 0);
        t2 = t2.currentIndex;
        t2.toString;
        if (typeof t2 !== "number")
          return t2.$and();
        t1.$indexSet(0, "odd", (t2 & 1) === 1);
      }
      for (t1 = this._ng_for$_viewContainer, len = t1.get$length(t1), t2 = len - 1, i = 0; i < len; ++i) {
        t3 = t1.nestedViews;
        if (i >= t3.length)
          return H.ioore(t3, i);
        t3 = t3[i].viewData.locals;
        t3.$indexSet(0, "first", i === 0);
        t3.$indexSet(0, "last", i === t2);
        t3.$indexSet(0, "index", i);
        t3.$indexSet(0, "count", len);
      }
      changes.forEachIdentityChange$1(new R.NgFor__applyChanges_closure0(this));
    },
    set$_ngForOf: function(_ngForOf) {
      this._ngForOf = H.assertSubtype(_ngForOf, "$isIterable", [P.Object], "$asIterable");
    },
    set$_ngForTrackBy: function(_ngForTrackBy) {
      this._ngForTrackBy = H.functionTypeCheck(_ngForTrackBy, {func: 1, ret: P.Object, args: [P.int,,]});
    }
  };
  R.NgFor__applyChanges_closure.prototype = {
    call$3: function(item, adjustedPreviousIndex, currentIndex) {
      var t1, t2, viewRef, view, _this = this;
      if (item.previousIndex == null) {
        t1 = _this.$this;
        t2 = t1._ng_for$_viewContainer;
        t2.toString;
        viewRef = t1._ng_for$_templateRef.createEmbeddedView$0();
        t2.insert$2(0, viewRef, currentIndex);
        C.JSArray_methods.add$1(_this.insertTuples, new R._RecordViewTuple(viewRef, item));
      } else {
        t1 = _this.$this._ng_for$_viewContainer;
        if (currentIndex == null)
          t1.remove$1(0, adjustedPreviousIndex);
        else {
          t2 = t1.nestedViews;
          view = (t2 && C.JSArray_methods).$index(t2, adjustedPreviousIndex);
          t1.move$2(view, currentIndex);
          C.JSArray_methods.add$1(_this.insertTuples, new R._RecordViewTuple(view, item));
        }
      }
    },
    $signature: 58
  };
  R.NgFor__applyChanges_closure0.prototype = {
    call$1: function(record) {
      var t1 = record.currentIndex,
        t2 = this.$this._ng_for$_viewContainer.nestedViews,
        viewRef = (t2 && C.JSArray_methods).$index(t2, t1);
      t1 = record.item;
      viewRef.viewData.locals.$indexSet(0, "$implicit", t1);
    },
    $signature: 29
  };
  R._RecordViewTuple.prototype = {};
  K.NgIf.prototype = {
    set$ngIf: function(newCondition) {
      var t1, _this = this;
      newCondition = newCondition === true;
      t1 = _this._prevCondition;
      if (t1 === newCondition)
        return;
      t1 = _this._viewContainer;
      if (newCondition)
        t1.createEmbeddedView$1(_this._templateRef);
      else
        t1.clear$0(0);
      _this._prevCondition = newCondition;
    }
  };
  K.InvalidPipeArgumentException.prototype = {};
  K.TransitionalAppHost.prototype = {};
  Y.ApplicationRef.prototype = {
    ApplicationRef$_$3: function(_ngZone, _exceptionHandler, _injector) {
      var _this = this,
        t1 = _this._application_ref$_ngZone,
        t2 = t1._ng_zone$_onError;
      _this.set$_onErrorSub(new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new Y.ApplicationRef$__closure(_this)));
      t1 = t1._onMicrotaskEmpty;
      _this.set$_onMicroSub(new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new Y.ApplicationRef$__closure0(_this)));
    },
    bootstrap$1$1: function(componentFactory, $T) {
      var t1 = [D.ComponentRef, $T];
      return H.assertSubtypeOfRuntimeType(this.run$1$1(new Y.ApplicationRef_bootstrap_closure(this, H.assertSubtype(componentFactory, "$isComponentFactory", [$T], "$asComponentFactory"), $T), t1), t1);
    },
    _loadedRootComponent$2: function(component, node) {
      var t1, t2, t3, t4, _this = this;
      H.assertSubtype(component, "$isComponentRef", [-1], "$asComponentRef");
      C.JSArray_methods.add$1(_this._rootComponents, component);
      t1 = {func: 1, ret: -1};
      t2 = H.functionTypeCheck(new Y.ApplicationRef__loadedRootComponent_closure(_this, component, node), t1);
      t3 = component._parentView;
      t4 = t3.viewData;
      if (t4._onDestroyCallbacks == null)
        t4.set$_onDestroyCallbacks(H.setRuntimeTypeInfo([], [t1]));
      t1 = t4._onDestroyCallbacks;
      (t1 && C.JSArray_methods).add$1(t1, t2);
      C.JSArray_methods.add$1(_this._changeDetectors, t3);
      _this.tick$0();
    },
    _destroyedRootComponent$1: function(component) {
      H.assertSubtype(component, "$isComponentRef", [-1], "$asComponentRef");
      if (!C.JSArray_methods.remove$1(this._rootComponents, component))
        return;
      C.JSArray_methods.remove$1(this._changeDetectors, component._parentView);
    },
    set$_onErrorSub: function(_onErrorSub) {
      H.assertSubtype(_onErrorSub, "$isStreamSubscription", [-1], "$asStreamSubscription");
    },
    set$_onMicroSub: function(_onMicroSub) {
      H.assertSubtype(_onMicroSub, "$isStreamSubscription", [-1], "$asStreamSubscription");
    }
  };
  Y.ApplicationRef$__closure.prototype = {
    call$1: function(e) {
      H.interceptedTypeCheck(e, "$isNgZoneError");
      this.$this._exceptionHandler.call$3(e.error, new P._StringStackTrace(C.JSArray_methods.join$1(e.stackTrace, "\n")), null);
    },
    $signature: 125
  };
  Y.ApplicationRef$__closure0.prototype = {
    call$1: function(_) {
      var t1 = this.$this,
        t2 = t1._application_ref$_ngZone;
      t2.toString;
      t1 = H.functionTypeCheck(t1.get$tick(), {func: 1, ret: -1});
      t2._innerZone.runGuarded$1(t1);
    },
    $signature: 10
  };
  Y.ApplicationRef_bootstrap_closure.prototype = {
    call$0: function() {
      var newElement, replacement, t5, testability,
        t1 = this.componentFactory,
        t2 = this.$this,
        t3 = t2._injector,
        component = t1.create$1(0, t3),
        t4 = document,
        existing = t4.querySelector(t1.selector);
      if (existing != null) {
        newElement = component._nativeElement;
        t1 = newElement.id;
        if (t1 == null || t1.length === 0)
          newElement.id = existing.id;
        J.replaceWith$1$x(existing, newElement);
        t1 = newElement;
        replacement = t1;
      } else {
        t1 = t4.body;
        t4 = component._nativeElement;
        t1.appendChild(t4);
        t1 = t4;
        replacement = null;
      }
      t4 = component._parentView;
      t5 = component._nodeIndex;
      testability = H.interceptedTypeCheck(new G.ElementInjector(t4, t5, C.EmptyInjector_null).$get$2(0, C.Type_Testability_h8g, null), "$isTestability");
      if (testability != null)
        H.interceptedTypeCheck(t3.$get$1(0, C.Type_TestabilityRegistry_IMm), "$isTestabilityRegistry")._applications.$indexSet(0, t1, testability);
      t2._loadedRootComponent$2(component, replacement);
      return component;
    },
    $signature: function() {
      return {func: 1, ret: [D.ComponentRef, this.T]};
    }
  };
  Y.ApplicationRef__loadedRootComponent_closure.prototype = {
    call$0: function() {
      this.$this._destroyedRootComponent$1(this.component);
      var t1 = this.node;
      if (t1 != null)
        J.remove$0$ax(t1);
    },
    $signature: 0
  };
  S.ChangeDetectorRef.prototype = {};
  R.DefaultIterableDiffer.prototype = {
    get$length: function(_) {
      return this._default_iterable_differ$_length;
    },
    forEachOperation$1: function(fn) {
      var nextIt, nextRemove, t1, moveOffsets, sizeDeficit, addRemoveOffset, t2, t3, record, adjPreviousIndex, currentIndex, localMovePreviousIndex, localCurrentIndex, i, offset, j, index, previousIndex, _null = null;
      H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord, P.int, P.int]});
      nextIt = this._itHead;
      nextRemove = this._default_iterable_differ$_removalsHead;
      t1 = [P.int];
      moveOffsets = _null;
      sizeDeficit = moveOffsets;
      addRemoveOffset = 0;
      while (true) {
        t2 = nextIt == null;
        if (!(!t2 || nextRemove != null))
          break;
        if (nextRemove != null)
          if (!t2) {
            t2 = nextIt.currentIndex;
            t3 = R._getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets);
            if (typeof t2 !== "number")
              return t2.$lt();
            if (typeof t3 !== "number")
              return H.iae(t3);
            t3 = t2 < t3;
            t2 = t3;
          } else
            t2 = false;
        else
          t2 = true;
        record = t2 ? nextIt : nextRemove;
        adjPreviousIndex = R._getPreviousIndex(record, addRemoveOffset, moveOffsets);
        currentIndex = record.currentIndex;
        if (record == nextRemove) {
          --addRemoveOffset;
          nextRemove = nextRemove._nextRemoved;
        } else {
          nextIt = nextIt._default_iterable_differ$_next;
          if (record.previousIndex == null)
            ++addRemoveOffset;
          else {
            if (moveOffsets == null)
              moveOffsets = H.setRuntimeTypeInfo([], t1);
            if (typeof adjPreviousIndex !== "number")
              return adjPreviousIndex.$sub();
            localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;
            if (typeof currentIndex !== "number")
              return currentIndex.$sub();
            localCurrentIndex = currentIndex - addRemoveOffset;
            if (localMovePreviousIndex !== localCurrentIndex) {
              for (i = 0; i < localMovePreviousIndex; ++i) {
                t2 = moveOffsets.length;
                if (i < t2)
                  offset = moveOffsets[i];
                else {
                  if (t2 > i)
                    C.JSArray_methods.$indexSet(moveOffsets, i, 0);
                  else {
                    sizeDeficit = i - t2 + 1;
                    for (j = 0; j < sizeDeficit; ++j)
                      C.JSArray_methods.add$1(moveOffsets, _null);
                    C.JSArray_methods.$indexSet(moveOffsets, i, 0);
                  }
                  offset = 0;
                }
                if (typeof offset !== "number")
                  return offset.$add();
                index = offset + i;
                if (localCurrentIndex <= index && index < localMovePreviousIndex)
                  C.JSArray_methods.$indexSet(moveOffsets, i, offset + 1);
              }
              previousIndex = record.previousIndex;
              t2 = moveOffsets.length;
              if (typeof previousIndex !== "number")
                return previousIndex.$sub();
              sizeDeficit = previousIndex - t2 + 1;
              for (j = 0; j < sizeDeficit; ++j)
                C.JSArray_methods.add$1(moveOffsets, _null);
              C.JSArray_methods.$indexSet(moveOffsets, previousIndex, localCurrentIndex - localMovePreviousIndex);
            }
          }
        }
        if (adjPreviousIndex != currentIndex)
          fn.call$3(record, adjPreviousIndex, currentIndex);
      }
    },
    forEachAddedItem$1: function(fn) {
      var record;
      H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord]});
      for (record = this._default_iterable_differ$_additionsHead; record != null; record = record._default_iterable_differ$_nextAdded)
        fn.call$1(record);
    },
    forEachRemovedItem$1: function(fn) {
      var record;
      H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord]});
      for (record = this._default_iterable_differ$_removalsHead; record != null; record = record._nextRemoved)
        fn.call$1(record);
    },
    forEachIdentityChange$1: function(fn) {
      var record;
      H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord]});
      for (record = this._identityChangesHead; record != null; record = record._nextIdentityChange)
        fn.call$1(record);
    },
    diff$1: function(collection) {
      H.assertSubtype(collection, "$isIterable", [P.Object], "$asIterable");
      if (collection != null) {
        if (!J.getInterceptor$(collection).$isIterable)
          throw H.wrapException(P.StateError$("Error trying to diff '" + H.S(collection) + "'"));
      } else
        collection = C.List_empty;
      return this.check$1(0, collection) ? this : null;
    },
    check$1: function(_, collection) {
      var t1, t2, t3, t4, item, itemTrackBy, record, index, _this = this, _box_0 = {};
      H.assertSubtype(collection, "$isIterable", [P.Object], "$asIterable");
      _this._default_iterable_differ$_reset$0();
      _box_0.record = _this._itHead;
      _box_0.mayBeDirty = false;
      _box_0.itemTrackBy = _box_0.index = null;
      t1 = J.getInterceptor$(collection);
      if (!!t1.$isList) {
        _this._default_iterable_differ$_length = t1.get$length(collection);
        t2 = _box_0.index = 0;
        t3 = _this._trackByFn;
        while (true) {
          t4 = _this._default_iterable_differ$_length;
          if (typeof t4 !== "number")
            return H.iae(t4);
          if (!(t2 < t4))
            break;
          item = t1.$index(collection, t2);
          itemTrackBy = _box_0.itemTrackBy = t3.call$2(_box_0.index, item);
          t2 = _box_0.record;
          if (t2 != null) {
            t4 = t2.trackById;
            t4 = t4 == null ? itemTrackBy != null : t4 !== itemTrackBy;
          } else
            t4 = true;
          if (t4) {
            t2 = _box_0.record = _this._mismatch$4(t2, item, itemTrackBy, _box_0.index);
            _box_0.mayBeDirty = true;
          } else {
            if (_box_0.mayBeDirty) {
              record = _this._verifyReinsertion$4(t2, item, itemTrackBy, _box_0.index);
              _box_0.record = record;
              t2 = record;
            }
            t4 = t2.item;
            if (t4 == null ? item != null : t4 !== item) {
              t2.item = item;
              t4 = _this._identityChangesTail;
              if (t4 == null)
                _this._identityChangesTail = _this._identityChangesHead = t2;
              else
                _this._identityChangesTail = t4._nextIdentityChange = t2;
            }
          }
          _box_0.record = t2._default_iterable_differ$_next;
          t2 = _box_0.index;
          if (typeof t2 !== "number")
            return t2.$add();
          index = t2 + 1;
          _box_0.index = index;
          t2 = index;
        }
      } else {
        _box_0.index = 0;
        t1.forEach$1(collection, new R.DefaultIterableDiffer_check_closure(_box_0, _this));
        _this._default_iterable_differ$_length = _box_0.index;
      }
      _this._truncate$1(_box_0.record);
      _this.set$_collection(collection);
      return _this.get$isDirty();
    },
    get$isDirty: function() {
      var _this = this;
      return _this._default_iterable_differ$_additionsHead != null || _this._movesHead != null || _this._default_iterable_differ$_removalsHead != null || _this._identityChangesHead != null;
    },
    _default_iterable_differ$_reset$0: function() {
      var record, record0, nextRecord, _this = this;
      if (_this.get$isDirty()) {
        for (record = _this._previousItHead = _this._itHead; record != null; record = record0) {
          record0 = record._default_iterable_differ$_next;
          record._default_iterable_differ$_nextPrevious = record0;
        }
        for (record = _this._default_iterable_differ$_additionsHead; record != null; record = record._default_iterable_differ$_nextAdded)
          record.previousIndex = record.currentIndex;
        _this._default_iterable_differ$_additionsHead = _this._default_iterable_differ$_additionsTail = null;
        for (record = _this._movesHead; record != null; record = nextRecord) {
          record.previousIndex = record.currentIndex;
          nextRecord = record._nextMoved;
        }
        _this._identityChangesHead = _this._identityChangesTail = _this._default_iterable_differ$_removalsHead = _this._removalsTail = _this._movesHead = _this._movesTail = null;
      }
    },
    _mismatch$4: function(record, item, itemTrackBy, index) {
      var previousRecord, t1, _this = this;
      if (record == null)
        previousRecord = _this._itTail;
      else {
        previousRecord = record._default_iterable_differ$_prev;
        _this._addToRemovals$1(_this._unlink$1(record));
      }
      t1 = _this._linkedRecords;
      record = t1 == null ? null : t1.$get$2(0, itemTrackBy, index);
      if (record != null) {
        t1 = record.item;
        if (t1 == null ? item != null : t1 !== item)
          _this._addIdentityChange$2(record, item);
        _this._unlink$1(record);
        _this._insertAfter$3(record, previousRecord, index);
        _this._addToMoves$2(record, index);
      } else {
        t1 = _this._unlinkedRecords;
        record = t1 == null ? null : t1.$get$1(0, itemTrackBy);
        if (record != null) {
          t1 = record.item;
          if (t1 == null ? item != null : t1 !== item)
            _this._addIdentityChange$2(record, item);
          _this._reinsertAfter$3(record, previousRecord, index);
        } else {
          record = new R.CollectionChangeRecord(item, itemTrackBy);
          _this._insertAfter$3(record, previousRecord, index);
          t1 = _this._default_iterable_differ$_additionsTail;
          if (t1 == null)
            _this._default_iterable_differ$_additionsTail = _this._default_iterable_differ$_additionsHead = record;
          else
            _this._default_iterable_differ$_additionsTail = t1._default_iterable_differ$_nextAdded = record;
        }
      }
      return record;
    },
    _verifyReinsertion$4: function(record, item, itemTrackBy, index) {
      var t1 = this._unlinkedRecords,
        reinsertRecord = t1 == null ? null : t1.$get$1(0, itemTrackBy);
      if (reinsertRecord != null)
        record = this._reinsertAfter$3(reinsertRecord, record._default_iterable_differ$_prev, index);
      else if (record.currentIndex != index) {
        record.currentIndex = index;
        this._addToMoves$2(record, index);
      }
      return record;
    },
    _truncate$1: function(record) {
      var nextRecord, t1, _this = this;
      for (; record != null; record = nextRecord) {
        nextRecord = record._default_iterable_differ$_next;
        _this._addToRemovals$1(_this._unlink$1(record));
      }
      t1 = _this._unlinkedRecords;
      if (t1 != null)
        t1._default_iterable_differ$_map.clear$0(0);
      t1 = _this._default_iterable_differ$_additionsTail;
      if (t1 != null)
        t1._default_iterable_differ$_nextAdded = null;
      t1 = _this._movesTail;
      if (t1 != null)
        t1._nextMoved = null;
      t1 = _this._itTail;
      if (t1 != null)
        t1._default_iterable_differ$_next = null;
      t1 = _this._removalsTail;
      if (t1 != null)
        t1._nextRemoved = null;
      t1 = _this._identityChangesTail;
      if (t1 != null)
        t1._nextIdentityChange = null;
    },
    _reinsertAfter$3: function(record, prevRecord, index) {
      var prev, next, _this = this,
        t1 = _this._unlinkedRecords;
      if (t1 != null)
        t1.remove$1(0, record);
      prev = record._prevRemoved;
      next = record._nextRemoved;
      if (prev == null)
        _this._default_iterable_differ$_removalsHead = next;
      else
        prev._nextRemoved = next;
      if (next == null)
        _this._removalsTail = prev;
      else
        next._prevRemoved = prev;
      _this._insertAfter$3(record, prevRecord, index);
      _this._addToMoves$2(record, index);
      return record;
    },
    _insertAfter$3: function(record, prevRecord, index) {
      var _this = this,
        t1 = prevRecord == null,
        next = t1 ? _this._itHead : prevRecord._default_iterable_differ$_next;
      record._default_iterable_differ$_next = next;
      record._default_iterable_differ$_prev = prevRecord;
      if (next == null)
        _this._itTail = record;
      else
        next._default_iterable_differ$_prev = record;
      if (t1)
        _this._itHead = record;
      else
        prevRecord._default_iterable_differ$_next = record;
      t1 = _this._linkedRecords;
      (t1 == null ? _this._linkedRecords = new R._DuplicateMap(P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, R._DuplicateItemRecordList)) : t1).put$1(0, record);
      record.currentIndex = index;
      return record;
    },
    _unlink$1: function(record) {
      var prev, next,
        t1 = this._linkedRecords;
      if (t1 != null)
        t1.remove$1(0, record);
      prev = record._default_iterable_differ$_prev;
      next = record._default_iterable_differ$_next;
      if (prev == null)
        this._itHead = next;
      else
        prev._default_iterable_differ$_next = next;
      if (next == null)
        this._itTail = prev;
      else
        next._default_iterable_differ$_prev = prev;
      return record;
    },
    _addToMoves$2: function(record, toIndex) {
      var t1, _this = this;
      if (record.previousIndex == toIndex)
        return record;
      t1 = _this._movesTail;
      if (t1 == null)
        _this._movesTail = _this._movesHead = record;
      else
        _this._movesTail = t1._nextMoved = record;
      return record;
    },
    _addToRemovals$1: function(record) {
      var _this = this,
        t1 = _this._unlinkedRecords;
      (t1 == null ? _this._unlinkedRecords = new R._DuplicateMap(P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, R._DuplicateItemRecordList)) : t1).put$1(0, record);
      record._nextRemoved = record.currentIndex = null;
      t1 = _this._removalsTail;
      if (t1 == null) {
        _this._removalsTail = _this._default_iterable_differ$_removalsHead = record;
        record._prevRemoved = null;
      } else {
        record._prevRemoved = t1;
        _this._removalsTail = t1._nextRemoved = record;
      }
      return record;
    },
    _addIdentityChange$2: function(record, item) {
      var t1, _this = this;
      record.item = item;
      t1 = _this._identityChangesTail;
      if (t1 == null)
        _this._identityChangesTail = _this._identityChangesHead = record;
      else
        _this._identityChangesTail = t1._nextIdentityChange = record;
      return record;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    },
    set$_collection: function(_collection) {
      this._collection = H.assertSubtype(_collection, "$isIterable", [P.Object], "$asIterable");
    }
  };
  R.DefaultIterableDiffer_check_closure.prototype = {
    call$1: function(item) {
      var t4,
        t1 = this.$this,
        t2 = this._box_0,
        itemTrackBy = t2.itemTrackBy = t1._trackByFn.call$2(t2.index, item),
        t3 = t2.record;
      if (t3 != null) {
        t4 = t3.trackById;
        t4 = t4 == null ? itemTrackBy != null : t4 !== itemTrackBy;
      } else
        t4 = true;
      if (t4) {
        t2.record = t1._mismatch$4(t3, item, itemTrackBy, t2.index);
        t2.mayBeDirty = true;
      } else {
        if (t2.mayBeDirty)
          t3 = t2.record = t1._verifyReinsertion$4(t3, item, itemTrackBy, t2.index);
        t4 = t3.item;
        if (t4 == null ? item != null : t4 !== item)
          t1._addIdentityChange$2(t3, item);
      }
      t2.record = t2.record._default_iterable_differ$_next;
      t1 = t2.index;
      if (typeof t1 !== "number")
        return t1.$add();
      t2.index = t1 + 1;
    },
    $signature: 91
  };
  R.CollectionChangeRecord.prototype = {
    toString$0: function(_) {
      var _this = this,
        t1 = _this.previousIndex,
        t2 = _this.currentIndex,
        t3 = _this.item;
      return t1 == t2 ? J.toString$0$(t3) : H.S(t3) + "[" + H.S(_this.previousIndex) + "->" + H.S(_this.currentIndex) + "]";
    }
  };
  R._DuplicateItemRecordList.prototype = {
    add$1: function(_, record) {
      var t1, _this = this;
      H.interceptedTypeCheck(record, "$isCollectionChangeRecord");
      if (_this._head == null) {
        _this._head = _this._tail = record;
        record._prevDup = record._nextDup = null;
      } else {
        t1 = _this._tail;
        t1._nextDup = record;
        record._prevDup = t1;
        record._nextDup = null;
        _this._tail = record;
      }
    },
    $get$2: function(_, trackById, afterIndex) {
      var record, t1, t2;
      for (record = this._head, t1 = afterIndex != null; record != null; record = record._nextDup) {
        if (t1) {
          t2 = record.currentIndex;
          if (typeof t2 !== "number")
            return H.iae(t2);
          t2 = afterIndex < t2;
        } else
          t2 = true;
        if (t2) {
          t2 = record.trackById;
          t2 = t2 == null ? trackById == null : t2 === trackById;
        } else
          t2 = false;
        if (t2)
          return record;
      }
      return;
    }
  };
  R._DuplicateMap.prototype = {
    put$1: function(_, record) {
      var key = record.trackById,
        t1 = this._default_iterable_differ$_map,
        duplicates = t1.$index(0, key);
      if (duplicates == null) {
        duplicates = new R._DuplicateItemRecordList();
        t1.$indexSet(0, key, duplicates);
      }
      duplicates.add$1(0, record);
    },
    $get$2: function(_, trackById, afterIndex) {
      var recordList = this._default_iterable_differ$_map.$index(0, trackById);
      return recordList == null ? null : recordList.$get$2(0, trackById, afterIndex);
    },
    $get$1: function($receiver, trackById) {
      return this.$get$2($receiver, trackById, null);
    },
    remove$1: function(_, record) {
      var prev, next,
        key = record.trackById,
        t1 = this._default_iterable_differ$_map,
        recordList = t1.$index(0, key);
      recordList.toString;
      prev = record._prevDup;
      next = record._nextDup;
      if (prev == null)
        recordList._head = next;
      else
        prev._nextDup = next;
      if (next == null)
        recordList._tail = prev;
      else
        next._prevDup = prev;
      if (recordList._head == null)
        if (t1.containsKey$1(0, key))
          t1.remove$1(0, key);
      return record;
    },
    toString$0: function(_) {
      return "_DuplicateMap(" + this._default_iterable_differ$_map.toString$0(0) + ")";
    }
  };
  N.DefaultKeyValueDiffer.prototype = {
    get$isDirty: function() {
      return this._additionsHead != null || this._changesHead != null || this._removalsHead != null;
    },
    forEachChangedItem$1: function(fn) {
      var record;
      H.functionTypeCheck(fn, {func: 1, ret: -1, args: [N.KeyValueChangeRecord]});
      for (record = this._changesHead; record != null; record = record._nextChanged)
        fn.call$1(record);
    },
    forEachAddedItem$1: function(fn) {
      var record;
      H.functionTypeCheck(fn, {func: 1, ret: -1, args: [N.KeyValueChangeRecord]});
      for (record = this._additionsHead; record != null; record = record._nextAdded)
        fn.call$1(record);
    },
    forEachRemovedItem$1: function(fn) {
      var record;
      H.functionTypeCheck(fn, {func: 1, ret: -1, args: [N.KeyValueChangeRecord]});
      for (record = this._removalsHead; record != null; record = record._default_keyvalue_differ$_next)
        fn.call$1(record);
    },
    diff$1: function(map) {
      var t1 = P.Object;
      H.assertSubtype(map, "$isMap", [t1, t1], "$asMap");
      if (map == null)
        map = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      if (!J.getInterceptor$(map).$isMap)
        throw H.wrapException(P.StateError$("Error trying to diff '" + H.S(map) + "'"));
      if (this.check$1(0, map))
        return this;
      else
        return;
    },
    check$1: function(_, map) {
      var record, _this = this, _box_0 = {},
        t1 = P.Object;
      H.assertSubtype(map, "$isMap", [t1, t1], "$asMap");
      _this._reset$0();
      t1 = _this._mapHead;
      if (t1 == null) {
        J.forEach$1$ax(map, new N.DefaultKeyValueDiffer_check_closure(_this));
        return _this._mapHead != null;
      }
      _box_0.insertBefore = t1;
      J.forEach$1$ax(map, new N.DefaultKeyValueDiffer_check_closure0(_box_0, _this));
      record = _box_0.insertBefore;
      if (record != null) {
        _this._removalsHead = record;
        for (t1 = _this._records; record != null; record = record._default_keyvalue_differ$_next) {
          t1.remove$1(0, record.key);
          record.previousValue = record.currentValue;
          record.currentValue = null;
        }
        t1 = _this._removalsHead;
        if (t1 == _this._mapHead)
          _this._mapHead = null;
        else
          t1._prev._default_keyvalue_differ$_next = null;
      }
      return _this.get$isDirty();
    },
    _insertBeforeOrAppend$2: function(before, record) {
      var t1, _this = this;
      if (before != null) {
        record._default_keyvalue_differ$_next = before;
        record._prev = before._prev;
        t1 = before._prev;
        if (t1 != null)
          t1._default_keyvalue_differ$_next = record;
        before._prev = record;
        if (before === _this._mapHead)
          _this._mapHead = record;
        return _this._appendAfter = before;
      }
      t1 = _this._appendAfter;
      if (t1 != null) {
        t1._default_keyvalue_differ$_next = record;
        record._prev = t1;
      } else
        _this._mapHead = record;
      _this._appendAfter = record;
      return;
    },
    _getOrCreateRecord$2: function(key, value) {
      var record, t2,
        t1 = this._records;
      if (t1.containsKey$1(0, key)) {
        record = t1.$index(0, key);
        this._maybeAddToChanges$2(record, value);
        t1 = record._prev;
        if (t1 != null)
          t1._default_keyvalue_differ$_next = record._default_keyvalue_differ$_next;
        t2 = record._default_keyvalue_differ$_next;
        if (t2 != null)
          t2._prev = t1;
        record._default_keyvalue_differ$_next = record._prev = null;
        return record;
      }
      record = new N.KeyValueChangeRecord(key);
      record.currentValue = value;
      t1.$indexSet(0, key, record);
      this._addToAdditions$1(record);
      return record;
    },
    _maybeAddToChanges$2: function(record, value) {
      var _this = this,
        t1 = record.currentValue;
      if (value == null ? t1 != null : value !== t1) {
        record.previousValue = t1;
        record.currentValue = value;
        if (_this._changesHead == null)
          _this._changesHead = _this._changesTail = record;
        else
          _this._changesTail = _this._changesTail._nextChanged = record;
      }
    },
    _reset$0: function() {
      var record, record0, _this = this;
      _this._appendAfter = null;
      if (_this.get$isDirty()) {
        record = _this._previousMapHead = _this._mapHead;
        for (; record != null; record = record0) {
          record0 = record._default_keyvalue_differ$_next;
          record._nextPrevious = record0;
        }
        for (record = _this._changesHead; record != null; record = record._nextChanged)
          record.previousValue = record.currentValue;
        for (record = _this._additionsHead; record != null; record = record._nextAdded)
          record.previousValue = record.currentValue;
        _this._removalsHead = _this._additionsHead = _this._additionsTail = _this._changesHead = _this._changesTail = null;
      }
    },
    _addToAdditions$1: function(record) {
      var _this = this;
      if (_this._additionsHead == null)
        _this._additionsHead = _this._additionsTail = record;
      else
        _this._additionsTail = _this._additionsTail._nextAdded = record;
    },
    toString$0: function(_) {
      var record, _this = this, _s2_ = ", ",
        t1 = [P.Object],
        items = H.setRuntimeTypeInfo([], t1),
        previous = H.setRuntimeTypeInfo([], t1),
        changes = H.setRuntimeTypeInfo([], t1),
        additions = H.setRuntimeTypeInfo([], t1),
        removals = H.setRuntimeTypeInfo([], t1);
      for (record = _this._mapHead; record != null; record = record._default_keyvalue_differ$_next)
        C.JSArray_methods.add$1(items, record);
      for (record = _this._previousMapHead; record != null; record = record._nextPrevious)
        C.JSArray_methods.add$1(previous, record);
      for (record = _this._changesHead; record != null; record = record._nextChanged)
        C.JSArray_methods.add$1(changes, record);
      for (record = _this._additionsHead; record != null; record = record._nextAdded)
        C.JSArray_methods.add$1(additions, record);
      for (record = _this._removalsHead; record != null; record = record._default_keyvalue_differ$_next)
        C.JSArray_methods.add$1(removals, record);
      return "map: " + C.JSArray_methods.join$1(items, _s2_) + "\nprevious: " + C.JSArray_methods.join$1(previous, _s2_) + "\nadditions: " + C.JSArray_methods.join$1(additions, _s2_) + "\nchanges: " + C.JSArray_methods.join$1(changes, _s2_) + "\nremovals: " + C.JSArray_methods.join$1(removals, _s2_) + "\n";
    }
  };
  N.DefaultKeyValueDiffer_check_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2,
        record = new N.KeyValueChangeRecord(key);
      record.currentValue = value;
      t1 = this.$this;
      t1._records.$indexSet(0, key, record);
      t1._addToAdditions$1(record);
      t2 = t1._appendAfter;
      if (t2 == null)
        t1._mapHead = record;
      else {
        record._prev = t2;
        t2._default_keyvalue_differ$_next = record;
      }
      t1._appendAfter = record;
    },
    $signature: 22
  };
  N.DefaultKeyValueDiffer_check_closure0.prototype = {
    call$2: function(key, value) {
      var record,
        t1 = this._box_0,
        t2 = t1.insertBefore,
        t3 = this.$this;
      if (J.$eq$(t2 == null ? null : t2.key, key)) {
        t3._maybeAddToChanges$2(t1.insertBefore, value);
        t2 = t1.insertBefore;
        t3._appendAfter = t2;
        t1.insertBefore = t2._default_keyvalue_differ$_next;
      } else {
        record = t3._getOrCreateRecord$2(key, value);
        t1.insertBefore = t3._insertBeforeOrAppend$2(t1.insertBefore, record);
      }
    },
    $signature: 22
  };
  N.KeyValueChangeRecord.prototype = {
    toString$0: function(_) {
      var _this = this,
        t1 = _this.previousValue,
        t2 = _this.currentValue,
        t3 = _this.key;
      return (t1 == null ? t2 == null : t1 === t2) ? H.S(t3) : H.S(t3) + "[" + H.S(_this.previousValue) + "->" + H.S(_this.currentValue) + "]";
    }
  };
  E.DirectiveChangeDetector.prototype = {};
  M.ChangeDetectionHost.prototype = {
    tick$0: function() {
      var e, s, exception, _this = this;
      try {
        $.ChangeDetectionHost__current = _this;
        _this._runningTick = true;
        _this._runTick$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        if (!_this._runTickGuarded$0())
          _this._exceptionHandler.call$3(e, H.interceptedTypeCheck(s, "$isStackTrace"), "DigestTick");
        throw exception;
      } finally {
        $.ChangeDetectionHost__current = null;
        _this._runningTick = false;
        _this._resetViewErrors$0();
      }
    },
    _runTick$0: function() {
      var i,
        detectors = this._changeDetectors,
        $length = detectors.length;
      for (i = 0; i < $length; ++i) {
        if (i >= detectors.length)
          return H.ioore(detectors, i);
        detectors[i].detectChanges$0();
      }
    },
    _runTickGuarded$0: function() {
      var i, detector,
        detectors = this._changeDetectors,
        $length = detectors.length;
      for (i = 0; i < $length; ++i) {
        if (i >= detectors.length)
          return H.ioore(detectors, i);
        detector = detectors[i];
        this.set$_lastGuardedView(detector);
        detector.detectChanges$0();
      }
      return this._checkForChangeDetectionError$0();
    },
    _checkForChangeDetectionError$0: function() {
      var _this = this,
        t1 = _this._lastGuardedView;
      if (t1 != null) {
        _this.reportViewException$3(t1, _this._lastCaughtException, _this._lastCaughtTrace);
        _this._resetViewErrors$0();
        return true;
      }
      return false;
    },
    _resetViewErrors$0: function() {
      this._lastCaughtException = this._lastCaughtTrace = null;
      this.set$_lastGuardedView(null);
    },
    reportViewException$3: function(view, error, trace) {
      H.assertSubtype(view, "$isAppView", [-1], "$asAppView").viewData.set$cdState(2);
      this._exceptionHandler.call$3(error, trace, null);
    },
    run$1$1: function(callback, $R) {
      var t2, t3, t4, t5, t1 = {};
      H.functionTypeCheck(callback, {func: 1, ret: {futureOr: 1, type: $R}});
      t2 = new P._Future($.Zone__current, [$R]);
      t1.result = null;
      t3 = P.Null;
      t4 = H.functionTypeCheck(new M.ChangeDetectionHost_run_closure(t1, this, callback, new P._AsyncCompleter(t2, [$R]), $R), {func: 1, ret: t3});
      t5 = this._application_ref$_ngZone;
      t5.toString;
      H.functionTypeCheck(t4, {func: 1, ret: t3});
      t5._innerZone.run$1$1(t4, t3);
      t1 = t1.result;
      return !!J.getInterceptor$(t1).$isFuture ? t2 : t1;
    },
    set$_lastGuardedView: function(_lastGuardedView) {
      this._lastGuardedView = H.assertSubtype(_lastGuardedView, "$isAppView", [-1], "$asAppView");
    }
  };
  M.ChangeDetectionHost_run_closure.prototype = {
    call$0: function() {
      var resultCast, e, s, result, t1, t2, exception, _this = this;
      try {
        result = _this.callback.call$0();
        _this._box_0.result = result;
        if (!!J.getInterceptor$(result).$isFuture) {
          t1 = _this.R;
          resultCast = H.assertSubtypeOfRuntimeType(result, [P.Future, t1]);
          t2 = _this.completer;
          resultCast.then$1$2$onError(new M.ChangeDetectionHost_run__closure(t2, t1), new M.ChangeDetectionHost_run__closure0(_this.$this, t2), null);
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        _this.$this._exceptionHandler.call$3(e, H.interceptedTypeCheck(s, "$isStackTrace"), null);
        throw exception;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  M.ChangeDetectionHost_run__closure.prototype = {
    call$1: function(result) {
      H.assertSubtypeOfRuntimeType(result, this.R);
      this.completer.complete$1(0, result);
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [this.R]};
    }
  };
  M.ChangeDetectionHost_run__closure0.prototype = {
    call$2: function(e, s) {
      var sCasted = H.interceptedTypeCheck(s, "$isStackTrace");
      this.completer.completeError$2(e, sCasted);
      this.$this._exceptionHandler.call$3(e, H.interceptedTypeCheck(sCasted, "$isStackTrace"), null);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 11
  };
  S.OpaqueToken.prototype = {
    toString$0: function(_) {
      return this.super$Object$toString(0);
    }
  };
  S.AppViewData.prototype = {
    set$cdMode: function(value) {
      if (this._cdMode !== value) {
        this._cdMode = value;
        this.updateSkipChangeDetectionFlag$0();
      }
    },
    set$cdState: function(value) {
      if (this._cdState !== value) {
        this._cdState = value;
        this.updateSkipChangeDetectionFlag$0();
      }
    },
    updateSkipChangeDetectionFlag$0: function() {
      var t1 = this._cdMode;
      this._skipChangeDetection = t1 === 4 || t1 === 2 || this._cdState === 2;
    },
    destroy$0: function() {
      var len, i, _this = this,
        t1 = _this._onDestroyCallbacks;
      if (t1 != null)
        for (len = t1.length, i = 0; i < len; ++i) {
          t1 = _this._onDestroyCallbacks;
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1[i].call$0();
        }
      t1 = _this.subscriptions;
      if (t1 == null)
        return;
      for (len = t1.length, i = 0; i < len; ++i) {
        t1 = _this.subscriptions;
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1[i].cancel$0(0);
      }
    },
    set$projectedNodes: function(projectedNodes) {
      this.projectedNodes = H.assertSubtype(projectedNodes, "$isList", [P.Object], "$asList");
    },
    set$subscriptions: function(subscriptions) {
      this.subscriptions = H.assertSubtype(subscriptions, "$isList", [[P.StreamSubscription, -1]], "$asList");
    },
    set$_onDestroyCallbacks: function(_onDestroyCallbacks) {
      this._onDestroyCallbacks = H.assertSubtype(_onDestroyCallbacks, "$isList", [{func: 1, ret: -1}], "$asList");
    }
  };
  S.AppView.prototype = {
    create$2: function(_, context, projectedNodes) {
      var _this = this;
      H.assertSubtypeOfRuntimeType(context, H.getRuntimeTypeArgument(_this, "AppView", 0));
      H.assertSubtype(projectedNodes, "$isList", [P.Object], "$asList");
      _this.set$ctx(context);
      _this.viewData.set$projectedNodes(projectedNodes);
      return _this.build$0();
    },
    create0$1: function(context) {
      return this.create$2(0, H.assertSubtypeOfRuntimeType(context, H.getRuntimeTypeArgument(this, "AppView", 0)), C.List_empty);
    },
    build$0: function() {
      return;
    },
    init0$0: function() {
      this.init$2(C.List_empty, null);
    },
    init1$1: function(rootElement) {
      this.init$2(H.setRuntimeTypeInfo([rootElement], [P.Object]), null);
    },
    init$2: function(rootNodesOrViewContainers, subscriptions) {
      var t1;
      H.assertSubtype(rootNodesOrViewContainers, "$isList", [P.Object], "$asList");
      H.assertSubtype(subscriptions, "$isList", [[P.StreamSubscription, -1]], "$asList");
      t1 = this.viewData;
      t1.rootFragment = D.ViewFragment_ViewFragment(rootNodesOrViewContainers);
      t1.set$subscriptions(subscriptions);
    },
    injectorGet$3: function(token, nodeIndex, notFoundValue) {
      var result, view, injector;
      for (result = C.C_Object, view = this; result === C.C_Object;) {
        if (nodeIndex != null)
          result = view.injectorGetInternal$3(token, nodeIndex, C.C_Object);
        if (result === C.C_Object) {
          injector = view.viewData._hostInjector;
          if (injector != null)
            result = injector.$get$2(0, token, notFoundValue);
        }
        nodeIndex = view.viewData.parentIndex;
        view = view.parentView;
      }
      return result;
    },
    injectorGet$2: function(token, nodeIndex) {
      return this.injectorGet$3(token, nodeIndex, C.C_Object);
    },
    destroyInternalState$0: function() {
      var t1 = this.viewData;
      if (t1.destroyed)
        return;
      t1.destroyed = true;
      t1.destroy$0();
      this.destroyInternal$0();
      this.dirtyParentQueriesInternal$0();
    },
    get$flatRootNodes: function() {
      return this.viewData.rootFragment.flattenDomNodes$0();
    },
    get$lastRootNode: function() {
      return this.viewData.rootFragment.findLastDomNode$0();
    },
    dirtyParentQueriesInternal$0: function() {
    },
    detectChanges$0: function() {
      var t2,
        t1 = this.viewData;
      if (t1._skipChangeDetection)
        return;
      t2 = $.ChangeDetectionHost__current;
      if ((t2 == null ? null : t2._lastGuardedView) != null)
        this.detectCrash$0();
      else
        this.detectChangesInternal$0();
      if (t1._cdMode === 1) {
        t1._cdMode = 2;
        t1._skipChangeDetection = true;
      }
      t1.set$cdState(1);
    },
    detectCrash$0: function() {
      var e, s, exception, current;
      try {
        this.detectChangesInternal$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        current = $.ChangeDetectionHost__current;
        current.set$_lastGuardedView(this);
        current._lastCaughtException = e;
        current._lastCaughtTrace = s;
      }
    },
    markPathToRootAsCheckOnce$0: function() {
      var view, t1, cdMode, t2;
      for (view = this; view != null;) {
        t1 = view.viewData;
        cdMode = t1._cdMode;
        if (cdMode === 4)
          break;
        if (cdMode === 2)
          if (cdMode !== 1) {
            t1._cdMode = 1;
            t2 = t1._cdState === 2;
            t1._skipChangeDetection = t2;
          }
        if (t1.type === C.ViewType_1)
          view = view.parentView;
        else {
          t1 = t1._viewContainerElement;
          view = t1 == null ? null : t1.parentView;
        }
      }
    },
    initViewRoot$1: function(hostElement) {
      var styles = this.componentStyles;
      if (styles.get$usesStyleEncapsulation())
        T.updateClassBinding(hostElement, styles.hostPrefix, true);
      return hostElement;
    },
    addShimC$1: function(element) {
      var styles = this.componentStyles;
      if (styles.get$usesStyleEncapsulation())
        T.updateClassBinding(element, styles.contentPrefix, true);
    },
    addShimE$1: function(element) {
      var styles = this.componentStyles;
      if (styles.get$usesStyleEncapsulation())
        T.updateClassBindingNonHtml(element, styles.contentPrefix, true);
    },
    updateChildClass$2: function(element, newClass) {
      var styles = this.componentStyles,
        shim = styles.get$usesStyleEncapsulation(),
        t1 = this.rootEl;
      if (element == null ? t1 == null : element === t1) {
        element.className = shim ? newClass + " " + styles.hostPrefix : newClass;
        t1 = this.parentView;
        if ((t1 == null ? null : t1.componentStyles) != null)
          t1.addShimC$1(element);
      } else
        element.className = shim ? newClass + " " + styles.contentPrefix : newClass;
    },
    updateChildClassNonHtml$2: function(element, newClass) {
      var styles = this.componentStyles,
        shim = styles.get$usesStyleEncapsulation(),
        t1 = this.rootEl;
      if (element == null ? t1 == null : element === t1) {
        T.updateAttribute(element, "class", shim ? newClass + " " + styles.hostPrefix : newClass);
        t1 = this.parentView;
        if ((t1 == null ? null : t1.componentStyles) != null)
          t1.addShimE$1(element);
      } else
        T.updateAttribute(element, "class", shim ? newClass + " " + styles.contentPrefix : newClass);
    },
    project$2: function(target, index) {
      var projectedNodesByContentIndex, nodesToProjectIntoTarget, $length, i, node, t1, nestedViews, length0, n;
      if (target == null)
        return;
      projectedNodesByContentIndex = this.viewData.projectedNodes;
      if (projectedNodesByContentIndex == null || index >= projectedNodesByContentIndex.length)
        return;
      if (index >= projectedNodesByContentIndex.length)
        return H.ioore(projectedNodesByContentIndex, index);
      nodesToProjectIntoTarget = H.assertSubtypeOfRuntimeType(projectedNodesByContentIndex[index], [P.List, P.Object]);
      $length = nodesToProjectIntoTarget.length;
      for (i = 0; i < $length; ++i) {
        if (i >= nodesToProjectIntoTarget.length)
          return H.ioore(nodesToProjectIntoTarget, i);
        node = nodesToProjectIntoTarget[i];
        t1 = J.getInterceptor$(node);
        if (!!t1.$isViewContainer) {
          target.appendChild(node.nativeElement);
          nestedViews = node.nestedViews;
          if (nestedViews != null) {
            length0 = nestedViews.length;
            for (n = 0; n < length0; ++n) {
              if (n >= nestedViews.length)
                return H.ioore(nestedViews, n);
              nestedViews[n].viewData.rootFragment.appendDomNodesInto$1(target);
            }
          }
        } else if (!!t1.$isList)
          D.ViewFragment_appendDomNodes(target, node);
        else
          target.appendChild(H.interceptedTypeCheck(node, "$isNode"));
      }
      $.domRootRendererIsDirty = true;
    },
    eventHandler0$1$1: function(handler, $E) {
      return new S.AppView_eventHandler0_closure(this, H.functionTypeCheck(handler, {func: 1, ret: -1}), $E);
    },
    eventHandler1$2$1: function(handler, $E, $F) {
      H.assertIsSubtype($F, $E, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'F' in 'eventHandler1'.");
      return new S.AppView_eventHandler1_closure(this, H.functionTypeCheck(handler, {func: 1, ret: -1, args: [$F]}), $E, $F);
    },
    set$ctx: function(ctx) {
      this.ctx = H.assertSubtypeOfRuntimeType(ctx, H.getRuntimeTypeArgument(this, "AppView", 0));
    },
    $isChangeDetectorRef: 1,
    $isViewRef: 1,
    $isEmbeddedViewRef: 1
  };
  S.AppView_eventHandler0_closure.prototype = {
    call$1: function($event) {
      var t1, t2;
      H.assertSubtypeOfRuntimeType($event, this.E);
      this.$this.markPathToRootAsCheckOnce$0();
      t1 = $.appViewUtils.eventManager.zone;
      t1.toString;
      t2 = H.functionTypeCheck(this.handler, {func: 1, ret: -1});
      t1._innerZone.runGuarded$1(t2);
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [this.E]};
    }
  };
  S.AppView_eventHandler1_closure.prototype = {
    call$1: function($event) {
      var t1, t2, _this = this;
      H.assertSubtypeOfRuntimeType($event, _this.E);
      _this.$this.markPathToRootAsCheckOnce$0();
      t1 = $.appViewUtils.eventManager.zone;
      t1.toString;
      t2 = H.functionTypeCheck(new S.AppView_eventHandler1__closure(_this.handler, $event, _this.F), {func: 1, ret: -1});
      t1._innerZone.runGuarded$1(t2);
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [this.E]};
    }
  };
  S.AppView_eventHandler1__closure.prototype = {
    call$0: function() {
      return this.handler.call$1(H.assertSubtypeOfRuntimeType(this.event, this.F));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 1
  };
  Q.AppViewUtils.prototype = {};
  D.ComponentRef.prototype = {};
  D.ComponentFactory.prototype = {
    create$2: function(_, injector, projectableNodes) {
      var t1,
        hostView = this._viewFactory.call$2(null, null);
      hostView.toString;
      H.assertSubtype(C.List_empty, "$isList", [P.Object], "$asList");
      t1 = hostView.viewData;
      t1._hostInjector = injector;
      t1.set$projectedNodes(C.List_empty);
      return hostView.build$0();
    },
    create$1: function($receiver, injector) {
      return this.create$2($receiver, injector, null);
    }
  };
  M.ComponentLoader.prototype = {};
  L.SlowComponentLoader.prototype = {};
  Z.ElementRef.prototype = {};
  O.ComponentStyles.prototype = {
    get$usesStyleEncapsulation: function() {
      return true;
    },
    _appendStyles$0: function() {
      var target = H.setRuntimeTypeInfo([], [P.String]),
        styles = C.JSArray_methods.join$1(O._flattenStyles(this._styles, target, this._componentId), "\n"),
        t1 = document,
        t2 = t1.head;
      t1 = t1.createElement("style");
      t1.textContent = styles;
      t2.appendChild(t1);
    }
  };
  O._UnscopedComponentStyles.prototype = {
    get$usesStyleEncapsulation: function() {
      return false;
    }
  };
  D.TemplateRef.prototype = {
    createEmbeddedView$0: function() {
      var t1 = this._template_ref$_viewContainer,
        parentView = t1.parentView,
        view = this._template_ref$_viewFactory.call$2(parentView, t1.index);
      view.create$2(0, parentView.ctx, parentView.viewData.projectedNodes);
      return view;
    }
  };
  V.ViewContainer.prototype = {
    get$length: function(_) {
      var nested = this.nestedViews;
      return nested == null ? 0 : nested.length;
    },
    detectChangesInNestedViews$0: function() {
      var len, i,
        nested = this.nestedViews;
      if (nested == null)
        return;
      for (len = nested.length, i = 0; i < len; ++i) {
        if (i >= nested.length)
          return H.ioore(nested, i);
        nested[i].detectChanges$0();
      }
    },
    destroyNestedViews$0: function() {
      var len, i,
        nested = this.nestedViews;
      if (nested == null)
        return;
      for (len = nested.length, i = 0; i < len; ++i) {
        if (i >= nested.length)
          return H.ioore(nested, i);
        nested[i].destroyInternalState$0();
      }
    },
    createEmbeddedView$1: function(templateRef) {
      var viewRef = templateRef.createEmbeddedView$0();
      this.attachView$2(H.assertSubtypeOfRuntimeType(viewRef, [S.AppView, P.Object]), this.get$length(this));
      return viewRef;
    },
    insert$2: function(_, viewRef, index) {
      if (index === -1)
        index = this.get$length(this);
      this.attachView$2(H.assertSubtypeOfRuntimeType(viewRef, [S.AppView, P.Object]), index);
      return viewRef;
    },
    move$2: function(viewRef, currentIndex) {
      var views, refRenderNode;
      if (currentIndex === -1)
        return;
      viewRef = H.assertSubtype(H.assertSubtypeOfRuntimeType(viewRef, [S.AppView, P.Object]), "$isAppView", [P.Object], "$asAppView");
      views = this.nestedViews;
      C.JSArray_methods.removeAt$1(views, (views && C.JSArray_methods).indexOf$1(views, viewRef));
      C.JSArray_methods.insert$2(views, currentIndex, viewRef);
      refRenderNode = this._findRenderNode$2(views, currentIndex);
      if (refRenderNode != null) {
        T.insertNodesAsSibling(viewRef.get$flatRootNodes(), refRenderNode);
        $.domRootRendererIsDirty = true;
      }
      viewRef.dirtyParentQueriesInternal$0();
      return viewRef;
    },
    remove$1: function(_, index) {
      this.detachView$1(index === -1 ? this.get$length(this) - 1 : index).destroyInternalState$0();
    },
    remove$0: function($receiver) {
      return this.remove$1($receiver, -1);
    },
    clear$0: function(_) {
      var i, nested, index, _this = this;
      for (i = _this.get$length(_this) - 1; i >= 0; --i) {
        if (i === -1) {
          nested = _this.nestedViews;
          index = (nested == null ? 0 : nested.length) - 1;
        } else
          index = i;
        _this.detachView$1(index).destroyInternalState$0();
      }
    },
    mapNestedViews$2$1: function(callback, $T, $U) {
      var nestedViews, result, l, i;
      H.assertIsSubtype($U, [S.AppView, P.Object], "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'U' in 'mapNestedViews'.");
      H.functionTypeCheck(callback, {func: 1, ret: [P.List, $T], args: [$U]});
      nestedViews = this.nestedViews;
      if (nestedViews == null || nestedViews.length === 0)
        return C.List_empty2;
      result = H.setRuntimeTypeInfo([], [$T]);
      for (l = nestedViews.length, i = 0; i < l; ++i) {
        if (i >= nestedViews.length)
          return H.ioore(nestedViews, i);
        C.JSArray_methods.addAll$1(result, callback.call$1(H.assertSubtypeOfRuntimeType(nestedViews[i], $U)));
      }
      return result;
    },
    _findRenderNode$2: function(views, index) {
      var t1;
      H.assertSubtype(views, "$isList", [[S.AppView, P.Object]], "$asList");
      if (typeof index !== "number")
        return index.$gt();
      if (index > 0) {
        t1 = index - 1;
        if (t1 >= views.length)
          return H.ioore(views, t1);
        t1 = views[t1].get$lastRootNode();
      } else
        t1 = this.nativeElement;
      return t1;
    },
    attachView$2: function(view, viewIndex) {
      var views, refRenderNode, _this = this;
      H.assertSubtype(view, "$isAppView", [P.Object], "$asAppView");
      views = _this.nestedViews;
      if (views == null)
        views = H.setRuntimeTypeInfo([], [[S.AppView, P.Object]]);
      C.JSArray_methods.insert$2(views, viewIndex, view);
      refRenderNode = _this._findRenderNode$2(views, viewIndex);
      _this.set$nestedViews(views);
      if (refRenderNode != null) {
        T.insertNodesAsSibling(view.get$flatRootNodes(), refRenderNode);
        $.domRootRendererIsDirty = true;
      }
      view.viewData._viewContainerElement = _this;
      view.dirtyParentQueriesInternal$0();
    },
    detachView$1: function(viewIndex) {
      var t1 = this.nestedViews,
        view = (t1 && C.JSArray_methods).removeAt$1(t1, viewIndex),
        nodes = view.get$flatRootNodes();
      T.removeNodes(nodes);
      $.domRootRendererIsDirty = $.domRootRendererIsDirty || nodes.length !== 0;
      view.dirtyParentQueriesInternal$0();
      view.viewData._viewContainerElement = null;
      return view;
    },
    set$nestedViews: function(nestedViews) {
      this.nestedViews = H.assertSubtype(nestedViews, "$isList", [[S.AppView, -1]], "$asList");
    },
    $isViewContainerRef: 1
  };
  D.ViewFragment.prototype = {
    appendDomNodesInto$1: function(target) {
      D.ViewFragment_appendDomNodes(target, this._nodesOrViewContainers);
    },
    findLastDomNode$0: function() {
      var node,
        nodes = this._nodesOrViewContainers,
        i = nodes.length - 1;
      if (i >= 0) {
        node = nodes[i];
        return node instanceof V.ViewContainer ? D.ViewFragment__findLastDomNode(node) : H.interceptedTypeCheck(node, "$isNode");
      }
      return;
    },
    flattenDomNodes$0: function() {
      return D.ViewFragment__flattenDomNodes(H.setRuntimeTypeInfo([], [W.Node]), this._nodesOrViewContainers);
    }
  };
  L.ViewRef.prototype = {};
  L.EmbeddedViewRef.prototype = {};
  R.ViewType.prototype = {
    toString$0: function(_) {
      return this._name;
    }
  };
  A.View.prototype = {
    destroyInternal$0: function() {
    },
    detectChangesInternal$0: function() {
    },
    injectorGetOptional$2: function(token, nodeIndex) {
      return this.injectorGet$3(token, nodeIndex, null);
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      return notFoundResult;
    }
  };
  E.SanitizationService.prototype = {};
  D.Testability.prototype = {
    _watchAngularEvents$0: function() {
      var t3,
        t1 = this._testability$_ngZone,
        t2 = t1._onTurnStart;
      new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new D.Testability__watchAngularEvents_closure(this));
      t2 = P.Null;
      t1.toString;
      t3 = H.functionTypeCheck(new D.Testability__watchAngularEvents_closure0(this), {func: 1, ret: t2});
      t1._outerZone.run$1$1(t3, t2);
    },
    isStable$0: function(_) {
      var t1;
      if (this._isZoneStable)
        t1 = !this._testability$_ngZone._hasPendingMacrotasks;
      else
        t1 = false;
      return t1;
    },
    _runCallbacksIfReady$0: function() {
      if (this.isStable$0(0))
        P.scheduleMicrotask(new D.Testability__runCallbacksIfReady_closure(this));
      else
        this._didWork = true;
    },
    whenStable$1: function(_, callback) {
      C.JSArray_methods.add$1(this._testability$_callbacks, H.interceptedTypeCheck(callback, "$isFunction"));
      this._runCallbacksIfReady$0();
    }
  };
  D.Testability__watchAngularEvents_closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this;
      t1._didWork = true;
      t1._isZoneStable = false;
    },
    $signature: 10
  };
  D.Testability__watchAngularEvents_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._testability$_ngZone._onTurnDone;
      new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new D.Testability__watchAngularEvents__closure(t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  D.Testability__watchAngularEvents__closure.prototype = {
    call$1: function(_) {
      if ($.Zone__current.$index(0, $.$get$NgZone__anyZoneKey()) === true)
        H.throwExpression(P.Exception_Exception("Expected to not be in Angular Zone, but it is!"));
      P.scheduleMicrotask(new D.Testability__watchAngularEvents___closure(this.$this));
    },
    $signature: 10
  };
  D.Testability__watchAngularEvents___closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._isZoneStable = true;
      t1._runCallbacksIfReady$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  D.Testability__runCallbacksIfReady_closure.prototype = {
    call$0: function() {
      var t1, t2, t3;
      for (t1 = this.$this, t2 = t1._testability$_callbacks; t3 = t2.length, t3 !== 0;) {
        if (0 >= t3)
          return H.ioore(t2, -1);
        t2.pop().call$1(t1._didWork);
      }
      t1._didWork = false;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  D.TestabilityRegistry.prototype = {};
  D._NoopGetTestability.prototype = {
    findTestabilityInTree$2: function(registry, elem) {
      return;
    },
    $isGetTestability: 1
  };
  Y.NgZone.prototype = {
    NgZone$1$enableLongStackTrace: function(enableLongStackTrace) {
      var _this = this,
        t1 = $.Zone__current;
      _this._outerZone = t1;
      _this._innerZone = _this._createInnerZone$2$handleUncaughtError(t1, _this.get$_onErrorWithoutLongStackTrace());
    },
    _createInnerZone$2$handleUncaughtError: function(zone, handleUncaughtError) {
      var _this = this, _null = null;
      return zone.fork$2$specification$zoneValues(P._ZoneSpecification$(_null, _this.get$_createTimer(), _null, _null, H.functionTypeCheck(handleUncaughtError, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}), _null, _null, _null, _null, _this.get$_run(), _this.get$_runBinary(), _this.get$_runUnary(), _this.get$_ng_zone$_scheduleMicrotask()), P.LinkedHashMap__makeLiteral([_this._thisZoneKey, true, $.$get$NgZone__anyZoneKey(), true]));
    },
    _ng_zone$_scheduleMicrotask$4: function($self, $parent, zone, fn) {
      var safeMicrotask, implementation, implZone, _this = this;
      H.functionTypeCheck(fn, {func: 1, ret: -1});
      if (_this._pendingMicrotasks === 0) {
        _this._hasPendingMicrotasks = true;
        _this._checkStable$0();
      }
      ++_this._pendingMicrotasks;
      $parent.toString;
      safeMicrotask = H.functionTypeCheck(new Y.NgZone__scheduleMicrotask_closure(_this, fn), {func: 1});
      implementation = $parent._delegationTarget.get$_scheduleMicrotask();
      implZone = implementation.zone;
      implementation.$function.call$4(implZone, P._parentDelegate(implZone), zone, safeMicrotask);
    },
    _run$1$4: function($self, $parent, zone, fn, $R) {
      var t1, implementation, implZone;
      H.functionTypeCheck(fn, {func: 1, ret: $R});
      $parent.toString;
      t1 = H.functionTypeCheck(new Y.NgZone__run_closure(this, fn, $R), {func: 1, ret: $R});
      implementation = $parent._delegationTarget.get$_async$_run();
      implZone = implementation.zone;
      return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}).call$1$4(implZone, P._parentDelegate(implZone), zone, t1, $R);
    },
    _run$4: function($self, $parent, zone, fn) {
      return this._run$1$4($self, $parent, zone, fn, null);
    },
    _runUnary$2$5: function($self, $parent, zone, fn, arg, $R, $T) {
      var t1, implementation, implZone;
      H.functionTypeCheck(fn, {func: 1, ret: $R, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      $parent.toString;
      t1 = H.functionTypeCheck(new Y.NgZone__runUnary_closure(this, fn, $T, $R), {func: 1, ret: $R, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      implementation = $parent._delegationTarget.get$_async$_runUnary();
      implZone = implementation.zone;
      return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}, 1]}).call$2$5(implZone, P._parentDelegate(implZone), zone, t1, arg, $R, $T);
    },
    _runUnary$5: function($self, $parent, zone, fn, arg) {
      return this._runUnary$2$5($self, $parent, zone, fn, arg, null, null);
    },
    _runBinary$3$6: function($self, $parent, zone, fn, arg1, arg2, $R, T1, T2) {
      var t1, implementation, implZone;
      H.functionTypeCheck(fn, {func: 1, ret: $R, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      $parent.toString;
      t1 = H.functionTypeCheck(new Y.NgZone__runBinary_closure(this, fn, T1, T2, $R), {func: 1, ret: $R, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      implementation = $parent._delegationTarget.get$_async$_runBinary();
      implZone = implementation.zone;
      return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}, 1, 2]}).call$3$6(implZone, P._parentDelegate(implZone), zone, t1, arg1, arg2, $R, T1, T2);
    },
    _onEnter$0: function() {
      var _this = this;
      ++_this._nesting;
      if (_this._isStable) {
        _this._isStable = false;
        _this._onTurnStart.add$1(0, null);
      }
    },
    _onLeave$0: function() {
      --this._nesting;
      this._checkStable$0();
    },
    _onErrorWithoutLongStackTrace$5: function($self, $parent, zone, error, trace) {
      this._ng_zone$_onError.add$1(0, new Y.NgZoneError(error, H.setRuntimeTypeInfo([J.toString$0$(H.interceptedTypeCheck(trace, "$isStackTrace"))], [P.Object])));
    },
    _createTimer$5: function($self, $parent, zone, duration, fn) {
      var t2, onDone, callback, implementation, implZone, wrappedTimer, t1 = {};
      H.interceptedTypeCheck(duration, "$isDuration");
      t2 = {func: 1, ret: -1};
      H.functionTypeCheck(fn, t2);
      t1.wrappedTimer = null;
      onDone = new Y.NgZone__createTimer_closure(t1, this);
      $parent.toString;
      callback = H.functionTypeCheck(new Y.NgZone__createTimer_closure0(fn, onDone), t2);
      implementation = $parent._delegationTarget.get$_async$_createTimer();
      implZone = implementation.zone;
      wrappedTimer = new Y._WrappedTimer(implementation.$function.call$5(implZone, P._parentDelegate(implZone), zone, duration, callback), onDone);
      t1.wrappedTimer = wrappedTimer;
      C.JSArray_methods.add$1(this._pendingTimers, wrappedTimer);
      this._hasPendingMacrotasks = true;
      return t1.wrappedTimer;
    },
    _checkStable$0: function() {
      var t2, _this = this,
        t1 = _this._nesting;
      if (t1 === 0)
        if (!_this._hasPendingMicrotasks && !_this._isStable)
          try {
            _this._nesting = t1 + 1;
            _this._onMicrotaskEmpty.add$1(0, null);
          } finally {
            --_this._nesting;
            if (!_this._hasPendingMicrotasks)
              try {
                t1 = P.Null;
                t2 = H.functionTypeCheck(new Y.NgZone__checkStable_closure(_this), {func: 1, ret: t1});
                _this._outerZone.run$1$1(t2, t1);
              } finally {
                _this._isStable = true;
              }
          }
    },
    runOutsideAngular$1$1: function(callback, $R) {
      H.functionTypeCheck(callback, {func: 1, ret: $R});
      return this._outerZone.run$1$1(callback, $R);
    },
    runOutsideAngular$1: function(callback) {
      return this.runOutsideAngular$1$1(callback, null);
    }
  };
  Y.NgZone__scheduleMicrotask_closure.prototype = {
    call$0: function() {
      try {
        this.fn.call$0();
      } finally {
        var t1 = this.$this;
        if (--t1._pendingMicrotasks === 0) {
          t1._hasPendingMicrotasks = false;
          t1._checkStable$0();
        }
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  Y.NgZone__run_closure.prototype = {
    call$0: function() {
      try {
        this.$this._onEnter$0();
        var t1 = this.fn.call$0();
        return t1;
      } finally {
        this.$this._onLeave$0();
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: function() {
      return {func: 1, ret: this.R};
    }
  };
  Y.NgZone__runUnary_closure.prototype = {
    call$1: function(arg) {
      var t1, _this = this;
      H.assertSubtypeOfRuntimeType(arg, _this.T);
      try {
        _this.$this._onEnter$0();
        t1 = _this.fn.call$1(arg);
        return t1;
      } finally {
        _this.$this._onLeave$0();
      }
    },
    $signature: function() {
      return {func: 1, ret: this.R, args: [this.T]};
    }
  };
  Y.NgZone__runBinary_closure.prototype = {
    call$2: function(arg1, arg2) {
      var t1, _this = this;
      H.assertSubtypeOfRuntimeType(arg1, _this.T1);
      H.assertSubtypeOfRuntimeType(arg2, _this.T2);
      try {
        _this.$this._onEnter$0();
        t1 = _this.fn.call$2(arg1, arg2);
        return t1;
      } finally {
        _this.$this._onLeave$0();
      }
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: function() {
      return {func: 1, ret: this.R, args: [this.T1, this.T2]};
    }
  };
  Y.NgZone__createTimer_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._pendingTimers;
      C.JSArray_methods.remove$1(t2, this._box_0.wrappedTimer);
      t1._hasPendingMacrotasks = t2.length !== 0;
    },
    $signature: 0
  };
  Y.NgZone__createTimer_closure0.prototype = {
    call$0: function() {
      try {
        this.fn.call$0();
      } finally {
        this.onDone.call$0();
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  Y.NgZone__checkStable_closure.prototype = {
    call$0: function() {
      this.$this._onTurnDone.add$1(0, null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  Y._WrappedTimer.prototype = {
    cancel$0: function(_) {
      this._ng_zone$_onCancel.call$0();
      this._timer.cancel$0(0);
    },
    $isTimer: 1
  };
  Y.NgZoneError.prototype = {};
  G.ElementInjector.prototype = {
    provideUntyped$2: function(token, orElse) {
      return H.assertSubtype(this._view, "$isAppView", [P.Object], "$asAppView").injectorGet$3(token, this._element$_nodeIndex, orElse);
    },
    injectFromAncestryOptional$2: function(token, orElse) {
      var t1 = this._view,
        t2 = t1.parentView;
      t1 = t1.viewData;
      return H.assertSubtype(t2, "$isAppView", [P.Object], "$asAppView").injectorGet$3(token, t1.parentIndex, orElse);
    },
    injectFromSelfOptional$2: function(token, orElse) {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$parent: function(_) {
      var t2,
        t1 = this._parent;
      if (t1 == null) {
        t1 = this._view;
        t2 = t1.parentView;
        t1 = t1.viewData;
        t1 = this._parent = new G.ElementInjector(t2, t1.parentIndex, C.EmptyInjector_null);
      }
      return t1;
    }
  };
  R.EmptyInjector.prototype = {
    injectFromSelfOptional$2: function(token, orElse) {
      return token === C.Type_Injector_aJC ? this : orElse;
    },
    injectFromAncestryOptional$2: function(token, orElse) {
      var t1 = this.parent;
      if (t1 == null)
        return orElse;
      return t1.provideUntyped$2(token, orElse);
    }
  };
  E.HierarchicalInjector.prototype = {
    provideUntyped$2: function(token, orElse) {
      var result = this.injectFromSelfOptional$2(token, orElse);
      if (result == null ? orElse == null : result === orElse)
        result = this.injectFromAncestryOptional$2(token, orElse);
      return result;
    },
    injectFromAncestryOptional$2: function(token, orElse) {
      return this.get$parent(this).provideUntyped$2(token, orElse);
    },
    get$parent: function(receiver) {
      return this.parent;
    }
  };
  M.Injector.prototype = {
    $get$2: function(_, token, notFoundValue) {
      var result = this.provideUntyped$2(token, notFoundValue);
      if (result === C.C_Object)
        return M.throwsNotFound(this, token);
      return result;
    },
    $get$1: function($receiver, token) {
      return this.$get$2($receiver, token, C.C_Object);
    }
  };
  A.MapInjector.prototype = {
    injectFromSelfOptional$2: function(token, orElse) {
      var result = this._map$_providers.$index(0, token);
      if (result == null) {
        if (token === C.Type_Injector_aJC)
          return this;
        result = orElse;
      }
      return result;
    }
  };
  U.ExceptionHandler.prototype = {};
  T.BrowserExceptionHandler.prototype = {
    call$3: function(error, stack, reason) {
      var t1, t2;
      H.stringTypeCheck(reason);
      window;
      t1 = "EXCEPTION: " + H.S(error) + "\n";
      if (stack != null) {
        t1 += "STACKTRACE: \n";
        t2 = J.getInterceptor$(stack);
        t1 += H.S(!!t2.$isIterable ? t2.join$1(stack, "\n\n-----async gap-----\n") : t2.toString$0(stack)) + "\n";
      }
      if (reason != null)
        t1 += "REASON: " + reason + "\n";
      if (typeof console != "undefined")
        window.console.error(t1.charCodeAt(0) == 0 ? t1 : t1);
      return;
    },
    call$1: function(error) {
      return this.call$3(error, null, null);
    },
    call$2: function(error, stack) {
      return this.call$3(error, stack, null);
    },
    $isExceptionHandler: 1
  };
  K.BrowserGetTestability.prototype = {
    addToWindow$1: function(registry) {
      var t1, t2, getAllAngularTestabilities, whenAllStable,
        jsRegistry = self.self.ngTestabilityRegistries;
      if (jsRegistry == null) {
        t1 = self.self;
        t2 = [P.Object];
        jsRegistry = H.setRuntimeTypeInfo([], t2);
        t1.ngTestabilityRegistries = jsRegistry;
        self.self.getAngularTestability = P.allowInterop(new K.BrowserGetTestability_addToWindow_closure(), {func: 1, args: [W.Element], opt: [P.bool]});
        getAllAngularTestabilities = new K.BrowserGetTestability_addToWindow_closure0();
        self.self.getAllAngularTestabilities = P.allowInterop(getAllAngularTestabilities, {func: 1, ret: [P.List, P.Object]});
        whenAllStable = P.allowInterop(new K.BrowserGetTestability_addToWindow_closure1(getAllAngularTestabilities), {func: 1, ret: P.Null, args: [,]});
        if (!("frameworkStabilizers" in self.self))
          self.self.frameworkStabilizers = H.setRuntimeTypeInfo([], t2);
        J.add$1$ax(self.self.frameworkStabilizers, whenAllStable);
      }
      J.add$1$ax(jsRegistry, this._createRegistry$1(registry));
    },
    findTestabilityInTree$2: function(registry, element) {
      var t1;
      if (element == null)
        return;
      t1 = registry._applications.$index(0, element);
      return t1 == null ? this.findTestabilityInTree$2(registry, element.parentElement) : t1;
    },
    _createRegistry$1: function(registry) {
      var object = {};
      object.getAngularTestability = P.allowInterop(new K.BrowserGetTestability__createRegistry_closure(registry), {func: 1, ret: U.JsTestability, args: [W.Element]});
      object.getAllAngularTestabilities = P.allowInterop(new K.BrowserGetTestability__createRegistry_closure0(registry), {func: 1, ret: [P.List, U.JsTestability]});
      return object;
    },
    $isGetTestability: 1
  };
  K.BrowserGetTestability_addToWindow_closure.prototype = {
    call$2: function(elem, findInAncestors) {
      var registry, t1, i, t2, result;
      H.interceptedTypeCheck(elem, "$isElement");
      H.boolTypeCheck(findInAncestors);
      registry = H.assertSubtypeOfRuntimeType(self.self.ngTestabilityRegistries, [P.List, P.Object]);
      t1 = J.getInterceptor$asx(registry);
      i = 0;
      while (true) {
        t2 = t1.get$length(registry);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        t2 = t1.$index(registry, i);
        result = t2.getAngularTestability.apply(t2, [elem]);
        if (result != null)
          return result;
        ++i;
      }
      throw H.wrapException(P.StateError$("Could not find testability for element."));
    },
    call$1: function(elem) {
      return this.call$2(elem, true);
    },
    "call*": "call$2",
    $defaultValues: function() {
      return [true];
    },
    $signature: 67
  };
  K.BrowserGetTestability_addToWindow_closure0.prototype = {
    call$0: function() {
      var t2, testabilities, testabilityCount, j,
        registry = H.assertSubtypeOfRuntimeType(self.self.ngTestabilityRegistries, [P.List, P.Object]),
        result = H.setRuntimeTypeInfo([], [P.Object]),
        t1 = J.getInterceptor$asx(registry),
        i = 0;
      while (true) {
        t2 = t1.get$length(registry);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        t2 = t1.$index(registry, i);
        testabilities = t2.getAllAngularTestabilities.apply(t2, []);
        testabilityCount = H.numTypeCheck(testabilities.length);
        if (typeof testabilityCount !== "number")
          return H.iae(testabilityCount);
        j = 0;
        for (; j < testabilityCount; ++j)
          C.JSArray_methods.add$1(result, testabilities[j]);
        ++i;
      }
      return result;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 68
  };
  K.BrowserGetTestability_addToWindow_closure1.prototype = {
    call$1: function(callback) {
      var decrement, t2, testability, _box_0 = {},
        testabilities = this.getAllAngularTestabilities.call$0(),
        t1 = J.getInterceptor$asx(testabilities);
      _box_0.count = t1.get$length(testabilities);
      _box_0.didWork = false;
      decrement = new K.BrowserGetTestability_addToWindow__closure(_box_0, callback);
      for (t1 = t1.get$iterator(testabilities), t2 = {func: 1, ret: P.Null, args: [P.bool]}; t1.moveNext$0();) {
        testability = t1.get$current(t1);
        testability.whenStable.apply(testability, [P.allowInterop(decrement, t2)]);
      }
    },
    $signature: 7
  };
  K.BrowserGetTestability_addToWindow__closure.prototype = {
    call$1: function(didWork_) {
      var t1, didWork, t2, count;
      H.boolTypeCheck(didWork_);
      t1 = this._box_0;
      didWork = t1.didWork || H.boolConversionCheck(didWork_);
      t1.didWork = didWork;
      t2 = t1.count;
      if (typeof t2 !== "number")
        return t2.$sub();
      count = t2 - 1;
      t1.count = count;
      if (count === 0)
        this.callback.call$1(didWork);
    },
    $signature: 27
  };
  K.BrowserGetTestability__createRegistry_closure.prototype = {
    call$1: function(element) {
      var t1, testability;
      H.interceptedTypeCheck(element, "$isElement");
      t1 = this.registry;
      testability = t1._testabilityGetter.findTestabilityInTree$2(t1, element);
      return testability == null ? null : {isStable: P.allowInterop(testability.get$isStable(testability), {func: 1, ret: P.bool}), whenStable: P.allowInterop(testability.get$whenStable(testability), {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool]}]})};
    },
    $signature: 70
  };
  K.BrowserGetTestability__createRegistry_closure0.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = this.registry._applications;
      t1 = t1.get$values(t1);
      t1 = P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "Iterable", 0));
      t2 = U.JsTestability;
      t3 = H.getTypeArgumentByIndex(t1, 0);
      return new H.MappedListIterable(t1, H.functionTypeCheck(new K.BrowserGetTestability__createRegistry__closure(), {func: 1, ret: t2, args: [t3]}), [t3, t2]).toList$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 71
  };
  K.BrowserGetTestability__createRegistry__closure.prototype = {
    call$1: function(t) {
      H.interceptedTypeCheck(t, "$isTestability");
      return {isStable: P.allowInterop(t.get$isStable(t), {func: 1, ret: P.bool}), whenStable: P.allowInterop(t.get$whenStable(t), {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool]}]})};
    },
    $signature: 72
  };
  L.EventManager.prototype = {};
  A.pureProxy1_closure.prototype = {
    call$1: function(p0) {
      var t1, t2;
      H.assertSubtypeOfRuntimeType(p0, this.S0);
      t1 = this._box_0;
      if (!t1.first) {
        t2 = t1.v0;
        t2 = t2 == null ? p0 != null : t2 !== p0;
      } else
        t2 = true;
      if (t2) {
        t1.first = false;
        t1.v0 = p0;
        t1.result = this.fn.call$1(p0);
      }
      return t1.result;
    },
    $signature: function() {
      return {func: 1, ret: this.T, args: [this.S0]};
    }
  };
  A.pureProxy2_closure.prototype = {
    call$2: function(p0, p1) {
      var t1, t2, _this = this;
      H.assertSubtypeOfRuntimeType(p0, _this.S0);
      H.assertSubtypeOfRuntimeType(p1, _this.S1);
      t1 = _this._box_0;
      if (!t1.first) {
        t2 = t1.v0;
        if (t2 == null ? p0 == null : t2 === p0) {
          t2 = t1.v1;
          t2 = t2 == null ? p1 != null : t2 !== p1;
        } else
          t2 = true;
      } else
        t2 = true;
      if (t2) {
        t1.first = false;
        t1.v0 = p0;
        t1.v1 = p1;
        t1.result = _this.fn.call$2(p0, p1);
      }
      return t1.result;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: function() {
      return {func: 1, ret: this.T, args: [this.S0, this.S1]};
    }
  };
  N.TextBinding.prototype = {
    updateText$1: function(newValue) {
      var t1 = this._currentValue;
      if (t1 !== newValue)
        this._currentValue = this.element.textContent = newValue;
    }
  };
  Z.DomSanitizationService.prototype = {$isSanitizationService: 1};
  R.DomSanitizationServiceImpl.prototype = {
    sanitizeUrl$1: function(value) {
      return E.internalSanitizeUrl(value);
    },
    $isSanitizationService: 1
  };
  U.JsTestability.prototype = {};
  U.JsTestabilityRegistry.prototype = {};
  L.MaterialDrawerBase.prototype = {
    set$visible: function(_, value) {
      var _this = this;
      if (value === _this._visible)
        return;
      _this._visible = value;
      if (!value)
        P.Timer_Timer(C.Duration_500000, new L.MaterialDrawerBase_visible_closure(_this));
      else
        _this._visibleChange.add$1(0, true);
    },
    toggle$0: function(_) {
      this.set$visible(0, !this._visible);
    }
  };
  L.MaterialDrawerBase_visible_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (!t1._visible)
        t1._visibleChange.add$1(0, false);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  G.MaterialPersistentDrawerDirective.prototype = {};
  O.MaterialPersistentDrawerDirectiveNgCd.prototype = {};
  B.MaterialTemporaryDrawerComponent.prototype = {
    toggle$0: function(_) {
      return this.super$MaterialDrawerBase$toggle(0);
    }
  };
  V.ViewMaterialTemporaryDrawerComponent0.prototype = {
    build$0: function() {
      var t1, _this = this,
        _ctx = _this.ctx,
        _rootEl = _this.rootEl,
        parentRenderNode = _this.initViewRoot$1(_rootEl),
        _el_0 = T.appendDiv(document, parentRenderNode);
      _this.updateChildClass$2(_el_0, "drawer-content");
      _this.addShimC$1(_el_0);
      _this.project$2(_el_0, 0);
      t1 = W.Event;
      (_el_0 && C.DivElement_methods).addEventListener$2(_el_0, "click", _this.eventHandler1$2$1(_this.get$_handle_click_0_0(), t1, t1));
      _this.init0$0();
      J.addEventListener$2$x(_rootEl, "click", _this.eventHandler0$1$1(_ctx.get$toggle(_ctx), t1));
    },
    _handle_click_0_0$1: function($$event) {
      J.stopPropagation$0$x($$event);
    },
    $asAppView: function() {
      return [B.MaterialTemporaryDrawerComponent];
    }
  };
  T.ButtonDirective.prototype = {
    get$hostTabIndex: function() {
      var _this = this;
      return _this.tabbable && !_this.get$disabled(_this) ? "0" : _this._nonTabbableIndex;
    },
    handleClick$1: function(mouseEvent) {
      H.interceptedTypeCheck(mouseEvent, "$isMouseEvent");
      if (this.get$disabled(this))
        return;
      this._trigger.add$1(0, mouseEvent);
    },
    handleKeyPress$1: function(keyboardEvent) {
      H.interceptedTypeCheck(keyboardEvent, "$isKeyboardEvent");
      if (this.get$disabled(this))
        return;
      Z.isSpaceKey(keyboardEvent);
      if (keyboardEvent.keyCode === 13 || Z.isSpaceKey(keyboardEvent)) {
        this._trigger.add$1(0, keyboardEvent);
        keyboardEvent.preventDefault();
      }
    },
    get$disabled: function(receiver) {
      return this.disabled;
    }
  };
  T._ButtonDirective_RootFocusable_HasTabIndex.prototype = {};
  R.ButtonDirectiveNgCd.prototype = {};
  K.DeferredContentDirective.prototype = {
    _setVisible$0: function() {
      var t1, rootNodes, $content, dimensions, t2, _this = this,
        value = H.boolConversionCheck(_this._deferred_content$_visible) || false;
      if (value === _this._shown)
        return;
      if (value) {
        if (_this.preserveDimensions)
          C.DivElement_methods.remove$0(_this._placeholder);
        _this._viewRef = _this._deferred_content$_viewContainer.createEmbeddedView$1(_this._template);
      } else {
        if (_this.preserveDimensions) {
          t1 = _this._viewRef;
          rootNodes = t1 == null ? null : t1.get$flatRootNodes();
          if (rootNodes == null)
            rootNodes = H.setRuntimeTypeInfo([], [W.Node]);
          $content = rootNodes.length !== 0 ? C.JSArray_methods.get$first(rootNodes) : null;
          if (!!J.getInterceptor$($content).$isHtmlElement) {
            dimensions = $content.getBoundingClientRect();
            t1 = _this._placeholder.style;
            t2 = H.S(dimensions.width) + "px";
            t1.width = t2;
            t2 = H.S(dimensions.height) + "px";
            t1.height = t2;
          }
        }
        _this._deferred_content$_viewContainer.clear$0(0);
        if (_this.preserveDimensions) {
          t1 = _this._deferred_content$_viewContainer.nativeElement;
          if ((t1 == null ? null : t1.parentNode) != null)
            t1.parentNode.insertBefore(_this._placeholder, t1);
        }
      }
      _this._shown = value;
    },
    DeferredContentDirective$3: function(_viewContainer, _template, $parent) {
      var t1 = $parent._onContentVisible,
        t2 = H.getTypeArgumentByIndex(t1, 0);
      this._deferred_content$_disposer.addStreamSubscription$1$1(new P._DistinctStream(null, new P._BroadcastStream(t1, [t2]), [t2]).listen$1(new K.DeferredContentDirective_closure(this)), P.bool);
    }
  };
  K.DeferredContentDirective_closure.prototype = {
    call$1: function(value) {
      var t1 = this.$this;
      t1._deferred_content$_visible = H.boolTypeCheck(value);
      t1._setVisible$0();
    },
    $signature: 27
  };
  E.DeferredContentAware.prototype = {};
  Z.DynamicComponent.prototype = {
    _disposeChildComponent$0: function() {
      var containerElement, t2,
        t1 = this._childComponent;
      if (t1 != null) {
        t1 = t1._parentView;
        containerElement = t1.viewData._viewContainerElement;
        if (containerElement != null) {
          t2 = containerElement.nestedViews;
          containerElement.detachView$1((t2 && C.JSArray_methods).indexOf$1(t2, t1));
        }
        t1.destroyInternalState$0();
      }
      this._childComponent = null;
    },
    set$componentFactory: function(component) {
      if (this._componentFactory != component)
        this._factoryChanged = true;
      this._componentFactory = component;
    },
    ngAfterChanges$0: function() {
      var _this = this;
      if (_this._factoryChanged || _this._typeChanged) {
        _this._disposeChildComponent$0();
        if (_this._viewContainerRef != null)
          _this._initialize$0();
        else
          _this._loadDeferred = true;
      } else if (_this._valueChanged)
        _this._updateChildComponent$0();
      _this._valueChanged = _this._factoryChanged = _this._typeChanged = false;
    },
    _initialize$0: function() {
      var t2, t3, t4, t5, t6, contextInjector, componentRef, _this = this,
        t1 = _this._componentFactory;
      if (t1 != null) {
        if (_this._childComponent != null)
          throw H.wrapException("Attempting to overwrite a dynamic component");
        t2 = _this._viewContainerRef;
        _this._componentLoader.toString;
        t3 = [null];
        H.assertSubtype(t1, "$isComponentFactory", t3, "$asComponentFactory");
        t4 = t2.get$length(t2);
        t5 = t2.parentView;
        t6 = t2.index;
        contextInjector = new G.ElementInjector(t5, t6, C.EmptyInjector_null);
        H.assertSubtype(t1, "$isComponentFactory", t3, "$asComponentFactory");
        componentRef = t1.create$2(0, contextInjector, null);
        t2.insert$2(0, componentRef._parentView, t4);
        _this._childComponent = componentRef;
        _this._onLoadController.add$1(0, componentRef);
        _this._updateChildComponent$0();
      } else {
        t1 = _this._componentType;
        if (t1 != null)
          _this._slowComponentLoader.loadNextToLocation$1$2(t1, _this._viewContainerRef, null).then$1$1(new Z.DynamicComponent__initialize_closure(_this, t1), null);
      }
    },
    _updateChildComponent$0: function() {
      this._dynamic_component$_changeDetectorRef.markPathToRootAsCheckOnce$0();
      var t1 = this._childComponent;
      if (t1 != null) {
        t1 = t1._component;
        if (t1 instanceof G.RendersValue)
          t1.value = H.interceptedTypeCheck(this._dynamic_component$_value, "$isWrRowData");
      }
    }
  };
  Z.DynamicComponent__initialize_closure.prototype = {
    call$1: function(componentRef) {
      var t1 = this.$this;
      if (!J.$eq$(this.loadType, t1._componentType)) {
        componentRef.destroy$0();
        return;
      }
      if (t1._childComponent != null)
        throw H.wrapException("Attempting to overwrite a dynamic component");
      t1._childComponent = componentRef;
      t1._onLoadController.add$1(0, componentRef);
      t1._updateChildComponent$0();
    },
    $signature: 75
  };
  Q.ViewDynamicComponent0.prototype = {
    build$0: function() {
      var _this = this,
        _ctx = _this.ctx;
      _ctx._viewContainerRef = _this._dynamic_component_template$_appEl_0 = new V.ViewContainer(0, null, _this, T.appendAnchor(_this.initViewRoot$1(_this.rootEl)));
      if (_ctx._loadDeferred) {
        _ctx._initialize$0();
        _ctx._loadDeferred = false;
      }
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      this._dynamic_component_template$_appEl_0.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      this._dynamic_component_template$_appEl_0.destroyNestedViews$0();
    },
    $asAppView: function() {
      return [Z.DynamicComponent];
    }
  };
  E.RootFocusable.prototype = {
    focus$0: function(_) {
      var t2,
        t1 = this._focus$_root;
      if (t1 == null)
        return;
      t2 = t1.tabIndex;
      if (typeof t2 !== "number")
        return t2.$lt();
      if (t2 < 0)
        t1.tabIndex = -1;
      t1.focus();
    },
    dispose$0: function() {
      this._focus$_root = null;
    },
    $isFocusable: 1,
    $isDisposable: 1
  };
  E.AutoFocusDirective.prototype = {
    ngOnInit$0: function() {
      var t1, t2, onVisibleChanged, _this = this;
      if (!H.boolConversionCheck(_this._autoFocus))
        return;
      t1 = _this._focus$_popupRef;
      t2 = t1 != null;
      if (t2) {
        if (t2 ? t1._popupComponent._isVisible : _this._focus$_modal.get$resolvedOverlayRef().get$isVisible())
          _this._focus$_domService.scheduleWrite$1(_this.get$focus(_this));
        t1 = _this._focus$_popupRef;
        if (t1 != null) {
          t1 = t1._popupComponent.PopupEvents_onVisibleController;
          onVisibleChanged = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
        } else
          onVisibleChanged = _this._focus$_modal.get$resolvedOverlayRef().get$onVisibleChanged();
        _this._focus$_disposer.addStreamSubscription$1$1(onVisibleChanged.listen$1(_this.get$_onModalOrPopupVisibleChanged()), P.bool);
      } else
        _this._focus$_domService.scheduleWrite$1(_this.get$focus(_this));
    },
    focus$0: function(_) {
      if (!H.boolConversionCheck(this._autoFocus))
        return;
      this.super$RootFocusable$focus(0);
    },
    _onModalOrPopupVisibleChanged$1: function(isVisible) {
      if (H.boolConversionCheck(H.boolTypeCheck(isVisible)))
        this._focus$_domService.scheduleWrite$1(this.get$focus(this));
    }
  };
  O.Focusable.prototype = {};
  O.KeyboardOnlyFocusIndicatorDirective.prototype = {
    keydown$1: function(e) {
      H.interceptedTypeCheck(e, "$isKeyboardEvent");
      this._lastInteraction = C._InteractionType_1;
      this.resetOutline$0();
    },
    resetOutline$0: function() {
      if (this._keyboard_only_focus_indicator$_element.style.outline !== "")
        this._keyboard_only_focus_indicator$_domService.scheduleWrite$1(new O.KeyboardOnlyFocusIndicatorDirective_resetOutline_closure(this));
    },
    onMouseInteraction$0: function() {
      this._lastInteraction = C._InteractionType_0;
      this.hideOutline$0();
    },
    hideOutline$0: function() {
      if (this._keyboard_only_focus_indicator$_element.style.outline !== "none")
        this._keyboard_only_focus_indicator$_domService.scheduleWrite$1(new O.KeyboardOnlyFocusIndicatorDirective_hideOutline_closure(this));
    }
  };
  O.KeyboardOnlyFocusIndicatorDirective_resetOutline_closure.prototype = {
    call$0: function() {
      var t1 = this.$this._keyboard_only_focus_indicator$_element.style;
      t1.outline = "";
    },
    $signature: 0
  };
  O.KeyboardOnlyFocusIndicatorDirective_hideOutline_closure.prototype = {
    call$0: function() {
      var t1 = this.$this._keyboard_only_focus_indicator$_element.style;
      t1.outline = "none";
    },
    $signature: 0
  };
  O._InteractionType.prototype = {
    toString$0: function(_) {
      return this._keyboard_only_focus_indicator$_name;
    }
  };
  D.AbstractTestability.prototype = {
    register$0: function(_) {
      var wrappedFn = P.allowInterop(this.get$whenStable(this), {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool, P.String]}]}),
        id = $.FrameworkStabilizers__nextId;
      $.FrameworkStabilizers__nextId = id + 1;
      $.FrameworkStabilizers__idToFrameworkStabilizer.$indexSet(0, id, wrappedFn);
      if (self.frameworkStabilizers == null)
        self.frameworkStabilizers = [];
      J.add$1$ax(self.frameworkStabilizers, wrappedFn);
    },
    whenStable$1: function(_, fn) {
      this._runCallbacksIfStable$1$newCallback(H.functionTypeCheck(fn, {func: 1, ret: -1, args: [P.bool, P.String]}));
    },
    _runCallbacksIfStable$1$newCallback: function(newCallback) {
      C.C__RootZone.run$1$1(new D.AbstractTestability__runCallbacksIfStable_closure(this, H.functionTypeCheck(newCallback, {func: 1, ret: -1, args: [P.bool, P.String]})), P.Null);
    },
    _runCallbacksIfStable$0: function() {
      return this._runCallbacksIfStable$1$newCallback(null);
    }
  };
  D.AbstractTestability__runCallbacksIfStable_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._dom_service_webdriver_testability$_domService;
      if (t2._insideDigest || t2._scheduledProcessQueue || t2._layoutObserveRead != null || t2._nextFrameFuture != null || t2._domReadQueue.length !== 0 || t2._domWriteQueue.length !== 0) {
        t2 = this.newCallback;
        if (t2 != null)
          C.JSArray_methods.add$1(t1._callbacks, t2);
        return;
      }
      P.Future_Future(new D.AbstractTestability__runCallbacksIfStable__closure(t1, this.newCallback), null);
    },
    $signature: 0
  };
  D.AbstractTestability__runCallbacksIfStable__closure.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = this.newCallback;
      if (t1 != null)
        t1.call$2(false, "Instance of '" + H.Primitives_objectTypeName(this.$this) + "'");
      for (t1 = this.$this, t2 = t1._callbacks; t3 = t2.length, t3 !== 0;) {
        if (0 >= t3)
          return H.ioore(t2, -1);
        t2.pop().call$2(true, "Instance of '" + H.Primitives_objectTypeName(t1) + "'");
      }
    },
    $signature: 0
  };
  D.NullTestability.prototype = {
    register$0: function(_) {
    }
  };
  L.GlyphComponent.prototype = {
    set$icon: function(_, value) {
      this._glyph$_icon = value;
      if (C.JSArray_methods.contains$1(C.List_CX7, H.stringTypeCheck(value instanceof L.Icon ? value.name : value)))
        this._glyph$_element.setAttribute("flip", "");
    }
  };
  M.ViewGlyphComponent0.prototype = {
    build$0: function() {
      var t1, _this = this,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl);
      T.appendText(parentRenderNode, "\n");
      t1 = T.appendElement(document, parentRenderNode, "i");
      _this._el_1 = t1;
      T.setAttribute(t1, "aria-hidden", "true");
      _this.updateChildClass$2(H.interceptedTypeCheck(_this._el_1, "$isHtmlElement"), "glyph-i");
      _this.addShimE$1(_this._el_1);
      _this._el_1.appendChild(_this._textBinding_2.element);
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var t1, _this = this,
        _ctx = _this.ctx;
      _ctx.toString;
      t1 = _this._glyph_template$_expr_0;
      if (t1 !== true) {
        T.updateClassBinding(H.interceptedTypeCheck(_this._el_1, "$isHtmlElement"), "material-icons", true);
        _this._glyph_template$_expr_0 = true;
      }
      t1 = _ctx._glyph$_icon;
      t1 = H.stringTypeCheck(t1 instanceof L.Icon ? t1.name : t1);
      if (t1 == null)
        t1 = "";
      _this._textBinding_2.updateText$1(t1);
    },
    $asAppView: function() {
      return [L.GlyphComponent];
    }
  };
  U.HasDisabled.prototype = {};
  D.Modal.prototype = {};
  D.ModalComponent.prototype = {$isModal: 1};
  K.Alignment.prototype = {
    get$requiresContentSizeToPosition: function() {
      return this !== C.Alignment_Start;
    },
    calcLeft$2: function(sourceRect, contentRect) {
      var left, t2,
        t1 = [P.num];
      H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
      H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
      if (this.get$requiresContentSizeToPosition() && contentRect == null)
        throw H.wrapException(P.ArgumentError$notNull("contentRect"));
      t1 = J.getInterceptor$x(sourceRect);
      left = t1.get$left(sourceRect);
      if (this === C.Alignment_Center) {
        t1 = t1.get$width(sourceRect);
        if (typeof t1 !== "number")
          return t1.$div();
        t2 = J.get$width$x(contentRect);
        if (typeof t2 !== "number")
          return t2.$div();
        left += t1 / 2 - t2 / 2;
      } else if (this === C.Alignment_End) {
        t1 = t1.get$width(sourceRect);
        t2 = J.get$width$x(contentRect);
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return H.iae(t2);
        left += t1 - t2;
      }
      return left;
    },
    calcTop$2: function(sourceRect, contentRect) {
      var $top, t2,
        t1 = [P.num];
      H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
      H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
      if (this.get$requiresContentSizeToPosition() && contentRect == null)
        throw H.wrapException(P.ArgumentError$notNull("contentRect"));
      t1 = J.getInterceptor$x(sourceRect);
      $top = t1.get$top(sourceRect);
      if (this === C.Alignment_Center) {
        t1 = t1.get$height(sourceRect);
        if (typeof t1 !== "number")
          return t1.$div();
        t2 = J.get$height$x(contentRect);
        if (typeof t2 !== "number")
          return t2.$div();
        $top += t1 / 2 - t2 / 2;
      } else if (this === C.Alignment_End) {
        t1 = t1.get$height(sourceRect);
        t2 = J.get$height$x(contentRect);
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return H.iae(t2);
        $top += t1 - t2;
      }
      return $top;
    },
    toString$0: function(_) {
      return "Alignment {" + this._displayName + "}";
    }
  };
  K._CustomAlignment.prototype = {};
  K.BeforeCustomAlignment.prototype = {
    calcLeft$2: function(sourceRect, contentRect) {
      var t2,
        t1 = [P.num];
      H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
      H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
      t1 = J.get$left$x(sourceRect);
      t2 = J.get$width$x(contentRect);
      if (typeof t2 !== "number")
        return t2.$negate();
      return t1 + -t2;
    },
    get$requiresContentSizeToPosition: function() {
      return true;
    }
  };
  K.AfterCustomAlignment.prototype = {
    calcLeft$2: function(sourceRect, contentRect) {
      var t2,
        t1 = [P.num];
      H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
      H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
      t1 = J.getInterceptor$x(sourceRect);
      t2 = t1.get$left(sourceRect);
      t1 = t1.get$width(sourceRect);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return t2 + t1;
    },
    get$requiresContentSizeToPosition: function() {
      return false;
    }
  };
  K.RelativePosition.prototype = {
    flipRelativePosition$0: function() {
      var _this = this,
        t1 = _this._flipAlignment$1(_this.originX),
        t2 = _this.animationOrigin;
      if (C.Map_yH4ig.containsKey$1(0, t2))
        t2 = C.Map_yH4ig.$index(0, t2);
      return new K.RelativePosition(t1, _this.originY, t2);
    },
    _flipAlignment$1: function(alignment) {
      if (alignment === C.Alignment_Start)
        return C.Alignment_End;
      if (alignment === C.Alignment_End)
        return C.Alignment_Start;
      if (alignment === C.BeforeCustomAlignment_Before)
        return C.AfterCustomAlignment_After;
      if (alignment === C.AfterCustomAlignment_After)
        return C.BeforeCustomAlignment_Before;
      return alignment;
    },
    toString$0: function(_) {
      return "RelativePosition " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["originX", this.originX, "originY", this.originY], P.String, K.Alignment));
    },
    get$originX: function() {
      return this.originX;
    },
    get$originY: function() {
      return this.originY;
    }
  };
  L.Visibility.prototype = {
    apply$1: function(setProperty) {
      var t1;
      H.functionTypeCheck(setProperty, {func: 1, ret: -1, args: [P.String,,]});
      t1 = this._propertyName;
      if (t1 != null)
        setProperty.call$2(t1, this._propertyValue);
    },
    toString$0: function(_) {
      return "Visibility {" + this.displayName + "}";
    }
  };
  X.ZIndexer.prototype = {};
  L.BasePortalHost.prototype = {$isPortalHost: 1, $isDisposable: 1};
  L.DomPortalHost.prototype = {};
  K.DomRuler.prototype = {};
  K.DomRulerImpl.prototype = {
    canSyncWrite$1: function(element) {
      var t1 = this._dom_ruler$_document;
      if (!!J.getInterceptor$(t1).$isHtmlDocument)
        return !H.boolConversionCheck(t1.body.contains(element));
      return !H.boolConversionCheck(t1.contains(element));
    },
    measure$1: function(_, element) {
      var t1;
      if (this.canSyncWrite$1(element)) {
        t1 = new P._Future($.Zone__current, [[P.Rectangle, P.num]]);
        t1._asyncComplete$1(C.Rectangle_0_0_0_0);
        return t1;
      }
      return this.super$RulerBase$measure(0, element, false);
    },
    measureSync$2$offset: function(element, offset) {
      return element.getBoundingClientRect();
    },
    measureSync$1: function(element) {
      return this.measureSync$2$offset(element, false);
    },
    track$1: function(_, element) {
      if (this.canSyncWrite$1(element))
        return P.Stream_Stream$fromIterable(C.List_4YB, [P.Rectangle, P.num]);
      return this.super$RulerBase$track(0, element);
    },
    removeCssClassesSync$2: function(element, classes) {
      H.assertSubtype(classes, "$isList", [P.String], "$asList");
      J.get$classes$x(element).removeAll$1(J.where$1$ax(classes, new K.DomRulerImpl_removeCssClassesSync_closure()));
    },
    addCssClassesSync$2: function(element, classes) {
      var t1;
      H.assertSubtype(classes, "$isList", [P.String], "$asList");
      t1 = H.getTypeArgumentByIndex(classes, 0);
      J.get$classes$x(element).addAll$1(0, new H.WhereIterable(classes, H.functionTypeCheck(new K.DomRulerImpl_addCssClassesSync_closure(), {func: 1, ret: P.bool, args: [t1]}), [t1]));
    },
    $isDomRuler: 1,
    $asRulerBase: function() {
      return [W.Element];
    }
  };
  K.DomRulerImpl_removeCssClassesSync_closure.prototype = {
    call$1: function(c) {
      return H.stringTypeCheck(c).length !== 0;
    },
    $signature: 12
  };
  K.DomRulerImpl_addCssClassesSync_closure.prototype = {
    call$1: function(c) {
      return H.stringTypeCheck(c).length !== 0;
    },
    $signature: 12
  };
  B.MaterialButtonComponent.prototype = {
    focusedStateChanged$0: function() {
      this._material_button$_changeDetector.markPathToRootAsCheckOnce$0();
    }
  };
  U.ViewMaterialButtonComponent0.prototype = {
    build$0: function() {
      var _el_1, t1, _el_2, t2, t3, t4, _this = this,
        _s9_ = "mousedown",
        _ctx = _this.ctx,
        _rootEl = _this.rootEl,
        parentRenderNode = _this.initViewRoot$1(_rootEl);
      T.appendText(parentRenderNode, "\n");
      _el_1 = T.appendDiv(document, parentRenderNode);
      _this.updateChildClass$2(_el_1, "content");
      _this.addShimC$1(_el_1);
      _this.project$2(_el_1, 0);
      t1 = L.ViewMaterialRippleComponent0$(_this, 2);
      _this._material_button_template$_compView_2 = t1;
      _el_2 = t1.rootEl;
      parentRenderNode.appendChild(_el_2);
      _this.addShimC$1(_el_2);
      t1 = B.MaterialRippleComponent$(_el_2);
      _this._MaterialRippleComponent_2_5 = t1;
      _this._material_button_template$_compView_2.create0$1(t1);
      t1 = _ctx.get$onMouseDown(_ctx);
      t2 = W.Event;
      t3 = J.getInterceptor$x(_el_2);
      t3.addEventListener$2(_el_2, _s9_, _this.eventHandler1$2$1(t1, t2, t2));
      t4 = _ctx.get$onMouseUp(_ctx);
      t3.addEventListener$2(_el_2, "mouseup", _this.eventHandler1$2$1(t4, t2, t2));
      _this.init0$0();
      t3 = J.getInterceptor$x(_rootEl);
      t3.addEventListener$2(_rootEl, "click", _this.eventHandler1$2$1(_ctx.get$handleClick(), t2, W.MouseEvent));
      t3.addEventListener$2(_rootEl, "keypress", _this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t2, W.KeyboardEvent));
      t3.addEventListener$2(_rootEl, _s9_, _this.eventHandler1$2$1(t1, t2, t2));
      t3.addEventListener$2(_rootEl, "mouseup", _this.eventHandler1$2$1(t4, t2, t2));
      t4 = W.UIEvent;
      t3.addEventListener$2(_rootEl, "focus", _this.eventHandler1$2$1(_ctx.get$onFocus(_ctx), t2, t4));
      t3.addEventListener$2(_rootEl, "blur", _this.eventHandler1$2$1(_ctx.get$onBlur(_ctx), t2, t4));
    },
    detectChangesInternal$0: function() {
      this._material_button_template$_compView_2.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._material_button_template$_compView_2.destroyInternalState$0();
      this._MaterialRippleComponent_2_5.ngOnDestroy$0();
    },
    detectHostChanges$1: function(firstCheck) {
      var currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, _this = this,
        _ctx = _this.ctx,
        currVal_0 = _ctx.get$tabIndex(_ctx),
        t1 = _this._material_button_template$_expr_0;
      if (t1 != currVal_0) {
        T.updateAttribute(_this.rootEl, "tabindex", currVal_0);
        _this._material_button_template$_expr_0 = currVal_0;
      }
      currVal_1 = _ctx.role;
      t1 = _this._material_button_template$_expr_1;
      if (t1 != currVal_1) {
        T.updateAttribute(_this.rootEl, "role", currVal_1);
        _this._material_button_template$_expr_1 = currVal_1;
      }
      currVal_2 = "" + _ctx.disabled;
      t1 = _this._material_button_template$_expr_2;
      if (t1 !== currVal_2) {
        T.updateAttribute(_this.rootEl, "aria-disabled", currVal_2);
        _this._material_button_template$_expr_2 = currVal_2;
      }
      currVal_3 = _ctx.disabled;
      t1 = _this._material_button_template$_expr_3;
      if (t1 !== currVal_3) {
        T.updateClassBindingNonHtml(_this.rootEl, "is-disabled", currVal_3);
        _this._material_button_template$_expr_3 = currVal_3;
      }
      currVal_4 = _ctx.disabled ? "" : null;
      t1 = _this._material_button_template$_expr_4;
      if (t1 != currVal_4) {
        T.updateAttribute(_this.rootEl, "disabled", currVal_4);
        _this._material_button_template$_expr_4 = currVal_4;
      }
      currVal_5 = _ctx.raised ? "" : null;
      t1 = _this._material_button_template$_expr_5;
      if (t1 != currVal_5) {
        T.updateAttribute(_this.rootEl, "raised", currVal_5);
        _this._material_button_template$_expr_5 = currVal_5;
      }
      currVal_6 = _ctx._focused;
      t1 = _this._material_button_template$_expr_6;
      if (t1 !== currVal_6) {
        T.updateClassBindingNonHtml(_this.rootEl, "is-focused", currVal_6);
        _this._material_button_template$_expr_6 = currVal_6;
      }
      currVal_7 = "" + (_ctx._isMouseDown || _ctx._focused ? 4 : 1);
      t1 = _this._material_button_template$_expr_7;
      if (t1 !== currVal_7) {
        T.updateAttribute(_this.rootEl, "elevation", currVal_7);
        _this._material_button_template$_expr_7 = currVal_7;
      }
    },
    $asAppView: function() {
      return [B.MaterialButtonComponent];
    }
  };
  S.MaterialButtonBase.prototype = {
    _setFocused$1: function(newValue) {
      P.scheduleMicrotask(new S.MaterialButtonBase__setFocused_closure(this, newValue));
    },
    focusedStateChanged$0: function() {
    },
    onMouseDown$1: function(_, _0) {
      this._isMouseDown = this._clickFocused = true;
    },
    onMouseUp$1: function(_, _0) {
      this._isMouseDown = false;
    },
    onFocus$1: function(_, $event) {
      H.interceptedTypeCheck($event, "$isUIEvent");
      if (this._clickFocused)
        return;
      this._setFocused$1(true);
    },
    onBlur$1: function(_, $event) {
      H.interceptedTypeCheck($event, "$isUIEvent");
      if (this._clickFocused)
        this._clickFocused = false;
      this._setFocused$1(false);
    }
  };
  S.MaterialButtonBase__setFocused_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.newValue;
      if (t1._focused !== t2) {
        t1._focused = t2;
        t1.focusedStateChanged$0();
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  B.MaterialCheckboxComponent.prototype = {
    set$checked: function(_, newValue) {
      if (this._checked == newValue)
        return;
      this._setStates$1$checked(newValue);
    },
    get$checked: function(_) {
      return this._checked;
    },
    _setStates$1$checked: function(checked) {
      var t1, _this = this,
        prevChecked = _this._checked,
        prevState = _this._checkedStr;
      _this._checked = checked;
      _this._indeterminate = false;
      t1 = H.boolConversionCheck(checked) ? "true" : "false";
      _this._checkedStr = t1;
      t1 = H.boolConversionCheck(checked) ? C.Icon_check_box : C.Icon_check_box_outline_blank;
      _this._material_checkbox$_icon = t1;
      if (checked != prevChecked)
        _this._onChecked.add$1(0, checked);
      if (_this._checkedStr !== prevState) {
        _this._syncAriaChecked$0();
        _this._onChange.add$1(0, _this._checkedStr);
      }
    },
    _setStates$0: function() {
      return this._setStates$1$checked(false);
    },
    _syncAriaChecked$0: function() {
      var t1 = this._root;
      if (t1 == null)
        return;
      t1.setAttribute("aria-checked", this._checkedStr);
      t1 = this._material_checkbox$_changeDetector;
      if (t1 != null)
        t1.markPathToRootAsCheckOnce$0();
    },
    toggleChecked$0: function() {
      var t1, _this = this;
      if (_this.disabled || false)
        return;
      t1 = H.boolConversionCheck(_this._checked);
      if (!t1)
        _this._setStates$1$checked(true);
      else
        _this._setStates$0();
    },
    handleKeyUp$1: function($event) {
      var t1 = W._convertNativeToDart_EventTarget(H.interceptedTypeCheck($event, "$isKeyboardEvent").target),
        t2 = this._root;
      if (t1 == null ? t2 != null : t1 !== t2)
        return;
      this._isKeyboardEvent = true;
    },
    handleClick$1: function(mouseEvent) {
      H.interceptedTypeCheck(mouseEvent, "$isMouseEvent");
      if (this.disabled)
        return;
      this._isKeyboardEvent = false;
      this.toggleChecked$0();
    },
    handleMouseDown$1: function(mouseEvent) {
      H.interceptedTypeCheck(mouseEvent, "$isMouseEvent");
    },
    handleKeyPress$1: function($event) {
      var t1, t2, _this = this;
      H.interceptedTypeCheck($event, "$isKeyboardEvent");
      if (_this.disabled)
        return;
      t1 = W._convertNativeToDart_EventTarget($event.target);
      t2 = _this._root;
      if (t1 == null ? t2 != null : t1 !== t2)
        return;
      if (Z.isSpaceKey($event)) {
        $event.preventDefault();
        _this._isKeyboardEvent = true;
        _this.toggleChecked$0();
      }
    },
    handleFocus$1: function(_) {
      this._material_checkbox$_focused = true;
    },
    handleBlur$1: function($event) {
      H.interceptedTypeCheck($event, "$isEvent");
      this._material_checkbox$_focused = false;
    },
    $isFocusable: 1
  };
  G.ViewMaterialCheckboxComponent0.prototype = {
    build$0: function() {
      var t2, t3, t4, _this = this,
        _ctx = _this.ctx,
        _rootEl = _this.rootEl,
        parentRenderNode = _this.initViewRoot$1(_rootEl),
        doc = document,
        t1 = T.appendDiv(doc, parentRenderNode);
      _this._material_checkbox_template$_el_0 = t1;
      _this.updateChildClass$2(t1, "icon-container");
      _this.addShimC$1(_this._material_checkbox_template$_el_0);
      t1 = M.ViewMaterialIconComponent0$(_this, 1);
      _this._material_checkbox_template$_compView_1 = t1;
      t1 = t1.rootEl;
      _this._material_checkbox_template$_el_1 = t1;
      _this._material_checkbox_template$_el_0.appendChild(t1);
      T.setAttribute(_this._material_checkbox_template$_el_1, "aria-hidden", "true");
      _this.updateChildClassNonHtml$2(_this._material_checkbox_template$_el_1, "icon");
      _this.addShimC$1(_this._material_checkbox_template$_el_1);
      t1 = new Y.MaterialIconComponent(_this._material_checkbox_template$_el_1);
      _this._material_checkbox_template$_MaterialIconComponent_1_5 = t1;
      _this._material_checkbox_template$_compView_1.create0$1(t1);
      t1 = _this._material_checkbox_template$_appEl_2 = new V.ViewContainer(2, 0, _this, T.appendAnchor(_this._material_checkbox_template$_el_0));
      _this._material_checkbox_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, G.material_checkbox_template__viewFactory_MaterialCheckboxComponent1$closure()), t1);
      t1 = T.appendDiv(doc, parentRenderNode);
      _this._el_3 = t1;
      _this.updateChildClass$2(t1, "content");
      _this.addShimC$1(_this._el_3);
      _this._el_3.appendChild(_this._textBinding_4.element);
      T.appendText(_this._el_3, " ");
      _this.project$2(_this._el_3, 0);
      _this.init0$0();
      t1 = W.Event;
      t2 = W.KeyboardEvent;
      t3 = J.getInterceptor$x(_rootEl);
      t3.addEventListener$2(_rootEl, "keyup", _this.eventHandler1$2$1(_ctx.get$handleKeyUp(), t1, t2));
      t4 = W.MouseEvent;
      t3.addEventListener$2(_rootEl, "click", _this.eventHandler1$2$1(_ctx.get$handleClick(), t1, t4));
      t3.addEventListener$2(_rootEl, "mousedown", _this.eventHandler1$2$1(_ctx.get$handleMouseDown(), t1, t4));
      t3.addEventListener$2(_rootEl, "keypress", _this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t1, t2));
      t3.addEventListener$2(_rootEl, "focus", _this.eventHandler1$2$1(_ctx.get$handleFocus(), t1, t1));
      t3.addEventListener$2(_rootEl, "blur", _this.eventHandler1$2$1(_ctx.get$handleBlur(), t1, t1));
    },
    detectChangesInternal$0: function() {
      var changed, currVal_0, currVal_2, _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData._cdState,
        currVal_3 = _ctx._material_checkbox$_icon,
        t2 = _this._material_checkbox_template$_expr_3;
      if (t2 !== currVal_3) {
        _this._material_checkbox_template$_MaterialIconComponent_1_5.set$icon(0, currVal_3);
        _this._material_checkbox_template$_expr_3 = currVal_3;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._material_checkbox_template$_compView_1.viewData.set$cdMode(1);
      _this._material_checkbox_template$_NgIf_2_9.set$ngIf(!_ctx.disabled);
      _this._material_checkbox_template$_appEl_2.detectChangesInNestedViews$0();
      currVal_0 = _ctx._material_checkbox$_focused && _ctx._isKeyboardEvent;
      t2 = _this._material_checkbox_template$_expr_0;
      if (t2 !== currVal_0) {
        T.updateClassBinding(_this._material_checkbox_template$_el_0, "focus", currVal_0);
        _this._material_checkbox_template$_expr_0 = currVal_0;
      }
      if (!H.boolConversionCheck(_ctx._checked)) {
        _ctx._indeterminate;
        currVal_2 = false;
      } else
        currVal_2 = true;
      t2 = _this._material_checkbox_template$_expr_2;
      if (t2 !== currVal_2) {
        T.updateClassBindingNonHtml(_this._material_checkbox_template$_el_1, "filled", currVal_2);
        _this._material_checkbox_template$_expr_2 = currVal_2;
      }
      if (t1 === 0)
        _this._el_3.id = _ctx.contentId;
      _this._textBinding_4.updateText$1("");
      _this._material_checkbox_template$_compView_1.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._material_checkbox_template$_appEl_2.destroyNestedViews$0();
      this._material_checkbox_template$_compView_1.destroyInternalState$0();
    },
    detectHostChanges$1: function(firstCheck) {
      var currVal_6, t1, currVal_8, currVal_9, t2, _this = this,
        _ctx = _this.ctx;
      if (firstCheck) {
        T.updateAttribute(_this.rootEl, "role", _ctx.role);
        T.updateAttribute(_this.rootEl, "aria-labelledby", _ctx.contentId);
      }
      currVal_6 = _ctx.disabled ? "-1" : _ctx._defaultTabIndex;
      t1 = _this._material_checkbox_template$_expr_6;
      if (t1 != currVal_6) {
        T.updateAttribute(_this.rootEl, "tabindex", currVal_6);
        _this._material_checkbox_template$_expr_6 = currVal_6;
      }
      currVal_8 = _ctx.disabled;
      t1 = _this._material_checkbox_template$_expr_8;
      if (t1 !== currVal_8) {
        T.updateClassBindingNonHtml(_this.rootEl, "disabled", currVal_8);
        _this._material_checkbox_template$_expr_8 = currVal_8;
      }
      currVal_9 = _ctx.disabled;
      t1 = _this._material_checkbox_template$_expr_9;
      if (t1 !== currVal_9) {
        t1 = _this.rootEl;
        t2 = String(currVal_9);
        T.updateAttribute(t1, "aria-disabled", t2);
        _this._material_checkbox_template$_expr_9 = currVal_9;
      }
    },
    $asAppView: function() {
      return [B.MaterialCheckboxComponent];
    }
  };
  G._ViewMaterialCheckboxComponent1.prototype = {
    build$0: function() {
      var _this = this,
        t1 = L.ViewMaterialRippleComponent0$(_this, 0);
      _this._material_checkbox_template$_compView_0 = t1;
      t1 = t1.rootEl;
      _this._material_checkbox_template$_el_0 = t1;
      _this.updateChildClassNonHtml$2(t1, "ripple");
      _this.addShimC$1(_this._material_checkbox_template$_el_0);
      t1 = B.MaterialRippleComponent$(_this._material_checkbox_template$_el_0);
      _this._MaterialRippleComponent_0_5 = t1;
      _this._material_checkbox_template$_compView_0.create0$1(t1);
      _this.init1$1(_this._material_checkbox_template$_el_0);
    },
    detectChangesInternal$0: function() {
      var currVal_0, t1, _this = this,
        _ctx = _this.ctx;
      if (H.boolConversionCheck(_ctx._checked)) {
        _ctx.toString;
        currVal_0 = null;
      } else
        currVal_0 = "";
      t1 = _this._material_checkbox_template$_expr_0;
      if (t1 != currVal_0) {
        t1 = _this._material_checkbox_template$_el_0.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "color"), currVal_0, null);
        _this._material_checkbox_template$_expr_0 = currVal_0;
      }
      _this._material_checkbox_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._material_checkbox_template$_compView_0.destroyInternalState$0();
      this._MaterialRippleComponent_0_5.ngOnDestroy$0();
    },
    $asAppView: function() {
      return [B.MaterialCheckboxComponent];
    }
  };
  Y.MaterialIconComponent.prototype = {
    set$icon: function(_, value) {
      this._material_icon$_icon = value;
      if (C.JSArray_methods.contains$1(C.List_CX7, this.get$iconName()))
        this._material_icon$_element.setAttribute("flip", "");
    },
    get$iconName: function() {
      var t1 = this._material_icon$_icon;
      return H.stringTypeCheck(t1 instanceof L.Icon ? t1.name : t1);
    }
  };
  M.ViewMaterialIconComponent0.prototype = {
    build$0: function() {
      var _el_1, _this = this,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl);
      T.appendText(parentRenderNode, "\n");
      _el_1 = T.appendElement(document, parentRenderNode, "i");
      T.setAttribute(_el_1, "aria-hidden", "true");
      H.interceptedTypeCheck(_el_1, "$isHtmlElement");
      _this.updateChildClass$2(_el_1, "material-icon-i material-icons");
      _this.addShimE$1(_el_1);
      _el_1.appendChild(_this._material_icon_template$_textBinding_2.element);
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var t1 = this.ctx.get$iconName();
      if (t1 == null)
        t1 = "";
      this._material_icon_template$_textBinding_2.updateText$1(t1);
    },
    $asAppView: function() {
      return [Y.MaterialIconComponent];
    }
  };
  B.MaterialListComponent.prototype = {};
  B.ViewMaterialListComponent0.prototype = {
    build$0: function() {
      var _this = this;
      _this.project$2(_this.initViewRoot$1(_this.rootEl), 0);
      _this.init0$0();
    },
    $asAppView: function() {
      return [B.MaterialListComponent];
    }
  };
  G.MaterialPopupComponent.prototype = {
    MaterialPopupComponent$14: function(_hierarchy, parentPopup, role, _ngZone, _overlayService, _domService, _zIndexer, _defaultPreferredPositions, _useRepositionLoop, _viewportBoundaries, _popupSizeProvider, _changeDetector, _viewContainer, elementRef) {
      var t1, _this = this;
      if (parentPopup != null) {
        t1 = parentPopup.PopupEvents_onCloseController;
        _this._material_popup$_disposer.addStreamSubscription$1$1(new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new G.MaterialPopupComponent_closure(_this)), -1);
      }
      _this._resolvedPopupRef = new G.MaterialPopupRef(_this);
    },
    get$hierarchy: function() {
      var t1 = this._hierarchy;
      return this._hierarchy = t1 == null ? new Z.PopupHierarchy(H.setRuntimeTypeInfo([], [Z.PopupHierarchyElement])) : t1;
    },
    _updateOverlayCssClass$0: function() {
      var hostClassName, t1;
      if (this._overlayRef == null)
        return;
      hostClassName = J.get$className$x(this.elementRef.nativeElement);
      t1 = this._overlayRef.overlayElement;
      t1.className = J.$add$ansx(t1.className, " " + H.S(hostClassName));
    },
    _initView$0: function() {
      var pane, t3, _i, node, _this = this,
        t1 = _this._overlayService,
        t2 = t1._renderService;
      t2.toString;
      pane = document.createElement("div");
      pane.setAttribute("pane-id", H.S(t2._containerName) + "-" + ++t2._uniqueId);
      pane.classList.add("pane");
      t2.applyStateSync$2(C.C__ImmutableOverlayState, pane);
      t3 = t2.containerElement;
      t3.appendChild(pane);
      t1 = B.OverlayRef$(t2.get$applyState(), t1.get$_measurePane(), new L.DomPortalHost(), t3, pane, t1._ngZone.get$runOutsideAngular(), C.C__ImmutableOverlayState);
      _this._overlayRef = t1;
      _this._material_popup$_disposer.addFunction$1(t1.get$dispose());
      _this._material_popup$_zIndexer.toString;
      t1 = J.$add$ansx(self.acxZIndex, 1);
      self.acxZIndex = t1;
      _this._zIndex = t1;
      for (t1 = _this._material_popup$_viewContainer.createEmbeddedView$1(_this.templateRef).get$flatRootNodes(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        _this._overlayRef.overlayElement.appendChild(node);
      }
      _this._updateOverlayCssClass$0();
      _this._viewInitialized = true;
    },
    set$visible: function(_, visible) {
      var _this = this;
      if (H.boolConversionCheck(visible))
        if (!_this._viewInitialized) {
          _this._initView$0();
          P.scheduleMicrotask(_this.get$_open(_this));
        } else
          _this._open$0(0);
      else if (_this._viewInitialized)
        _this._close$0();
    },
    get$autoDismissBlockers: function() {
      var t1 = this.state._backingMap._observable_map$_map,
        sourceElement = !!J.getInterceptor$(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource")).$isElementPopupSource ? H.interceptedTypeCast(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource"), "$isElementPopupSource").get$sourceElement() : null;
      t1 = this._autoDismissBlockers;
      if (sourceElement != null) {
        t1 = H.setRuntimeTypeInfo(t1.slice(0), [H.getTypeArgumentByIndex(t1, 0)]);
        C.JSArray_methods.add$1(t1, sourceElement);
      } else
        t1 = H.setRuntimeTypeInfo(t1.slice(0), [H.getTypeArgumentByIndex(t1, 0)]);
      return t1;
    },
    _open$0: function(_) {
      var t1, t2, t3, t4, t5, t6, t7, t8, popupContentsLayoutStream, popupSourceLayoutStream, _this = this, _null = null;
      if (_this._isOpening) {
        t1 = new P._Future($.Zone__current, [null]);
        t1._asyncComplete$1(_null);
        return t1;
      }
      _this._isOpening = true;
      t1 = _this._animationTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this.PopupEvents_onOpenController.add$1(0, _null);
      if (!_this._isOpening) {
        t1 = new P._Future($.Zone__current, [null]);
        t1._asyncComplete$1(_null);
        return t1;
      }
      if (!_this._viewInitialized)
        throw H.wrapException(P.StateError$("No content is attached."));
      else {
        t1 = _this.state._backingMap._observable_map$_map;
        if (H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource") == null)
          throw H.wrapException(P.StateError$("Cannot open popup: no source set."));
      }
      _this._updateViewportSize$0();
      _this._updatePopupMinMaxSize$0();
      t2 = _this._visibleDisposer;
      t3 = window;
      t4 = W.Event;
      t2.addStreamSubscription$1$1(H.assertSubtype(new R.RateLimitTransformer(C.Duration_100000, H.instantiate1(R.rate_limit_utils__throttleGuaranteeLast$closure(), _null), [t4, null]), "$isStreamTransformer", [t4, null], "$asStreamTransformer").bind$1(new W._EventStream(t3, "resize", false, [t4])).listen$1(new G.MaterialPopupComponent__open_closure(_this)), _null);
      _this._overlayRef.state.set$visibility(0, C.Visibility_Hidden_visibility_hidden);
      t3 = _this._overlayRef.overlayElement.style;
      t3.display = "";
      t3.visibility = "hidden";
      _this._onContentVisible.add$1(0, true);
      _this._material_popup$_changeDetector.markPathToRootAsCheckOnce$0();
      t3 = [P.Rectangle, P.num];
      t4 = new P._Future($.Zone__current, [t3]);
      t5 = _this._overlayRef.measureSizeChanges$0();
      t6 = H.getTypeArgumentByIndex(t5, 0);
      t7 = H.functionTypeCheck(H.instantiate1(t2.get$addStreamSubscription(), t3), {func: 1, ret: -1, args: [[P.StreamSubscription, t6]]});
      t8 = [P.StreamSubscription, t6];
      popupContentsLayoutStream = new P._AsBroadcastStream(t5, $.Zone__current.registerUnaryCallback$2$1(_null, _null, t8), $.Zone__current.registerUnaryCallback$2$1(t7, _null, t8), $.Zone__current, [t6]);
      popupContentsLayoutStream.set$_controller(new P._AsBroadcastStreamController(popupContentsLayoutStream.get$_onListen(), popupContentsLayoutStream.get$_onCancel(), [t6]));
      popupSourceLayoutStream = H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").onDimensionsChanged$1$track(H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)));
      if (!H.boolConversionCheck(H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges))))
        popupContentsLayoutStream = new P._TakeStream(1, popupContentsLayoutStream, [t6]);
      t2.addStreamSubscription$1$1(G._mergeStreams(H.setRuntimeTypeInfo([popupContentsLayoutStream, popupSourceLayoutStream], [[P.Stream, [P.Rectangle, P.num]]]), t3).listen$1(new G.MaterialPopupComponent__open_closure0(_this, new P._AsyncCompleter(t4, [t3]))), [P.List, [P.Rectangle, P.num]]);
      return t4;
    },
    _onPopupOpened$0: function() {
      var t1, t2, t3, _this = this;
      if (!_this._isOpening)
        return;
      _this.showPopup = true;
      _this._material_popup$_changeDetector.markPathToRootAsCheckOnce$0();
      t1 = _this.state._backingMap._observable_map$_map;
      if (H.boolConversionCheck(H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges))) && H.boolConversionCheck(_this._material_popup$_useRepositionLoop))
        _this._startRepositionLoop$0();
      t2 = _this.get$hierarchy();
      t3 = t2._visiblePopupStack;
      if (t3.length === 0)
        t2._rootPane = Z.closestWithClass(H.interceptedTypeCheck(_this.elementRef.nativeElement, "$isElement"), "pane");
      C.JSArray_methods.add$1(t3, _this);
      if (t2._triggerListener == null)
        t2._triggerListener = Z.triggersOutside(null).listen$1(t2.get$_onTrigger());
      if (t2._keyUpListener == null) {
        t3 = W.KeyboardEvent;
        t2._keyUpListener = W._EventStreamSubscription$(document, "keyup", H.functionTypeCheck(t2.get$_onKeyUp(), {func: 1, ret: -1, args: [t3]}), false, t3);
      }
      H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").onOpen$0(0);
      _this._animationTimer = P.Timer_Timer(C.Duration_150000, new G.MaterialPopupComponent__onPopupOpened_closure(_this));
    },
    _close$0: function() {
      var t1, t2, t3, _this = this;
      if (!_this._isOpening)
        return;
      _this._isOpening = false;
      t1 = _this._animationTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this.PopupEvents_onCloseController.add$1(0, null);
      if (_this._isOpening)
        return;
      _this._visibleDisposer.dispose$0();
      t1 = _this._repositionLoopId;
      if (t1 != null) {
        t2 = window;
        C.Window_methods._ensureRequestAnimationFrame$0(t2);
        t2.cancelAnimationFrame(t1);
        _this._repositionLoopId = null;
        t1 = _this._repositionOffsetX;
        if (t1 !== 0 || _this._repositionOffsetY !== 0) {
          t2 = _this._overlayRef.state;
          t3 = t2._left;
          if (typeof t3 !== "number")
            return t3.$add();
          t2.set$left(0, t3 + t1);
          t1 = t2._top;
          t3 = _this._repositionOffsetY;
          if (typeof t1 !== "number")
            return t1.$add();
          t2.set$top(0, t1 + t3);
          _this._repositionOffsetX = _this._repositionOffsetY = 0;
        }
      }
      t1 = _this.state._backingMap._observable_map$_map;
      if (!!J.getInterceptor$(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource")).$isFocusable) {
        t2 = J.getInterceptor$(_this.get$hierarchy()._lastTriggerEvent);
        t2 = !!t2.$isKeyboardEvent || !!t2.$isFocusEvent;
      } else
        t2 = false;
      if (t2)
        _this._material_popup$_domService.scheduleWrite$1(new G.MaterialPopupComponent__close_closure(_this));
      t2 = _this.get$hierarchy();
      t3 = t2._visiblePopupStack;
      if (C.JSArray_methods.remove$1(t3, _this) && t3.length === 0) {
        t2._rootPane = null;
        t2._triggerListener.cancel$0(0);
        t2._keyUpListener.cancel$0(0);
        t2._keyUpListener = t2._triggerListener = null;
      }
      _this.showPopup = false;
      _this._material_popup$_changeDetector.markPathToRootAsCheckOnce$0();
      H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").onClose$0(0);
      _this._animationTimer = P.Timer_Timer(C.Duration_150000, new G.MaterialPopupComponent__close_closure0(_this));
    },
    _onPopupClosed$0: function() {
      var t1, _this = this;
      _this._onContentVisible.add$1(0, false);
      _this._material_popup$_changeDetector.markPathToRootAsCheckOnce$0();
      _this._overlayRef.state.set$visibility(0, C.Visibility_None_display_none);
      t1 = _this._overlayRef.overlayElement.style;
      t1.display = "none";
      _this._isVisible = false;
      _this.PopupEvents_onVisibleController.add$1(0, false);
    },
    get$_sourceDimensions: function() {
      var containerRect,
        t1 = H.interceptedTypeCheck(this.state._backingMap._observable_map$_map.$index(0, C.Symbol_source), "$isPopupSource"),
        sourceDimensions = t1 == null ? null : t1.get$dimensions();
      if (sourceDimensions == null)
        return;
      t1 = this._overlayRef.containerElement;
      containerRect = t1 == null ? null : t1.getBoundingClientRect();
      if (containerRect == null)
        return;
      return P.Rectangle$(C.JSNumber_methods.round$0(sourceDimensions.left - containerRect.left), C.JSNumber_methods.round$0(sourceDimensions.top - containerRect.top), C.JSNumber_methods.round$0(sourceDimensions.width), C.JSNumber_methods.round$0(sourceDimensions.height), P.num);
    },
    _startRepositionLoop$0: function() {
      var t3,
        t1 = this._material_popup$_ngZone,
        t2 = P.Null;
      t1.toString;
      t3 = H.functionTypeCheck(new G.MaterialPopupComponent__startRepositionLoop_closure(this), {func: 1, ret: t2});
      t1._outerZone.run$1$1(t3, t2);
    },
    _reposition$1: function(_) {
      var sourceDimensions, t1, t2, newOffsetX, newOffsetY, popupRect, t3, boundedViewportRect, x, t4, t5, y, viewportShift, _this = this;
      _this._repositionLoopId = C.Window_methods.requestAnimationFrame$1(window, _this.get$_reposition());
      sourceDimensions = _this.get$_sourceDimensions();
      if (sourceDimensions == null)
        return;
      if (_this._initialSourceDimensions == null)
        _this.set$_initialSourceDimensions(sourceDimensions);
      t1 = sourceDimensions.left;
      t2 = _this._initialSourceDimensions;
      newOffsetX = C.JSNumber_methods.round$0(t1 - t2.left);
      newOffsetY = C.JSNumber_methods.round$0(sourceDimensions.top - t2.top);
      t2 = _this._repositionOffsetX;
      t1 = _this._repositionOffsetY;
      _this._repositionOffsetX = newOffsetX;
      _this._repositionOffsetY = newOffsetY;
      if (H.boolConversionCheck(H.boolTypeCheck(_this.state._backingMap._observable_map$_map.$index(0, C.Symbol_constrainToViewport)))) {
        popupRect = _this._overlayRef.overlayElement.getBoundingClientRect();
        t3 = P.num;
        popupRect = P.Rectangle$(popupRect.left + (newOffsetX - t2), popupRect.top + (newOffsetY - t1), popupRect.width, popupRect.height, t3);
        boundedViewportRect = G._boundRectangle(_this._viewportRect, _this._viewportBoundaries);
        t1 = popupRect.left;
        t2 = boundedViewportRect.left;
        if (t1 < t2)
          x = t2 - t1;
        else {
          t4 = popupRect.width;
          if (typeof t4 !== "number")
            return H.iae(t4);
          t4 = H.assertSubtypeOfRuntimeType(t1 + t4, H.getTypeArgumentByIndex(popupRect, 0));
          t5 = boundedViewportRect.width;
          if (typeof t5 !== "number")
            return H.iae(t5);
          t5 = H.assertSubtypeOfRuntimeType(t2 + t5, H.getTypeArgumentByIndex(boundedViewportRect, 0));
          x = t4 > t5 ? Math.max(t5 - t4, t2 - t1) : 0;
        }
        t1 = popupRect.top;
        t2 = boundedViewportRect.top;
        if (t1 < t2)
          y = t2 - t1;
        else {
          t4 = popupRect.height;
          if (typeof t4 !== "number")
            return H.iae(t4);
          t4 = H.assertSubtypeOfRuntimeType(t1 + t4, H.getTypeArgumentByIndex(popupRect, 0));
          t5 = boundedViewportRect.height;
          if (typeof t5 !== "number")
            return H.iae(t5);
          t5 = H.assertSubtypeOfRuntimeType(t2 + t5, H.getTypeArgumentByIndex(boundedViewportRect, 0));
          y = t4 > t5 ? Math.max(t5 - t4, t2 - t1) : 0;
        }
        viewportShift = P.Rectangle$(C.JSNumber_methods.round$0(x), C.JSNumber_methods.round$0(y), 0, 0, t3);
        _this._repositionOffsetX = H.intTypeCheck(_this._repositionOffsetX + viewportShift.left);
        _this._repositionOffsetY = H.intTypeCheck(_this._repositionOffsetY + viewportShift.top);
      }
      t1 = _this._overlayRef.overlayElement.style;
      t2 = "translate(" + _this._repositionOffsetX + "px, " + _this._repositionOffsetY + "px)";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform"), t2, "");
    },
    _updateViewportSize$0: function() {
      var width, height,
        t1 = this._viewportRect,
        t2 = H.getTypeArgumentByIndex(t1, 0),
        t3 = H.assertSubtypeOfRuntimeType(window.innerWidth, t2);
      if (typeof t3 !== "number")
        return t3.$lt();
      if (t3 < 0)
        width = H.assertSubtypeOfRuntimeType(-t3 * 0, t2);
      else
        width = t3;
      t1.set$_width(0, width);
      t3 = H.assertSubtypeOfRuntimeType(window.innerHeight, t2);
      if (typeof t3 !== "number")
        return t3.$lt();
      if (t3 < 0)
        height = H.assertSubtypeOfRuntimeType(-t3 * 0, t2);
      else
        height = t3;
      t1.set$_height(0, height);
    },
    _updatePopupMinMaxSize$0: function() {
      var boundedViewportRect, t2, t3, t4, _this = this,
        t1 = _this._popupSizeProvider;
      if (t1 == null)
        return;
      boundedViewportRect = G._boundRectangle(_this._viewportRect, _this._viewportBoundaries);
      t2 = _this._overlayRef.state._top;
      if (t2 == null)
        t2 = 0;
      t3 = boundedViewportRect.height;
      _this.minHeight = t1.getMinHeight$2(t2, t3);
      t2 = _this._overlayRef.state._left;
      if (t2 == null)
        t2 = 0;
      t4 = boundedViewportRect.width;
      _this.minWidth = t1.getMinWidth$2(t2, t4);
      t2 = _this._overlayRef.state._top;
      _this.maxHeight = t1.getMaxHeight$2(t2 == null ? 0 : t2, t3);
      t2 = _this._overlayRef.state._left;
      _this.maxWidth = t1.getMaxWidth$2(t2 == null ? 0 : t2, t4);
    },
    _getBestPosition$3: function(contentRect, sourceRect, containerRect) {
      var containerOffset, t3, t4, positions, bestPosition, t5, t6, t7, bestOverlap, position, containerPos, t8, t9, t10, t11, t12, t13, t14, t15, left, $top, screenPos, overlapRect, overlap,
        t1 = P.num,
        t2 = [t1];
      H.assertSubtype(contentRect, "$isRectangle", t2, "$asRectangle");
      H.assertSubtype(sourceRect, "$isRectangle", t2, "$asRectangle");
      containerOffset = J.get$topLeft$x(H.assertSubtype(containerRect, "$isRectangle", t2, "$asRectangle"));
      t3 = this.state._backingMap._observable_map$_map;
      t4 = G._flatten(H.listSuperNativeTypeCheck(t3.$index(0, C.Symbol_preferredPositions), "$isIterable"));
      positions = G._flatten(!t4.get$isEmpty(t4) ? H.listSuperNativeTypeCheck(t3.$index(0, C.Symbol_preferredPositions), "$isIterable") : this._defaultPreferredPositions);
      bestPosition = positions.get$first(positions);
      for (t4 = new P._SyncStarIterator(positions._outerHelper(), [H.getTypeArgumentByIndex(positions, 0)]), t5 = this._viewportRect, t6 = J.getInterceptor$x(contentRect), t7 = t5.top, bestOverlap = 0; t4.moveNext$0();) {
        position = t4.get$current(t4);
        if (H.interceptedTypeCheck(t3.$index(0, C.Symbol_source), "$isPopupSource").get$isRtl() === true)
          position = position.flipRelativePosition$0();
        containerPos = P.Rectangle$(position.get$originX().calcLeft$2(sourceRect, contentRect), position.get$originY().calcTop$2(sourceRect, contentRect), t6.get$width(contentRect), t6.get$height(contentRect), t1);
        t8 = containerPos.left;
        t9 = containerPos.top;
        t10 = H.getTypeArgumentByIndex(containerPos, 0);
        H.assertSubtype(containerOffset, "$isPoint", [t10], "$asPoint");
        t11 = containerOffset.x;
        if (typeof t11 !== "number")
          return H.iae(t11);
        t12 = H.assertSubtypeOfRuntimeType(t8 + t11, t10);
        t13 = containerOffset.y;
        if (typeof t13 !== "number")
          return H.iae(t13);
        t14 = H.assertSubtypeOfRuntimeType(t9 + t13, t10);
        t15 = containerPos.width;
        if (typeof t15 !== "number")
          return H.iae(t15);
        t15 = H.assertSubtypeOfRuntimeType(t8 + t15, t10);
        t8 = containerPos.height;
        if (typeof t8 !== "number")
          return H.iae(t8);
        t8 = H.assertSubtypeOfRuntimeType(t9 + t8, t10);
        t11 = H.assertSubtypeOfRuntimeType(t15 + t11, t10);
        t10 = H.assertSubtypeOfRuntimeType(t8 + t13, t10);
        left = Math.min(t12, t11);
        t11 = Math.max(t12, t11);
        $top = Math.min(t14, t10);
        screenPos = P.Rectangle$(left, $top, t11 - left, Math.max(t14, t10) - $top, t1);
        H.assertSubtype(screenPos, "$isRectangle", t2, "$asRectangle");
        t8 = t5.left;
        t9 = screenPos.left;
        if (t8 <= t9) {
          t10 = t5.get$width(t5);
          if (typeof t10 !== "number")
            return H.iae(t10);
          t11 = screenPos.width;
          if (typeof t11 !== "number")
            return H.iae(t11);
          if (t8 + t10 >= t9 + t11) {
            t8 = screenPos.top;
            if (t7 <= t8) {
              t9 = t5.get$height(t5);
              if (typeof t9 !== "number")
                return H.iae(t9);
              t10 = screenPos.height;
              if (typeof t10 !== "number")
                return H.iae(t10);
              t10 = t7 + t9 >= t8 + t10;
              t8 = t10;
            } else
              t8 = false;
          } else
            t8 = false;
        } else
          t8 = false;
        if (t8) {
          bestPosition = position;
          break;
        }
        overlapRect = t5.intersection$1(0, screenPos);
        if (overlapRect == null)
          continue;
        t8 = overlapRect.width;
        t9 = overlapRect.height;
        if (typeof t8 !== "number")
          return t8.$mul();
        if (typeof t9 !== "number")
          return H.iae(t9);
        overlap = t8 * t9;
        if (overlap > bestOverlap) {
          bestOverlap = overlap;
          bestPosition = position;
        }
      }
      return H.interceptedTypeCheck(bestPosition, "$isRelativePosition");
    },
    _schedulePositionUpdate$2: function(contentClientRect, sourceClientRect) {
      var t1 = [P.num];
      return this._schedulePositionUpdate$body$MaterialPopupComponent(H.assertSubtype(contentClientRect, "$isRectangle", t1, "$asRectangle"), H.assertSubtype(sourceClientRect, "$isRectangle", t1, "$asRectangle"));
    },
    _schedulePositionUpdate$body$MaterialPopupComponent: function(contentClientRect, sourceClientRect) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(null),
        $async$returnValue, $async$self = this, t2, t3, t4, t5, position, offsetX, containerRect, t1, isRtl;
      var $async$_schedulePositionUpdate$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self._overlayService._renderService.measureContainer$0(), $async$_schedulePositionUpdate$2);
            case 3:
              // returning from await.
              containerRect = $async$result;
              t1 = $async$self.state._backingMap._observable_map$_map;
              isRtl = H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").get$isRtl() === true;
              $async$self._overlayRef.state;
              if (H.boolConversionCheck(H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth)))) {
                t2 = $async$self._overlayRef.state;
                t3 = J.get$width$x(sourceClientRect);
                if (t2._minWidth != t3) {
                  t2._minWidth = t3;
                  t2._asyncScheduler.scheduleUpdate$0();
                }
              }
              if (H.boolConversionCheck(H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth)))) {
                t2 = J.get$width$x(sourceClientRect);
                t3 = J.getInterceptor$x(contentClientRect);
                t4 = t3.get$width(contentClientRect);
                t4 = Math.max(H.checkNum(t2), H.checkNum(t4));
                t2 = t3.get$left(contentClientRect);
                t5 = t3.get$top(contentClientRect);
                t3 = t3.get$height(contentClientRect);
                contentClientRect = P.Rectangle$(t2, t5, t4, t3, P.num);
              }
              position = H.boolConversionCheck(H.boolTypeCheck(t1.$index(0, C.Symbol_enforceSpaceConstraints))) ? $async$self._getBestPosition$3(contentClientRect, sourceClientRect, containerRect) : null;
              if (position == null) {
                position = new K.RelativePosition(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").get$alignOriginX(), H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").get$alignOriginY(), "top left");
                if (isRtl)
                  position = position.flipRelativePosition$0();
              }
              t2 = J.getInterceptor$x(containerRect);
              if (isRtl) {
                t2 = t2.get$left(containerRect);
                t3 = H.intTypeCheck(t1.$index(0, C.Symbol_offsetX));
                if (typeof t3 !== "number") {
                  $async$returnValue = H.iae(t3);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                offsetX = t2 - t3;
              } else {
                t3 = H.intTypeCheck(t1.$index(0, C.Symbol_offsetX));
                t2 = t2.get$left(containerRect);
                if (typeof t3 !== "number") {
                  $async$returnValue = t3.$sub();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                offsetX = t3 - t2;
              }
              t1 = H.intTypeCheck(t1.$index(0, C.Symbol_offsetY));
              t2 = J.get$top$x(containerRect);
              if (typeof t1 !== "number") {
                $async$returnValue = t1.$sub();
                // goto return
                $async$goto = 1;
                break;
              }
              t3 = $async$self._overlayRef.state;
              t3.set$left(0, position.originX.calcLeft$2(sourceClientRect, contentClientRect) + offsetX);
              t3.set$top(0, position.originY.calcTop$2(sourceClientRect, contentClientRect) + (t1 - t2));
              t3.set$visibility(0, C.Visibility_Visible_null_null);
              t3 = $async$self._overlayRef.overlayElement.style;
              t3.visibility = "visible";
              t3.display = "";
              $async$self._alignmentPosition = position;
              $async$self._updatePopupMinMaxSize$0();
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_schedulePositionUpdate$2, $async$completer);
    },
    set$_initialSourceDimensions: function(_initialSourceDimensions) {
      this._initialSourceDimensions = H.assertSubtype(_initialSourceDimensions, "$isRectangle", [P.num], "$asRectangle");
    },
    $isDropdownHandle: 1
  };
  G.MaterialPopupComponent_closure.prototype = {
    call$1: function(_) {
      this.$this.set$visible(0, false);
      return;
    },
    $signature: 80
  };
  G.MaterialPopupComponent__open_closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this;
      t1._updateViewportSize$0();
      t1._updatePopupMinMaxSize$0();
    },
    $signature: 7
  };
  G.MaterialPopupComponent__open_closure0.prototype = {
    call$1: function(layoutRects) {
      var t1, t2;
      H.assertSubtype(layoutRects, "$isList", [[P.Rectangle, P.num]], "$asList");
      t1 = J.getInterceptor$ax(layoutRects);
      if (t1.every$1(layoutRects, new G.MaterialPopupComponent__open__closure())) {
        t2 = this.initialData;
        if (t2.future._state === 0) {
          this.$this._onPopupOpened$0();
          t2.complete$1(0, null);
        }
        t2 = this.$this;
        t2.set$_initialSourceDimensions(null);
        t2._schedulePositionUpdate$2(t1.$index(layoutRects, 0), t1.$index(layoutRects, 1));
      }
    },
    $signature: 81
  };
  G.MaterialPopupComponent__open__closure.prototype = {
    call$1: function(r) {
      return H.assertSubtype(r, "$isRectangle", [P.num], "$asRectangle") != null;
    },
    $signature: 82
  };
  G.MaterialPopupComponent__onPopupOpened_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._animationTimer = null;
      t1._isVisible = true;
      t1.PopupEvents_onVisibleController.add$1(0, true);
      t1._onOpened.add$1(0, null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  G.MaterialPopupComponent__close_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (H.boolConversionCheck(t1._overlayRef.overlayElement.contains(window.document.activeElement)))
        H.interceptedTypeCast(H.interceptedTypeCheck(t1.state._backingMap._observable_map$_map.$index(0, C.Symbol_source), "$isPopupSource"), "$isFocusable").focus$0(0);
    },
    $signature: 0
  };
  G.MaterialPopupComponent__close_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._animationTimer = null;
      t1._onPopupClosed$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  G.MaterialPopupComponent__startRepositionLoop_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._repositionLoopId = C.Window_methods.requestAnimationFrame$1(window, t1.get$_reposition());
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  G.MaterialPopupRef.prototype = {$isPopupRef: 1};
  G._mergeStreams_closure.prototype = {
    call$0: function() {
      var _this = this, t1 = {};
      t1.i = 0;
      C.JSArray_methods.forEach$1(_this.streams, new G._mergeStreams__closure(t1, _this._box_1, _this.streamSubscriptions, _this.cachedResults, _this.T));
    },
    $signature: 0
  };
  G._mergeStreams__closure.prototype = {
    call$1: function(stream) {
      var t2, _this = this,
        t1 = _this.T;
      H.assertSubtype(stream, "$isStream", [t1], "$asStream");
      t2 = _this._box_0.i++;
      C.JSArray_methods.$indexSet(_this.streamSubscriptions, t2, stream.listen$1(new G._mergeStreams___closure(_this._box_1, _this.cachedResults, t2, t1)));
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [[P.Stream, this.T]]};
    }
  };
  G._mergeStreams___closure.prototype = {
    call$1: function(result) {
      var _this = this,
        t1 = _this.cachedResults;
      C.JSArray_methods.$indexSet(t1, _this.n, H.assertSubtypeOfRuntimeType(result, _this.T));
      _this._box_1.streamController.add$1(0, t1);
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [this.T]};
    }
  };
  G._mergeStreams_closure0.prototype = {
    call$0: function() {
      var t1, t2, _i;
      for (t1 = this.streamSubscriptions, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].cancel$0(0);
    },
    $signature: 0
  };
  G._MaterialPopupComponent_Object_PopupBase.prototype = {};
  G._MaterialPopupComponent_Object_PopupBase_PopupEvents.prototype = {};
  G._MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement.prototype = {};
  A.ViewMaterialPopupComponent0.prototype = {
    build$0: function() {
      var t1, _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl);
      T.appendText(parentRenderNode, "\n");
      t1 = new V.ViewContainer(1, null, _this, T.appendAnchor(parentRenderNode));
      _this._material_popup_template$_appEl_1 = t1;
      _this._TemplateRef_1_7 = new D.TemplateRef(t1, A.material_popup_template__viewFactory_MaterialPopupComponent1$closure());
      T.appendText(parentRenderNode, "\n");
      _ctx.templateRef = _this._TemplateRef_1_7;
      _this.init0$0();
    },
    $asAppView: function() {
      return [G.MaterialPopupComponent];
    }
  };
  A._ViewMaterialPopupComponent1.prototype = {
    build$0: function() {
      var _el_6, _el_8, _el_10, _el_14, _el_18, _el_24, _text_27, _this = this,
        _s11_ = "\n          ",
        _s21_ = "focusable-placeholder",
        _s15_ = "\n              ",
        _s19_ = "\n                  ",
        _text_0 = T.createText("\n  "),
        doc = document,
        t1 = doc.createElement("div");
      H.interceptedTypeCheck(t1, "$isDivElement");
      _this._material_popup_template$_el_1 = t1;
      _this.updateChildClass$2(t1, "popup-wrapper mixin");
      _this.addShimC$1(_this._material_popup_template$_el_1);
      T.appendText(_this._material_popup_template$_el_1, "\n      ");
      t1 = T.appendDiv(doc, _this._material_popup_template$_el_1);
      _this._material_popup_template$_el_3 = t1;
      _this.updateChildClass$2(t1, "popup");
      _this.addShimC$1(_this._material_popup_template$_el_3);
      T.appendText(_this._material_popup_template$_el_3, _s11_);
      T.appendText(_this._material_popup_template$_el_3, _s11_);
      _el_6 = T.appendDiv(doc, _this._material_popup_template$_el_3);
      _this.updateChildClass$2(_el_6, _s21_);
      _el_6.tabIndex = 0;
      _this.addShimC$1(_el_6);
      T.appendText(_this._material_popup_template$_el_3, _s11_);
      _el_8 = T.appendDiv(doc, _this._material_popup_template$_el_3);
      _this.updateChildClass$2(_el_8, "material-popup-content content");
      _this.addShimC$1(_el_8);
      T.appendText(_el_8, _s15_);
      _el_10 = T.appendElement(doc, _el_8, "header");
      _this.addShimE$1(_el_10);
      T.appendText(_el_10, _s19_);
      _this.project$2(_el_10, 0);
      T.appendText(_el_10, _s15_);
      T.appendText(_el_8, _s15_);
      _el_14 = T.appendDiv(doc, _el_8);
      _this.updateChildClass$2(_el_14, "main");
      _this.addShimC$1(_el_14);
      T.appendText(_el_14, _s19_);
      _this.project$2(_el_14, 1);
      T.appendText(_el_14, _s15_);
      T.appendText(_el_8, _s15_);
      _el_18 = T.appendElement(doc, _el_8, "footer");
      _this.addShimE$1(_el_18);
      T.appendText(_el_18, _s19_);
      _this.project$2(_el_18, 2);
      T.appendText(_el_18, _s15_);
      T.appendText(_el_8, _s11_);
      T.appendText(_this._material_popup_template$_el_3, _s11_);
      T.appendText(_this._material_popup_template$_el_3, _s11_);
      _el_24 = T.appendDiv(doc, _this._material_popup_template$_el_3);
      _this.updateChildClass$2(_el_24, _s21_);
      _el_24.tabIndex = 0;
      _this.addShimC$1(_el_24);
      T.appendText(_this._material_popup_template$_el_3, "\n      ");
      T.appendText(_this._material_popup_template$_el_1, "\n  ");
      _text_27 = T.createText("\n");
      t1 = W.Event;
      (_el_6 && C.DivElement_methods).addEventListener$2(_el_6, "focus", _this.eventHandler1$2$1(_this.get$_handle_focus_6_0(), t1, t1));
      (_el_24 && C.DivElement_methods).addEventListener$2(_el_24, "focus", _this.eventHandler1$2$1(_this.get$_handle_focus_24_0(), t1, t1));
      _this.init$2(H.setRuntimeTypeInfo([_text_0, _this._material_popup_template$_el_1, _text_27], [P.Object]), null);
    },
    detectChangesInternal$0: function() {
      var t1, t2, currVal_2, currVal_5, currVal_6, currVal_7, currVal_8, currVal_12, currVal_13, _this = this, _null = null,
        _ctx = _this.ctx;
      if (_this.viewData._cdState === 0) {
        t1 = _this._material_popup_template$_el_1;
        t2 = _ctx.role;
        T.setAttribute(t1, "role", t2);
      }
      _ctx.toString;
      t1 = _this._material_popup_template$_expr_0;
      if (t1 !== 2) {
        t1 = _this._material_popup_template$_el_1;
        t2 = C.JSInt_methods.toString$0(2);
        T.updateAttribute(t1, "elevation", t2);
        _this._material_popup_template$_expr_0 = 2;
      }
      t1 = _this._material_popup_template$_expr_1;
      if (t1 !== true) {
        T.updateClassBinding(_this._material_popup_template$_el_1, "shadow", true);
        _this._material_popup_template$_expr_1 = true;
      }
      currVal_2 = _ctx._matchMinSourceWidth;
      t1 = _this._material_popup_template$_expr_2;
      if (t1 !== currVal_2) {
        T.updateClassBinding(_this._material_popup_template$_el_1, "full-width", currVal_2);
        _this._material_popup_template$_expr_2 = currVal_2;
      }
      t1 = _this._material_popup_template$_expr_3;
      if (t1 !== false) {
        T.updateClassBinding(_this._material_popup_template$_el_1, "ink", false);
        _this._material_popup_template$_expr_3 = false;
      }
      currVal_5 = _ctx._zIndex;
      t1 = _this._material_popup_template$_expr_5;
      if (t1 != currVal_5) {
        t1 = _this._material_popup_template$_el_1;
        T.updateAttribute(t1, "z-index", currVal_5 == null ? _null : C.JSInt_methods.toString$0(currVal_5));
        _this._material_popup_template$_expr_5 = currVal_5;
      }
      t1 = _ctx._alignmentPosition;
      currVal_6 = t1 == null ? _null : t1.animationOrigin;
      t1 = _this._material_popup_template$_expr_6;
      if (t1 != currVal_6) {
        t1 = _this._material_popup_template$_el_1.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform-origin"), currVal_6, _null);
        _this._material_popup_template$_expr_6 = currVal_6;
      }
      currVal_7 = _ctx.showPopup;
      t1 = _this._material_popup_template$_expr_7;
      if (t1 !== currVal_7) {
        T.updateClassBinding(_this._material_popup_template$_el_1, "visible", currVal_7);
        _this._material_popup_template$_expr_7 = currVal_7;
      }
      currVal_8 = _ctx._material_popup$_uniqueId;
      t1 = _this._material_popup_template$_expr_8;
      if (t1 !== currVal_8) {
        _this._material_popup_template$_el_1.id = currVal_8;
        _this._material_popup_template$_expr_8 = currVal_8;
      }
      currVal_12 = _ctx.maxHeight;
      t1 = _this._material_popup_template$_expr_12;
      if (t1 != currVal_12) {
        t1 = _this._material_popup_template$_el_3.style;
        t2 = currVal_12 == null ? _null : C.JSInt_methods.toString$0(currVal_12) + "px";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "max-height"), t2, _null);
        _this._material_popup_template$_expr_12 = currVal_12;
      }
      currVal_13 = _ctx.maxWidth;
      t1 = _this._material_popup_template$_expr_13;
      if (t1 != currVal_13) {
        t1 = _this._material_popup_template$_el_3.style;
        t2 = currVal_13 == null ? _null : C.JSInt_methods.toString$0(currVal_13) + "px";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "max-width"), t2, _null);
        _this._material_popup_template$_expr_13 = currVal_13;
      }
    },
    _handle_focus_6_0$1: function($$event) {
      this.ctx.set$visible(0, false);
    },
    _handle_focus_24_0$1: function($$event) {
      this.ctx.set$visible(0, false);
    },
    $asAppView: function() {
      return [G.MaterialPopupComponent];
    }
  };
  X.MaterialProgressComponent.prototype = {
    _calcRatio$1: function(value) {
      return (C.JSInt_methods.clamp$2(value, 0, this.max) - 0) / (this.max - 0);
    }
  };
  S.ViewMaterialProgressComponent0.prototype = {
    build$0: function() {
      var _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        doc = document,
        t1 = T.appendDiv(doc, parentRenderNode);
      _this._material_progress_template$_el_0 = t1;
      _this.updateChildClass$2(t1, "progress-container");
      T.setAttribute(_this._material_progress_template$_el_0, "role", "progressbar");
      _this.addShimC$1(_this._material_progress_template$_el_0);
      t1 = T.appendDiv(doc, _this._material_progress_template$_el_0);
      _this._material_progress_template$_el_1 = t1;
      _this.updateChildClass$2(t1, "secondary-progress");
      _this.addShimC$1(_this._material_progress_template$_el_1);
      t1 = T.appendDiv(doc, _this._material_progress_template$_el_0);
      _this._material_progress_template$_el_2 = t1;
      _this.updateChildClass$2(t1, "active-progress");
      _this.addShimC$1(_this._material_progress_template$_el_2);
      _ctx._primaryIndicator = _this._material_progress_template$_el_2;
      _ctx._secondaryIndicator = _this._material_progress_template$_el_1;
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var currVal_1, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, _this = this,
        _s16_ = "active progress ",
        _s10_ = "aria-label",
        _s9_ = "transform",
        _ctx = _this.ctx,
        t1 = _ctx.activeProgress,
        t2 = [P.Object],
        currVal_0 = T.Intl_message(_s16_ + t1, H.setRuntimeTypeInfo([t1], t2), "Label text for active progress", C.Map_K6aNe, "MaterialProgressComponent__activeProgressValue");
      t1 = _this._material_progress_template$_expr_0;
      if (t1 !== currVal_0) {
        T.updateAttribute(_this._material_progress_template$_el_0, _s10_, currVal_0);
        _this._material_progress_template$_expr_0 = currVal_0;
      }
      currVal_1 = "" + _ctx.activeProgress;
      t1 = _this._material_progress_template$_expr_1;
      if (t1 !== currVal_1) {
        T.updateAttribute(_this._material_progress_template$_el_0, "aria-valuenow", currVal_1);
        _this._material_progress_template$_expr_1 = currVal_1;
      }
      _ctx.toString;
      t1 = _this._material_progress_template$_expr_2;
      if (t1 !== false) {
        T.updateClassBinding(_this._material_progress_template$_el_0, "indeterminate", false);
        _this._material_progress_template$_expr_2 = false;
      }
      t1 = _this._material_progress_template$_expr_3;
      if (t1 !== false) {
        T.updateClassBinding(_this._material_progress_template$_el_0, "fallback", false);
        _this._material_progress_template$_expr_3 = false;
      }
      currVal_4 = O.interpolate0(0);
      t1 = _this._material_progress_template$_expr_4;
      if (t1 !== currVal_4) {
        T.setAttribute(_this._material_progress_template$_el_0, "aria-valuemin", currVal_4);
        _this._material_progress_template$_expr_4 = currVal_4;
      }
      currVal_5 = O.interpolate0(_ctx.max);
      t1 = _this._material_progress_template$_expr_5;
      if (t1 !== currVal_5) {
        T.setAttribute(_this._material_progress_template$_el_0, "aria-valuemax", currVal_5);
        _this._material_progress_template$_expr_5 = currVal_5;
      }
      t1 = _ctx.activeProgress;
      currVal_6 = T.Intl_message(_s16_ + t1 + " secondary progress 0", H.setRuntimeTypeInfo([t1, 0], t2), "Label text for active and secondary progress", C.Map_MY6TA, "MaterialProgressComponent__activeAndSecondaryProgressValue");
      t1 = _this._material_progress_template$_expr_6;
      if (t1 !== currVal_6) {
        T.updateAttribute(_this._material_progress_template$_el_1, _s10_, currVal_6);
        _this._material_progress_template$_expr_6 = currVal_6;
      }
      currVal_7 = "scaleX(" + H.S(_ctx._calcRatio$1(0)) + ")";
      t1 = _this._material_progress_template$_expr_7;
      if (t1 !== currVal_7) {
        t1 = _this._material_progress_template$_el_1.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, _s9_), currVal_7, null);
        _this._material_progress_template$_expr_7 = currVal_7;
      }
      currVal_8 = "scaleX(" + H.S(_ctx._calcRatio$1(_ctx.activeProgress)) + ")";
      t1 = _this._material_progress_template$_expr_8;
      if (t1 !== currVal_8) {
        t1 = _this._material_progress_template$_el_2.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, _s9_), currVal_8, null);
        _this._material_progress_template$_expr_8 = currVal_8;
      }
    },
    $asAppView: function() {
      return [X.MaterialProgressComponent];
    }
  };
  B.MaterialRippleComponent.prototype = {
    MaterialRippleComponent$1: function(_element) {
      var t1, t2, className, _this = this;
      if ($._ripplePool == null) {
        t1 = new Array(3);
        t1.fixed$length = Array;
        $._ripplePool = H.setRuntimeTypeInfo(t1, [W.DivElement]);
      }
      if ($._opacityTiming == null)
        $._opacityTiming = P.LinkedHashMap_LinkedHashMap$_literal(["duration", 300], P.String, P.double);
      if ($._opacityKeyframes == null) {
        t1 = P.String;
        t2 = P.double;
        $._opacityKeyframes = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0.16, "offset", 0.25], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0.16, "offset", 0.5], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0], t1, t2)], [[P.Map, P.String, P.double]]);
      }
      if ($._transformTiming == null)
        $._transformTiming = P.LinkedHashMap_LinkedHashMap$_literal(["duration", 225, "easing", "cubic-bezier(0.4, 0.0, 0.2, 1)"], P.String, null);
      if ($._rippleTemplate == null) {
        className = $.$get$supportsAnimationApi() ? "__acx-ripple" : "__acx-ripple fallback";
        t1 = document.createElement("div");
        t1.className = className;
        $._rippleTemplate = t1;
      }
      _this.set$_onMouseDown(new B.MaterialRippleComponent_closure(_this));
      _this.set$_onKeyDown(new B.MaterialRippleComponent_closure0(_this));
      t1 = _this._element;
      t2 = J.getInterceptor$x(t1);
      t2.addEventListener$2(t1, "mousedown", _this._onMouseDown);
      t2.addEventListener$2(t1, "keydown", _this._onKeyDown);
    },
    ngOnDestroy$0: function() {
      var _this = this,
        t1 = _this._element,
        t2 = J.getInterceptor$x(t1);
      t2.removeEventListener$2(t1, "mousedown", _this._onMouseDown);
      t2.removeEventListener$2(t1, "keydown", _this._onKeyDown);
      t1 = $._ripplePool;
      (t1 && C.JSArray_methods).forEach$1(t1, new B.MaterialRippleComponent_ngOnDestroy_closure(_this));
    },
    set$_onMouseDown: function(_onMouseDown) {
      this._onMouseDown = H.functionTypeCheck(_onMouseDown, {func: 1, args: [W.Event]});
    },
    set$_onKeyDown: function(_onKeyDown) {
      this._onKeyDown = H.functionTypeCheck(_onKeyDown, {func: 1, args: [W.Event]});
    }
  };
  B.MaterialRippleComponent_closure.prototype = {
    call$1: function(e) {
      var t1, t2;
      e = H.interceptedTypeCast(H.interceptedTypeCheck(e, "$isEvent"), "$isMouseEvent");
      t1 = e.clientX;
      t2 = e.clientY;
      B._createRipple(H.intTypeCheck(t1), H.intTypeCheck(t2), this.$this._element, false);
    },
    $signature: 13
  };
  B.MaterialRippleComponent_closure0.prototype = {
    call$1: function(e) {
      e = H.interceptedTypeCheck(H.interceptedTypeCheck(e, "$isEvent"), "$isKeyboardEvent");
      if (!(e.keyCode === 13 || Z.isSpaceKey(e)))
        return;
      B._createRipple(0, 0, this.$this._element, true);
    },
    $signature: 13
  };
  B.MaterialRippleComponent_ngOnDestroy_closure.prototype = {
    call$1: function(ripple) {
      var t1, t2;
      H.interceptedTypeCheck(ripple, "$isDivElement");
      t1 = ripple == null ? null : ripple.parentElement;
      t2 = this.$this._element;
      if (t1 == null ? t2 == null : t1 === t2)
        (ripple && C.DivElement_methods).remove$0(ripple);
    },
    $signature: 83
  };
  L.ViewMaterialRippleComponent0.prototype = {
    build$0: function() {
      this.initViewRoot$1(this.rootEl);
      this.init0$0();
    },
    $asAppView: function() {
      return [B.MaterialRippleComponent];
    }
  };
  Z.ActivationHandler.prototype = {};
  Q.DropdownButtonComponent.prototype = {
    get$showButtonBorder: function() {
      var t1 = this._showButtonBorder;
      if (t1 != null)
        return t1;
      return false;
    },
    $isFocusable: 1
  };
  Q._DropdownButtonComponent_Object_FocusableMixin.prototype = {};
  Q._DropdownButtonComponent_Object_FocusableMixin_MaterialButtonWrapper.prototype = {};
  Z.ViewDropdownButtonComponent0.prototype = {
    build$0: function() {
      var t2, t3, _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = T.appendDiv(document, parentRenderNode);
      _this._dropdown_button_template$_el_0 = t1;
      T.setAttribute(t1, "buttonDecorator", "");
      _this.updateChildClass$2(_this._dropdown_button_template$_el_0, "button");
      T.setAttribute(_this._dropdown_button_template$_el_0, "keyboardOnlyFocusIndicator", "");
      _this.addShimC$1(_this._dropdown_button_template$_el_0);
      t1 = _this._dropdown_button_template$_el_0;
      _this._ButtonDirective_0_5 = new R.ButtonDirectiveNgCd(T.ButtonDirective$(t1, null, false, true));
      t2 = H.interceptedTypeCheck(_this.parentView.injectorGet$2(C.Type_DomService_2jN, _this.viewData.parentIndex), "$isDomService");
      _this._KeyboardOnlyFocusIndicatorDirective_0_6 = new O.KeyboardOnlyFocusIndicatorDirective(t1, t2, C._InteractionType_2);
      t1 = _this._dropdown_button_template$_appEl_1 = new V.ViewContainer(1, 0, _this, T.appendAnchor(_this._dropdown_button_template$_el_0));
      _this._dropdown_button_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, Z.dropdown_button_template__viewFactory_DropdownButtonComponent1$closure()), t1);
      T.appendText(_this._dropdown_button_template$_el_0, " ");
      _this.project$2(_this._dropdown_button_template$_el_0, 0);
      t1 = _this._dropdown_button_template$_appEl_3 = new V.ViewContainer(3, 0, _this, T.appendAnchor(_this._dropdown_button_template$_el_0));
      _this._dropdown_button_template$_NgIf_3_9 = new K.NgIf(new D.TemplateRef(t1, Z.dropdown_button_template__viewFactory_DropdownButtonComponent2$closure()), t1);
      t1 = _this._dropdown_button_template$_appEl_4 = new V.ViewContainer(4, null, _this, T.appendAnchor(parentRenderNode));
      _this._dropdown_button_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t1, Z.dropdown_button_template__viewFactory_DropdownButtonComponent3$closure()), t1);
      t1 = _this._dropdown_button_template$_el_0;
      t2 = W.Event;
      (t1 && C.DivElement_methods).addEventListener$2(t1, "focus", _this.eventHandler1$2$1(_this.get$_handle_focus_0_0(), t2, t2));
      t1 = _this._dropdown_button_template$_el_0;
      (t1 && C.DivElement_methods).addEventListener$2(t1, "blur", _this.eventHandler1$2$1(_this.get$_handle_blur_0_1(), t2, t2));
      t1 = _this._dropdown_button_template$_el_0;
      (t1 && C.DivElement_methods).addEventListener$2(t1, "click", _this.eventHandler1$2$1(_this.get$_handle_click_0_2(), t2, t2));
      t1 = _this._dropdown_button_template$_el_0;
      t3 = W.KeyboardEvent;
      (t1 && C.DivElement_methods).addEventListener$2(t1, "keypress", _this.eventHandler1$2$1(_this._ButtonDirective_0_5.instance.get$handleKeyPress(), t2, t3));
      t1 = _this._dropdown_button_template$_el_0;
      (t1 && C.DivElement_methods).addEventListener$2(t1, "keydown", _this.eventHandler1$2$1(_this._KeyboardOnlyFocusIndicatorDirective_0_6.get$keydown(), t2, t3));
      t3 = _this._dropdown_button_template$_el_0;
      (t3 && C.DivElement_methods).addEventListener$2(t3, "mousedown", _this.eventHandler0$1$1(_this._KeyboardOnlyFocusIndicatorDirective_0_6.get$onMouseInteraction(), t2));
      t2 = _this._ButtonDirective_0_5.instance;
      _ctx.FocusableMixin__focusable = _ctx._button = t2;
      if (_ctx.FocusableMixin__focusPending && true) {
        _ctx.FocusableMixin__focusPending = false;
        t2.focus$0(0);
      }
      _this.init0$0();
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if (token === C.Type_ButtonDirective_hH0 && nodeIndex <= 3)
        return this._ButtonDirective_0_5.instance;
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var currVal_4, currVal_6, currVal_7, currVal_8, t3, currVal_0, t4, currVal_1, currVal_2, currVal_3, _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData._cdState,
        currVal_10 = _ctx._ariaRole,
        t2 = _this._dropdown_button_template$_expr_10;
      if (t2 != currVal_10)
        _this._dropdown_button_template$_expr_10 = _this._ButtonDirective_0_5.instance.role = currVal_10;
      _ctx.MaterialButtonWrapper_disabled;
      t2 = _this._dropdown_button_template$_expr_11;
      if (t2 !== false)
        _this._dropdown_button_template$_expr_11 = _this._ButtonDirective_0_5.instance.disabled = false;
      _ctx.toString;
      t2 = _this._dropdown_button_template$_expr_12;
      if (t2 !== true)
        _this._dropdown_button_template$_expr_12 = _this._ButtonDirective_0_5.instance.tabbable = true;
      t2 = _this._dropdown_button_template$_NgIf_1_9;
      _ctx.MaterialButtonWrapper_buttonText;
      t2.set$ngIf(false);
      _this._dropdown_button_template$_NgIf_3_9.set$ngIf(_ctx.get$buttonIcon() != null);
      _this._dropdown_button_template$_NgIf_4_9.set$ngIf(false);
      _this._dropdown_button_template$_appEl_1.detectChangesInNestedViews$0();
      _this._dropdown_button_template$_appEl_3.detectChangesInNestedViews$0();
      _this._dropdown_button_template$_appEl_4.detectChangesInNestedViews$0();
      if (t1 === 0)
        T.updateAttribute(_this._dropdown_button_template$_el_0, "id", _ctx.uuid);
      t1 = _this._dropdown_button_template$_expr_2;
      if (t1 != null) {
        T.updateAttribute(_this._dropdown_button_template$_el_0, "aria-labelledby", null);
        _this._dropdown_button_template$_expr_2 = null;
      }
      currVal_4 = _ctx.get$showButtonBorder();
      t1 = _this._dropdown_button_template$_expr_4;
      if (t1 != currVal_4) {
        T.updateClassBinding(_this._dropdown_button_template$_el_0, "border", currVal_4);
        _this._dropdown_button_template$_expr_4 = currVal_4;
      }
      t1 = _this._dropdown_button_template$_expr_5;
      if (t1 !== false) {
        T.updateClassBinding(_this._dropdown_button_template$_el_0, "invalid", false);
        _this._dropdown_button_template$_expr_5 = false;
      }
      currVal_6 = _ctx.popupType;
      t1 = _this._dropdown_button_template$_expr_6;
      if (t1 !== currVal_6) {
        T.updateAttribute(_this._dropdown_button_template$_el_0, "aria-haspopup", currVal_6);
        _this._dropdown_button_template$_expr_6 = currVal_6;
      }
      currVal_7 = _ctx.ariaOwns;
      t1 = _this._dropdown_button_template$_expr_7;
      if (t1 != currVal_7) {
        T.updateAttribute(_this._dropdown_button_template$_el_0, "aria-owns", currVal_7);
        _this._dropdown_button_template$_expr_7 = currVal_7;
      }
      currVal_8 = _ctx.ariaExpanded;
      t1 = _this._dropdown_button_template$_expr_8;
      if (t1 != currVal_8) {
        t1 = _this._dropdown_button_template$_el_0;
        T.updateAttribute(t1, "aria-expanded", currVal_8 == null ? null : C.JSBool_methods.toString$0(currVal_8));
        _this._dropdown_button_template$_expr_8 = currVal_8;
      }
      t1 = _this._ButtonDirective_0_5;
      t2 = _this._dropdown_button_template$_el_0;
      t3 = t1.instance;
      currVal_0 = t3.get$tabIndex(t3);
      t4 = t1._button_decorator_template$_expr_0;
      if (t4 != currVal_0) {
        T.updateAttribute(t2, "tabindex", currVal_0);
        t1._button_decorator_template$_expr_0 = currVal_0;
      }
      currVal_1 = t3.role;
      t4 = t1._button_decorator_template$_expr_1;
      if (t4 != currVal_1) {
        T.updateAttribute(t2, "role", currVal_1);
        t1._button_decorator_template$_expr_1 = currVal_1;
      }
      currVal_2 = "" + t3.disabled;
      t4 = t1._button_decorator_template$_expr_2;
      if (t4 !== currVal_2) {
        T.updateAttribute(t2, "aria-disabled", currVal_2);
        t1._button_decorator_template$_expr_2 = currVal_2;
      }
      currVal_3 = t3.disabled;
      t3 = t1._button_decorator_template$_expr_3;
      if (t3 !== currVal_3) {
        T.updateClassBindingNonHtml(t2, "is-disabled", currVal_3);
        t1._button_decorator_template$_expr_3 = currVal_3;
      }
    },
    destroyInternal$0: function() {
      this._dropdown_button_template$_appEl_1.destroyNestedViews$0();
      this._dropdown_button_template$_appEl_3.destroyNestedViews$0();
      this._dropdown_button_template$_appEl_4.destroyNestedViews$0();
    },
    _handle_focus_0_0$1: function($$event) {
      var t1,
        _ctx = this.ctx;
      H.interceptedTypeCheck($$event, "$isFocusEvent");
      _ctx.FocusableMixin__onFocus.add$1(0, $$event);
      t1 = this._KeyboardOnlyFocusIndicatorDirective_0_6;
      if (t1._lastInteraction === C._InteractionType_0)
        t1.hideOutline$0();
      else
        t1.resetOutline$0();
    },
    _handle_blur_0_1$1: function($$event) {
      var _ctx = this.ctx;
      H.interceptedTypeCheck($$event, "$isFocusEvent");
      _ctx._dropdown_button$_blur.add$1(0, $$event);
      this._KeyboardOnlyFocusIndicatorDirective_0_6.resetOutline$0();
    },
    _handle_click_0_2$1: function($$event) {
      var t1;
      this._ButtonDirective_0_5.instance.handleClick$1(H.interceptedTypeCheck($$event, "$isMouseEvent"));
      t1 = this._KeyboardOnlyFocusIndicatorDirective_0_6;
      t1._lastInteraction = C._InteractionType_0;
      t1.hideOutline$0();
    },
    $asAppView: function() {
      return [Q.DropdownButtonComponent];
    }
  };
  Z._ViewDropdownButtonComponent1.prototype = {
    build$0: function() {
      var _this = this,
        _el_0 = document.createElement("span");
      H.interceptedTypeCheck(_el_0, "$isHtmlElement");
      _this.updateChildClass$2(_el_0, "button-text");
      _this.addShimE$1(_el_0);
      _el_0.appendChild(_this._dropdown_button_template$_textBinding_1.element);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      this.ctx.MaterialButtonWrapper_buttonText;
      this._dropdown_button_template$_textBinding_1.updateText$1("");
    },
    $asAppView: function() {
      return [Q.DropdownButtonComponent];
    }
  };
  Z._ViewDropdownButtonComponent2.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = M.ViewGlyphComponent0$(_this, 0);
      _this._dropdown_button_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      _this.updateChildClassNonHtml$2(_el_0, "icon");
      _this.addShimC$1(_el_0);
      t1 = new L.GlyphComponent(_el_0);
      _this._dropdown_button_template$_GlyphComponent_0_5 = t1;
      _this._dropdown_button_template$_compView_0.create0$1(t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var changed, _this = this,
        currVal_0 = _this.ctx.get$buttonIcon(),
        t1 = _this._dropdown_button_template$_expr_0;
      if (t1 != currVal_0) {
        _this._dropdown_button_template$_GlyphComponent_0_5.set$icon(0, currVal_0);
        _this._dropdown_button_template$_expr_0 = currVal_0;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._dropdown_button_template$_compView_0.viewData.set$cdMode(1);
      _this._dropdown_button_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._dropdown_button_template$_compView_0.destroyInternalState$0();
    },
    $asAppView: function() {
      return [Q.DropdownButtonComponent];
    }
  };
  Z._ViewDropdownButtonComponent3.prototype = {
    build$0: function() {
      var _this = this,
        t1 = document.createElement("div");
      H.interceptedTypeCheck(t1, "$isDivElement");
      _this._dropdown_button_template$_el_0 = t1;
      _this.updateChildClass$2(t1, "error-text");
      T.setAttribute(_this._dropdown_button_template$_el_0, "role", "alert");
      _this.addShimC$1(_this._dropdown_button_template$_el_0);
      _this._dropdown_button_template$_el_0.appendChild(_this._dropdown_button_template$_textBinding_1.element);
      _this.init1$1(_this._dropdown_button_template$_el_0);
    },
    detectChangesInternal$0: function() {
      var t1, currVal_1, _this = this,
        _ctx = _this.ctx;
      _ctx.error;
      t1 = _this._dropdown_button_template$_expr_0;
      if (t1 !== false) {
        T.updateClassBinding(_this._dropdown_button_template$_el_0, "invalid", false);
        _this._dropdown_button_template$_expr_0 = false;
      }
      _ctx.error;
      currVal_1 = O.interpolate0(true);
      t1 = _this._dropdown_button_template$_expr_1;
      if (t1 !== currVal_1) {
        T.setAttribute(_this._dropdown_button_template$_el_0, "aria-hidden", currVal_1);
        _this._dropdown_button_template$_expr_1 = currVal_1;
      }
      _ctx.error;
      _this._dropdown_button_template$_textBinding_1.updateText$1("");
    },
    $asAppView: function() {
      return [Q.DropdownButtonComponent];
    }
  };
  M.MaterialDropdownSelectComponent.prototype = {
    get$ariaActiveDescendant: function() {
      var t1, _this = this;
      if (!H.boolConversionCheck(_this.MaterialDropdownBase__visible))
        return "";
      if (_this.get$options(_this) != null) {
        t1 = _this.activeModel;
        return t1.id$1(0, t1.get$activeItem());
      }
      return "";
    },
    set$visible: function(_, value) {
      var _this = this;
      _this._material_dropdown_select$_changeDetector.markPathToRootAsCheckOnce$0();
      _this.super$MaterialDropdownBase$visible(0, value);
      _this.ActivateItemOnKeyPressMixin__enteredKeys = "";
      if (H.boolConversionCheck(value))
        _this._setInitialActiveItem$1$allowDeactivate(false);
    },
    set$options: function(_, newOptions) {
      var t1, _this = this;
      H.assertSubtype(newOptions, "$isSelectionOptions", _this.$ti, "$asSelectionOptions");
      _this._material_dropdown_select$_changeDetector.markPathToRootAsCheckOnce$0();
      _this.super$SelectionContainer$options(0, newOptions);
      _this._updateActiveModel$0();
      _this._setInitialActiveItem$0();
      t1 = _this._optionsListener;
      if (t1 != null)
        t1.cancel$0(0);
      t1 = _this.get$options(_this);
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._selection_options$_controller;
        t1 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      }
      _this.set$_optionsListener(t1 == null ? null : t1.listen$1(new M.MaterialDropdownSelectComponent_options_closure(_this)));
    },
    onFocus$1: function(_, $event) {
      this._focus.add$1(0, H.interceptedTypeCheck($event, "$isFocusEvent"));
    },
    onBlur$1: function(_, $event) {
      this._blur.add$1(0, H.interceptedTypeCheck($event, "$isFocusEvent"));
    },
    set$selection: function(newSelection) {
      var t1, _this = this;
      H.assertSubtype(newSelection, "$isSelectionModel", _this.$ti, "$asSelectionModel");
      _this._material_dropdown_select$_changeDetector.markPathToRootAsCheckOnce$0();
      _this.super$SelectionContainer$selection(newSelection);
      _this._setInitialActiveItem$0();
      t1 = _this._selectionListener;
      if (t1 != null)
        t1.cancel$0(0);
      t1 = _this.get$selection();
      t1 = t1 == null ? null : t1.get$selectionChanges();
      _this.set$_selectionListener(t1 == null ? null : t1.listen$1(new M.MaterialDropdownSelectComponent_selection_closure(_this)));
    },
    _updateActiveModel$0: function() {
      var items, _this = this,
        t1 = _this.get$options(_this);
      t1 = t1 == null ? null : t1._flattenedList;
      items = P.List_List$from(t1 == null ? [] : t1, true, null);
      if (_this.get$showDeselectItem())
        C.JSArray_methods.insert$2(items, 0, null);
      _this.activeModel.set$items(0, items);
    },
    _setInitialActiveItem$1$allowDeactivate: function(allowDeactivate) {
      var t1, t2, _this = this;
      if (_this.get$selection() == null || J.get$isEmpty$asx(_this.get$selection().get$selectedValues())) {
        if (allowDeactivate)
          _this.activeModel.activate$1(null);
      } else {
        t1 = _this.activeModel;
        if (t1.get$activeItem() != null)
          t2 = _this.get$showDeselectItem() && t1.get$activeItem() == null || !_this.get$selection().isSelected$1(H.assertSubtypeOfRuntimeType(t1.get$activeItem(), H.getTypeArgumentByIndex(_this, 0)));
        else
          t2 = true;
        if (t2)
          t1.activate$1(J.get$first$ax(_this.get$selection().get$selectedValues()));
      }
    },
    _setInitialActiveItem$0: function() {
      return this._setInitialActiveItem$1$allowDeactivate(true);
    },
    _handleNavigationKey$2: function($event, activateFunction) {
      var item, t1, _this = this;
      $event.preventDefault();
      activateFunction.call$0();
      if (!H.boolConversionCheck(_this.MaterialDropdownBase__visible) && _this.get$selection() != null && !J.getInterceptor$(_this.get$selection()).$isMultiSelectionModel) {
        item = _this.activeModel.get$activeItem();
        if (item == null)
          _this.deselectCurrentSelection$0();
        else {
          t1 = H.getTypeArgumentByIndex(_this, 0);
          H.assertSubtypeOfRuntimeType(item, t1);
          t1 = E.Selectable__isOptionCheck(_this.get$options(_this), item, C.SelectableOption_0, true, t1);
          if (t1)
            _this.get$selection().select$1(0, item);
        }
      }
      if (!H.boolConversionCheck(_this.MaterialDropdownBase__visible))
        _this.set$visible(0, true);
    },
    _handleKeyboardTrigger$0: function() {
      var item, t1, t2, _this = this;
      if (!H.boolConversionCheck(_this.MaterialDropdownBase__visible))
        _this.set$visible(0, true);
      else {
        item = _this.activeModel.get$activeItem();
        t1 = item == null;
        if (!t1 && _this.get$selection() != null)
          if (t1)
            _this.deselectCurrentSelection$0();
          else {
            t1 = _this.get$selection();
            t2 = H.getTypeArgumentByIndex(_this, 0);
            H.assertSubtypeOfRuntimeType(item, t2);
            if (!t1.isSelected$1(item)) {
              if (E.Selectable__isOptionCheck(_this.get$options(_this), item, C.SelectableOption_0, true, t2))
                _this.get$selection().select$1(0, item);
            } else {
              _this.get$selection();
              _this.get$selection().deselect$1(item);
            }
          }
        if (!J.getInterceptor$(_this.get$selection()).$isMultiSelectionModel) {
          _this.set$visible(0, false);
          _this.dropdownButton.focus$0(0);
        }
      }
    },
    handleClick$1: function($event) {
      if (!J.getInterceptor$(H.interceptedTypeCheck($event, "$isUIEvent")).$isMouseEvent)
        return;
      this.set$visible(0, !H.boolConversionCheck(this.MaterialDropdownBase__visible));
    },
    getMinHeight$2: function(positionY, viewportHeight) {
      var t1 = this._popupSizeDelegate;
      return t1 == null ? null : t1.getMinHeight$2(positionY, viewportHeight);
    },
    getMinWidth$2: function(positionX, viewportWidth) {
      var t1 = this._popupSizeDelegate;
      return t1 == null ? null : t1.getMinWidth$2(positionX, viewportWidth);
    },
    getMaxHeight$2: function(positionY, viewportHeight) {
      var t1 = this._popupSizeDelegate;
      if (t1 != null)
        return t1.getMaxHeight$2(positionY, viewportHeight);
      else
        return 400;
    },
    getMaxWidth$2: function(positionX, viewportWidth) {
      var t1 = this._popupSizeDelegate;
      if (t1 != null)
        return t1.getMaxWidth$2(positionX, viewportWidth);
      else
        return 448;
    },
    get$showDeselectItem: function() {
      !J.getInterceptor$(this.get$selection()).$isMultiSelectionModel;
      return false;
    },
    deselectCurrentSelection$0: function() {
      var t1 = this.get$selection();
      if (t1.get$isNotEmpty(t1))
        this.get$selection().deselect$1(J.get$single$ax(this.get$selection().get$selectedValues()));
    },
    set$_optionsListener: function(_optionsListener) {
      this._optionsListener = H.assertSubtype(_optionsListener, "$isStreamSubscription", [[P.List, [F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]]], "$asStreamSubscription");
    },
    set$_selectionListener: function(_selectionListener) {
      this._selectionListener = H.assertSubtype(_selectionListener, "$isStreamSubscription", [[P.List, [Z.SelectionChangeRecord, H.getTypeArgumentByIndex(this, 0)]]], "$asStreamSubscription");
    },
    $isActivationHandler: 1,
    $asActivationHandler: function() {
    },
    $isDropdownHandle: 1,
    $isPopupRef: 1,
    $isPopupSizeProvider: 1
  };
  M.MaterialDropdownSelectComponent_options_closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this;
      H.assertSubtype(_, "$isList", [[F.OptionGroup, H.getTypeArgumentByIndex(t1, 0)]], "$asList");
      t1._material_dropdown_select$_changeDetector.markPathToRootAsCheckOnce$0();
      t1._updateActiveModel$0();
      t1._setInitialActiveItem$0();
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [[P.List, [F.OptionGroup, H.getTypeArgumentByIndex(this.$this, 0)]]]};
    }
  };
  M.MaterialDropdownSelectComponent_selection_closure.prototype = {
    call$1: function(changes) {
      var t2, added,
        t1 = this.$this;
      H.assertSubtype(changes, "$isList", [[Z.SelectionChangeRecord, H.getTypeArgumentByIndex(t1, 0)]], "$asList");
      t1._material_dropdown_select$_changeDetector.markPathToRootAsCheckOnce$0();
      t2 = J.getInterceptor$ax(changes);
      added = J.get$isNotEmpty$asx(t2.get$last(changes).added) ? J.get$first$ax(t2.get$last(changes).added) : null;
      if (added != null) {
        t2 = t1.activeModel;
        H.assertSubtypeOfRuntimeType(added, H.getTypeArgumentByIndex(t2, 0));
        t2 = !J.$eq$(t2.get$activeItem(), added);
      } else
        t2 = false;
      if (t2)
        t1.activeModel.activate$1(added);
      t1.emitSelectionChange$0();
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [[P.List, [Z.SelectionChangeRecord, H.getTypeArgumentByIndex(this.$this, 0)]]]};
    }
  };
  M.ActivateItemOnKeyPressMixin.prototype = {
    activateOnKeyPress$5: function(activeModel, charCode, options, itemRenderer, selection) {
      var key, optionsList, startsWith, maybeSelectOption, t1, keys, _i, _this = this;
      H.functionTypeCheck(itemRenderer, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(_this, 0)]});
      if (options == null)
        return;
      key = $.ActivateItemOnKeyPressMixin__charCodeMap.$index(0, charCode);
      if (key == null) {
        key = H.Primitives_stringFromCharCode(charCode).toLowerCase();
        $.ActivateItemOnKeyPressMixin__charCodeMap.$indexSet(0, charCode, key);
      }
      optionsList = options._flattenedList;
      startsWith = new M.ActivateItemOnKeyPressMixin_activateOnKeyPress_closure(_this, P.LinkedHashMap_LinkedHashMap$_empty(null, P.String), itemRenderer);
      maybeSelectOption = new M.ActivateItemOnKeyPressMixin_activateOnKeyPress_closure0(_this, options, startsWith, activeModel, selection);
      t1 = _this.ActivateItemOnKeyPressMixin__enteredKeys;
      if (t1.length !== 0) {
        keys = t1 + key;
        for (t1 = optionsList.length, _i = 0; _i < optionsList.length; optionsList.length === t1 || (0, H.throwConcurrentModificationError)(optionsList), ++_i)
          if (H.boolConversionCheck(maybeSelectOption.call$2(optionsList[_i], keys)))
            return;
      }
      if (H.boolConversionCheck(startsWith.call$2(activeModel.get$activeItem(), key)))
        if (H.boolConversionCheck(maybeSelectOption.call$2(activeModel.get$peekNext(), key)))
          return;
      for (t1 = optionsList.length, _i = 0; _i < optionsList.length; optionsList.length === t1 || (0, H.throwConcurrentModificationError)(optionsList), ++_i)
        if (H.boolConversionCheck(maybeSelectOption.call$2(optionsList[_i], key)))
          return;
      _this.ActivateItemOnKeyPressMixin__enteredKeys = "";
    }
  };
  M.ActivateItemOnKeyPressMixin_activateOnKeyPress_closure.prototype = {
    call$2: function(option, keys) {
      var t1, searchString;
      if (option == null)
        return false;
      t1 = this.searchMap;
      searchString = t1.$index(0, option);
      if (searchString == null) {
        searchString = this.itemRenderer.call$1(H.assertSubtypeOfRuntimeType(option, H.getTypeArgumentByIndex(this.$this, 0))).toLowerCase();
        t1.$indexSet(0, option, searchString);
      }
      return C.JSString_methods.startsWith$1(searchString, keys);
    },
    $signature: 35
  };
  M.ActivateItemOnKeyPressMixin_activateOnKeyPress_closure0.prototype = {
    call$2: function(option, keys) {
      var t1, _this = this;
      if (E.Selectable__isOptionCheck(_this.options, option, C.SelectableOption_0, true, null) && H.boolConversionCheck(_this.startsWith.call$2(option, keys))) {
        _this.activeModel.activate$1(option);
        t1 = _this.selection;
        if (t1 != null)
          t1.select$1(0, option);
        _this.$this.ActivateItemOnKeyPressMixin__enteredKeys = keys;
        return true;
      }
      return false;
    },
    $signature: 35
  };
  M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase.prototype = {};
  M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter.prototype = {};
  M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper.prototype = {};
  M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin.prototype = {};
  M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin.prototype = {};
  M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin.prototype = {};
  M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin_ShiftClickSelectionMixin.prototype = {
    set$_pivot: function(_pivot) {
      this.ShiftClickSelectionMixin__pivot = H.assertSubtypeOfRuntimeType(_pivot, H.getTypeArgumentByIndex(this, 0));
    }
  };
  Y.ViewMaterialDropdownSelectComponent0.prototype = {
    get$_PopupRef_2_10: function() {
      var t1 = this.__PopupRef_2_10;
      return t1 == null ? this.__PopupRef_2_10 = this._MaterialPopupComponent_2_8._resolvedPopupRef : t1;
    },
    build$0: function() {
      var t2, t3, t4, t5, t6, t7, _text_1, t8, t9, _el_3, _el_5, subscription_0, subscription_1, subscription_2, subscription_3, _this = this, _null = null,
        _s7_ = "keydown",
        _s8_ = "keypress",
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = new Z.ViewDropdownButtonComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 0)),
        styles = $.ViewDropdownButtonComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewDropdownButtonComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$DropdownButtonComponent, _null);
      t1.componentStyles = styles;
      t2 = document;
      t3 = t2.createElement("dropdown-button");
      H.interceptedTypeCheck(t3, "$isHtmlElement");
      t1.rootEl = t3;
      _this._material_dropdown_select_template$_compView_0 = t1;
      parentRenderNode.appendChild(t3);
      T.setAttribute(t3, "initPopupAriaAttributes", "false");
      T.setAttribute(t3, "popupSource", "");
      T.setAttribute(t3, "popupType", "listbox");
      _this.addShimC$1(t3);
      t1 = new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid()).nextId$0();
      t4 = W.FocusEvent;
      t5 = P.StreamController_StreamController(_null, _null, _null, true, t4);
      t1 = new Q.DropdownButtonComponent(t1, t5, _null, _null, false, _null, _null, false, _null, new P._SyncBroadcastStreamController(_null, _null, [t4]), _null, false);
      t1.MaterialButtonWrapper_iconName = "arrow_drop_down";
      _this._DropdownButtonComponent_0_5 = t1;
      t1 = _this.parentView;
      t5 = _this.viewData;
      t6 = t5.parentIndex;
      t7 = L.PopupSourceDirective$(H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomPopupSourceFactory_gmZ, t6), "$isDomPopupSourceFactory"), t3, H.interceptedTypeCheck(t1.injectorGetOptional$2(C.Type_ReferenceDirective_i58, t6), "$isReferenceDirective"), _this._DropdownButtonComponent_0_5, "false");
      _this._PopupSourceDirective_0_7 = t7;
      _text_1 = T.createText(" ");
      t7 = _this._material_dropdown_select_template$_compView_0;
      t8 = _this._DropdownButtonComponent_0_5;
      t9 = [_text_1];
      t5 = t5.projectedNodes;
      if (0 >= t5.length)
        return H.ioore(t5, 0);
      C.JSArray_methods.addAll$1(t9, t5[0]);
      t5 = [P.Object];
      t7.create$2(0, t8, H.setRuntimeTypeInfo([t9], t5));
      t9 = new A.ViewMaterialPopupComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 2));
      styles = $.ViewMaterialPopupComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewMaterialPopupComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$MaterialPopupComponent, _null);
      t9.componentStyles = styles;
      t7 = t2.createElement("material-popup");
      H.interceptedTypeCheck(t7, "$isHtmlElement");
      t9.rootEl = t7;
      _this._material_dropdown_select_template$_compView_2 = t9;
      _this._material_dropdown_select_template$_el_2 = t7;
      parentRenderNode.appendChild(t7);
      T.setAttribute(_this._material_dropdown_select_template$_el_2, "enforceSpaceConstraints", "");
      _this.addShimC$1(_this._material_dropdown_select_template$_el_2);
      _this._material_dropdown_select_template$_appEl_2 = new V.ViewContainer(2, _null, _this, _this._material_dropdown_select_template$_el_2);
      t1 = G.MaterialPopupComponent$(H.interceptedTypeCheck(t1.injectorGetOptional$2(C.Type_PopupHierarchy_7R9, t6), "$isPopupHierarchy"), H.interceptedTypeCheck(t1.injectorGetOptional$2(C.Type_MaterialPopupComponent_OpB, t6), "$isMaterialPopupComponent"), _null, H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, t6), "$isNgZone"), H.interceptedTypeCheck(t1.injectorGet$2(C.Type_OverlayService_4iH, t6), "$isOverlayService"), H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, t6), "$isDomService"), H.interceptedTypeCheck(t1.injectorGet$2(C.Type_ZIndexer_ViP, t6), "$isZIndexer"), H.assertSubtype(t1.injectorGet$2(C.OpaqueToken_defaultPopupPositions, t6), "$isList", [K.RelativePosition], "$asList"), H.boolTypeCheck(t1.injectorGet$2(C.OpaqueToken_overlayRepositionLoop, t6)), H.interceptedTypeCheck(t1.injectorGet$2(C.OpaqueToken_overlayViewportBoundaries, t6), "$isBox"), H.interceptedTypeCheck(t1.injectorGetOptional$2(C.Type_PopupSizeProvider_a5y, t6), "$isPopupSizeProvider"), _this._material_dropdown_select_template$_compView_2, _this._material_dropdown_select_template$_appEl_2, new Z.ElementRef(_this._material_dropdown_select_template$_el_2));
      _this._MaterialPopupComponent_2_8 = t1;
      _el_3 = t2.createElement("div");
      T.setAttribute(_el_3, "header", "");
      H.interceptedTypeCheck(_el_3, "$isHtmlElement");
      _this.addShimC$1(_el_3);
      _this.project$2(_el_3, 1);
      t1 = _this._material_dropdown_select_template$_appEl_4 = new V.ViewContainer(4, 2, _this, T.createAnchor());
      _this._DeferredContentDirective_4_9 = K.DeferredContentDirective$(t1, new D.TemplateRef(t1, new Y.ViewMaterialDropdownSelectComponent0_build_closure(_this)), _this._MaterialPopupComponent_2_8);
      _el_5 = t2.createElement("div");
      T.setAttribute(_el_5, "footer", "");
      H.interceptedTypeCheck(_el_5, "$isHtmlElement");
      _this.addShimC$1(_el_5);
      _this.project$2(_el_5, 5);
      t1 = [W.Element];
      _this._material_dropdown_select_template$_compView_2.create$2(0, _this._MaterialPopupComponent_2_8, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_3], t1), H.setRuntimeTypeInfo([_this._material_dropdown_select_template$_appEl_4], [V.ViewContainer]), H.setRuntimeTypeInfo([_el_5], t1)], t5));
      t5 = _ctx.get$onKeyDown(_ctx);
      t1 = W.Event;
      t2 = W.KeyboardEvent;
      t6 = J.getInterceptor$x(t3);
      t6.addEventListener$2(t3, _s7_, _this.eventHandler1$2$1(t5, t1, t2));
      t7 = _ctx.get$onKeyPress(_ctx);
      t6.addEventListener$2(t3, _s8_, _this.eventHandler1$2$1(t7, t1, t2));
      t3 = _this._DropdownButtonComponent_0_5.FocusableMixin__onFocus;
      subscription_0 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(_this.eventHandler1$2$1(_ctx.get$onFocus(_ctx), t4, t4));
      t3 = _this._DropdownButtonComponent_0_5._dropdown_button$_blur;
      subscription_1 = new P._ControllerStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(_this.eventHandler1$2$1(_ctx.get$onBlur(_ctx), t4, t4));
      t4 = _this._DropdownButtonComponent_0_5._button._trigger;
      t3 = W.UIEvent;
      subscription_2 = new P._BroadcastStream(t4, [H.getTypeArgumentByIndex(t4, 0)]).listen$1(_this.eventHandler1$2$1(_ctx.get$handleClick(), t3, t3));
      t3 = _this._MaterialPopupComponent_2_8.PopupEvents_onVisibleController;
      t4 = P.bool;
      subscription_3 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(_this.eventHandler1$2$1(_ctx.get$onVisible(), t4, t4));
      t4 = J.getInterceptor$x(_el_3);
      t4.addEventListener$2(_el_3, _s7_, _this.eventHandler1$2$1(t5, t1, t2));
      t4.addEventListener$2(_el_3, _s8_, _this.eventHandler1$2$1(t7, t1, t2));
      t3 = _ctx.get$onKeyUp(_ctx);
      t4.addEventListener$2(_el_3, "keyup", _this.eventHandler1$2$1(t3, t1, t2));
      t4 = J.getInterceptor$x(_el_5);
      t4.addEventListener$2(_el_5, _s7_, _this.eventHandler1$2$1(t5, t1, t2));
      t4.addEventListener$2(_el_5, _s8_, _this.eventHandler1$2$1(t7, t1, t2));
      t4.addEventListener$2(_el_5, "keyup", _this.eventHandler1$2$1(t3, t1, t2));
      _ctx.dropdownButton = _this._DropdownButtonComponent_0_5;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([subscription_0, subscription_1, subscription_2, subscription_3], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var t1, _this = this;
      if ((token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && nodeIndex <= 1)
        return _this._DropdownButtonComponent_0_5;
      if (2 <= nodeIndex && nodeIndex <= 5) {
        if (token === C.Type_MaterialPopupComponent_OpB || token === C.Type_DeferredContentAware_BCk || token === C.Type_DropdownHandle_YMM)
          return _this._MaterialPopupComponent_2_8;
        if (token === C.Type_PopupRef_AWk)
          return _this.get$_PopupRef_2_10();
        if (token === C.Type_PopupHierarchy_7R9) {
          t1 = _this.__PopupHierarchy_2_12;
          return t1 == null ? _this.__PopupHierarchy_2_12 = _this._MaterialPopupComponent_2_8.get$hierarchy() : t1;
        }
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var changed, t1, currVal_3, currVal_4, currVal_8, currVal_9, currVal_12, currVal_17, t2, currVal_20, currVal_0, t3, t4, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0,
        local_source = _this._PopupSourceDirective_0_7;
      if (firstCheck) {
        _this._DropdownButtonComponent_0_5.popupType = "listbox";
        changed = true;
      } else
        changed = false;
      _ctx.MaterialButtonWrapper_disabled;
      t1 = _this._material_dropdown_select_template$_expr_2;
      if (t1 !== false) {
        _this._material_dropdown_select_template$_expr_2 = _this._DropdownButtonComponent_0_5.MaterialButtonWrapper_disabled = false;
        changed = true;
      }
      currVal_3 = _ctx.MaterialButtonWrapper_icon;
      t1 = _this._material_dropdown_select_template$_expr_3;
      if (t1 != currVal_3) {
        _this._material_dropdown_select_template$_expr_3 = _this._DropdownButtonComponent_0_5.MaterialButtonWrapper_icon = currVal_3;
        changed = true;
      }
      currVal_4 = _ctx.MaterialButtonWrapper_iconName;
      t1 = _this._material_dropdown_select_template$_expr_4;
      if (t1 != currVal_4) {
        _this._material_dropdown_select_template$_expr_4 = _this._DropdownButtonComponent_0_5.MaterialButtonWrapper_iconName = currVal_4;
        changed = true;
      }
      _ctx.MaterialButtonWrapper_raised;
      t1 = _this._material_dropdown_select_template$_expr_5;
      if (t1 !== false) {
        _this._material_dropdown_select_template$_expr_5 = _this._DropdownButtonComponent_0_5.MaterialButtonWrapper_raised = false;
        changed = true;
      }
      currVal_8 = H.boolConversionCheck(_ctx.MaterialDropdownBase__visible) ? _ctx.listId : null;
      t1 = _this._material_dropdown_select_template$_expr_8;
      if (t1 != currVal_8) {
        _this._material_dropdown_select_template$_expr_8 = _this._DropdownButtonComponent_0_5.ariaOwns = currVal_8;
        changed = true;
      }
      currVal_9 = _ctx.MaterialDropdownBase__visible;
      t1 = _this._material_dropdown_select_template$_expr_9;
      if (t1 != currVal_9) {
        _this._material_dropdown_select_template$_expr_9 = _this._DropdownButtonComponent_0_5.ariaExpanded = currVal_9;
        changed = true;
      }
      currVal_12 = _ctx.showButtonBorder;
      t1 = _this._material_dropdown_select_template$_expr_12;
      if (t1 != currVal_12) {
        _this._material_dropdown_select_template$_expr_12 = _this._DropdownButtonComponent_0_5._showButtonBorder = currVal_12;
        changed = true;
      }
      if (changed)
        _this._material_dropdown_select_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._DropdownButtonComponent_0_5;
        t1._ariaRole = "button";
      }
      if (firstCheck) {
        _this._MaterialPopupComponent_2_8.state._backingMap.$indexSet(0, C.Symbol_enforceSpaceConstraints, true);
        changed = true;
      } else
        changed = false;
      _ctx.MaterialDropdownBase_autoDismiss;
      t1 = _this._material_dropdown_select_template$_expr_14;
      if (t1 !== true) {
        _this._MaterialPopupComponent_2_8.state._backingMap.$indexSet(0, C.Symbol_autoDismiss, true);
        _this._material_dropdown_select_template$_expr_14 = true;
        changed = true;
      }
      _ctx.MaterialDropdownBase_popupMatchInputWidth;
      t1 = _this._expr_16;
      if (t1 !== true) {
        t1 = _this._MaterialPopupComponent_2_8;
        t1.super$PopupBase$matchMinSourceWidth(true);
        _this._expr_16 = t1._matchMinSourceWidth = true;
        changed = true;
      }
      currVal_17 = _ctx.MaterialDropdownBase_preferredPositions;
      t1 = _this._expr_17;
      if (t1 !== currVal_17) {
        _this._MaterialPopupComponent_2_8.state._backingMap.$indexSet(0, C.Symbol_preferredPositions, currVal_17);
        _this._expr_17 = currVal_17;
        changed = true;
      }
      t1 = _this._expr_18;
      if (t1 != local_source) {
        t1 = _this._MaterialPopupComponent_2_8;
        t1.super$PopupBase$source(0, local_source);
        t1 = t1._material_popup$_uniqueId;
        local_source._popupId = t1;
        t2 = local_source._popupSource;
        if (t2 != null)
          t2.set$popupId(t1);
        _this._expr_18 = local_source;
        changed = true;
      }
      _ctx.TrackLayoutChangesMixin_trackLayoutChanges;
      t1 = _this._expr_19;
      if (t1 !== true) {
        _this._MaterialPopupComponent_2_8.state._backingMap.$indexSet(0, C.Symbol_trackLayoutChanges, true);
        _this._expr_19 = true;
        changed = true;
      }
      currVal_20 = _ctx.MaterialDropdownBase__visible;
      t1 = _this._expr_20;
      if (t1 != currVal_20) {
        _this._MaterialPopupComponent_2_8.set$visible(0, currVal_20);
        _this._expr_20 = currVal_20;
        changed = true;
      }
      _ctx.MaterialDropdownBase_slide;
      if (changed)
        _this._material_dropdown_select_template$_compView_2.viewData.set$cdMode(1);
      if (firstCheck)
        _this._DeferredContentDirective_4_9.preserveDimensions = true;
      _this._material_dropdown_select_template$_appEl_2.detectChangesInNestedViews$0();
      _this._material_dropdown_select_template$_appEl_4.detectChangesInNestedViews$0();
      if (firstCheck)
        _this._material_dropdown_select_template$_compView_2.updateChildClassNonHtml$2(_this._material_dropdown_select_template$_el_2, _ctx.popupClassName);
      t1 = _this._material_dropdown_select_template$_compView_2;
      t2 = t1.ctx._overlayRef;
      currVal_0 = t2 == null ? null : t2.overlayElement.getAttribute("pane-id");
      t2 = t1._material_popup_template$_expr_0;
      if (t2 != currVal_0) {
        T.updateAttribute(t1.rootEl, "pane-id", currVal_0);
        t1._material_popup_template$_expr_0 = currVal_0;
      }
      _this._material_dropdown_select_template$_compView_0.detectChanges$0();
      _this._material_dropdown_select_template$_compView_2.detectChanges$0();
      if (firstCheck) {
        t1 = _this._PopupSourceDirective_0_7;
        t2 = t1._popup_source_directive$_element;
        t3 = t1._domPopupSourceFactory;
        t4 = t1._popup_source_directive$_initAriaAttributes;
        t4 = new K.DomPopupSource(t3.get$_asyncMeasureSize(), t2, t4);
        t4._alignOriginY = t4._alignOriginX = C.Alignment_Start;
        t1._popupSource = t4;
        t1 = t1._popupId;
        if (t1 != null)
          t4.set$popupId(t1);
        _this._MaterialPopupComponent_2_8._updateOverlayCssClass$0();
      }
    },
    destroyInternal$0: function() {
      var t1, t2, t3, _this = this;
      _this._material_dropdown_select_template$_appEl_2.destroyNestedViews$0();
      _this._material_dropdown_select_template$_appEl_4.destroyNestedViews$0();
      _this._material_dropdown_select_template$_compView_0.destroyInternalState$0();
      _this._material_dropdown_select_template$_compView_2.destroyInternalState$0();
      t1 = _this._PopupSourceDirective_0_7;
      t1._focusable = t1._referenceDirective = t1._popupSource = t1._popup_source_directive$_element = null;
      t1 = _this._DeferredContentDirective_4_9;
      t1._deferred_content$_disposer.dispose$0();
      t1._template = t1._deferred_content$_viewContainer = null;
      t1 = _this._MaterialPopupComponent_2_8;
      t2 = t1._repositionLoopId;
      if (t2 != null) {
        t3 = window;
        C.Window_methods._ensureRequestAnimationFrame$0(t3);
        t3.cancelAnimationFrame(t2);
      }
      t1._visibleDisposer.dispose$0();
      t1._material_popup$_disposer.dispose$0();
      t2 = t1._animationTimer;
      if (t2 != null)
        t2.cancel$0(0);
      t1._isVisible = false;
      t1.PopupEvents_onVisibleController.add$1(0, false);
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y.ViewMaterialDropdownSelectComponent0_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new Y._ViewMaterialDropdownSelectComponent1(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent1.prototype = {
    build$0: function() {
      var t2, t3, t4, t5, _text_1, _this = this,
        _ctx = _this.ctx,
        t1 = new B.ViewMaterialListComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 0)),
        styles = $.ViewMaterialListComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewMaterialListComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$MaterialListComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("material-list");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._material_dropdown_select_template$_compView_0 = t1;
      _this._material_dropdown_select_template$_el_0 = t2;
      _this.updateChildClassNonHtml$2(t2, "options-list");
      T.setAttribute(_this._material_dropdown_select_template$_el_0, "role", "listbox");
      t1 = _this._material_dropdown_select_template$_el_0;
      t1.tabIndex = 0;
      _this.addShimC$1(t1);
      t1 = _this._material_dropdown_select_template$_el_0;
      t2 = _this.parentView;
      t3 = t2.parentView;
      t4 = t2.viewData.parentIndex;
      t5 = H.interceptedTypeCheck(t3.injectorGet$2(C.Type_DomService_2jN, t4), "$isDomService");
      t4 = H.interceptedTypeCheck(t3.injectorGetOptional$2(C.Type_ModalComponent_Npb, t4), "$isModalComponent");
      t2 = H.interceptedTypeCheck(t2, "$isViewMaterialDropdownSelectComponent0").get$_PopupRef_2_10();
      _this._AutoFocusDirective_0_5 = new E.AutoFocusDirective(new R.Disposer(true), null, t5, t4, t2, t1);
      t1 = new B.MaterialListComponent();
      _this._MaterialListComponent_0_6 = t1;
      _text_1 = T.createText(" ");
      t2 = _this._material_dropdown_select_template$_appEl_2 = new V.ViewContainer(2, 0, _this, T.createAnchor());
      _this._material_dropdown_select_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t2, new Y._ViewMaterialDropdownSelectComponent1_build_closure(_this)), t2);
      t2 = _this._material_dropdown_select_template$_compView_0;
      t3 = _this.viewData;
      t4 = t3.projectedNodes;
      if (2 >= t4.length)
        return H.ioore(t4, 2);
      t4 = [t4[2]];
      C.JSArray_methods.addAll$1(t4, [_text_1]);
      t5 = t3.projectedNodes;
      if (3 >= t5.length)
        return H.ioore(t5, 3);
      C.JSArray_methods.addAll$1(t4, t5[3]);
      C.JSArray_methods.addAll$1(t4, [_this._material_dropdown_select_template$_appEl_2]);
      t3 = t3.projectedNodes;
      if (4 >= t3.length)
        return H.ioore(t3, 4);
      C.JSArray_methods.addAll$1(t4, t3[4]);
      t2.create$2(0, t1, H.setRuntimeTypeInfo([t4], [P.Object]));
      t4 = W.Event;
      t1 = W.KeyboardEvent;
      J.addEventListener$2$x(_this._material_dropdown_select_template$_el_0, "keydown", _this.eventHandler1$2$1(_ctx.get$onKeyDown(_ctx), t4, t1));
      J.addEventListener$2$x(_this._material_dropdown_select_template$_el_0, "keypress", _this.eventHandler1$2$1(_ctx.get$onKeyPress(_ctx), t4, t1));
      J.addEventListener$2$x(_this._material_dropdown_select_template$_el_0, "keyup", _this.eventHandler1$2$1(_ctx.get$onKeyUp(_ctx), t4, t1));
      J.addEventListener$2$x(_this._material_dropdown_select_template$_el_0, "mouseout", _this.eventHandler1$2$1(_this.get$_handle_mouseout_0_3(), t4, t4));
      _this.init1$1(_this._material_dropdown_select_template$_el_0);
    },
    detectChangesInternal$0: function() {
      var t1, changed, val, currVal_1, currVal_0, t2, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0;
      _ctx.toString;
      t1 = _this._material_dropdown_select_template$_expr_2;
      if (t1 !== true)
        _this._material_dropdown_select_template$_expr_2 = _this._AutoFocusDirective_0_5._autoFocus = true;
      if (firstCheck)
        _this._AutoFocusDirective_0_5.ngOnInit$0();
      if (firstCheck) {
        _this._MaterialListComponent_0_6.role = "listbox";
        changed = true;
      } else
        changed = false;
      t1 = _this._material_dropdown_select_template$_expr_4;
      if (t1 !== 0) {
        t1 = _this._MaterialListComponent_0_6;
        t1.toString;
        val = E.getInt(0);
        if (typeof val !== "number")
          return val.$ge();
        if (val >= 0 && val < 6) {
          if (val < 0 || val >= 6)
            return H.ioore(C.List_huV, val);
          t1.size = C.List_huV[val];
        }
        _this._material_dropdown_select_template$_expr_4 = 0;
        changed = true;
      }
      if (changed)
        _this._material_dropdown_select_template$_compView_0.viewData.set$cdMode(1);
      _this._material_dropdown_select_template$_NgIf_2_9.set$ngIf(_ctx.get$options(_ctx) != null);
      _this._material_dropdown_select_template$_appEl_2.detectChangesInNestedViews$0();
      if (firstCheck)
        T.updateAttribute(_this._material_dropdown_select_template$_el_0, "id", _ctx.listId);
      currVal_1 = _ctx.get$ariaActiveDescendant();
      t1 = _this._material_dropdown_select_template$_expr_1;
      if (t1 != currVal_1) {
        T.updateAttribute(_this._material_dropdown_select_template$_el_0, "aria-activedescendant", currVal_1);
        _this._material_dropdown_select_template$_expr_1 = currVal_1;
      }
      t1 = _this._material_dropdown_select_template$_compView_0;
      _ctx = t1.ctx;
      currVal_0 = _ctx.size;
      t2 = t1._material_list_template$_expr_0;
      if (t2 !== currVal_0) {
        T.updateAttribute(t1.rootEl, "size", currVal_0);
        t1._material_list_template$_expr_0 = currVal_0;
      }
      currVal_1 = _ctx.role;
      t2 = t1._material_list_template$_expr_1;
      if (t2 !== currVal_1) {
        T.updateAttribute(t1.rootEl, "role", currVal_1);
        t1._material_list_template$_expr_1 = currVal_1;
      }
      _this._material_dropdown_select_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._material_dropdown_select_template$_appEl_2.destroyNestedViews$0();
      this._material_dropdown_select_template$_compView_0.destroyInternalState$0();
      var t1 = this._AutoFocusDirective_0_5;
      t1.super$RootFocusable$dispose();
      t1._focus$_disposer.dispose$0();
      t1._focus$_popupRef = t1._focus$_modal = t1._focus$_domService = t1._focus$_focusable = null;
    },
    _handle_mouseout_0_3$1: function($$event) {
      this.ctx.activeModel.activate$1(null);
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y._ViewMaterialDropdownSelectComponent1_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new Y._ViewMaterialDropdownSelectComponent2(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent2.prototype = {
    build$0: function() {
      var t1, _this = this,
        _el_0 = document.createElement("div");
      H.interceptedTypeCheck(_el_0, "$isHtmlElement");
      _this.updateChildClass$2(_el_0, "options-wrapper");
      _this.addShimC$1(_el_0);
      t1 = _this._material_dropdown_select_template$_appEl_1 = new V.ViewContainer(1, 0, _this, T.appendAnchor(_el_0));
      _this._material_dropdown_select_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new Y._ViewMaterialDropdownSelectComponent2_build_closure(_this)), t1);
      t1 = _this._material_dropdown_select_template$_appEl_2 = new V.ViewContainer(2, 0, _this, T.appendAnchor(_el_0));
      _this._NgFor_2_9 = new R.NgFor(t1, new D.TemplateRef(t1, new Y._ViewMaterialDropdownSelectComponent2_build_closure0(_this)));
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var t2, t3, t4, differ, currVal_1, _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData._cdState;
      _this._material_dropdown_select_template$_NgIf_1_9.set$ngIf(_ctx.get$showDeselectItem());
      if (t1 === 0) {
        t1 = _this._NgFor_2_9;
        t2 = {func: 1, ret: P.Object, args: [P.int,,]};
        t1.set$_ngForTrackBy(H.functionTypeCheck(_ctx.trackByIndexFn, t2));
        if (t1._ngForOf != null) {
          t3 = t1._differ;
          t4 = t1._ngForTrackBy;
          if (t3 == null)
            t1._differ = R.DefaultIterableDiffer$(t4);
          else {
            differ = R.DefaultIterableDiffer$(H.functionTypeCheck(t4, t2));
            differ._default_iterable_differ$_length = t3._default_iterable_differ$_length;
            differ.set$_collection(t3._collection);
            differ._linkedRecords = t3._linkedRecords;
            differ._unlinkedRecords = t3._unlinkedRecords;
            differ._previousItHead = t3._previousItHead;
            differ._itHead = t3._itHead;
            differ._itTail = t3._itTail;
            differ._default_iterable_differ$_additionsHead = t3._default_iterable_differ$_additionsHead;
            differ._default_iterable_differ$_additionsTail = t3._default_iterable_differ$_additionsTail;
            differ._movesHead = t3._movesHead;
            differ._movesTail = t3._movesTail;
            differ._default_iterable_differ$_removalsHead = t3._default_iterable_differ$_removalsHead;
            differ._removalsTail = t3._removalsTail;
            differ._identityChangesHead = t3._identityChangesHead;
            differ._identityChangesTail = t3._identityChangesTail;
            t1._differ = differ;
          }
        }
      }
      currVal_1 = _ctx.get$options(_ctx)._optionGroups;
      t1 = _this._material_dropdown_select_template$_expr_1;
      if (t1 == null ? currVal_1 != null : t1 !== currVal_1) {
        _this._NgFor_2_9.set$ngForOf(currVal_1);
        _this._material_dropdown_select_template$_expr_1 = currVal_1;
      }
      _this._NgFor_2_9.ngDoCheck$0();
      _this._material_dropdown_select_template$_appEl_1.detectChangesInNestedViews$0();
      _this._material_dropdown_select_template$_appEl_2.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      this._material_dropdown_select_template$_appEl_1.destroyNestedViews$0();
      this._material_dropdown_select_template$_appEl_2.destroyNestedViews$0();
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y._ViewMaterialDropdownSelectComponent2_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new Y._ViewMaterialDropdownSelectComponent3(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent2_build_closure0.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new Y._ViewMaterialDropdownSelectComponent4(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent3.prototype = {
    build$0: function() {
      var t2, t3, t4, t5, t6, t7, t8, subscription_0, _this = this,
        _ctx = _this.ctx,
        t1 = P.String;
      _this.set$_material_dropdown_select_template$_compView_0(O.ViewMaterialSelectDropdownItemComponent0$(_this, 0, t1));
      t2 = _this._material_dropdown_select_template$_compView_0.rootEl;
      _this._material_dropdown_select_template$_el_0 = t2;
      _this.addShimC$1(t2);
      t2 = _this._material_dropdown_select_template$_el_0;
      t3 = _this.parentView.parentView.parentView;
      t4 = t3.parentView;
      t5 = t3.viewData.parentIndex;
      t6 = H.interceptedTypeCheck(t4.injectorGet$2(C.Type_DomService_2jN, t5), "$isDomService");
      t7 = H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_Modal_OjC, t5), "$isModal");
      H.interceptedTypeCheck(t3, "$isViewMaterialDropdownSelectComponent0");
      t8 = t3.get$_PopupRef_2_10();
      _this._ActiveItemDirective_0_5 = new M.ActiveItemDirectiveNgCd(new B.ActiveItemDirective(t2, t6, t7, t8));
      t1 = F.MaterialSelectDropdownItemComponent$(_this._material_dropdown_select_template$_el_0, null, t3._MaterialPopupComponent_2_8, H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_ActivationHandler_Nm5, t5), "$isActivationHandler"), H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_IdGenerator_yLN, t5), "$isIdGenerator"), _this._material_dropdown_select_template$_compView_0, t1);
      _this.set$_MaterialSelectDropdownItemComponent_0_6(t1);
      t1 = [P.Object];
      _this._material_dropdown_select_template$_compView_0.create$2(0, _this._MaterialSelectDropdownItemComponent_0_6, H.setRuntimeTypeInfo([C.List_empty0], t1));
      t2 = W.Event;
      J.addEventListener$2$x(_this._material_dropdown_select_template$_el_0, "mouseenter", _this.eventHandler1$2$1(_this.get$_handle_mouseenter_0_1(), t2, t2));
      t3 = _this._material_dropdown_select_template$_el_0;
      t4 = _this._ActiveItemDirective_0_5.instance;
      J.addEventListener$2$x(t3, "mouseleave", _this.eventHandler0$1$1(t4.get$onMouseLeave(t4), t2));
      t2 = _this._MaterialSelectDropdownItemComponent_0_6._trigger;
      subscription_0 = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(_this.eventHandler0$1$1(_ctx.get$deselectCurrentSelection(), W.UIEvent));
      _this.init$2(H.setRuntimeTypeInfo([_this._material_dropdown_select_template$_el_0], t1), H.setRuntimeTypeInfo([subscription_0], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if ((token === C.Type_SelectionItem_uvp || token === C.Type_HasRenderer_wsa) && 0 === nodeIndex)
        return this._MaterialSelectDropdownItemComponent_0_6;
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var t1, currVal_1, currVal_4, currVal_5, currVal_0, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0;
      if (H.interceptedTypeCheck(_this.parentView.parentView.parentView, "$isViewMaterialDropdownSelectComponent0")._MaterialPopupComponent_2_8.showPopup) {
        t1 = _ctx.activeModel;
        _ctx.toString;
        H.assertSubtypeOfRuntimeType(null, H.getTypeArgumentByIndex(t1, 0));
        currVal_1 = J.$eq$(t1.get$activeItem(), null);
      } else
        currVal_1 = false;
      t1 = _this._material_dropdown_select_template$_expr_1;
      if (t1 !== currVal_1) {
        _this._ActiveItemDirective_0_5.instance.set$itemActive(currVal_1);
        _this._material_dropdown_select_template$_expr_1 = currVal_1;
      }
      if (firstCheck)
        _this._MaterialSelectDropdownItemComponent_0_6.tabbable = false;
      t1 = _ctx.get$selection();
      currVal_4 = t1.get$isEmpty(t1);
      t1 = _this._material_dropdown_select_template$_expr_4;
      if (t1 !== currVal_4) {
        t1 = _this._MaterialSelectDropdownItemComponent_0_6;
        t1.toString;
        t1._selected = E.getBool(currVal_4);
        _this._material_dropdown_select_template$_expr_4 = currVal_4;
      }
      currVal_5 = _ctx.activeModel.id$1(0, null);
      t1 = _this._material_dropdown_select_template$_expr_5;
      if (t1 != currVal_5)
        _this._material_dropdown_select_template$_expr_5 = _this._MaterialSelectDropdownItemComponent_0_6._id = currVal_5;
      currVal_0 = _ctx.get$options(_ctx)._optionGroups.length === 1;
      t1 = _this._material_dropdown_select_template$_expr_0;
      if (t1 !== currVal_0) {
        T.updateClassBindingNonHtml(_this._material_dropdown_select_template$_el_0, "empty", currVal_0);
        _this._material_dropdown_select_template$_expr_0 = currVal_0;
      }
      _this._ActiveItemDirective_0_5.detectHostChanges$2(_this._material_dropdown_select_template$_compView_0, _this._material_dropdown_select_template$_el_0);
      _this._material_dropdown_select_template$_compView_0.detectHostChanges$1(firstCheck);
      _this._material_dropdown_select_template$_compView_0.detectChanges$0();
      if (firstCheck) {
        t1 = _this._ActiveItemDirective_0_5.instance;
        t1._initialized = true;
        t1._scrollIntoViewIfNecessary$0();
      }
    },
    destroyInternal$0: function() {
      this._material_dropdown_select_template$_compView_0.destroyInternalState$0();
      this._ActiveItemDirective_0_5.instance.ngOnDestroy$0();
      this._MaterialSelectDropdownItemComponent_0_6._disposer.dispose$0();
    },
    _handle_mouseenter_0_1$1: function($$event) {
      var _ctx = this.ctx,
        t1 = _ctx.activeModel;
      _ctx.toString;
      t1.activate$1(null);
      this._ActiveItemDirective_0_5.instance._hasHover = true;
    },
    set$_material_dropdown_select_template$_compView_0: function(_compView_0) {
      this._material_dropdown_select_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewMaterialSelectDropdownItemComponent0", [P.String], "$asViewMaterialSelectDropdownItemComponent0");
    },
    set$_MaterialSelectDropdownItemComponent_0_6: function(_MaterialSelectDropdownItemComponent_0_6) {
      this._MaterialSelectDropdownItemComponent_0_6 = H.assertSubtype(_MaterialSelectDropdownItemComponent_0_6, "$isMaterialSelectDropdownItemComponent", [P.String], "$asMaterialSelectDropdownItemComponent");
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y._ViewMaterialDropdownSelectComponent4.prototype = {
    build$0: function() {
      var _this = this,
        t1 = document.createElement("div");
      H.interceptedTypeCheck(t1, "$isDivElement");
      _this._material_dropdown_select_template$_el_0 = t1;
      T.setAttribute(t1, "group", "");
      _this.addShimC$1(_this._material_dropdown_select_template$_el_0);
      t1 = _this._material_dropdown_select_template$_appEl_1 = new V.ViewContainer(1, 0, _this, T.appendAnchor(_this._material_dropdown_select_template$_el_0));
      _this._material_dropdown_select_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new Y._ViewMaterialDropdownSelectComponent4_build_closure(_this)), t1);
      _this.init1$1(_this._material_dropdown_select_template$_el_0);
    },
    detectChangesInternal$0: function() {
      var currVal_0, _this = this,
        local_group = H.assertSubtypeOfRuntimeType(_this.viewData.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(_this, 0)]),
        t1 = _this._material_dropdown_select_template$_NgIf_1_9,
        t2 = local_group._base;
      t1.set$ngIf(t2.length !== 0 || local_group._emptyLabelFcn != null);
      _this._material_dropdown_select_template$_appEl_1.detectChangesInNestedViews$0();
      currVal_0 = t2.length === 0 && local_group._emptyLabelFcn == null;
      t1 = _this._material_dropdown_select_template$_expr_0;
      if (t1 !== currVal_0) {
        T.updateClassBinding(_this._material_dropdown_select_template$_el_0, "empty", currVal_0);
        _this._material_dropdown_select_template$_expr_0 = currVal_0;
      }
    },
    destroyInternal$0: function() {
      this._material_dropdown_select_template$_appEl_1.destroyNestedViews$0();
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y._ViewMaterialDropdownSelectComponent4_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new Y._ViewMaterialDropdownSelectComponent5(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent5.prototype = {
    build$0: function() {
      var t2, t3, t4, _this = this, _null = null,
        t1 = _this._appEl_0 = new V.ViewContainer(0, _null, _this, T.createAnchor());
      _this._NgIf_0_9 = new K.NgIf(new D.TemplateRef(t1, new Y._ViewMaterialDropdownSelectComponent5_build_closure(_this)), t1);
      t2 = _this._material_dropdown_select_template$_appEl_1 = new V.ViewContainer(1, _null, _this, T.createAnchor());
      _this._material_dropdown_select_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t2, new Y._ViewMaterialDropdownSelectComponent5_build_closure0(_this)), t2);
      t3 = _this._material_dropdown_select_template$_appEl_2 = new V.ViewContainer(2, _null, _this, T.createAnchor());
      _this._material_dropdown_select_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t3, new Y._ViewMaterialDropdownSelectComponent5_build_closure1(_this)), t3);
      t4 = _this._appEl_3 = new V.ViewContainer(3, _null, _this, T.createAnchor());
      _this._NgIf_3_9 = new K.NgIf(new D.TemplateRef(t4, new Y._ViewMaterialDropdownSelectComponent5_build_closure2(_this)), t4);
      _this.init$2(H.setRuntimeTypeInfo([t1, t2, t3, t4], [P.Object]), _null);
    },
    detectChangesInternal$0: function() {
      var t2, _this = this,
        _ctx = _this.ctx,
        local_group = H.assertSubtypeOfRuntimeType(_this.parentView.viewData.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(_this, 0)]),
        t1 = _this._NgIf_0_9;
      if (local_group._labelFcn != null) {
        _ctx.toString;
        t2 = true;
      } else
        t2 = false;
      t1.set$ngIf(t2);
      t2 = _this._material_dropdown_select_template$_NgIf_1_9;
      _ctx.toString;
      t2.set$ngIf(false);
      t2 = _this._material_dropdown_select_template$_NgIf_2_9;
      t1 = local_group._base;
      t2.set$ngIf(t1.length !== 0);
      t2 = _this._NgIf_3_9;
      t2.set$ngIf(t1.length === 0 && local_group._emptyLabelFcn != null);
      _this._appEl_0.detectChangesInNestedViews$0();
      _this._material_dropdown_select_template$_appEl_1.detectChangesInNestedViews$0();
      _this._material_dropdown_select_template$_appEl_2.detectChangesInNestedViews$0();
      _this._appEl_3.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._appEl_0.destroyNestedViews$0();
      _this._material_dropdown_select_template$_appEl_1.destroyNestedViews$0();
      _this._material_dropdown_select_template$_appEl_2.destroyNestedViews$0();
      _this._appEl_3.destroyNestedViews$0();
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y._ViewMaterialDropdownSelectComponent5_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      H.intTypeCheck(parentIndex);
      t1 = new Y._ViewMaterialDropdownSelectComponent6(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent5_build_closure0.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new Y._ViewMaterialDropdownSelectComponent7(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent5_build_closure1.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new Y._ViewMaterialDropdownSelectComponent8(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent5_build_closure2.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new Y._ViewMaterialDropdownSelectComponent10(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent6.prototype = {
    build$0: function() {
      var _el_0 = document.createElement("span");
      T.setAttribute(_el_0, "label", "");
      this.addShimE$1(_el_0);
      _el_0.appendChild(this._material_dropdown_select_template$_textBinding_1.element);
      this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var t1 = H.assertSubtypeOfRuntimeType(this.parentView.parentView.viewData.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(this, 0)])._labelFcn;
      t1 = t1 != null ? t1.call$0() : null;
      if (t1 == null)
        t1 = "";
      this._material_dropdown_select_template$_textBinding_1.updateText$1(t1);
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y._ViewMaterialDropdownSelectComponent7.prototype = {
    build$0: function() {
      var _el_0, t2, _this = this, _null = null,
        t1 = Q.ViewDynamicComponent0$(_this, 0);
      _this._material_dropdown_select_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      _this.addShimC$1(_el_0);
      _this._appEl_0 = new V.ViewContainer(0, _null, _this, _el_0);
      t1 = _this.parentView.parentView.parentView.parentView.parentView;
      t1 = H.interceptedTypeCheck(t1.parentView.injectorGet$2(C.Type_SlowComponentLoader_qxe, t1.viewData.parentIndex), "$isSlowComponentLoader");
      t2 = _this._material_dropdown_select_template$_compView_0;
      t1 = new Z.DynamicComponent(t1, _this._appEl_0, t2, P.StreamController_StreamController(_null, _null, _null, false, [D.ComponentRef,,]));
      _this._material_dropdown_select_template$_DynamicComponent_0_8 = t1;
      t2.create0$1(t1);
      _this.init1$1(_this._appEl_0);
    },
    detectChangesInternal$0: function() {
      var currVal_0, t1, changed, _this = this,
        _ctx = _this.ctx,
        local_group = H.assertSubtypeOfRuntimeType(_this.parentView.parentView.viewData.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(_this, 0)]);
      _ctx.toString;
      currVal_0 = null.call$1(local_group);
      t1 = _this._material_dropdown_select_template$_expr_0;
      if (t1 != currVal_0) {
        _this._material_dropdown_select_template$_DynamicComponent_0_8.set$componentFactory(currVal_0);
        _this._material_dropdown_select_template$_expr_0 = currVal_0;
        changed = true;
      } else
        changed = false;
      t1 = _this._material_dropdown_select_template$_expr_1;
      if (t1 != local_group) {
        t1 = _this._material_dropdown_select_template$_DynamicComponent_0_8;
        t1._dynamic_component$_value = local_group;
        changed = t1._valueChanged = true;
        _this._material_dropdown_select_template$_expr_1 = local_group;
      }
      if (changed)
        _this._material_dropdown_select_template$_DynamicComponent_0_8.ngAfterChanges$0();
      _this._appEl_0.detectChangesInNestedViews$0();
      _this._material_dropdown_select_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._appEl_0.destroyNestedViews$0();
      this._material_dropdown_select_template$_compView_0.destroyInternalState$0();
      var t1 = this._material_dropdown_select_template$_DynamicComponent_0_8;
      t1._disposeChildComponent$0();
      t1._viewContainerRef = null;
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y._ViewMaterialDropdownSelectComponent8.prototype = {
    build$0: function() {
      var _this = this,
        t1 = _this._appEl_0 = new V.ViewContainer(0, null, _this, T.createAnchor());
      _this._NgFor_0_9 = new R.NgFor(t1, new D.TemplateRef(t1, new Y._ViewMaterialDropdownSelectComponent8_build_closure(_this)));
      _this.init1$1(t1);
    },
    detectChangesInternal$0: function() {
      var _this = this,
        local_group = H.assertSubtypeOfRuntimeType(_this.parentView.parentView.viewData.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(_this, 0)]),
        t1 = _this._material_dropdown_select_template$_expr_0;
      if (t1 != local_group) {
        _this._NgFor_0_9.set$ngForOf(local_group);
        _this._material_dropdown_select_template$_expr_0 = local_group;
      }
      _this._NgFor_0_9.ngDoCheck$0();
      _this._appEl_0.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      this._appEl_0.destroyNestedViews$0();
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y._ViewMaterialDropdownSelectComponent8_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new Y._ViewMaterialDropdownSelectComponent9(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  Y._ViewMaterialDropdownSelectComponent9.prototype = {
    build$0: function() {
      var t2, t3, t4, t5, t6, t7, t8, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      _this.set$_material_dropdown_select_template$_compView_0(O.ViewMaterialSelectDropdownItemComponent0$(_this, 0, t1));
      t2 = _this._material_dropdown_select_template$_compView_0.rootEl;
      _this._material_dropdown_select_template$_el_0 = t2;
      _this.addShimC$1(t2);
      t2 = _this._material_dropdown_select_template$_el_0;
      t3 = _this.parentView.parentView.parentView.parentView.parentView.parentView;
      t4 = t3.parentView;
      t5 = t3.viewData.parentIndex;
      t6 = H.interceptedTypeCheck(t4.injectorGet$2(C.Type_DomService_2jN, t5), "$isDomService");
      t7 = H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_Modal_OjC, t5), "$isModal");
      H.interceptedTypeCheck(t3, "$isViewMaterialDropdownSelectComponent0");
      t8 = t3.get$_PopupRef_2_10();
      _this._ActiveItemDirective_0_5 = new M.ActiveItemDirectiveNgCd(new B.ActiveItemDirective(t2, t6, t7, t8));
      t1 = F.MaterialSelectDropdownItemComponent$(_this._material_dropdown_select_template$_el_0, null, t3._MaterialPopupComponent_2_8, H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_ActivationHandler_Nm5, t5), "$isActivationHandler"), H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_IdGenerator_yLN, t5), "$isIdGenerator"), _this._material_dropdown_select_template$_compView_0, t1);
      _this.set$_MaterialSelectDropdownItemComponent_0_6(t1);
      _this._material_dropdown_select_template$_compView_0.create$2(0, _this._MaterialSelectDropdownItemComponent_0_6, H.setRuntimeTypeInfo([C.List_empty0], [P.Object]));
      t1 = W.Event;
      J.addEventListener$2$x(_this._material_dropdown_select_template$_el_0, "mouseenter", _this.eventHandler1$2$1(_this.get$_handle_mouseenter_0_0(), t1, t1));
      t2 = _this._material_dropdown_select_template$_el_0;
      t3 = _this._ActiveItemDirective_0_5.instance;
      J.addEventListener$2$x(t2, "mouseleave", _this.eventHandler0$1$1(t3.get$onMouseLeave(t3), t1));
      _this.init1$1(_this._material_dropdown_select_template$_el_0);
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if ((token === C.Type_SelectionItem_uvp || token === C.Type_HasRenderer_wsa) && 0 === nodeIndex)
        return this._MaterialSelectDropdownItemComponent_0_6;
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var currVal_0, currVal_1, t3, currVal_5, currVal_7, currVal_9, currVal_10, _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData,
        firstCheck = t1._cdState === 0,
        local_popup = H.interceptedTypeCheck(_this.parentView.parentView.parentView.parentView.parentView.parentView, "$isViewMaterialDropdownSelectComponent0")._MaterialPopupComponent_2_8,
        t2 = H.getTypeArgumentByIndex(_this, 0),
        local_item = H.assertSubtypeOfRuntimeType(t1.locals.$index(0, "$implicit"), t2);
      if (local_popup.showPopup) {
        t1 = _ctx.activeModel;
        H.assertSubtypeOfRuntimeType(local_item, H.getTypeArgumentByIndex(t1, 0));
        currVal_0 = J.$eq$(t1.get$activeItem(), local_item);
      } else
        currVal_0 = false;
      t1 = _this._material_dropdown_select_template$_expr_0;
      if (t1 !== currVal_0) {
        _this._ActiveItemDirective_0_5.instance.set$itemActive(currVal_0);
        _this._material_dropdown_select_template$_expr_0 = currVal_0;
      }
      if (firstCheck)
        _this._MaterialSelectDropdownItemComponent_0_6.tabbable = false;
      _ctx.toString;
      t1 = H.getTypeArgumentByIndex(_ctx, 0);
      H.assertSubtypeOfRuntimeType(local_item, t1);
      currVal_1 = !E.Selectable__isOptionCheck(_ctx.get$options(_ctx), local_item, C.SelectableOption_0, true, t1);
      t3 = _this._material_dropdown_select_template$_expr_1;
      if (t3 !== currVal_1)
        _this._material_dropdown_select_template$_expr_1 = _this._MaterialSelectDropdownItemComponent_0_6.disabled = currVal_1;
      currVal_5 = E.Selectable__isOptionCheck(_ctx.get$options(_ctx), local_item, C.SelectableOption_2, false, t1);
      t1 = _this._material_dropdown_select_template$_expr_5;
      if (t1 !== currVal_5) {
        t1 = _this._MaterialSelectDropdownItemComponent_0_6;
        t1.toString;
        t1._isHidden = E.getBool(currVal_5);
        _this._material_dropdown_select_template$_expr_5 = currVal_5;
      }
      t1 = _this._material_dropdown_select_template$_expr_6;
      if (t1 == null ? local_item != null : t1 !== local_item) {
        t1 = _this._MaterialSelectDropdownItemComponent_0_6;
        t1.toString;
        t1.set$_material_select_item$_value(H.assertSubtypeOfRuntimeType(local_item, H.getTypeArgumentByIndex(t1, 0)));
        _this._material_dropdown_select_template$_expr_6 = local_item;
      }
      currVal_7 = H.functionTypeCheck(_ctx.get$itemRenderer(), {func: 1, ret: P.String, args: [t2]});
      t1 = _this._material_dropdown_select_template$_expr_7;
      if (t1 !== currVal_7) {
        t1 = _this._MaterialSelectDropdownItemComponent_0_6;
        t1.toString;
        t1.set$_material_select_item$_itemRenderer(H.functionTypeCheck(currVal_7, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(t1, 0)]}));
        _this._material_dropdown_select_template$_expr_7 = currVal_7;
      }
      _ctx.get$selection();
      t1 = _this._material_dropdown_select_template$_expr_8;
      if (t1 !== true) {
        t1 = _this._MaterialSelectDropdownItemComponent_0_6;
        t1.toString;
        t1._deselectOnActivate = E.getBool(true);
        _this._material_dropdown_select_template$_expr_8 = true;
      }
      currVal_9 = _ctx.get$selection();
      t1 = _this._material_dropdown_select_template$_expr_9;
      if (t1 != currVal_9) {
        _this._MaterialSelectDropdownItemComponent_0_6.set$selection(currVal_9);
        _this._material_dropdown_select_template$_expr_9 = currVal_9;
      }
      currVal_10 = _ctx.activeModel.id$1(0, local_item);
      t1 = _this._material_dropdown_select_template$_expr_10;
      if (t1 != currVal_10)
        _this._material_dropdown_select_template$_expr_10 = _this._MaterialSelectDropdownItemComponent_0_6._id = currVal_10;
      _this._ActiveItemDirective_0_5.detectHostChanges$2(_this._material_dropdown_select_template$_compView_0, _this._material_dropdown_select_template$_el_0);
      _this._material_dropdown_select_template$_compView_0.detectHostChanges$1(firstCheck);
      _this._material_dropdown_select_template$_compView_0.detectChanges$0();
      if (firstCheck) {
        t1 = _this._ActiveItemDirective_0_5.instance;
        t1._initialized = true;
        t1._scrollIntoViewIfNecessary$0();
      }
    },
    destroyInternal$0: function() {
      this._material_dropdown_select_template$_compView_0.destroyInternalState$0();
      this._ActiveItemDirective_0_5.instance.ngOnDestroy$0();
      this._MaterialSelectDropdownItemComponent_0_6._disposer.dispose$0();
    },
    _handle_mouseenter_0_0$1: function($$event) {
      var _this = this,
        local_item = H.assertSubtypeOfRuntimeType(_this.viewData.locals.$index(0, "$implicit"), H.getTypeArgumentByIndex(_this, 0));
      _this.ctx.activeModel.activate$1(local_item);
      _this._ActiveItemDirective_0_5.instance._hasHover = true;
    },
    set$_material_dropdown_select_template$_compView_0: function(_compView_0) {
      this._material_dropdown_select_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewMaterialSelectDropdownItemComponent0", this.$ti, "$asViewMaterialSelectDropdownItemComponent0");
    },
    set$_MaterialSelectDropdownItemComponent_0_6: function(_MaterialSelectDropdownItemComponent_0_6) {
      this._MaterialSelectDropdownItemComponent_0_6 = H.assertSubtype(_MaterialSelectDropdownItemComponent_0_6, "$isMaterialSelectDropdownItemComponent", this.$ti, "$asMaterialSelectDropdownItemComponent");
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  Y._ViewMaterialDropdownSelectComponent10.prototype = {
    build$0: function() {
      var _el_0, t2, t3, t4, _this = this,
        t1 = P.String;
      _this.set$_material_dropdown_select_template$_compView_0(O.ViewMaterialSelectDropdownItemComponent0$(_this, 0, t1));
      _el_0 = _this._material_dropdown_select_template$_compView_0.rootEl;
      _this.addShimC$1(_el_0);
      t2 = H.interceptedTypeCheck(_this.parentView.parentView.parentView.parentView.parentView, "$isViewMaterialDropdownSelectComponent0");
      t3 = t2._MaterialPopupComponent_2_8;
      t4 = t2.parentView;
      t2 = t2.viewData.parentIndex;
      t1 = F.MaterialSelectDropdownItemComponent$(_el_0, null, t3, H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_ActivationHandler_Nm5, t2), "$isActivationHandler"), H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_IdGenerator_yLN, t2), "$isIdGenerator"), _this._material_dropdown_select_template$_compView_0, t1);
      _this.set$_MaterialSelectDropdownItemComponent_0_5(t1);
      _this._material_dropdown_select_template$_compView_0.create$2(0, _this._MaterialSelectDropdownItemComponent_0_5, H.setRuntimeTypeInfo([C.List_empty0], [P.Object]));
      _this.init1$1(_el_0);
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if ((token === C.Type_SelectionItem_uvp || token === C.Type_HasRenderer_wsa) && 0 === nodeIndex)
        return this._MaterialSelectDropdownItemComponent_0_5;
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var t1, t2, _this = this,
        firstCheck = _this.viewData._cdState === 0,
        local_group = H.assertSubtypeOfRuntimeType(_this.parentView.parentView.viewData.locals.$index(0, "$implicit"), [F.OptionGroup, H.getTypeArgumentByIndex(_this, 0)]);
      if (firstCheck) {
        t1 = _this._MaterialSelectDropdownItemComponent_0_5;
        t1.disabled = true;
        t1.tabbable = false;
      }
      t1 = local_group._emptyLabelFcn;
      t1 = t1 != null ? t1.call$0() : null;
      t2 = _this._material_dropdown_select_template$_expr_2;
      if (t2 != t1) {
        t2 = _this._MaterialSelectDropdownItemComponent_0_5;
        t2.toString;
        t2.set$_material_select_item$_value(H.assertSubtypeOfRuntimeType(t1, H.getTypeArgumentByIndex(t2, 0)));
        _this._material_dropdown_select_template$_expr_2 = t1;
      }
      _this._material_dropdown_select_template$_compView_0.detectHostChanges$1(firstCheck);
      _this._material_dropdown_select_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._material_dropdown_select_template$_compView_0.destroyInternalState$0();
      this._MaterialSelectDropdownItemComponent_0_5._disposer.dispose$0();
    },
    set$_material_dropdown_select_template$_compView_0: function(_compView_0) {
      this._material_dropdown_select_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewMaterialSelectDropdownItemComponent0", [P.String], "$asViewMaterialSelectDropdownItemComponent0");
    },
    set$_MaterialSelectDropdownItemComponent_0_5: function(_MaterialSelectDropdownItemComponent_0_5) {
      this._MaterialSelectDropdownItemComponent_0_5 = H.assertSubtype(_MaterialSelectDropdownItemComponent_0_5, "$isMaterialSelectDropdownItemComponent", [P.String], "$asMaterialSelectDropdownItemComponent");
    },
    $asAppView: function($T) {
      return [[M.MaterialDropdownSelectComponent, $T]];
    }
  };
  V.MaterialSelectBase.prototype = {
    get$itemRenderer: function() {
      var t1 = L.SelectionContainer.prototype.get$itemRenderer.call(this);
      return t1 == null ? G.has_renderer__defaultItemRenderer$closure() : t1;
    }
  };
  F.MaterialSelectDropdownItemComponent.prototype = {
    preventTextSelectionIfShiftKey$1: function(e) {
      H.interceptedTypeCheck(e, "$isMouseEvent");
      if (H.boolConversionCheck(e.shiftKey))
        e.preventDefault();
    },
    onLoadCustomComponent$1: function(ref) {
      H.interceptedTypeCheck(ref, "$isComponentRef");
      this._customAriaHandling = false;
    }
  };
  O.ViewMaterialSelectDropdownItemComponent0.prototype = {
    build$0: function() {
      var t2, t3, _this = this, _null = null,
        _ctx = _this.ctx,
        _rootEl = _this.rootEl,
        parentRenderNode = _this.initViewRoot$1(_rootEl),
        t1 = _this._material_select_dropdown_item_template$_appEl_0 = new V.ViewContainer(0, _null, _this, T.appendAnchor(parentRenderNode));
      _this._material_select_dropdown_item_template$_NgIf_0_9 = new K.NgIf(new D.TemplateRef(t1, new O.ViewMaterialSelectDropdownItemComponent0_build_closure(_this)), t1);
      T.appendText(parentRenderNode, " ");
      t1 = _this._material_select_dropdown_item_template$_appEl_2 = new V.ViewContainer(2, _null, _this, T.appendAnchor(parentRenderNode));
      _this._material_select_dropdown_item_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, new O.ViewMaterialSelectDropdownItemComponent0_build_closure0(_this)), t1);
      T.appendText(parentRenderNode, "\n \n");
      t1 = _this._material_select_dropdown_item_template$_appEl_4 = new V.ViewContainer(4, _null, _this, T.appendAnchor(parentRenderNode));
      _this._material_select_dropdown_item_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t1, new O.ViewMaterialSelectDropdownItemComponent0_build_closure1(_this)), t1);
      T.appendText(parentRenderNode, "\n ");
      t1 = _this._appEl_6 = new V.ViewContainer(6, _null, _this, T.appendAnchor(parentRenderNode));
      _this._NgIf_6_9 = new K.NgIf(new D.TemplateRef(t1, new O.ViewMaterialSelectDropdownItemComponent0_build_closure2(_this)), t1);
      _this.project$2(parentRenderNode, 0);
      _this.init0$0();
      t1 = W.Event;
      t2 = W.MouseEvent;
      t3 = J.getInterceptor$x(_rootEl);
      t3.addEventListener$2(_rootEl, "click", _this.eventHandler1$2$1(_ctx.get$handleClick(), t1, t2));
      t3.addEventListener$2(_rootEl, "keypress", _this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t1, W.KeyboardEvent));
      t3.addEventListener$2(_rootEl, "mousedown", _this.eventHandler1$2$1(_ctx.get$preventTextSelectionIfShiftKey(), t1, t2));
    },
    detectChangesInternal$0: function() {
      var t2, _this = this,
        _ctx = _this.ctx,
        t1 = _this._material_select_dropdown_item_template$_NgIf_0_9;
      t1.set$ngIf(!_ctx._supportsMultiSelect && B.MaterialSelectItemComponent.prototype.get$isSelected.call(_ctx));
      t1 = _this._material_select_dropdown_item_template$_NgIf_2_9;
      if (_ctx._supportsMultiSelect) {
        _ctx.toString;
        t2 = true;
      } else
        t2 = false;
      t1.set$ngIf(t2);
      _this._material_select_dropdown_item_template$_NgIf_4_9.set$ngIf(_ctx.get$valueLabel() != null);
      t2 = _this._NgIf_6_9;
      t2.set$ngIf(_ctx.get$componentType() != null || _ctx.get$componentFactory() != null);
      _this._material_select_dropdown_item_template$_appEl_0.detectChangesInNestedViews$0();
      _this._material_select_dropdown_item_template$_appEl_2.detectChangesInNestedViews$0();
      _this._material_select_dropdown_item_template$_appEl_4.detectChangesInNestedViews$0();
      _this._appEl_6.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._material_select_dropdown_item_template$_appEl_0.destroyNestedViews$0();
      _this._material_select_dropdown_item_template$_appEl_2.destroyNestedViews$0();
      _this._material_select_dropdown_item_template$_appEl_4.destroyNestedViews$0();
      _this._appEl_6.destroyNestedViews$0();
    },
    detectHostChanges$1: function(firstCheck) {
      var currVal_5, currVal_6, t2, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, _this = this,
        _ctx = _this.ctx,
        currVal_4 = _ctx.get$tabIndex(_ctx),
        t1 = _this._material_select_dropdown_item_template$_expr_4;
      if (t1 != currVal_4) {
        T.updateAttribute(_this.rootEl, "tabindex", currVal_4);
        _this._material_select_dropdown_item_template$_expr_4 = currVal_4;
      }
      currVal_5 = _ctx.role;
      t1 = _this._material_select_dropdown_item_template$_expr_5;
      if (t1 != currVal_5) {
        T.updateAttribute(_this.rootEl, "role", currVal_5);
        _this._material_select_dropdown_item_template$_expr_5 = currVal_5;
      }
      currVal_6 = "" + _ctx.get$disabled(_ctx);
      t1 = _this._material_select_dropdown_item_template$_expr_6;
      if (t1 !== currVal_6) {
        T.updateAttribute(_this.rootEl, "aria-disabled", currVal_6);
        _this._material_select_dropdown_item_template$_expr_6 = currVal_6;
      }
      t1 = _ctx.disabled;
      t2 = _this._material_select_dropdown_item_template$_expr_7;
      if (t2 != t1) {
        T.updateClassBindingNonHtml(_this.rootEl, "is-disabled", t1);
        _this._material_select_dropdown_item_template$_expr_7 = t1;
      }
      t1 = _ctx.disabled;
      t2 = _this._material_select_dropdown_item_template$_expr_8;
      if (t2 != t1) {
        T.updateClassBindingNonHtml(_this.rootEl, "disabled", t1);
        _this._material_select_dropdown_item_template$_expr_8 = t1;
      }
      currVal_9 = _ctx._isHidden;
      t1 = _this._material_select_dropdown_item_template$_expr_9;
      if (t1 !== currVal_9) {
        T.updateClassBindingNonHtml(_this.rootEl, "hidden", currVal_9);
        _this._material_select_dropdown_item_template$_expr_9 = currVal_9;
      }
      currVal_10 = _ctx._supportsMultiSelect;
      t1 = _this._expr_10;
      if (t1 !== currVal_10) {
        T.updateClassBindingNonHtml(_this.rootEl, "multiselect", currVal_10);
        _this._expr_10 = currVal_10;
      }
      currVal_11 = !_ctx._supportsMultiSelect || false ? null : B.MaterialSelectItemComponent.prototype.get$isSelected.call(_ctx);
      t1 = _this._expr_11;
      if (t1 != currVal_11) {
        t1 = _this.rootEl;
        T.updateAttribute(t1, "aria-checked", currVal_11 == null ? null : String(currVal_11));
        _this._expr_11 = currVal_11;
      }
      currVal_12 = B.MaterialSelectItemComponent.prototype.get$isSelected.call(_ctx);
      t1 = _this._expr_12;
      if (t1 !== currVal_12) {
        T.updateClassBindingNonHtml(_this.rootEl, "selected", currVal_12);
        _this._expr_12 = currVal_12;
      }
      if (_ctx._customAriaHandling)
        currVal_13 = null;
      else {
        t1 = _ctx._id;
        currVal_13 = t1 == null ? _ctx._generatedId : t1;
      }
      t1 = _this._expr_13;
      if (t1 != currVal_13) {
        T.updateAttribute(_this.rootEl, "id", currVal_13);
        _this._expr_13 = currVal_13;
      }
      currVal_14 = B.MaterialSelectItemComponent.prototype.get$isSelected.call(_ctx);
      t1 = _this._expr_14;
      if (t1 !== currVal_14) {
        t1 = _this.rootEl;
        t2 = String(currVal_14);
        T.updateAttribute(t1, "aria-selected", t2);
        _this._expr_14 = currVal_14;
      }
    },
    $asAppView: function($T) {
      return [[F.MaterialSelectDropdownItemComponent, $T]];
    }
  };
  O.ViewMaterialSelectDropdownItemComponent0_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new O._ViewMaterialSelectDropdownItemComponent1(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  O.ViewMaterialSelectDropdownItemComponent0_build_closure0.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new O._ViewMaterialSelectDropdownItemComponent2(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  O.ViewMaterialSelectDropdownItemComponent0_build_closure1.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      H.intTypeCheck(parentIndex);
      t1 = new O._ViewMaterialSelectDropdownItemComponent6(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  O.ViewMaterialSelectDropdownItemComponent0_build_closure2.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new O._ViewMaterialSelectDropdownItemComponent7(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  O._ViewMaterialSelectDropdownItemComponent1.prototype = {
    build$0: function() {
      var _el_0 = document.createElement("div");
      H.interceptedTypeCheck(_el_0, "$isHtmlElement");
      this.updateChildClass$2(_el_0, "selected-accent mixin");
      this.addShimC$1(_el_0);
      this.init1$1(_el_0);
    },
    $asAppView: function($T) {
      return [[F.MaterialSelectDropdownItemComponent, $T]];
    }
  };
  O._ViewMaterialSelectDropdownItemComponent2.prototype = {
    build$0: function() {
      var _text_1, t2, _this = this,
        t1 = _this._material_select_dropdown_item_template$_appEl_0 = new V.ViewContainer(0, null, _this, T.createAnchor());
      _this._material_select_dropdown_item_template$_NgIf_0_9 = new K.NgIf(new D.TemplateRef(t1, new O._ViewMaterialSelectDropdownItemComponent2_build_closure(_this)), t1);
      _text_1 = T.createText("  ");
      t2 = _this._material_select_dropdown_item_template$_appEl_2 = new V.ViewContainer(2, null, _this, T.createAnchor());
      _this._material_select_dropdown_item_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t2, new O._ViewMaterialSelectDropdownItemComponent2_build_closure0(_this)), t2);
      _this.init$2(H.setRuntimeTypeInfo([t1, _text_1, t2], [P.Object]), null);
    },
    detectChangesInternal$0: function() {
      var _this = this,
        _ctx = _this.ctx,
        t1 = _this._material_select_dropdown_item_template$_NgIf_0_9;
      _ctx.toString;
      t1.set$ngIf(true);
      _this._material_select_dropdown_item_template$_NgIf_2_9.set$ngIf(false);
      _this._material_select_dropdown_item_template$_appEl_0.detectChangesInNestedViews$0();
      _this._material_select_dropdown_item_template$_appEl_2.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      this._material_select_dropdown_item_template$_appEl_0.destroyNestedViews$0();
      this._material_select_dropdown_item_template$_appEl_2.destroyNestedViews$0();
    },
    $asAppView: function($T) {
      return [[F.MaterialSelectDropdownItemComponent, $T]];
    }
  };
  O._ViewMaterialSelectDropdownItemComponent2_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new O._ViewMaterialSelectDropdownItemComponent3(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  O._ViewMaterialSelectDropdownItemComponent2_build_closure0.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new O._ViewMaterialSelectDropdownItemComponent4(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  O._ViewMaterialSelectDropdownItemComponent3.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = G.ViewMaterialCheckboxComponent0$(_this, 0);
      _this._material_select_dropdown_item_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      _el_0.tabIndex = -1;
      _this.addShimC$1(_el_0);
      t1 = B.MaterialCheckboxComponent$(_el_0, _this._material_select_dropdown_item_template$_compView_0, null, "-1", null);
      _this._MaterialCheckboxComponent_0_5 = t1;
      _this._material_select_dropdown_item_template$_compView_0.create$2(0, t1, H.setRuntimeTypeInfo([C.List_empty0], [P.Object]));
      _this.init1$1(_el_0);
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if (token === C.Type_HasDisabled_qzc && 0 === nodeIndex)
        return this._MaterialCheckboxComponent_0_5;
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var changed, currVal_1, _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData._cdState,
        t2 = _ctx.disabled,
        t3 = _this._material_select_dropdown_item_template$_expr_0;
      if (t3 != t2) {
        _this._material_select_dropdown_item_template$_expr_0 = _this._MaterialCheckboxComponent_0_5.disabled = t2;
        changed = true;
      } else
        changed = false;
      currVal_1 = B.MaterialSelectItemComponent.prototype.get$isSelected.call(_ctx);
      t2 = _this._material_select_dropdown_item_template$_expr_1;
      if (t2 !== currVal_1) {
        _this._MaterialCheckboxComponent_0_5.set$checked(0, currVal_1);
        _this._material_select_dropdown_item_template$_expr_1 = currVal_1;
        changed = true;
      }
      if (changed)
        _this._material_select_dropdown_item_template$_compView_0.viewData.set$cdMode(1);
      _this._material_select_dropdown_item_template$_compView_0.detectHostChanges$1(t1 === 0);
      _this._material_select_dropdown_item_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._material_select_dropdown_item_template$_compView_0.destroyInternalState$0();
      this._MaterialCheckboxComponent_0_5.toString;
    },
    $asAppView: function($T) {
      return [[F.MaterialSelectDropdownItemComponent, $T]];
    }
  };
  O._ViewMaterialSelectDropdownItemComponent4.prototype = {
    build$0: function() {
      var t1, _this = this,
        _el_0 = document.createElement("span");
      H.interceptedTypeCheck(_el_0, "$isHtmlElement");
      _this.updateChildClass$2(_el_0, "check-container");
      _this.addShimE$1(_el_0);
      t1 = _this._material_select_dropdown_item_template$_appEl_1 = new V.ViewContainer(1, 0, _this, T.appendAnchor(_el_0));
      _this._material_select_dropdown_item_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new O._ViewMaterialSelectDropdownItemComponent4_build_closure(_this)), t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var _ctx = this.ctx;
      this._material_select_dropdown_item_template$_NgIf_1_9.set$ngIf(B.MaterialSelectItemComponent.prototype.get$isSelected.call(_ctx));
      this._material_select_dropdown_item_template$_appEl_1.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      this._material_select_dropdown_item_template$_appEl_1.destroyNestedViews$0();
    },
    $asAppView: function($T) {
      return [[F.MaterialSelectDropdownItemComponent, $T]];
    }
  };
  O._ViewMaterialSelectDropdownItemComponent4_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new O._ViewMaterialSelectDropdownItemComponent5(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  O._ViewMaterialSelectDropdownItemComponent5.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = M.ViewGlyphComponent0$(_this, 0);
      _this._material_select_dropdown_item_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      T.setAttribute(_el_0, "baseline", "");
      _this.updateChildClassNonHtml$2(_el_0, "check");
      T.setAttribute(_el_0, "icon", "check");
      _this.addShimC$1(_el_0);
      t1 = new L.GlyphComponent(_el_0);
      _this._GlyphComponent_0_5 = t1;
      _this._material_select_dropdown_item_template$_compView_0.create0$1(t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var changed, _this = this;
      if (_this.viewData._cdState === 0) {
        _this._GlyphComponent_0_5.set$icon(0, "check");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._material_select_dropdown_item_template$_compView_0.viewData.set$cdMode(1);
      _this._material_select_dropdown_item_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._material_select_dropdown_item_template$_compView_0.destroyInternalState$0();
    },
    $asAppView: function($T) {
      return [[F.MaterialSelectDropdownItemComponent, $T]];
    }
  };
  O._ViewMaterialSelectDropdownItemComponent6.prototype = {
    build$0: function() {
      var _this = this,
        _el_0 = document.createElement("span");
      H.interceptedTypeCheck(_el_0, "$isHtmlElement");
      _this.updateChildClass$2(_el_0, "label");
      _this.addShimE$1(_el_0);
      _el_0.appendChild(_this._material_select_dropdown_item_template$_textBinding_1.element);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var t1 = this.ctx.get$valueLabel();
      if (t1 == null)
        t1 = "";
      this._material_select_dropdown_item_template$_textBinding_1.updateText$1(t1);
    },
    $asAppView: function($T) {
      return [[F.MaterialSelectDropdownItemComponent, $T]];
    }
  };
  O._ViewMaterialSelectDropdownItemComponent7.prototype = {
    build$0: function() {
      var _el_0, t2, t3, subscription_0, _this = this, _null = null,
        _ctx = _this.ctx,
        t1 = Q.ViewDynamicComponent0$(_this, 0);
      _this._material_select_dropdown_item_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      _this.updateChildClassNonHtml$2(_el_0, "dynamic-item");
      _this.addShimC$1(_el_0);
      _this._material_select_dropdown_item_template$_appEl_0 = new V.ViewContainer(0, _null, _this, _el_0);
      t1 = H.interceptedTypeCheck(_this.parentView.injectorGet$2(C.Type_SlowComponentLoader_qxe, _this.viewData.parentIndex), "$isSlowComponentLoader");
      t2 = _this._material_select_dropdown_item_template$_compView_0;
      t3 = [D.ComponentRef,,];
      t1 = new Z.DynamicComponent(t1, _this._material_select_dropdown_item_template$_appEl_0, t2, P.StreamController_StreamController(_null, _null, _null, false, t3));
      _this._DynamicComponent_0_8 = t1;
      t2.create0$1(t1);
      t1 = _this._DynamicComponent_0_8._onLoadController;
      subscription_0 = new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(_this.eventHandler1$2$1(_ctx.get$onLoadCustomComponent(), t3, t3));
      _this.init$2(H.setRuntimeTypeInfo([_this._material_select_dropdown_item_template$_appEl_0], [P.Object]), H.setRuntimeTypeInfo([subscription_0], [[P.StreamSubscription, -1]]));
    },
    detectChangesInternal$0: function() {
      var changed, currVal_1, currVal_2, _this = this,
        _ctx = _this.ctx,
        currVal_0 = _ctx.get$componentType(),
        t1 = _this._material_select_dropdown_item_template$_expr_0;
      if (t1 != currVal_0) {
        t1 = _this._DynamicComponent_0_8;
        if (!J.$eq$(t1._componentType, currVal_0))
          t1._typeChanged = true;
        _this._material_select_dropdown_item_template$_expr_0 = t1._componentType = currVal_0;
        changed = true;
      } else
        changed = false;
      currVal_1 = _ctx.get$componentFactory();
      t1 = _this._material_select_dropdown_item_template$_expr_1;
      if (t1 != currVal_1) {
        _this._DynamicComponent_0_8.set$componentFactory(currVal_1);
        _this._material_select_dropdown_item_template$_expr_1 = currVal_1;
        changed = true;
      }
      currVal_2 = _ctx._material_select_item$_value;
      t1 = _this._material_select_dropdown_item_template$_expr_2;
      if (t1 == null ? currVal_2 != null : t1 !== currVal_2) {
        t1 = _this._DynamicComponent_0_8;
        t1._dynamic_component$_value = currVal_2;
        changed = t1._valueChanged = true;
        _this._material_select_dropdown_item_template$_expr_2 = currVal_2;
      }
      if (changed)
        _this._DynamicComponent_0_8.ngAfterChanges$0();
      _this._material_select_dropdown_item_template$_appEl_0.detectChangesInNestedViews$0();
      _this._material_select_dropdown_item_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._material_select_dropdown_item_template$_appEl_0.destroyNestedViews$0();
      this._material_select_dropdown_item_template$_compView_0.destroyInternalState$0();
      var t1 = this._DynamicComponent_0_8;
      t1._disposeChildComponent$0();
      t1._viewContainerRef = null;
    },
    $asAppView: function($T) {
      return [[F.MaterialSelectDropdownItemComponent, $T]];
    }
  };
  B.MaterialSelectItemComponent.prototype = {
    MaterialSelectItemComponent$6$addTabIndexWhenNonTabbable: function(element, _dropdown, _activationHandler, _cdRef, role, addTabIndexWhenNonTabbable, $T) {
      var _this = this,
        t1 = _this._disposer,
        t2 = _this._trigger;
      t1.addStreamSubscription$1$1(new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(_this.get$handleActivate()), W.UIEvent);
      t1.addFunction$1(new B.MaterialSelectItemComponent_closure(_this));
    },
    get$disabled: function(_) {
      return this.disabled;
    },
    get$itemRenderer: function() {
      return this._material_select_item$_itemRenderer;
    },
    get$valueLabel: function() {
      var t2,
        t1 = this._material_select_item$_value;
      if (t1 == null)
        return;
      else {
        t2 = this._material_select_item$_itemRenderer !== G.has_renderer___nullRenderer$closure();
        if (t2)
          return this.itemRenderer$1(t1);
      }
      return;
    },
    set$selection: function(sel) {
      var _this = this,
        t1 = _this.$ti;
      H.assertSubtype(sel, "$isSelectionModel", t1, "$asSelectionModel");
      _this.set$_material_select_item$_selection(sel);
      _this._supportsMultiSelect = H.checkSubtype(sel, "$isMultiSelectionModel", t1, "$asMultiSelectionModel");
      t1 = _this._selectionChangeStreamSub;
      if (t1 != null)
        t1.cancel$0(0);
      _this._selectionChangeStreamSub = sel.get$selectionChanges().listen$1(new B.MaterialSelectItemComponent_selection_closure(_this));
    },
    get$componentType: function() {
      return;
    },
    get$componentFactory: function() {
      return;
    },
    get$isSelected: function() {
      var t2,
        t1 = this._selected;
      if (!t1) {
        t1 = this._material_select_item$_value;
        if (t1 != null) {
          t2 = this._material_select_item$_selection;
          t1 = t2 == null ? null : t2.isSelected$1(t1);
          t1 = t1 === true;
        } else
          t1 = false;
      } else
        t1 = true;
      return t1;
    },
    handleActivate$1: function(e) {
      var hasCheckbox, t1, t2, _this = this;
      H.interceptedTypeCheck(e, "$isUIEvent");
      hasCheckbox = _this._supportsMultiSelect && true;
      t1 = _this._dropdown;
      if (t1 != null)
        t2 = !hasCheckbox;
      else
        t2 = false;
      if (t2) {
        t1.set$visible(0, false);
        if (!!J.getInterceptor$(e).$isKeyboardEvent)
          e.stopPropagation();
      }
      t1 = _this._activationHandler;
      t1 = t1 == null ? null : t1.handle$2(e, _this._material_select_item$_value);
      if (t1 === true)
        return;
      t1 = _this._material_select_item$_selection != null && _this._material_select_item$_value != null;
      if (t1)
        if (!_this._material_select_item$_selection.isSelected$1(_this._material_select_item$_value))
          _this._material_select_item$_selection.select$1(0, _this._material_select_item$_value);
        else if (_this._deselectOnActivate)
          _this._material_select_item$_selection.deselect$1(_this._material_select_item$_value);
    },
    set$_material_select_item$_value: function(_value) {
      this._material_select_item$_value = H.assertSubtypeOfRuntimeType(_value, H.getTypeArgumentByIndex(this, 0));
    },
    set$_material_select_item$_itemRenderer: function(_itemRenderer) {
      this._material_select_item$_itemRenderer = H.functionTypeCheck(_itemRenderer, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(this, 0)]});
    },
    set$_material_select_item$_selection: function(_selection) {
      this._material_select_item$_selection = H.assertSubtype(_selection, "$isSelectionModel", this.$ti, "$asSelectionModel");
    },
    itemRenderer$1: function(arg0) {
      return this.get$itemRenderer().call$1(arg0);
    }
  };
  B.MaterialSelectItemComponent_closure.prototype = {
    call$0: function() {
      var t1 = this.$this._selectionChangeStreamSub;
      return t1 == null ? null : t1.cancel$0(0);
    },
    $signature: 15
  };
  B.MaterialSelectItemComponent_selection_closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this;
      H.assertSubtype(_, "$isList", [[Z.SelectionChangeRecord, H.getTypeArgumentByIndex(t1, 0)]], "$asList");
      t1._cdRef.markPathToRootAsCheckOnce$0();
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [[P.List, [Z.SelectionChangeRecord, H.getTypeArgumentByIndex(this.$this, 0)]]]};
    }
  };
  X.ShiftClickSelectionMixin.prototype = {
    handle$2: function($event, activatedValue) {
      var t1, toggleSelection, optionValues, clickedIndex, pivotIndex, _this = this;
      if (!J.getInterceptor$(_this.get$selection()).$isMultiSelectionModel || !J.getInterceptor$($event).$isMouseEvent)
        return false;
      t1 = H.getTypeArgumentByIndex(_this, 0);
      activatedValue = H.assertSubtypeOfRuntimeType(H.subtypeOfRuntimeTypeCast(activatedValue, t1), t1);
      if (_this.get$selection().isSelected$1(activatedValue))
        toggleSelection = _this.get$selection().get$deselect();
      else {
        t1 = _this.get$selection();
        toggleSelection = t1.get$select(t1);
      }
      if (_this.ShiftClickSelectionMixin__pivot == null || !H.boolConversionCheck($event.shiftKey))
        toggleSelection.call$1(activatedValue);
      else {
        optionValues = _this.get$options(_this)._flattenedList;
        clickedIndex = (optionValues && C.JSArray_methods).indexOf$1(optionValues, activatedValue);
        pivotIndex = C.JSArray_methods.indexOf$1(optionValues, _this.ShiftClickSelectionMixin__pivot);
        if (pivotIndex === -1)
          H.throwExpression(P.StateError$("pivot item is no longer in the model: " + H.S(_this.ShiftClickSelectionMixin__pivot)));
        H.SubListIterable$(optionValues, H.intTypeCheck(Math.min(pivotIndex, clickedIndex)), null, H.getTypeArgumentByIndex(optionValues, 0)).take$1(0, Math.abs(pivotIndex - clickedIndex) + 1).forEach$1(0, toggleSelection);
      }
      _this.set$_pivot(activatedValue);
      return true;
    },
    set$_pivot: function(_pivot) {
      this.ShiftClickSelectionMixin__pivot = H.assertSubtypeOfRuntimeType(_pivot, H.getTypeArgumentByIndex(this, 0));
    }
  };
  U.MaterialButtonWrapper.prototype = {
    get$buttonIcon: function() {
      var t2, _this = this,
        t1 = _this.MaterialButtonWrapper_icon;
      if (t1 != null)
        return t1;
      t1 = _this.MaterialButtonWrapper__buttonIcon;
      if (t1 == null) {
        t2 = _this.MaterialButtonWrapper_iconName;
        t2 = t2 != null && t2.length !== 0;
      } else
        t2 = false;
      return t2 ? _this.MaterialButtonWrapper__buttonIcon = new L.Icon(_this.MaterialButtonWrapper_iconName) : t1;
    }
  };
  O.FocusableMixin.prototype = {
    focus$0: function(_) {
      var t1 = this.FocusableMixin__focusable;
      if (t1 == null)
        this.FocusableMixin__focusPending = true;
      else
        t1.focus$0(0);
    }
  };
  B.HasTabIndex.prototype = {
    get$tabIndex: function(_) {
      var t1 = this._computeTabIndex$0();
      return t1;
    },
    _computeTabIndex$0: function() {
      var t1, _this = this;
      if (_this.get$disabled(_this))
        return "-1";
      else if (_this.get$hostTabIndex() == null)
        return;
      else {
        t1 = _this.get$hostTabIndex();
        if (!(t1 == null || C.JSString_methods.trim$0(t1).length === 0))
          return _this.get$hostTabIndex();
      }
      throw H.wrapException("Host tabIndex should either be null or a value");
    }
  };
  M.DropdownHandle.prototype = {};
  M.MaterialDropdownBase.prototype = {
    set$visible: function(_, value) {
      H.boolConversionCheck(value);
      if (value && this.MaterialDropdownBase__visible !== true)
        this.MaterialDropdownBase__contentVisible.add$1(0, true);
      this.MaterialDropdownBase__visible = value;
    },
    onVisible$1: function(vis) {
      H.boolTypeCheck(vis);
      this.MaterialDropdownBase__visibleStream.add$1(0, vis);
      this.set$visible(0, vis);
      if (!H.boolConversionCheck(vis))
        this.MaterialDropdownBase__contentVisible.add$1(0, false);
    }
  };
  K.SelectionInputAdapter.prototype = {
    emitSelectionChange$0: function() {
      return;
    },
    set$selectionInput: function(value) {
      var t2, t3, t4, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      if (H.checkSubtype(value, "$isSelectionModel", [t1], "$asSelectionModel")) {
        _this.set$selection(value);
        return;
      }
      if (_this.get$selection() == null) {
        t2 = H.setRuntimeTypeInfo([], [t1]);
        t3 = Y.ChangeRecord;
        t4 = new H.TypeImpl(t3).$eq(0, C.Type_dynamic_0Rz) || new H.TypeImpl(t3).$eq(0, C.Type_ChangeRecord_INA);
        _this.set$selection(new Z._SingleSelectionModelImpl(Z.selection_model___defaultKeyProvider$closure(), t2, null, null, new B.ChangeNotifier([t3]), t4, [t1]));
      }
      _this.get$selection().select$1(0, H.assertSubtypeOfRuntimeType(value, t1));
    },
    set$optionsInput: function(value) {
      var _this = this, _null = null,
        t1 = H.getTypeArgumentByIndex(_this, 0),
        t2 = [t1],
        t3 = H.checkSubtype(value, "$isSelectionOptions", t2, "$asSelectionOptions");
      if (t3)
        _this.set$options(0, H.assertSubtype(value, "$isSelectionOptions", t2, "$asSelectionOptions"));
      else if (H.checkSubtype(value, "$isList", [t1], "$asList")) {
        t2 = _this.get$itemRenderer();
        t3 = H.setRuntimeTypeInfo([new F.OptionGroup(_null, _null, value, [t1])], [[F.OptionGroup, t1]]);
        t1 = new R.StringSelectionOptions(t2, R.string_selection_options___stringFormatSuggestion$closure(), false, true, new P._SyncBroadcastStreamController(_null, _null, [[P.List, [F.OptionGroup, t1]]]), [t1]);
        t1.set$optionGroups(t3);
        t1.set$_suggestionFilter(t1.get$filterOption());
        _this.set$options(0, t1);
      } else
        throw H.wrapException(P.ArgumentError$("Unsupported selection options type; value must be null, SelectionOptions<" + H.TypeImpl$(t1).toString$0(0) + ">, or List<" + H.TypeImpl$(t1).toString$0(0) + ">, but is " + H.getRuntimeType(value).toString$0(0)));
    }
  };
  F.TrackLayoutChangesMixin.prototype = {};
  O.ActiveItemModel.prototype = {
    set$items: function(_, itemList) {
      var _lastActive, last, _this = this;
      H.assertSubtype(itemList, "$isList", _this.$ti, "$asList");
      if (C.C_ListEquality0.equals$2(itemList, _this._items))
        return;
      _this._ids.clear$0(0);
      _lastActive = _this.get$activeItem();
      _this.set$_items(P.List_List$unmodifiable(itemList, H.getTypeArgumentByIndex(_this, 0)));
      if (_lastActive != null) {
        last = C.JSArray_methods.indexOf$1(_this._items, _lastActive);
        if (last !== -1) {
          _this._activeIndex = last;
          return;
        }
      }
      _this._activeIndex = 0;
      _this._modelChanged.add$1(0, null);
    },
    get$activeItem: function() {
      var t3,
        t1 = this._items,
        t2 = t1.length;
      if (t2 === 0 || this._activeIndex === -1)
        t1 = null;
      else {
        t3 = this._activeIndex;
        if (t3 < 0 || t3 >= t2)
          return H.ioore(t1, t3);
        t3 = t1[t3];
        t1 = t3;
      }
      return t1;
    },
    activateNext$0: function() {
      var t2, _this = this,
        t1 = _this._items.length;
      if (t1 === 0)
        _this._activeIndex = -1;
      else {
        t2 = _this._activeIndex;
        if (t2 < t1 - 1)
          _this._activeIndex = t2 + 1;
      }
      _this._modelChanged.add$1(0, null);
    },
    get$peekNext: function() {
      var t3,
        t1 = this._items,
        t2 = t1.length;
      if (t2 !== 0 && this._activeIndex < t2 - 1) {
        t3 = this._activeIndex + 1;
        if (t3 < 0 || t3 >= t2)
          return H.ioore(t1, t3);
        return t1[t3];
      } else
        return;
    },
    activatePrevious$0: function() {
      var t1, _this = this;
      if (_this._items.length === 0)
        _this._activeIndex = -1;
      else {
        t1 = _this._activeIndex;
        if (t1 > 0)
          _this._activeIndex = t1 - 1;
      }
      _this._modelChanged.add$1(0, null);
    },
    activateFirst$0: function() {
      this._activeIndex = this._items.length === 0 ? -1 : 0;
      this._modelChanged.add$1(0, null);
    },
    activateLast$0: function() {
      var t1 = this._items.length;
      this._activeIndex = t1 === 0 ? -1 : t1 - 1;
      this._modelChanged.add$1(0, null);
    },
    activate$1: function(value) {
      var _this = this;
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 0));
      _this._activeIndex = C.JSArray_methods.indexOf$1(_this._items, value);
      _this._modelChanged.add$1(0, null);
    },
    id$1: function(_, item) {
      var t1;
      H.assertSubtypeOfRuntimeType(item, H.getTypeArgumentByIndex(this, 0));
      if (item == null)
        return;
      t1 = this._ids;
      if (!t1.containsKey$1(0, item))
        t1.$indexSet(0, item, this._idGenerator.nextId$0());
      return t1.$index(0, item);
    },
    set$_items: function(_items) {
      this._items = H.assertSubtype(_items, "$isList", this.$ti, "$asList");
    }
  };
  B.ActiveItemDirective.prototype = {
    ngOnDestroy$0: function() {
      var t1 = this._visibilitySubscription;
      if (t1 != null)
        t1.cancel$0(0);
      this._visibilitySubscription = null;
    },
    set$itemActive: function(value) {
      if (value === this._active)
        return;
      this._active = value;
      this._scrollIntoViewIfNecessary$0();
    },
    _scrollIntoViewIfNecessary$0: function() {
      var t2, isVisible, onVisibleChanged, _this = this,
        t1 = _this._visibilitySubscription;
      if (t1 != null)
        t1.cancel$0(0);
      if (_this._initialized && _this._active && !_this._hasHover) {
        t1 = _this._popupRef;
        t2 = t1 != null;
        if (t2)
          isVisible = t1._popupComponent._isVisible;
        else
          isVisible = true;
        if (isVisible)
          _this._scrollIntoView$0(0);
        else {
          if (t2) {
            t1 = t1._popupComponent.PopupEvents_onVisibleController;
            onVisibleChanged = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
          } else
            onVisibleChanged = _this._modal.get$onVisibleChanged();
          _this._visibilitySubscription = onVisibleChanged.listen$1(new B.ActiveItemDirective__scrollIntoViewIfNecessary_closure(_this));
        }
      }
    },
    _scrollIntoView$0: function(_) {
      this._active_item_directive$_domService.scheduleWrite$1(new B.ActiveItemDirective__scrollIntoView_closure(this));
    },
    onMouseLeave$0: function(_) {
      this._hasHover = false;
    }
  };
  B.ActiveItemDirective__scrollIntoViewIfNecessary_closure.prototype = {
    call$1: function(isVisible) {
      var t1, t2;
      if (H.boolConversionCheck(H.boolTypeCheck(isVisible))) {
        t1 = this.$this;
        t2 = t1._visibilitySubscription;
        if (t2 != null)
          t2.cancel$0(0);
        if (t1._initialized && t1._active && !t1._hasHover)
          t1._scrollIntoView$0(0);
      }
    },
    $signature: 27
  };
  B.ActiveItemDirective__scrollIntoView_closure.prototype = {
    call$0: function() {
      var options, t1, exception, hasScrollIntoViewIfNeeded;
      try {
        options = {};
        options.block = "nearest";
        options.inline = "nearest";
        t1 = this.$this._active_item_directive$_element;
        t1.scrollIntoView.apply(t1, [options]);
      } catch (exception) {
        H.unwrapException(exception);
        t1 = this.$this._active_item_directive$_element;
        hasScrollIntoViewIfNeeded = !!t1.scrollIntoViewIfNeeded;
        if (hasScrollIntoViewIfNeeded)
          t1.scrollIntoViewIfNeeded();
        else
          t1.scrollIntoView();
      }
    },
    $signature: 0
  };
  M.ActiveItemDirectiveNgCd.prototype = {
    detectHostChanges$2: function(view, el) {
      var currVal_0 = this.instance._active,
        t1 = this._active_item_directive_template$_expr_0;
      if (t1 !== currVal_0) {
        T.updateClassBindingNonHtml(el, "active", currVal_0);
        this._active_item_directive_template$_expr_0 = currVal_0;
      }
    }
  };
  R.KeyboardHandlerMixin.prototype = {
    onKeyPress$1: function(_, $event) {
      var t1, t2, t3, t4, _this = this;
      H.interceptedTypeCheck($event, "$isKeyboardEvent");
      if ($event.keyCode === 13)
        _this._handleKeyboardTrigger$0();
      else if (Z.isSpaceKey($event)) {
        if ($event != null)
          $event.preventDefault();
        _this._handleKeyboardTrigger$0();
      } else if ($event.charCode !== 0) {
        _this.get$itemRenderer();
        t1 = _this.get$options(_this) != null && true;
        if (t1) {
          t1 = $event.charCode;
          t2 = _this.get$options(_this);
          t3 = _this.get$itemRenderer();
          t4 = !H.boolConversionCheck(_this.MaterialDropdownBase__visible) && !J.getInterceptor$(_this.get$selection()).$isMultiSelectionModel ? _this.get$selection() : null;
          _this.activateOnKeyPress$5(_this.activeModel, t1, t2, t3, t4);
        }
      }
    },
    onKeyDown$1: function(_, $event) {
      var t1, _this = this;
      H.interceptedTypeCheck($event, "$isKeyboardEvent");
      switch ($event.keyCode) {
        case 38:
          _this._handleNavigationKey$2($event, _this.activeModel.get$activatePrevious());
          break;
        case 40:
          _this._handleNavigationKey$2($event, _this.activeModel.get$activateNext());
          break;
        case 37:
          t1 = _this.activeModel;
          if (_this.KeyboardHandlerMixin_isRtl === true)
            _this._handleNavigationKey$2($event, t1.get$activateNext());
          else
            _this._handleNavigationKey$2($event, t1.get$activatePrevious());
          break;
        case 39:
          t1 = _this.activeModel;
          if (_this.KeyboardHandlerMixin_isRtl === true)
            _this._handleNavigationKey$2($event, t1.get$activatePrevious());
          else
            _this._handleNavigationKey$2($event, t1.get$activateNext());
          break;
        case 33:
          _this._handleNavigationKey$2($event, _this.activeModel.get$activateFirst());
          break;
        case 34:
          _this._handleNavigationKey$2($event, _this.activeModel.get$activateLast());
          break;
        case 36:
          break;
        case 35:
          break;
        case 8:
          break;
        case 46:
          break;
      }
    },
    onKeyUp$1: function(_, $event) {
      H.interceptedTypeCheck($event, "$isKeyboardEvent").keyCode;
    }
  };
  G.LabeledList.prototype = {};
  S.Box.prototype = {};
  L.SelectionContainer.prototype = {
    get$selection: function() {
      return this._selection;
    },
    set$selection: function(value) {
      this.set$_selection(H.assertSubtype(value, "$isSelectionModel", this.$ti, "$asSelectionModel"));
    },
    get$options: function(_) {
      return this._options;
    },
    set$options: function(_, value) {
      this.set$_options(H.assertSubtype(value, "$isSelectionOptions", this.$ti, "$asSelectionOptions"));
    },
    get$itemRenderer: function() {
      return this._itemRenderer;
    },
    set$itemRenderer: function(value) {
      this.set$_itemRenderer(H.functionTypeCheck(value, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(this, 0)]}));
    },
    set$_selection: function(_selection) {
      this._selection = H.assertSubtype(_selection, "$isSelectionModel", this.$ti, "$asSelectionModel");
    },
    set$_options: function(_options) {
      this._options = H.assertSubtype(_options, "$isSelectionOptions", this.$ti, "$asSelectionOptions");
    },
    set$_itemRenderer: function(_itemRenderer) {
      this._itemRenderer = H.functionTypeCheck(_itemRenderer, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(this, 0)]});
    }
  };
  L.SelectionItem.prototype = {};
  Z.CastIterable.prototype = {};
  Z.SelectionChangeRecord.prototype = {};
  Z._MultiSelectionModelImpl.prototype = {
    deselect$1: function(value) {
      var t1, _this = this;
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 0));
      if (value == null)
        throw H.wrapException(P.ArgumentError$(null));
      t1 = _this.selectedValues;
      if (t1.remove$1(0, value)) {
        if (t1._collection$_length === 0) {
          t1 = P.bool;
          _this.notifyPropertyChange$1$3(C.Symbol_isEmpty, false, true, t1);
          _this.notifyPropertyChange$1$3(C.Symbol_isNotEmpty, true, false, t1);
        }
        _this.notifySelectionChange$1$removed(H.setRuntimeTypeInfo([value], _this.$ti));
        return true;
      }
      return false;
    },
    select$1: function(_, value) {
      var t1, _this = this;
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 0));
      if (value == null)
        throw H.wrapException(P.ArgumentError$(null));
      t1 = _this.selectedValues;
      if (t1.add$1(0, value)) {
        if (t1._collection$_length === 1) {
          t1 = P.bool;
          _this.notifyPropertyChange$1$3(C.Symbol_isEmpty, true, false, t1);
          _this.notifyPropertyChange$1$3(C.Symbol_isNotEmpty, false, true, t1);
        }
        _this.notifySelectionChange$1$added(H.setRuntimeTypeInfo([value], _this.$ti));
        return true;
      } else
        return false;
    },
    isSelected$1: function(value) {
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
      if (value == null)
        throw H.wrapException(P.ArgumentError$(null));
      return this.selectedValues.contains$1(0, value);
    },
    get$isEmpty: function(_) {
      return this.selectedValues._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this.selectedValues._collection$_length !== 0;
    },
    $isSelectionModel: 1,
    $isMultiSelectionModel: 1,
    $asObservable: function($T) {
      return [Y.ChangeRecord];
    },
    get$selectedValues: function() {
      return this.selectedValues;
    }
  };
  Z._MultiSelectionModelImpl_closure.prototype = {
    call$2: function(a, b) {
      var t1 = this.T;
      H.assertSubtypeOfRuntimeType(a, t1);
      H.assertSubtypeOfRuntimeType(b, t1);
      t1 = this.keyProvider;
      return J.$eq$(t1.call$1(a), t1.call$1(b));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: function() {
      var t1 = this.T;
      return {func: 1, ret: P.bool, args: [t1, t1]};
    }
  };
  Z._MultiSelectionModelImpl_closure0.prototype = {
    call$1: function(o) {
      return J.get$hashCode$(this.keyProvider.call$1(H.assertSubtypeOfRuntimeType(o, this.T)));
    },
    $signature: function() {
      return {func: 1, ret: P.int, args: [this.T]};
    }
  };
  Z.SelectionChangeNotifier.prototype = {
    deliverSelectionChanges$0: function() {
      var t1, _this = this;
      if (_this.get$hasSelectionObservers()) {
        t1 = _this.SelectionChangeNotifier__selectionChangeRecords;
        t1 = t1 != null && t1.length !== 0;
      } else
        t1 = false;
      if (t1) {
        t1 = _this.SelectionChangeNotifier__selectionChangeRecords;
        _this.set$_selectionChangeRecords(null);
        _this.SelectionChangeNotifier__selectionChangeController.add$1(0, new P.UnmodifiableListView(t1, [[Z.SelectionChangeRecord, H.getRuntimeTypeArgument(_this, "SelectionChangeNotifier", 0)]]));
        return true;
      } else
        return false;
    },
    notifySelectionChange$2$added$removed: function(added, removed) {
      var t3, _this = this,
        t1 = H.getRuntimeTypeArgument(_this, "SelectionChangeNotifier", 0),
        t2 = [t1];
      H.assertSubtype(added, "$isIterable", t2, "$asIterable");
      H.assertSubtype(removed, "$isIterable", t2, "$asIterable");
      if (_this.get$hasSelectionObservers()) {
        t3 = [t1];
        added = H.assertSubtype(new P.UnmodifiableListView(added, t3), "$isIterable", t2, "$asIterable");
        removed = H.assertSubtype(new P.UnmodifiableListView(removed, t3), "$isIterable", t2, "$asIterable");
        if (_this.SelectionChangeNotifier__selectionChangeRecords == null) {
          _this.set$_selectionChangeRecords(H.setRuntimeTypeInfo([], [[Z.SelectionChangeRecord, t1]]));
          P.scheduleMicrotask(_this.get$deliverSelectionChanges());
        }
        t2 = _this.SelectionChangeNotifier__selectionChangeRecords;
        (t2 && C.JSArray_methods).add$1(t2, new Z._SelectionChangeRecordImpl(added, removed, [t1]));
      }
    },
    notifySelectionChange$1$removed: function(removed) {
      return this.notifySelectionChange$2$added$removed(C.List_empty2, removed);
    },
    notifySelectionChange$1$added: function(added) {
      return this.notifySelectionChange$2$added$removed(added, C.List_empty2);
    },
    get$hasSelectionObservers: function() {
      var t1 = this.SelectionChangeNotifier__selectionChangeController;
      return t1 != null && t1._firstSubscription != null;
    },
    get$selectionChanges: function() {
      var t1, _this = this;
      if (_this.SelectionChangeNotifier__selectionChangeController == null)
        _this.set$_selectionChangeController(new P._SyncBroadcastStreamController(null, null, [[P.List, [Z.SelectionChangeRecord, H.getRuntimeTypeArgument(_this, "SelectionChangeNotifier", 0)]]]));
      t1 = _this.SelectionChangeNotifier__selectionChangeController;
      t1.toString;
      return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
    },
    set$_selectionChangeController: function(_selectionChangeController) {
      this.SelectionChangeNotifier__selectionChangeController = H.assertSubtype(_selectionChangeController, "$isStreamController", [[P.List, [Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]]], "$asStreamController");
    },
    set$_selectionChangeRecords: function(_selectionChangeRecords) {
      this.SelectionChangeNotifier__selectionChangeRecords = H.assertSubtype(_selectionChangeRecords, "$isList", [[Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]], "$asList");
    }
  };
  Z._SelectionChangeRecordImpl.prototype = {
    toString$0: function(_) {
      return "SelectionChangeRecord{added: " + H.S(this.added) + ", removed: " + H.S(this.removed) + "}";
    },
    $isSelectionChangeRecord: 1
  };
  Z._SingleSelectionModelImpl.prototype = {
    select$1: function(_, value) {
      var newKey, t1, previousValue, removedItems, _this = this;
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 0));
      if (value == null)
        throw H.wrapException(P.ArgumentError$notNull("value"));
      newKey = _this._keyOf.call$1(value);
      if (J.$eq$(newKey, _this._selectedKey))
        return false;
      t1 = _this._selectedValues;
      previousValue = t1.length === 0 ? null : C.JSArray_methods.get$first(t1);
      _this._selectedKey = newKey;
      C.JSArray_methods.set$length(t1, 0);
      C.JSArray_methods.add$1(t1, value);
      if (previousValue == null) {
        t1 = P.bool;
        _this.notifyPropertyChange$1$3(C.Symbol_isEmpty, true, false, t1);
        _this.notifyPropertyChange$1$3(C.Symbol_isNotEmpty, false, true, t1);
        removedItems = C.List_empty2;
      } else
        removedItems = H.setRuntimeTypeInfo([previousValue], _this.$ti);
      _this.notifySelectionChange$2$added$removed(H.setRuntimeTypeInfo([value], _this.$ti), removedItems);
      return true;
    },
    deselect$1: function(value) {
      var t1, previousValue, removedItems, _this = this;
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 0));
      if (value == null)
        throw H.wrapException(P.ArgumentError$notNull("value"));
      t1 = _this._selectedValues;
      if (t1.length === 0 || !J.$eq$(_this._keyOf.call$1(value), _this._selectedKey))
        return false;
      previousValue = t1.length === 0 ? null : C.JSArray_methods.get$first(t1);
      _this._selectedKey = null;
      C.JSArray_methods.set$length(t1, 0);
      if (previousValue != null) {
        t1 = P.bool;
        _this.notifyPropertyChange$1$3(C.Symbol_isEmpty, false, true, t1);
        _this.notifyPropertyChange$1$3(C.Symbol_isNotEmpty, true, false, t1);
        removedItems = H.setRuntimeTypeInfo([previousValue], _this.$ti);
      } else
        removedItems = C.List_empty2;
      _this.notifySelectionChange$2$added$removed(H.setRuntimeTypeInfo([], _this.$ti), removedItems);
      return true;
    },
    isSelected$1: function(value) {
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
      if (value == null)
        throw H.wrapException(P.ArgumentError$notNull("value"));
      return J.$eq$(this._keyOf.call$1(value), this._selectedKey);
    },
    get$isEmpty: function(_) {
      return this._selectedValues.length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._selectedValues.length !== 0;
    },
    get$selectedValues: function() {
      return this._selectedValues;
    },
    $isSelectionModel: 1,
    $asObservable: function($T) {
      return [Y.ChangeRecord];
    }
  };
  Z.__MultiSelectionModelImpl_Observable_SelectionChangeNotifier.prototype = {
    set$_selectionChangeController: function(_selectionChangeController) {
      this.SelectionChangeNotifier__selectionChangeController = H.assertSubtype(_selectionChangeController, "$isStreamController", [[P.List, [Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]]], "$asStreamController");
    },
    set$_selectionChangeRecords: function(_selectionChangeRecords) {
      this.SelectionChangeNotifier__selectionChangeRecords = H.assertSubtype(_selectionChangeRecords, "$isList", [[Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]], "$asList");
    }
  };
  Z.__MultiSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable.prototype = {};
  Z.__SingleSelectionModelImpl_Observable_SelectionChangeNotifier.prototype = {
    set$_selectionChangeController: function(_selectionChangeController) {
      this.SelectionChangeNotifier__selectionChangeController = H.assertSubtype(_selectionChangeController, "$isStreamController", [[P.List, [Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]]], "$asStreamController");
    },
    set$_selectionChangeRecords: function(_selectionChangeRecords) {
      this.SelectionChangeNotifier__selectionChangeRecords = H.assertSubtype(_selectionChangeRecords, "$isList", [[Z.SelectionChangeRecord, H.getRuntimeTypeArgument(this, "SelectionChangeNotifier", 0)]], "$asList");
    }
  };
  Z.__SingleSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable.prototype = {};
  F.OptionGroup.prototype = {};
  F.GroupedOptions.prototype = {$isDisposable: 1};
  F.SelectionOptions.prototype = {
    set$optionGroups: function(value) {
      var t2, t3, _this = this,
        t1 = H.getTypeArgumentByIndex(_this, 0);
      H.assertSubtype(value, "$isList", [[F.OptionGroup, t1]], "$asList");
      if (_this._optionGroups !== value) {
        _this.set$_optionGroups(value);
        t2 = _this._optionGroups;
        if (t2 != null) {
          t3 = H.getTypeArgumentByIndex(t2, 0);
          t1 = P.List_List$from(new H.ExpandIterable(t2, H.functionTypeCheck(new F.SelectionOptions_optionGroups_closure(_this), {func: 1, ret: [P.Iterable, t1], args: [t3]}), [t3, t1]), true, t1);
        } else
          t1 = H.setRuntimeTypeInfo([], _this.$ti);
        _this.set$_flattenedList(t1);
        _this._selection_options$_controller.add$1(0, _this._optionGroups);
      }
    },
    set$_flattenedList: function(_flattenedList) {
      this._flattenedList = H.assertSubtype(_flattenedList, "$isList", this.$ti, "$asList");
    },
    set$_optionGroups: function(_optionGroups) {
      this._optionGroups = H.assertSubtype(_optionGroups, "$isList", [[F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]], "$asList");
    }
  };
  F.SelectionOptions_optionGroups_closure.prototype = {
    call$1: function(i) {
      return H.assertSubtype(i, "$isOptionGroup", [H.getTypeArgumentByIndex(this.$this, 0)], "$asOptionGroup");
    },
    $signature: function() {
      var t1 = H.getTypeArgumentByIndex(this.$this, 0);
      return {func: 1, ret: [F.OptionGroup, t1], args: [[F.OptionGroup, t1]]};
    }
  };
  R.StringSelectionOptions.prototype = {
    filterOption$2: function(option, filterQuery) {
      H.assertSubtypeOfRuntimeType(option, H.getTypeArgumentByIndex(this, 0));
      H.stringTypeCheck(filterQuery);
      return J.contains$1$asx(this._sanitizeString.call$1(this._toFilterableString.call$1(option)), filterQuery);
    },
    set$optionGroups: function(value) {
      H.assertSubtype(value, "$isList", [[F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]], "$asList");
      this.set$_string_selection_options$_optionGroups(value);
      this.super$SelectionOptions$optionGroups(value);
    },
    set$_string_selection_options$_optionGroups: function(_optionGroups) {
      this._string_selection_options$_optionGroups = H.assertSubtype(_optionGroups, "$isList", [[F.OptionGroup, H.getTypeArgumentByIndex(this, 0)]], "$asList");
    },
    set$_suggestionFilter: function(_suggestionFilter) {
      this._suggestionFilter = H.functionTypeCheck(_suggestionFilter, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0), P.String]});
    }
  };
  O.HasFactoryRenderer.prototype = {};
  G.HasRenderer.prototype = {};
  G.RendersValue.prototype = {};
  L.Icon.prototype = {};
  T.closure.prototype = {
    call$2: function(index, _) {
      return H.numTypeCheck(index);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 90
  };
  B.OverlayRef.prototype = {
    measureSizeChanges$0: function() {
      var $async$measureSizeChanges$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        switch ($async$errorCode) {
          case 2:
            $async$next = $async$nextWhenCanceled;
            $async$goto = $async$next.pop();
            break;
          case 1:
            $async$currentError = $async$result;
            $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.state;
              if (t1._visibility === C.Visibility_None_display_none)
                t1.set$visibility(0, C.Visibility_Hidden_visibility_hidden);
              $async$goto = 3;
              return P._asyncStarHelper($async$self._applyChanges$0(), $async$measureSizeChanges$0, $async$controller);
            case 3:
              // returning from await.
              $async$goto = 4;
              $async$nextWhenCanceled = [1];
              return P._asyncStarHelper(P._IterationMarker_yieldStar(H.subtypeCast($async$self._runOutsideAngular.call$1(new B.OverlayRef_measureSizeChanges_closure($async$self)), "$isStream", [[P.Rectangle, P.num]], "$asStream")), $async$measureSizeChanges$0, $async$controller);
            case 4:
              // after yield
            case 1:
              // return
              return P._asyncStarHelper(null, 0, $async$controller);
            case 2:
              // rethrow
              return P._asyncStarHelper($async$currentError, 1, $async$controller);
          }
      });
      var $async$goto = 0,
        $async$controller = P._makeAsyncStarStreamController($async$measureSizeChanges$0, [P.Rectangle, P.num]),
        $async$nextWhenCanceled, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1;
      return P._streamOfController($async$controller);
    },
    dispose$0: function() {
      C.DivElement_methods.remove$0(this.overlayElement);
      var t1 = this._onVisibleController;
      if (t1 != null)
        t1.close$0(0);
      this._stateUpdateListener.cancel$0(0);
    },
    _applyChanges$0: function() {
      var _this = this,
        t1 = _this._lastVisible,
        t2 = _this.state,
        t3 = t2._visibility !== C.Visibility_None_display_none;
      if (t1 !== t3) {
        _this._lastVisible = t3;
        t1 = _this._onVisibleController;
        if (t1 != null)
          t1.add$1(0, t3);
      }
      return _this._asyncApplyState.call$2(t2, _this.overlayElement);
    },
    OverlayRef$7$state: function(_asyncApplyState, _asyncMeasureSize, _delegatePortalHost, containerElement, overlayElement, _runOutsideAngular, state) {
      var t1 = this.state._asyncScheduler,
        t2 = t1._onUpdateStreamController;
      if (t2 == null)
        t1 = t1._onUpdateStreamController = new P._SyncBroadcastStreamController(null, null, [null]);
      else
        t1 = t2;
      this._stateUpdateListener = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new B.OverlayRef_closure(this));
    },
    $isPortalHost: 1,
    $isDisposable: 1
  };
  B.OverlayRef_measureSizeChanges_closure.prototype = {
    call$0: function() {
      var t2,
        t1 = this.$this;
      t1 = t1._overlay_ref$_asyncMeasureSize.call$2$track(t1.overlayElement, true);
      t1.toString;
      t2 = H.getRuntimeTypeArgumentIntercepted(J.getInterceptor$(t1), t1, "Stream", 0);
      return new P._DistinctStream(H.functionTypeCheck(B.overlay_ref_OverlayRef__isEqualSize$closure(), {func: 1, ret: P.bool, args: [t2, t2]}), t1, [t2]);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 57
  };
  B.OverlayRef_closure.prototype = {
    call$1: function(_) {
      return this.$this._applyChanges$0();
    },
    $signature: 92
  };
  X.OverlayService.prototype = {
    _measurePane$2$track: function(pane, track) {
      return this._renderService.measureSize$3$sync$track(pane, this._useDomSynchronously, true);
    },
    _measurePane$1: function(pane) {
      return this._measurePane$2$track(pane, false);
    }
  };
  Z.OverlayState.prototype = {};
  Z._ImmutableOverlayState.prototype = {
    $eq: function(_, o) {
      if (o == null)
        return false;
      return !!J.getInterceptor$(o).$isOverlayState && Z._stateEquals(this, o);
    },
    get$hashCode: function(_) {
      return Z._stateHashCode(this);
    },
    toString$0: function(_) {
      return "ImmutableOverlayState " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["captureEvents", false, "left", null, "top", null, "right", null, "bottom", null, "width", null, "height", null, "visibility", C.Visibility_None_display_none, "zIndex", null, "position", null], P.String, P.Object));
    },
    $isOverlayState: 1,
    get$captureEvents: function() {
      return false;
    },
    get$left: function() {
      return null;
    },
    get$top: function() {
      return null;
    },
    get$right: function() {
      return null;
    },
    get$bottom: function() {
      return null;
    },
    get$width: function() {
      return null;
    },
    get$minWidth: function() {
      return null;
    },
    get$height: function() {
      return null;
    },
    get$visibility: function() {
      return C.Visibility_None_display_none;
    },
    get$zIndex: function() {
      return null;
    },
    get$position: function() {
      return null;
    }
  };
  Z.MutableOverlayState.prototype = {
    $eq: function(_, o) {
      if (o == null)
        return false;
      return !!J.getInterceptor$(o).$isOverlayState && Z._stateEquals(this, o);
    },
    get$hashCode: function(_) {
      return Z._stateHashCode(this);
    },
    get$captureEvents: function() {
      return false;
    },
    get$left: function(_) {
      return this._left;
    },
    set$left: function(_, left) {
      if (this._left !== left) {
        this._left = left;
        this._asyncScheduler.scheduleUpdate$0();
      }
    },
    get$top: function(_) {
      return this._top;
    },
    set$top: function(_, $top) {
      if (this._top !== $top) {
        this._top = $top;
        this._asyncScheduler.scheduleUpdate$0();
      }
    },
    get$right: function(_) {
      return this._right;
    },
    get$bottom: function(_) {
      return this._bottom;
    },
    get$width: function(_) {
      return this._overlay_state$_width;
    },
    get$minWidth: function(_) {
      return this._minWidth;
    },
    get$height: function(_) {
      return this._overlay_state$_height;
    },
    get$zIndex: function(_) {
      return this._overlay_state$_zIndex;
    },
    get$visibility: function(_) {
      return this._visibility;
    },
    set$visibility: function(_, visibility) {
      if (this._visibility !== visibility) {
        this._visibility = visibility;
        this._asyncScheduler.scheduleUpdate$0();
      }
    },
    get$position: function(_) {
      return;
    },
    toString$0: function(_) {
      var _this = this;
      return "MutableOverlayState " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["captureEvents", false, "left", _this._left, "top", _this._top, "right", _this._right, "bottom", _this._bottom, "width", _this._overlay_state$_width, "minWidth", _this._minWidth, "height", _this._overlay_state$_height, "zIndex", _this._overlay_state$_zIndex, "visibility", _this._visibility, "position", null], P.String, P.Object));
    },
    $isOverlayState: 1
  };
  K.OverlayDomRenderService.prototype = {
    applyState$2: function(state, pane) {
      return this.applyState$body$OverlayDomRenderService(H.interceptedTypeCheck(state, "$isOverlayState"), H.interceptedTypeCheck(pane, "$isHtmlElement"));
    },
    applyState$body$OverlayDomRenderService: function(state, pane) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(null),
        $async$returnValue, $async$self = this;
      var $async$applyState$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!H.boolConversionCheck($async$self._overlay_dom_render_service$_useDomSynchronously)) {
                $async$returnValue = $async$self._domService.onWrite$0(0).then$1$1(new K.OverlayDomRenderService_applyState_closure($async$self, state, pane), null);
                // goto return
                $async$goto = 1;
                break;
              } else
                $async$self.applyStateSync$2(state, pane);
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$applyState$2, $async$completer);
    },
    applyStateSync$2: function(state, pane) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this,
        cssClasses = H.setRuntimeTypeInfo([], [P.String]);
      state.get$captureEvents();
      if (state.get$visibility(state) === C.Visibility_Visible_null_null)
        C.JSArray_methods.add$1(cssClasses, "visible");
      t1 = _this._overlay_dom_render_service$_domRuler;
      t2 = state.get$width(state);
      t3 = state.get$height(state);
      t4 = state.get$top(state);
      t5 = state.get$left(state);
      t6 = state.get$bottom(state);
      t7 = state.get$right(state);
      t8 = state.get$visibility(state);
      t1.updateSync$11$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width(pane, t6, cssClasses, t3, t5, state.get$position(state), t7, t4, !H.boolConversionCheck(_this._useRepositionLoop), t8, t2);
      if (state.get$minWidth(state) != null) {
        t2 = pane.style;
        t3 = H.S(state.get$minWidth(state)) + "px";
        t2.minWidth = t3;
      }
      state.get$zIndex(state);
      if (pane.parentElement != null) {
        t2 = _this._lastZIndex;
        _this._zIndexer.toString;
        if (t2 != self.acxZIndex) {
          t2 = J.$add$ansx(self.acxZIndex, 1);
          self.acxZIndex = t2;
          _this._lastZIndex = t2;
        }
        t1.updateSync$2$zIndex(pane.parentElement, _this._lastZIndex);
      }
    },
    measureSize$3$sync$track: function(pane, sync, track) {
      var t1 = this._overlay_dom_render_service$_domRuler.track$1(0, pane);
      return t1;
    },
    measureContainer$0: function() {
      var t2, _this = this,
        t1 = [P.Rectangle, P.num];
      if (!H.boolConversionCheck(_this._overlay_dom_render_service$_useDomSynchronously))
        return _this._domService.onWrite$0(0).then$1$1(new K.OverlayDomRenderService_measureContainer_closure(_this), t1);
      else {
        t2 = _this.containerElement.getBoundingClientRect();
        t1 = new P._Future($.Zone__current, [t1]);
        t1._asyncComplete$1(t2);
        return t1;
      }
    }
  };
  K.OverlayDomRenderService_applyState_closure.prototype = {
    call$1: function(_) {
      this.$this.applyStateSync$2(this.state, this.pane);
    },
    $signature: 7
  };
  K.OverlayDomRenderService_measureContainer_closure.prototype = {
    call$1: function(_) {
      return this.$this.containerElement.getBoundingClientRect();
    },
    $signature: 95
  };
  R.OverlayStyleConfig.prototype = {
    registerStyles$0: function() {
      if (this.get$stylesRegistered())
        return;
      var t1 = document.createElement("style");
      t1.id = "__overlay_styles";
      t1.textContent = "  #default-acx-overlay-container,\n  .acx-overlay-container {\n    position: absolute;\n\n    /* Disable event captures. This is an invisible container! */\n    pointer-events: none;\n\n    /* Make this full width and height in the viewport. */\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n\n    /* TODO(google): Use the ACX z-index guide instead. */\n    z-index: 10;\n  }\n\n  .acx-overlay-container > .pane {\n    display: flex;\n    /* TODO(google): verify prefixing flexbox fixes popups in IE */\n    display: -ms-flexbox;\n    position: absolute;\n\n    /* TODO(google): Use the ACX z-index guide instead. */\n    z-index: 11;\n\n    /* Disable event captures. This is an invisible container!\n       Panes that would like to capture events can enable this with .modal. */\n    pointer-events: none;\n  }\n\n  /* Children should have normal events. */\n  .acx-overlay-container > .pane > * { pointer-events: auto; }\n\n  .acx-overlay-container > .pane.modal {\n    justify-content: center;\n    align-items: center;\n    background: rgba(33,33,33,.4);\n    pointer-events: auto;\n\n    /* TODO(google): Pull out into a .fixed class instead. */\n    position: fixed;\n\n    /* Promote the .modal element to its own layer to fix scrolling issues.\n       will-change: transform is preferred, but not yet supported by Edge. */\n    -webkit-backface-visibility: hidden;  /* Safari 9/10 */\n    backface-visibility: hidden;\n  }\n\n  .acx-overlay-container > .pane,\n  .acx-overlay-container > .pane > * {\n    display: flex;\n    display: -ms-flexbox;\n  }\n\n  /* Optional debug mode that highlights the container and individual panes.\n     TODO(google): Pull this into a mixin so it won't get auto-exported. */\n  .acx-overlay-container.debug {\n    background: rgba(255, 0, 0, 0.15);\n  }\n\n  .acx-overlay-container.debug > .pane {\n    background: rgba(0, 0, 2555, 0.15);\n  }\n\n  .acx-overlay-container.debug > .pane.modal {\n    background: rgba(0, 0, 0, 0.30);\n  }\n";
      this._styleHost.appendChild(t1);
      this._stylesRegistered = true;
    },
    get$stylesRegistered: function() {
      var _this = this;
      if (_this._stylesRegistered)
        return true;
      if (_this._document.querySelector("#__overlay_styles") != null)
        _this._stylesRegistered = true;
      return _this._stylesRegistered;
    }
  };
  K.DomPopupSourceFactory.prototype = {
    _asyncMeasureSize$2$track: function(element, track) {
      var t1;
      H.interceptedTypeCheck(element, "$isHtmlElement");
      t1 = this._domRuler;
      if (H.boolConversionCheck(H.boolTypeCheck(track)))
        return t1.track$1(0, element);
      else
        return t1.measure$1(0, element).asStream$0();
    },
    _asyncMeasureSize$1: function(element) {
      return this._asyncMeasureSize$2$track(element, false);
    }
  };
  K.DomPopupSource.prototype = {
    get$alignOriginX: function() {
      return this._alignOriginX;
    },
    get$alignOriginY: function() {
      return this._alignOriginY;
    },
    onDimensionsChanged$1$track: function(track) {
      return this._asyncMeasureSize.call$2$track(this.sourceElement, track);
    },
    get$dimensions: function() {
      return this.sourceElement.getBoundingClientRect();
    },
    get$isRtl: function() {
      return $.$get$DomPopupSource__isRtl();
    },
    set$popupId: function(id) {
      this._dom_popup_source$_id = id;
      if (id == null || !this._initAriaAttributes)
        return;
      this.sourceElement.setAttribute("aria-haspopup", "true");
    },
    focus$0: function(_) {
      this.sourceElement.focus();
    },
    toString$0: function(_) {
      return "DomPopupSource " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["alignOriginX", this._alignOriginX, "alignOriginY", this._alignOriginY], P.String, K.Alignment));
    },
    onOpen$0: function(_) {
      var t1 = this._dom_popup_source$_id;
      if (t1 == null || !this._initAriaAttributes)
        return;
      this.sourceElement.setAttribute("aria-owns", t1);
    },
    onClose$0: function(_) {
      if (this._dom_popup_source$_id == null || !this._initAriaAttributes)
        return;
      this.sourceElement.removeAttribute("aria-owns");
    },
    $isFocusable: 1,
    $isPopupSource: 1,
    $isElementPopupSource: 1,
    get$sourceElement: function() {
      return this.sourceElement;
    }
  };
  Z.PopupHierarchy.prototype = {
    _isInHiddenModal$0: function() {
      var modalPanes,
        t1 = document,
        t2 = W.Element;
      H.assertIsSubtype(t2, t2, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'T' in 'querySelectorAll'.");
      t1 = t1.querySelectorAll(".acx-overlay-container .pane.modal.visible");
      modalPanes = new W._FrozenElementList(t1, [t2]);
      if (!modalPanes.get$isEmpty(modalPanes)) {
        t2 = this._rootPane;
        if (t2 != null)
          t1 = t2 !== H.interceptedTypeCheck(C.NodeList_methods.get$last(t1), "$isElement") && modalPanes.contains$1(modalPanes, this._rootPane);
        else
          t1 = true;
        if (t1)
          return true;
      }
      return false;
    },
    _onTrigger$1: function($event) {
      var t1, i, t2, current, t3, t4, _i;
      H.interceptedTypeCheck($event, "$isEvent");
      if (($event == null ? null : J.get$target$x($event)) == null)
        return;
      this._lastTriggerEvent = $event;
      if (this._isInHiddenModal$0())
        return;
      for (t1 = this._visiblePopupStack, i = t1.length - 1, t2 = J.getInterceptor$x($event); i >= 0; --i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        current = t1[i];
        t3 = current._overlayRef;
        t4 = t3 == null ? null : t3.overlayElement;
        if (t4 == null)
          continue;
        t3 = t3 == null ? null : t3.overlayElement;
        if (Z.isParentOf(t3, H.interceptedTypeCheck(t2.get$target($event), "$isNode")))
          return;
        for (t3 = current.get$autoDismissBlockers(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
          if (Z.isParentOf(t3[_i], H.interceptedTypeCheck(t2.get$target($event), "$isNode")))
            return;
        if (H.boolConversionCheck(H.boolTypeCheck(current.state._backingMap._observable_map$_map.$index(0, C.Symbol_autoDismiss)))) {
          current.set$visible(0, false);
          t3 = current._onAutoDismissed;
          H.assertSubtypeOfRuntimeType($event, H.getTypeArgumentByIndex(t3, 0));
          if (!t3.get$_mayAddEvent())
            H.throwExpression(t3._addEventError$0());
          t3._sendData$1($event);
        }
      }
    },
    _onKeyUp$1: function($event) {
      var t1, i, current, t2, t3, _i;
      H.interceptedTypeCheck($event, "$isKeyboardEvent");
      if (($event == null ? null : W._convertNativeToDart_EventTarget($event.target)) == null)
        return;
      this._lastTriggerEvent = $event;
      if (this._isInHiddenModal$0())
        return;
      if ($event.keyCode === 27)
        for (t1 = this._visiblePopupStack, i = t1.length - 1; i >= 0; --i) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          current = t1[i];
          t2 = current._overlayRef;
          t3 = t2 == null ? null : t2.overlayElement;
          if (t3 == null)
            continue;
          t2 = t2 == null ? null : t2.overlayElement;
          if (Z.isParentOf(t2, H.interceptedTypeCheck(W._convertNativeToDart_EventTarget($event.target), "$isNode"))) {
            $event.stopPropagation();
            current.set$visible(0, false);
            return;
          }
          for (t2 = current.get$autoDismissBlockers(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
            if (Z.isParentOf(t2[_i], H.interceptedTypeCheck(W._convertNativeToDart_EventTarget($event.target), "$isNode"))) {
              $event.stopPropagation();
              current.set$visible(0, false);
              return;
            }
        }
    }
  };
  Z.PopupHierarchyElement.prototype = {};
  L.PopupEvents.prototype = {};
  L.PopupBase.prototype = {
    set$matchMinSourceWidth: function(matchMinSourceWidth) {
      this.state._backingMap.$indexSet(0, C.Symbol_matchMinSourceWidth, true);
    },
    set$source: function(_, source) {
      this.state._backingMap.$indexSet(0, C.Symbol_source, source);
    }
  };
  V.PopupRef.prototype = {};
  F.PopupSizeProvider.prototype = {};
  L.PopupSourceDirective.prototype = {
    get$sourceElement: function() {
      return this._popup_source_directive$_element;
    },
    get$alignOriginX: function() {
      return this._popupSource._alignOriginX;
    },
    get$alignOriginY: function() {
      return this._popupSource._alignOriginY;
    },
    onDimensionsChanged$1$track: function(track) {
      var t2,
        t1 = this._popupSource;
      if (t1 == null)
        t1 = null;
      else {
        t2 = t1.sourceElement;
        t2 = t1._asyncMeasureSize.call$2$track(t2, track);
        t1 = t2;
      }
      return t1 == null ? null : new P._DistinctStream(null, t1, [H.getRuntimeTypeArgument(t1, "Stream", 0)]);
    },
    get$dimensions: function() {
      var t1 = this._popupSource;
      return t1 == null ? null : t1.sourceElement.getBoundingClientRect();
    },
    get$isRtl: function() {
      this._popupSource.toString;
      return $.$get$DomPopupSource__isRtl();
    },
    focus$0: function(_) {
      var t1 = this._focusable;
      if (t1 != null)
        t1.focus$0(0);
      else {
        t1 = this._popup_source_directive$_element;
        if (t1 != null)
          t1.focus();
      }
    },
    onOpen$0: function(_) {
      var t1 = this._popupSource;
      if (t1 != null)
        t1.onOpen$0(0);
    },
    onClose$0: function(_) {
      var t1 = this._popupSource;
      if (t1 != null)
        t1.onClose$0(0);
    },
    $isFocusable: 1,
    $isPopupSource: 1,
    $isElementPopupSource: 1
  };
  F.PopupState.prototype = {
    $eq: function(_, o) {
      var t1, t2;
      if (o == null)
        return false;
      if (o instanceof F.PopupState) {
        t1 = o._backingMap._observable_map$_map;
        t2 = this._backingMap._observable_map$_map;
        t1 = H.boolTypeCheck(t1.$index(0, C.Symbol_autoDismiss)) == H.boolTypeCheck(t2.$index(0, C.Symbol_autoDismiss)) && H.boolTypeCheck(t1.$index(0, C.Symbol_enforceSpaceConstraints)) == H.boolTypeCheck(t2.$index(0, C.Symbol_enforceSpaceConstraints)) && H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth)) == H.boolTypeCheck(t2.$index(0, C.Symbol_matchMinSourceWidth)) && H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource") == H.interceptedTypeCheck(t2.$index(0, C.Symbol_source), "$isPopupSource") && H.intTypeCheck(t1.$index(0, C.Symbol_offsetX)) == H.intTypeCheck(t2.$index(0, C.Symbol_offsetX)) && H.intTypeCheck(t1.$index(0, C.Symbol_offsetY)) == H.intTypeCheck(t2.$index(0, C.Symbol_offsetY)) && J.$eq$(H.listSuperNativeTypeCheck(t1.$index(0, C.Symbol_preferredPositions), "$isIterable"), H.listSuperNativeTypeCheck(t2.$index(0, C.Symbol_preferredPositions), "$isIterable")) && H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)) == H.boolTypeCheck(t2.$index(0, C.Symbol_trackLayoutChanges)) && H.boolTypeCheck(t1.$index(0, C.Symbol_constrainToViewport)) == H.boolTypeCheck(t2.$index(0, C.Symbol_constrainToViewport));
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t1 = this._backingMap._observable_map$_map;
      return X.hashObjects([H.boolTypeCheck(t1.$index(0, C.Symbol_autoDismiss)), H.boolTypeCheck(t1.$index(0, C.Symbol_enforceSpaceConstraints)), H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth)), H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource"), H.intTypeCheck(t1.$index(0, C.Symbol_offsetX)), H.intTypeCheck(t1.$index(0, C.Symbol_offsetY)), H.listSuperNativeTypeCheck(t1.$index(0, C.Symbol_preferredPositions), "$isIterable"), H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)), H.boolTypeCheck(t1.$index(0, C.Symbol_constrainToViewport))]);
    },
    toString$0: function(_) {
      return "PopupState " + P.MapBase_mapToString(this._backingMap);
    },
    $asObservable: function() {
      return [Y.ChangeRecord];
    }
  };
  L.RulerBase.prototype = {
    measure$2$offset: function(_, element, offset) {
      var t1, t2, completer;
      H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(this, "RulerBase", 0));
      t1 = this._dom_ruler$_domService;
      t2 = new P._Future($.Zone__current, [null]);
      completer = new P._SyncCompleter(t2, [null]);
      t1.scheduleRead$1(completer.get$complete(completer));
      return new E.ZonedFuture(t2, H.instantiate1(t1._dom_service$_ngZone.get$runOutsideAngular(), null), [null]).then$1$1(new L.RulerBase_measure_closure(this, element, false), [P.Rectangle, P.num]);
    },
    track$1: function(_, element) {
      var controller, t1 = {};
      H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(this, "RulerBase", 0));
      t1.subscription = t1.controller = null;
      controller = t1.controller = P.StreamController_StreamController(new L.RulerBase_track_closure(t1), new L.RulerBase_track_closure0(t1, this, element), null, true, [P.Rectangle, P.num]);
      t1 = H.getTypeArgumentByIndex(controller, 0);
      return new P._DistinctStream(H.functionTypeCheck(new L.RulerBase_track_closure1(), {func: 1, ret: P.bool, args: [t1, t1]}), new P._ControllerStream(controller, [t1]), [t1]);
    },
    updateSync$12$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width$zIndex: function(element, bottom, cssClasses, height, left, position, right, $top, useCssTransform, visibility, width, zIndex) {
      var setProperty, t1, t2, lastCssClasses, t3, _this = this, _null = null, _s4_ = "left", _s3_ = "top",
        _s9_ = "transform",
        _s17_ = "-webkit-transform";
      H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(_this, "RulerBase", 0));
      H.assertSubtype(cssClasses, "$isList", [P.String], "$asList");
      setProperty = new L.RulerBase_updateSync_closure(_this, element);
      setProperty.call$2("display", _null);
      setProperty.call$2("visibility", _null);
      t1 = visibility != null;
      if (t1 && visibility !== C.Visibility_Visible_null_null)
        visibility.apply$1(setProperty);
      if (cssClasses != null) {
        t2 = _this._addedCssClasses;
        lastCssClasses = t2.$index(0, element);
        if (lastCssClasses != null)
          _this.removeCssClassesSync$2(element, lastCssClasses);
        _this.addCssClassesSync$2(element, cssClasses);
        t2.$indexSet(0, element, cssClasses);
      }
      setProperty.call$2("width", _null);
      setProperty.call$2("height", _null);
      if (useCssTransform) {
        if (left != null) {
          setProperty.call$2(_s4_, "0");
          t2 = "translateX(" + C.JSNumber_methods.round$0(left) + "px) ";
        } else {
          setProperty.call$2(_s4_, _null);
          t2 = "";
        }
        if ($top != null) {
          setProperty.call$2(_s3_, "0");
          t2 += "translateY(" + C.JSNumber_methods.round$0($top) + "px)";
        } else
          setProperty.call$2(_s3_, _null);
        t3 = t2.charCodeAt(0) == 0 ? t2 : t2;
        setProperty.call$2(_s9_, t3);
        setProperty.call$2(_s17_, t3);
        if (t2.length !== 0) {
          setProperty.call$2(_s9_, t3);
          setProperty.call$2(_s17_, t3);
        }
      } else {
        if (left != null)
          setProperty.call$2(_s4_, left === 0 ? "0" : H.S(left) + "px");
        else
          setProperty.call$2(_s4_, _null);
        if ($top != null)
          setProperty.call$2(_s3_, $top === 0 ? "0" : H.S($top) + "px");
        else
          setProperty.call$2(_s3_, _null);
        setProperty.call$2(_s9_, _null);
        setProperty.call$2(_s17_, _null);
      }
      setProperty.call$2("right", _null);
      setProperty.call$2("bottom", _null);
      if (zIndex != null)
        setProperty.call$2("z-index", H.S(zIndex));
      else
        setProperty.call$2("z-index", _null);
      if (t1 && visibility === C.Visibility_Visible_null_null)
        visibility.apply$1(setProperty);
    },
    updateSync$11$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width: function(element, bottom, cssClasses, height, left, position, right, $top, useCssTransform, visibility, width) {
      return this.updateSync$12$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width$zIndex(element, bottom, cssClasses, height, left, position, right, $top, useCssTransform, visibility, width, null);
    },
    updateSync$2$zIndex: function(element, zIndex) {
      return this.updateSync$12$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width$zIndex(element, null, null, null, null, null, null, null, true, null, null, zIndex);
    }
  };
  L.RulerBase_measure_closure.prototype = {
    call$1: function(_) {
      return this.$this.measureSync$2$offset(this.element, this.offset);
    },
    $signature: 96
  };
  L.RulerBase_track_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = this.element,
        t3 = t1.measure$1(0, t2),
        t4 = this._box_0,
        t5 = t4.controller;
      t3.then$1$1(t5.get$add(t5), -1);
      t4.subscription = t1._dom_ruler$_domService.get$onLayoutChanged().listen$2$onDone(new L.RulerBase_track__closure(t4, t1, t2), new L.RulerBase_track__closure0(t4));
    },
    $signature: 0
  };
  L.RulerBase_track__closure.prototype = {
    call$1: function(_) {
      this._box_0.controller.add$1(0, this.$this.measureSync$1(this.element));
    },
    $signature: 7
  };
  L.RulerBase_track__closure0.prototype = {
    call$0: function() {
      this._box_0.controller.close$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  L.RulerBase_track_closure.prototype = {
    call$0: function() {
      this._box_0.subscription.cancel$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  L.RulerBase_track_closure1.prototype = {
    call$2: function(previous, next) {
      var t2, t3,
        t1 = [P.num];
      H.assertSubtype(previous, "$isRectangle", t1, "$asRectangle");
      H.assertSubtype(next, "$isRectangle", t1, "$asRectangle");
      if (previous == null || next == null)
        return previous == null ? next == null : previous === next;
      t1 = new L.RulerBase_track_closure_withinEpsilon();
      t2 = J.getInterceptor$x(previous);
      t3 = J.getInterceptor$x(next);
      return H.boolConversionCheck(t1.call$2(t2.get$top(previous), t3.get$top(next))) && H.boolConversionCheck(t1.call$2(t2.get$left(previous), t3.get$left(next))) && H.boolConversionCheck(t1.call$2(t2.get$width(previous), t3.get$width(next))) && H.boolConversionCheck(t1.call$2(t2.get$height(previous), t3.get$height(next)));
    },
    $signature: 31
  };
  L.RulerBase_track_closure_withinEpsilon.prototype = {
    call$2: function(a, b) {
      if (typeof a !== "number")
        return a.$sub();
      if (typeof b !== "number")
        return H.iae(b);
      return Math.abs(a - b) < 0.01;
    },
    $signature: 98
  };
  L.RulerBase_updateSync_closure.prototype = {
    call$2: function($name, value) {
      var t1 = this.element.style;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, $name), value, null);
    },
    $signature: 54
  };
  E.SelectableOption.prototype = {
    toString$0: function(_) {
      return this._selectable$_name;
    }
  };
  V.ManagedZone.prototype = {$isDisposable: 1};
  V.ManagedZoneBase.prototype = {
    capturedTurnStart$1: function($event) {
    },
    capturedTurnDone$1: function($event) {
    },
    capturedEventDone$1: function($event) {
    },
    toString$0: function(_) {
      var t1 = $.Zone__current == this.outerZone;
      return "ManagedZone " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["inInnerZone", !t1, "inOuterZone", t1], P.String, P.bool));
    }
  };
  Z.AsyncUpdateScheduler.prototype = {
    scheduleUpdate$0: function() {
      if (!this._isUpdateScheduled) {
        this._isUpdateScheduled = true;
        P.scheduleMicrotask(new Z.AsyncUpdateScheduler_scheduleUpdate_closure(this));
      }
    }
  };
  Z.AsyncUpdateScheduler_scheduleUpdate_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._isUpdateScheduled = false;
      t1 = t1._onUpdateStreamController;
      if (t1 != null)
        t1.add$1(0, null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  R._RateLimitSink.prototype = {
    add$1: function(_, $event) {
      this._addEvent.call$1($event);
    },
    addError$2: function(error, stackTrace) {
      var t1 = this._outputSink._sink;
      if ((t1._state & 2) !== 0)
        H.throwExpression(P.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_addError(error, stackTrace);
    },
    close$0: function(_) {
      var t1 = this._outputSink._sink;
      if ((t1._state & 2) !== 0)
        H.throwExpression(P.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_close();
    },
    set$_addEvent: function(_addEvent) {
      this._addEvent = H.functionTypeCheck(_addEvent, {func: 1, ret: -1, args: [,]});
    },
    $isEventSink: 1,
    $asEventSink: function() {
    }
  };
  R.RateLimitTransformer.prototype = {
    bind$1: function(stream) {
      return new P._BoundSinkStream(new R.RateLimitTransformer_bind_closure(this), H.assertSubtype(stream, "$isStream", [H.getTypeArgumentByIndex(this, 0)], "$asStream"), [null, H.getTypeArgumentByIndex(this, 1)]);
    }
  };
  R.RateLimitTransformer_bind_closure.prototype = {
    call$1: function(sink) {
      var t3,
        t1 = this.$this,
        t2 = t1._rate_limit$_duration;
      t1 = t1._rateLimitStrategy;
      t3 = new R._RateLimitSink(sink, t2, t1);
      t3.set$_addEvent(t1.call$2(sink.get$add(sink), t2));
      return t3;
    },
    $signature: 99
  };
  E._ZoneRunner.prototype = {};
  E.ZonedFuture.prototype = {
    asStream$0: function() {
      var t1 = this._innerFuture;
      return new E.ZonedStream(P.Stream_Stream$fromFuture(t1, H.getTypeArgumentByIndex(t1, 0)), this._runInZoneFn, this.$ti);
    },
    then$1$2$onError: function(onValue, onError, $S) {
      var t1 = [P.Future, $S];
      return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedFuture_then_closure(this, H.functionTypeCheck(onValue, {func: 1, ret: {futureOr: 1, type: $S}, args: [H.getTypeArgumentByIndex(this, 0)]}), onError, $S), {func: 1, ret: t1})), t1);
    },
    then$1$1: function(onValue, $S) {
      return this.then$1$2$onError(onValue, null, $S);
    },
    whenComplete$1: function(action) {
      var t1 = [P.Future, H.getTypeArgumentByIndex(this, 0)];
      return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedFuture_whenComplete_closure(this, H.functionTypeCheck(action, {func: 1})), {func: 1, ret: t1})), t1);
    },
    $isFuture: 1
  };
  E.ZonedFuture_then_closure.prototype = {
    call$0: function() {
      var _this = this;
      return _this.$this._innerFuture.then$1$2$onError(_this.onValue, _this.onError, _this.S);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: function() {
      return {func: 1, ret: [P.Future, this.S]};
    }
  };
  E.ZonedFuture_whenComplete_closure.prototype = {
    call$0: function() {
      return this.$this._innerFuture.whenComplete$1(this.action);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: function() {
      return {func: 1, ret: [P.Future, H.getTypeArgumentByIndex(this.$this, 0)]};
    }
  };
  E.ZonedStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      var t1 = H.getTypeArgumentByIndex(this, 0),
        t2 = [P.StreamSubscription, t1];
      return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedStream_listen_closure(this, H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError), {func: 1, ret: t2})), t2);
    },
    listen$1: function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    },
    listen$3$onDone$onError: function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    },
    listen$2$onDone: function(onData, onDone) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
    }
  };
  E.ZonedStream_listen_closure.prototype = {
    call$0: function() {
      var _this = this;
      return _this.$this._innerStream.listen$4$cancelOnError$onDone$onError(_this.onData, _this.cancelOnError, _this.onDone, _this.onError);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: function() {
      return {func: 1, ret: [P.StreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]};
    }
  };
  E._ZonedStream_Stream__ZoneRunner.prototype = {};
  F.AcxDarkTheme.prototype = {};
  O.AcxImperativeViewUtils.prototype = {};
  T.Angular2ManagedZone.prototype = {
    Angular2ManagedZone$1: function(_ngZone) {
      var t3,
        t1 = this._angular_2$_ngZone,
        t2 = P.Null;
      t1.toString;
      t3 = H.functionTypeCheck(new T.Angular2ManagedZone_closure(this), {func: 1, ret: t2});
      t1._outerZone.run$1$1(t3, t2);
    },
    capturedTurnDone$1: function($event) {
      if (this._isDisposed)
        return;
      this.super$ManagedZoneBase$capturedTurnDone($event);
    },
    capturedEventDone$1: function($event) {
      if (this._isDisposed)
        return;
      this.super$ManagedZoneBase$capturedEventDone($event);
    }
  };
  T.Angular2ManagedZone_closure.prototype = {
    call$0: function() {
      var t2, t3,
        t1 = this.$this;
      t1.outerZone = $.Zone__current;
      t2 = t1._angular_2$_ngZone;
      t3 = t2._onTurnStart;
      new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(t1.get$capturedTurnStart());
      t3 = t2._onMicrotaskEmpty;
      new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(t1.get$capturedTurnDone());
      t2 = t2._onTurnDone;
      new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(t1.get$capturedEventDone());
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  F.ReferenceDirective.prototype = {};
  T.createDomService_closure.prototype = {
    call$0: function() {
      $._singletonService = null;
    },
    $signature: 0
  };
  F.DomService.prototype = {
    init$0: function() {
      var t1, t2, t3, _this = this;
      if (_this._crossAppInitialized)
        return;
      _this._crossAppInitialized = true;
      t1 = _this._dom_service$_ngZone;
      t2 = P.Null;
      t1.toString;
      t3 = H.functionTypeCheck(new F.DomService_init_closure(_this), {func: 1, ret: t2});
      t1._outerZone.run$1$1(t3, t2);
    },
    get$nextFrame: function() {
      var t1, t2, completer, t3, t4, t5, _this = this;
      if (_this._nextFrameFuture == null) {
        t1 = P.num;
        t2 = new P._Future($.Zone__current, [t1]);
        completer = new P._SyncCompleter(t2, [t1]);
        _this._nextFrameCompleter = completer;
        t3 = _this._dom_service$_ngZone;
        t4 = P.Null;
        t3.toString;
        t5 = H.functionTypeCheck(new F.DomService_nextFrame_closure(_this, completer), {func: 1, ret: t4});
        t3._outerZone.run$1$1(t5, t4);
        _this.set$_nextFrameFuture(new E.ZonedFuture(t2, H.instantiate1(t3.get$runOutsideAngular(), null), [t1]));
      }
      return _this._nextFrameFuture;
    },
    scheduleRead$1: function(fn) {
      var callback;
      H.functionTypeCheck(fn, {func: 1, ret: -1});
      if (this._dom_service$_state === C.DomServiceState_2) {
        fn.call$0();
        return C.C__NoopDisposable;
      }
      callback = new X.DisposableCallback();
      callback._callback = fn;
      this._scheduleInQueue$2(callback.get$$call(), this._domReadQueue);
      return callback;
    },
    scheduleWrite$1: function(fn) {
      var callback;
      H.functionTypeCheck(fn, {func: 1, ret: -1});
      if (this._dom_service$_state === C.DomServiceState_1) {
        fn.call$0();
        return C.C__NoopDisposable;
      }
      callback = new X.DisposableCallback();
      callback._callback = fn;
      this._scheduleInQueue$2(callback.get$$call(), this._domWriteQueue);
      return callback;
    },
    _scheduleInQueue$2: function(fn, queue) {
      var t1 = {func: 1, ret: -1};
      H.functionTypeCheck(fn, t1);
      H.assertSubtype(queue, "$isList", [t1], "$asList");
      fn = $.Zone__current.bindCallback$1$1(fn, -1);
      C.JSArray_methods.add$1(queue, fn);
      this._scheduleProcessQueue$0();
    },
    onWrite$0: function(_) {
      var t1 = new P._Future($.Zone__current, [null]),
        completer = new P._SyncCompleter(t1, [null]);
      this.scheduleWrite$1(completer.get$complete(completer));
      return new E.ZonedFuture(t1, H.instantiate1(this._dom_service$_ngZone.get$runOutsideAngular(), null), [null]);
    },
    _processQueues$0: function() {
      var t2, t3, _this = this,
        t1 = _this._domReadQueue;
      if (t1.length === 0 && _this._domWriteQueue.length === 0) {
        _this._scheduledProcessQueue = false;
        return;
      }
      _this._dom_service$_state = C.DomServiceState_2;
      _this._processQueue$1(t1);
      _this._dom_service$_state = C.DomServiceState_1;
      t2 = _this._domWriteQueue;
      t3 = _this._processQueue$1(t2) > 0;
      _this._writeQueueChangedLayout = t3;
      _this._dom_service$_state = C.DomServiceState_0;
      if (t3)
        _this._scheduleOnLayoutChanged$0();
      _this._scheduledProcessQueue = false;
      if (t1.length !== 0 || t2.length !== 0)
        _this._scheduleProcessQueue$0();
      else {
        t1 = _this._onQueuesProcessedController;
        if (t1 != null)
          t1.add$1(0, _this);
      }
    },
    _processQueue$1: function(queue) {
      var previousLength, i, fn;
      H.assertSubtype(queue, "$isList", [{func: 1, ret: -1}], "$asList");
      previousLength = queue.length;
      for (i = 0; i < queue.length; ++i) {
        fn = queue[i];
        fn.call$0();
      }
      C.JSArray_methods.set$length(queue, 0);
      return previousLength;
    },
    get$onLayoutChanged: function() {
      var t1, t2, t3, _this = this;
      if (_this._onLayoutChangedStream == null) {
        t1 = new P._SyncBroadcastStreamController(null, null, [null]);
        _this._onLayoutChangedController = t1;
        t2 = _this._dom_service$_ngZone;
        _this._onLayoutChangedStream = new E.ZonedStream(new P._BroadcastStream(t1, [null]), H.instantiate1(t2.get$runOutsideAngular(), null), [null]);
        t1 = P.Null;
        t3 = H.functionTypeCheck(new F.DomService_onLayoutChanged_closure(_this), {func: 1, ret: t1});
        t2._outerZone.run$1$1(t3, t1);
      }
      return _this._onLayoutChangedStream;
    },
    _listenOnLayoutEvents$1: function(events) {
      var t1 = H.getTypeArgumentByIndex(events, 0);
      W._EventStreamSubscription$(events._html$_target, events._eventType, H.functionTypeCheck(new F.DomService__listenOnLayoutEvents_closure(this), {func: 1, ret: -1, args: [t1]}), false, t1);
    },
    _scheduleProcessQueue$0: function() {
      var _this = this;
      if (!_this._scheduledProcessQueue) {
        _this._scheduledProcessQueue = true;
        _this.get$nextFrame().then$1$1(new F.DomService__scheduleProcessQueue_closure(_this), -1);
      }
    },
    _scheduleOnLayoutChanged$0: function() {
      var t1, _this = this;
      if (_this._layoutObserveRead != null)
        return;
      t1 = _this._onLayoutChangedController;
      t1 = t1 == null ? null : t1._firstSubscription != null;
      if (t1 !== true && true)
        return;
      if (_this._dom_service$_state === C.DomServiceState_2) {
        _this.scheduleWrite$1(new F.DomService__scheduleOnLayoutChanged_closure());
        return;
      }
      _this._layoutObserveRead = _this.scheduleRead$1(new F.DomService__scheduleOnLayoutChanged_closure0(_this));
    },
    _resetIdleTimer$0: function() {
      return;
    },
    set$_nextFrameFuture: function(_nextFrameFuture) {
      this._nextFrameFuture = H.assertSubtype(_nextFrameFuture, "$isFuture", [P.num], "$asFuture");
    }
  };
  F.DomService_init_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._dom_service$_ngZone._onMicrotaskEmpty;
      new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new F.DomService_init__closure(t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  F.DomService_init__closure.prototype = {
    call$1: function(_) {
      var e,
        t1 = this.$this;
      t1._inDispatchTurnDoneEvent = true;
      e = document.createEvent("Event");
      e.initEvent("doms-turn", true, true);
      t1._window.dispatchEvent(e);
      t1._inDispatchTurnDoneEvent = false;
    },
    $signature: 10
  };
  F.DomService_nextFrame_closure.prototype = {
    call$0: function() {
      var t2,
        t1 = this.$this;
      t1.init$0();
      t2 = t1._window;
      (t2 && C.Window_methods).requestAnimationFrame$1(t2, new F.DomService_nextFrame__closure(t1, this.completer));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  F.DomService_nextFrame__closure.prototype = {
    call$1: function(highResTimer) {
      var t1, t2;
      H.numTypeCheck(highResTimer);
      t1 = this.completer;
      if (t1.future._state !== 0)
        return;
      t2 = this.$this;
      if (t1 === t2._nextFrameCompleter) {
        t2.set$_nextFrameFuture(null);
        t2._nextFrameCompleter = null;
      }
      t1.complete$1(0, highResTimer);
    },
    $signature: 100
  };
  F.DomService_onLayoutChanged_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._dom_service$_ngZone,
        t3 = t2._onTurnStart;
      new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(new F.DomService_onLayoutChanged__closure(t1));
      t2 = t2._onMicrotaskEmpty;
      new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new F.DomService_onLayoutChanged__closure0(t1));
      t2 = t1._window;
      t2.toString;
      t1._listenOnLayoutEvents$1(new W._EventStream(t2, "webkitAnimationEnd", false, [W.AnimationEvent]));
      t1._listenOnLayoutEvents$1(new W._EventStream(t2, "resize", false, [W.Event]));
      t1._listenOnLayoutEvents$1(new W._EventStream(t2, H.stringTypeCheck(W.Element__determineTransitionEventType(t2)), false, [W.TransitionEvent]));
      (t2 && C.Window_methods).addEventListener$2(t2, "doms-turn", new F.DomService_onLayoutChanged__closure1(t1));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  F.DomService_onLayoutChanged__closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this;
      if (t1._dom_service$_state !== C.DomServiceState_0)
        return;
      t1._insideDigest = true;
    },
    $signature: 10
  };
  F.DomService_onLayoutChanged__closure0.prototype = {
    call$1: function(_) {
      var t1 = this.$this;
      if (t1._dom_service$_state !== C.DomServiceState_0)
        return;
      t1._insideDigest = false;
      t1._scheduleOnLayoutChanged$0();
      t1._writeQueueChangedLayout = false;
    },
    $signature: 10
  };
  F.DomService_onLayoutChanged__closure1.prototype = {
    call$1: function(_) {
      var t1;
      H.interceptedTypeCheck(_, "$isEvent");
      t1 = this.$this;
      if (!t1._inDispatchTurnDoneEvent)
        t1._scheduleOnLayoutChanged$0();
    },
    $signature: 13
  };
  F.DomService__listenOnLayoutEvents_closure.prototype = {
    call$1: function(_) {
      return this.$this._scheduleOnLayoutChanged$0();
    },
    $signature: 2
  };
  F.DomService__scheduleProcessQueue_closure.prototype = {
    call$1: function(_) {
      H.numTypeCheck(_);
      return this.$this._processQueues$0();
    },
    $signature: 101
  };
  F.DomService__scheduleOnLayoutChanged_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  F.DomService__scheduleOnLayoutChanged_closure0.prototype = {
    call$0: function() {
      var t2,
        t1 = this.$this;
      t1._layoutObserveRead = null;
      t2 = t1._onLayoutChangedController;
      if (t2 != null)
        t2.add$1(0, t1);
      t1._resetIdleTimer$0();
    },
    $signature: 0
  };
  F.DomServiceState.prototype = {
    toString$0: function(_) {
      return this._dom_service$_name;
    }
  };
  M.DomServiceWebdriverTestability.prototype = {
    DomServiceWebdriverTestability$_$1: function(_domService) {
      var t1 = this._dom_service_webdriver_testability$_domService,
        t2 = t1._onQueuesProcessedStream;
      if (t2 == null) {
        t2 = new P._SyncBroadcastStreamController(null, null, [null]);
        t1._onQueuesProcessedController = t2;
        t1 = t1._onQueuesProcessedStream = new E.ZonedStream(new P._BroadcastStream(t2, [null]), H.instantiate1(t1._dom_service$_ngZone.get$runOutsideAngular(), null), [null]);
      } else
        t1 = t2;
      t1.listen$1(new M.DomServiceWebdriverTestability$__closure(this));
    }
  };
  M.DomServiceWebdriverTestability$__closure.prototype = {
    call$1: function(_) {
      this.$this._runCallbacksIfStable$0();
      return;
    },
    $signature: 2
  };
  Z.triggersOutside_closure.prototype = {
    call$1: function(node) {
      return false;
    },
    $signature: 43
  };
  Z.triggersOutsideAny_closure.prototype = {
    call$0: function() {
      var t2, t3, t4, t5, t1 = {};
      t1.lastDownEvent = t1.lastEvent = null;
      t2 = this._box_1;
      t2.listener = new Z.triggersOutsideAny__closure(t1, t2, this.checkNodeInside);
      if (H.boolConversionCheck($.enableNewTriggerLogic)) {
        t3 = W.MouseEvent;
        t2.mouseDownListener = W._EventStreamSubscription$(document, "mousedown", H.functionTypeCheck(new Z.triggersOutsideAny__closure0(t1), {func: 1, ret: -1, args: [t3]}), false, t3);
      }
      t3 = document;
      t4 = W.MouseEvent;
      t5 = {func: 1, ret: -1, args: [t4]};
      t2.mouseUpListener = W._EventStreamSubscription$(t3, "mouseup", H.functionTypeCheck(new Z.triggersOutsideAny__closure1(t1, t2), t5), false, t4);
      t2.clickListener = W._EventStreamSubscription$(t3, "click", H.functionTypeCheck(new Z.triggersOutsideAny__closure2(t1, t2), t5), false, t4);
      C.HtmlDocument_methods.addEventListener$3(t3, "focus", t2.listener, true);
      C.HtmlDocument_methods.addEventListener$2(t3, "touchend", t2.listener);
    },
    $signature: 0
  };
  Z.triggersOutsideAny__closure.prototype = {
    call$1: function(e) {
      var node, t1;
      H.interceptedTypeCheck(e, "$isEvent");
      this._box_0.lastEvent = e;
      node = H.interceptedTypeCast(J.get$target$x(e), "$isNode");
      for (t1 = this.checkNodeInside; node != null;)
        if (H.boolConversionCheck(t1.call$1(node)))
          return;
        else
          node = node.parentElement;
      this._box_1.controller.add$1(0, e);
    },
    $signature: 13
  };
  Z.triggersOutsideAny__closure0.prototype = {
    call$1: function(e) {
      this._box_0.lastDownEvent = H.interceptedTypeCheck(e, "$isMouseEvent");
    },
    $signature: 24
  };
  Z.triggersOutsideAny__closure1.prototype = {
    call$1: function(e) {
      var t1, t2, t3;
      H.interceptedTypeCheck(e, "$isMouseEvent");
      t1 = this._box_0;
      t2 = t1.lastDownEvent;
      if (t2 != null) {
        t3 = W._convertNativeToDart_EventTarget(e.target);
        t2 = W._convertNativeToDart_EventTarget(t2.target);
        t2 = t3 == null ? t2 == null : t3 === t2;
      } else
        t2 = true;
      if (t2)
        this._box_1.listener.call$1(e);
      t1.lastEvent = e;
    },
    $signature: 24
  };
  Z.triggersOutsideAny__closure2.prototype = {
    call$1: function(e) {
      var t1, t2, t3, t4;
      H.interceptedTypeCheck(e, "$isMouseEvent");
      t1 = this._box_0;
      t2 = t1.lastEvent;
      t3 = t2 == null;
      if ((t3 ? null : t2.type) === "mouseup") {
        t4 = W._convertNativeToDart_EventTarget(e.target);
        t2 = t4 == null ? (t3 ? null : J.get$target$x(t2)) == null : t4 === (t3 ? null : J.get$target$x(t2));
      } else
        t2 = false;
      if (t2)
        return;
      t2 = t1.lastDownEvent;
      if (t2 != null) {
        t3 = W._convertNativeToDart_EventTarget(e.target);
        t2 = W._convertNativeToDart_EventTarget(t2.target);
        t2 = t3 == null ? t2 == null : t3 === t2;
      } else
        t2 = true;
      if (t2)
        this._box_1.listener.call$1(e);
      t1.lastDownEvent = null;
    },
    $signature: 24
  };
  Z.triggersOutsideAny_closure0.prototype = {
    call$0: function() {
      var t2,
        t1 = this._box_1;
      t1.clickListener.cancel$0(0);
      t1.clickListener = null;
      t2 = t1.mouseDownListener;
      if (t2 != null)
        t2.cancel$0(0);
      t1.mouseDownListener = null;
      t1.mouseUpListener.cancel$0(0);
      t1.mouseUpListener = null;
      t2 = document;
      C.HtmlDocument_methods.removeEventListener$3(t2, "focus", t1.listener, true);
      C.HtmlDocument_methods.removeEventListener$2(t2, "touchend", t1.listener);
    },
    $signature: 0
  };
  X.DisposableCallbackBase.prototype = {$isDisposable: 1};
  X.DisposableCallback.prototype = {
    call$0: function() {
      var t1 = this._callback;
      if (t1 != null)
        t1.call$0();
    }
  };
  R.Disposable.prototype = {};
  R._NoopDisposable.prototype = {$isDisposable: 1};
  R.Disposer.prototype = {
    addStreamSubscription$1$1: function(disposable, $T) {
      var t1;
      H.assertSubtype(disposable, "$isStreamSubscription", [$T], "$asStreamSubscription");
      if (this._disposeSubs == null)
        this.set$_disposeSubs(H.setRuntimeTypeInfo([], [[P.StreamSubscription,,]]));
      t1 = this._disposeSubs;
      (t1 && C.JSArray_methods).add$1(t1, disposable);
      return disposable;
    },
    addStreamSubscription$1: function(disposable) {
      return this.addStreamSubscription$1$1(disposable, null);
    },
    addEventSink$1$1: function(disposable, $T) {
      var t1;
      H.assertSubtype(disposable, "$isEventSink", [$T], "$asEventSink");
      if (this._disposeSinks == null)
        this.set$_disposeSinks(H.setRuntimeTypeInfo([], [[P.EventSink,,]]));
      t1 = this._disposeSinks;
      (t1 && C.JSArray_methods).add$1(t1, disposable);
      return disposable;
    },
    addFunction$1: function(disposable) {
      var t1 = {func: 1, ret: -1};
      H.functionTypeCheck(disposable, t1);
      if (this._disposeFunctions == null)
        this.set$_disposeFunctions(H.setRuntimeTypeInfo([], [t1]));
      t1 = this._disposeFunctions;
      (t1 && C.JSArray_methods).add$1(t1, disposable);
      return disposable;
    },
    dispose$0: function() {
      var len, i, _this = this,
        t1 = _this._disposeSubs;
      if (t1 != null) {
        len = t1.length;
        for (i = 0; i < len; ++i) {
          t1 = _this._disposeSubs;
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1[i].cancel$0(0);
        }
        _this.set$_disposeSubs(null);
      }
      t1 = _this._disposeSinks;
      if (t1 != null) {
        len = t1.length;
        for (i = 0; i < len; ++i) {
          t1 = _this._disposeSinks;
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1[i].close$0(0);
        }
        _this.set$_disposeSinks(null);
      }
      t1 = _this._disposeFunctions;
      if (t1 != null) {
        len = t1.length;
        for (i = 0; i < len; ++i) {
          t1 = _this._disposeFunctions;
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1[i].call$0();
        }
        _this.set$_disposeFunctions(null);
      }
      _this._disposeCalled = true;
    },
    set$_disposeFunctions: function(_disposeFunctions) {
      this._disposeFunctions = H.assertSubtype(_disposeFunctions, "$isList", [{func: 1, ret: -1}], "$asList");
    },
    set$_disposeSubs: function(_disposeSubs) {
      this._disposeSubs = H.assertSubtype(_disposeSubs, "$isList", [[P.StreamSubscription,,]], "$asList");
    },
    set$_disposeSinks: function(_disposeSinks) {
      this._disposeSinks = H.assertSubtype(_disposeSinks, "$isList", [[P.EventSink,,]], "$asList");
    },
    $isDisposable: 1
  };
  R.IdGenerator.prototype = {};
  R.SequentialIdGenerator.prototype = {
    nextId$0: function() {
      return this._prefix + "--" + this._seq++;
    },
    $isIdGenerator: 1
  };
  R.SequentialIdGenerator__createUuid_closure.prototype = {
    call$1: function(_) {
      return $.$get$SequentialIdGenerator__rnd().nextInt$1(256);
    },
    $signature: 56
  };
  R.SequentialIdGenerator__createUuid_closure0.prototype = {
    call$1: function(b) {
      return C.JSString_methods.padLeft$2(J.toRadixString$1$n(H.intTypeCheck(b), 16), 2, "0");
    },
    $signature: 23
  };
  R._throttle_closure.prototype = {
    call$1: function(argument) {
      var t2, _this = this,
        t1 = _this.T;
      H.assertSubtypeOfRuntimeType(argument, t1);
      t2 = _this._box_0;
      if (!t2.onCooldown) {
        t2.onCooldown = true;
        P.Timer_Timer(_this.interval, new R._throttle__closure(t2, t1));
        _this.delegate.call$1(argument);
      } else if (_this.guaranteeLast) {
        t2.lastArg = argument;
        t2.hasLastArg = true;
      }
    },
    $signature: function() {
      return {func: 1, ret: P.Null, args: [this.T]};
    }
  };
  R._throttle__closure.prototype = {
    call$0: function() {
      var t1 = this._box_0;
      t1.onCooldown = false;
      if (t1.hasLastArg) {
        t1.self.call$1(H.assertSubtypeOfRuntimeType(t1.lastArg, this.T));
        t1.hasLastArg = false;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  U.DefaultEquality.prototype = {};
  U.ListEquality.prototype = {
    equals$2: function(list1, list2) {
      var $length, i,
        t1 = this.$ti;
      H.assertSubtype(list1, "$isList", t1, "$asList");
      H.assertSubtype(list2, "$isList", t1, "$asList");
      if (list1 == null ? list2 == null : list1 === list2)
        return true;
      if (list1 == null || list2 == null)
        return false;
      $length = list1.length;
      if ($length !== list2.length)
        return false;
      for (i = 0; i < $length; ++i) {
        if (i >= list1.length)
          return H.ioore(list1, i);
        t1 = list1[i];
        if (i >= list2.length)
          return H.ioore(list2, i);
        if (!J.$eq$(t1, list2[i]))
          return false;
      }
      return true;
    }
  };
  M._DelegatingIterableBase.prototype = {
    contains$1: function(_, element) {
      var t1 = this._base;
      return (t1 && C.JSArray_methods).contains$1(t1, element);
    },
    elementAt$1: function(_, index) {
      var t1 = this._base;
      return (t1 && C.JSArray_methods).$index(t1, index);
    },
    every$1: function(_, test) {
      var t1 = this._base;
      return (t1 && C.JSArray_methods).every$1(t1, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]}));
    },
    forEach$1: function(_, f) {
      var t1 = this._base;
      return (t1 && C.JSArray_methods).forEach$1(t1, H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}));
    },
    get$isEmpty: function(_) {
      return this._base.length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._base.length !== 0;
    },
    get$iterator: function(_) {
      var t1 = this._base;
      return new J.ArrayIterator(t1, t1.length, [H.getTypeArgumentByIndex(t1, 0)]);
    },
    join$1: function(_, separator) {
      var t1 = this._base;
      return (t1 && C.JSArray_methods).join$1(t1, separator);
    },
    get$last: function(_) {
      var t1 = this._base;
      return (t1 && C.JSArray_methods).get$last(t1);
    },
    get$length: function(_) {
      return this._base.length;
    },
    map$1$1: function(_, f, $T) {
      var t1, t2;
      H.functionTypeCheck(f, {func: 1, ret: $T, args: [H.getTypeArgumentByIndex(this, 0)]});
      t1 = this._base;
      t1.toString;
      t2 = H.getTypeArgumentByIndex(t1, 0);
      return new H.MappedListIterable(t1, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t2]}), [t2, $T]);
    },
    where$1: function(_, test) {
      var t1, t2;
      H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]});
      t1 = this._base;
      t1.toString;
      t2 = H.getTypeArgumentByIndex(t1, 0);
      return new H.WhereIterable(t1, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t2]}), [t2]);
    },
    toString$0: function(_) {
      return J.toString$0$(this._base);
    },
    $isIterable: 1
  };
  M.DelegatingIterable.prototype = {};
  M.DelegatingList.prototype = {
    $index: function(_, index) {
      var t1 = H.assertSubtype(this._base, "$isList", this.$ti, "$asList");
      return (t1 && C.JSArray_methods).$index(t1, index);
    },
    $indexSet: function(_, index, value) {
      var t1;
      H.intTypeCheck(index);
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
      t1 = H.assertSubtype(this._base, "$isList", this.$ti, "$asList");
      (t1 && C.JSArray_methods).$indexSet(t1, index, value);
    },
    $add: function(_, other) {
      var t1 = this.$ti;
      H.assertSubtype(other, "$isList", t1, "$asList");
      t1 = H.assertSubtype(this._base, "$isList", t1, "$asList");
      return (t1 && C.JSArray_methods).$add(t1, other);
    },
    add$1: function(_, value) {
      var t1;
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
      t1 = H.assertSubtype(this._base, "$isList", this.$ti, "$asList");
      (t1 && C.JSArray_methods).add$1(t1, value);
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  T.TextDirection.prototype = {};
  X.UninitializedLocaleData.prototype = {};
  U.Node0.prototype = {};
  U.Element0.prototype = {
    accept$1: function(_, visitor) {
      var t1, t2, _i;
      if (visitor.visitElementBefore$1(this)) {
        t1 = this.children;
        if (t1 != null)
          for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
            J.accept$1$z(t1[_i], visitor);
        visitor.buffer._contents += "</" + H.S(this.tag) + ">";
      }
    },
    get$textContent: function() {
      var t2, t3,
        t1 = this.children;
      if (t1 == null)
        t1 = "";
      else {
        t2 = P.String;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        t2 = new H.MappedListIterable(t1, H.functionTypeCheck(new U.Element_textContent_closure(), {func: 1, ret: t2, args: [t3]}), [t3, t2]).join$1(0, "");
        t1 = t2;
      }
      return t1;
    },
    $isNode0: 1
  };
  U.Element_textContent_closure.prototype = {
    call$1: function(child) {
      return H.interceptedTypeCheck(child, "$isNode0").get$textContent();
    },
    $signature: 46
  };
  U.Text0.prototype = {
    accept$1: function(_, visitor) {
      var t1 = visitor.buffer;
      t1.toString;
      t1._contents += H.S(this.text);
      return;
    },
    get$textContent: function() {
      return this.text;
    },
    $isNode0: 1
  };
  U.UnparsedContent.prototype = {
    accept$1: function(_, visitor) {
      return;
    },
    $isNode0: 1,
    get$textContent: function() {
      return this.textContent;
    }
  };
  K.BlockParser.prototype = {
    get$next: function(_) {
      var t1 = this._pos,
        t2 = this.lines;
      if (t1 >= t2.length - 1)
        return;
      return t2[t1 + 1];
    },
    peek$1: function(linesAhead) {
      var t1 = this._pos,
        t2 = this.lines,
        t3 = t2.length;
      if (t1 >= t3 - linesAhead)
        return;
      t1 += linesAhead;
      if (t1 >= t3)
        return H.ioore(t2, t1);
      return t2[t1];
    },
    matches$1: function(_, regex) {
      var t1 = this._pos,
        t2 = this.lines;
      if (t1 >= t2.length)
        return false;
      return regex.firstMatch$1(t2[t1]) != null;
    },
    parseLines$0: function() {
      var t1, t2, t3, _i, syntax, block, _this = this,
        blocks = H.setRuntimeTypeInfo([], [U.Node0]);
      for (t1 = _this.lines, t2 = _this.blockSyntaxes; _this._pos < t1.length;)
        for (t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
          syntax = t2[_i];
          if (H.boolConversionCheck(syntax.canParse$1(_this))) {
            block = J.parse$1$z(syntax, _this);
            if (block != null)
              C.JSArray_methods.add$1(blocks, block);
            break;
          }
        }
      return blocks;
    }
  };
  K.BlockSyntax.prototype = {
    get$pattern: function(_) {
      return;
    },
    get$canEndBlock: function() {
      return true;
    },
    canParse$1: function(parser) {
      var t1 = this.get$pattern(this),
        t2 = parser.lines,
        t3 = parser._pos;
      if (t3 >= t2.length)
        return H.ioore(t2, t3);
      return t1.firstMatch$1(t2[t3]) != null;
    }
  };
  K.BlockSyntax_isAtBlockEnd_closure.prototype = {
    call$1: function(s) {
      H.interceptedTypeCheck(s, "$isBlockSyntax");
      return H.boolConversionCheck(s.canParse$1(this.parser)) && s.get$canEndBlock();
    },
    $signature: 45
  };
  K.EmptyBlockSyntax.prototype = {
    get$pattern: function(_) {
      return $.$get$_emptyPattern();
    },
    parse$1: function(_, parser) {
      parser.encounteredBlankLine = true;
      ++parser._pos;
      return;
    }
  };
  K.SetextHeaderSyntax.prototype = {
    canParse$1: function(parser) {
      var i, nextLine,
        t1 = parser.lines,
        t2 = parser._pos;
      if (t2 >= t1.length)
        return H.ioore(t1, t2);
      if (!this._interperableAsParagraph$1(t1[t2]))
        return false;
      for (i = 1; true;) {
        nextLine = parser.peek$1(i);
        if (nextLine == null)
          return false;
        t1 = $.$get$_setextPattern()._nativeRegExp;
        if (t1.test(nextLine))
          return true;
        if (!this._interperableAsParagraph$1(nextLine))
          return false;
        ++i;
      }
    },
    parse$1: function(_, parser) {
      var tag, t3, t4, t5, match,
        t1 = P.String,
        lines = H.setRuntimeTypeInfo([], [t1]),
        t2 = parser.lines;
      while (true) {
        t3 = parser._pos;
        t4 = t2.length;
        if (!(t3 < t4)) {
          tag = null;
          break;
        }
        c$0: {
          t5 = $.$get$_setextPattern();
          if (t3 >= t4)
            return H.ioore(t2, t3);
          match = t5.firstMatch$1(t2[t3]);
          if (match == null) {
            t3 = parser._pos;
            if (t3 >= t2.length)
              return H.ioore(t2, t3);
            C.JSArray_methods.add$1(lines, t2[t3]);
            ++parser._pos;
            break c$0;
          } else {
            t2 = match._match;
            if (1 >= t2.length)
              return H.ioore(t2, 1);
            t2 = t2[1];
            if (0 >= t2.length)
              return H.ioore(t2, 0);
            tag = t2[0] === "=" ? "h1" : "h2";
            ++parser._pos;
            break;
          }
        }
      }
      return new U.Element0(tag, H.setRuntimeTypeInfo([new U.UnparsedContent(C.JSArray_methods.join$1(lines, "\n"))], [U.Node0]), P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    _interperableAsParagraph$1: function(line) {
      var t1 = $.$get$_indentPattern()._nativeRegExp,
        t2 = typeof line !== "string";
      if (t2)
        H.throwExpression(H.argumentErrorValue(line));
      if (!t1.test(line)) {
        t1 = $.$get$_codePattern()._nativeRegExp;
        if (t2)
          H.throwExpression(H.argumentErrorValue(line));
        if (!t1.test(line)) {
          t1 = $.$get$_headerPattern()._nativeRegExp;
          if (t2)
            H.throwExpression(H.argumentErrorValue(line));
          if (!t1.test(line)) {
            t1 = $.$get$_blockquotePattern()._nativeRegExp;
            if (t2)
              H.throwExpression(H.argumentErrorValue(line));
            if (!t1.test(line)) {
              t1 = $.$get$_hrPattern()._nativeRegExp;
              if (t2)
                H.throwExpression(H.argumentErrorValue(line));
              if (!t1.test(line)) {
                t1 = $.$get$_ulPattern()._nativeRegExp;
                if (t2)
                  H.throwExpression(H.argumentErrorValue(line));
                if (!t1.test(line)) {
                  t1 = $.$get$_olPattern()._nativeRegExp;
                  if (t2)
                    H.throwExpression(H.argumentErrorValue(line));
                  if (!t1.test(line)) {
                    t1 = $.$get$_emptyPattern()._nativeRegExp;
                    if (t2)
                      H.throwExpression(H.argumentErrorValue(line));
                    t1 = t1.test(line);
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
          } else
            t1 = true;
        } else
          t1 = true;
      } else
        t1 = true;
      return !t1;
    }
  };
  K.HeaderSyntax.prototype = {
    get$pattern: function(_) {
      return $.$get$_headerPattern();
    },
    parse$1: function(_, parser) {
      var match, level,
        t1 = $.$get$_headerPattern(),
        t2 = parser.lines,
        t3 = parser._pos;
      if (t3 >= t2.length)
        return H.ioore(t2, t3);
      match = t1.firstMatch$1(t2[t3]);
      ++parser._pos;
      t3 = match._match;
      t2 = t3.length;
      if (1 >= t2)
        return H.ioore(t3, 1);
      level = t3[1].length;
      if (2 >= t2)
        return H.ioore(t3, 2);
      t3 = J.trim$0$s(t3[2]);
      t2 = P.String;
      return new U.Element0("h" + level, H.setRuntimeTypeInfo([new U.UnparsedContent(t3)], [U.Node0]), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
    }
  };
  K.BlockquoteSyntax.prototype = {
    get$pattern: function(_) {
      return $.$get$_blockquotePattern();
    },
    parseChildLines$1: function(parser) {
      var t1, t2, t3, t4, t5, match,
        childLines = H.setRuntimeTypeInfo([], [P.String]);
      for (t1 = parser.lines, t2 = parser.blockSyntaxes; t3 = parser._pos, t4 = t1.length, t3 < t4;) {
        t5 = $.$get$_blockquotePattern();
        if (t3 >= t4)
          return H.ioore(t1, t3);
        match = t5.firstMatch$1(t1[t3]);
        if (match != null) {
          t3 = match._match;
          if (1 >= t3.length)
            return H.ioore(t3, 1);
          C.JSArray_methods.add$1(childLines, t3[1]);
          ++parser._pos;
          continue;
        }
        if (C.JSArray_methods.firstWhere$1(t2, new K.BlockquoteSyntax_parseChildLines_closure(parser)) instanceof K.ParagraphSyntax) {
          t3 = parser._pos;
          if (t3 >= t1.length)
            return H.ioore(t1, t3);
          C.JSArray_methods.add$1(childLines, t1[t3]);
          ++parser._pos;
        } else
          break;
      }
      return childLines;
    },
    parse$1: function(_, parser) {
      var t1 = P.String;
      return new U.Element0("blockquote", K.BlockParser$(this.parseChildLines$1(parser), parser.document).parseLines$0(), P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    }
  };
  K.BlockquoteSyntax_parseChildLines_closure.prototype = {
    call$1: function(s) {
      return H.interceptedTypeCheck(s, "$isBlockSyntax").canParse$1(this.parser);
    },
    $signature: 45
  };
  K.CodeBlockSyntax.prototype = {
    get$pattern: function(_) {
      return $.$get$_indentPattern();
    },
    get$canEndBlock: function() {
      return false;
    },
    parseChildLines$1: function(parser) {
      var t1, t2, t3, t4, match, nextMatch,
        childLines = H.setRuntimeTypeInfo([], [P.String]);
      for (t1 = parser.lines; t2 = parser._pos, t3 = t1.length, t2 < t3;) {
        t4 = $.$get$_indentPattern();
        if (t2 >= t3)
          return H.ioore(t1, t2);
        match = t4.firstMatch$1(t1[t2]);
        if (match != null) {
          t2 = match._match;
          if (1 >= t2.length)
            return H.ioore(t2, 1);
          C.JSArray_methods.add$1(childLines, t2[1]);
          ++parser._pos;
        } else {
          nextMatch = parser.get$next(parser) != null ? t4.firstMatch$1(parser.get$next(parser)) : null;
          t2 = parser._pos;
          if (t2 >= t1.length)
            return H.ioore(t1, t2);
          if (J.trim$0$s(t1[t2]) === "" && nextMatch != null) {
            C.JSArray_methods.add$1(childLines, "");
            t2 = nextMatch._match;
            if (1 >= t2.length)
              return H.ioore(t2, 1);
            C.JSArray_methods.add$1(childLines, t2[1]);
            parser._pos = ++parser._pos + 1;
          } else
            break;
        }
      }
      return childLines;
    },
    parse$1: function(_, parser) {
      var t1, t2,
        childLines = this.parseChildLines$1(parser);
      C.JSArray_methods.add$1(childLines, "");
      t1 = [U.Node0];
      t2 = P.String;
      return new U.Element0("pre", H.setRuntimeTypeInfo([new U.Element0("code", H.setRuntimeTypeInfo([new U.Text0(C.HtmlEscape_uMl.convert$1(C.JSArray_methods.join$1(childLines, "\n")))], t1), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2))], t1), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
    }
  };
  K.FencedCodeBlockSyntax.prototype = {
    get$pattern: function(_) {
      return $.$get$_codePattern();
    },
    parseChildLines$2: function(parser, endBlock) {
      var childLines, t1, t2, t3, t4, match;
      if (endBlock == null)
        endBlock = "";
      childLines = H.setRuntimeTypeInfo([], [P.String]);
      t1 = ++parser._pos;
      for (t2 = parser.lines; t3 = t2.length, t1 < t3;) {
        t4 = $.$get$_codePattern();
        if (t1 < 0 || t1 >= t3)
          return H.ioore(t2, t1);
        match = t4.firstMatch$1(t2[t1]);
        if (match != null) {
          t1 = match._match;
          if (1 >= t1.length)
            return H.ioore(t1, 1);
          t1 = !J.startsWith$1$s(t1[1], endBlock);
        } else
          t1 = true;
        t3 = parser._pos;
        if (t1) {
          if (t3 >= t2.length)
            return H.ioore(t2, t3);
          C.JSArray_methods.add$1(childLines, t2[t3]);
          t1 = ++parser._pos;
        } else {
          parser._pos = t3 + 1;
          break;
        }
      }
      return childLines;
    },
    parse$1: function(_, parser) {
      var childLines, text, t4, t5, infoString, firstSpace,
        t1 = $.$get$_codePattern(),
        t2 = parser.lines,
        t3 = parser._pos;
      if (t3 >= t2.length)
        return H.ioore(t2, t3);
      t3 = t1.firstMatch$1(t2[t3])._match;
      t2 = t3.length;
      if (1 >= t2)
        return H.ioore(t3, 1);
      t1 = t3[1];
      if (2 >= t2)
        return H.ioore(t3, 2);
      t3 = t3[2];
      childLines = this.parseChildLines$2(parser, t1);
      C.JSArray_methods.add$1(childLines, "");
      text = C.HtmlEscape_uMl.convert$1(C.JSArray_methods.join$1(childLines, "\n"));
      t1 = [U.Node0];
      t2 = H.setRuntimeTypeInfo([new U.Text0(text)], t1);
      t4 = P.String;
      t5 = P.LinkedHashMap_LinkedHashMap$_empty(t4, t4);
      infoString = J.trim$0$s(t3);
      if (infoString.length !== 0) {
        firstSpace = C.JSString_methods.indexOf$1(infoString, " ");
        infoString = C.HtmlEscape_LJp.convert$1(firstSpace >= 0 ? C.JSString_methods.substring$2(infoString, 0, firstSpace) : infoString);
        t5.$indexSet(0, "class", "language-" + infoString);
      }
      return new U.Element0("pre", H.setRuntimeTypeInfo([new U.Element0("code", t2, t5)], t1), P.LinkedHashMap_LinkedHashMap$_empty(t4, t4));
    }
  };
  K.HorizontalRuleSyntax.prototype = {
    get$pattern: function(_) {
      return $.$get$_hrPattern();
    },
    parse$1: function(_, parser) {
      var t1;
      ++parser._pos;
      t1 = P.String;
      return new U.Element0("hr", null, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    }
  };
  K.BlockHtmlSyntax.prototype = {
    get$canEndBlock: function() {
      return true;
    }
  };
  K.BlockTagBlockHtmlSyntax.prototype = {
    get$pattern: function(_) {
      return $.$get$BlockTagBlockHtmlSyntax__pattern();
    },
    parse$1: function(_, parser) {
      var t2,
        childLines = H.setRuntimeTypeInfo([], [P.String]),
        t1 = parser.lines;
      while (true) {
        if (!(parser._pos < t1.length && !parser.matches$1(0, $.$get$_emptyPattern())))
          break;
        t2 = parser._pos;
        if (t2 >= t1.length)
          return H.ioore(t1, t2);
        C.JSArray_methods.add$1(childLines, t1[t2]);
        ++parser._pos;
      }
      return new U.Text0(C.JSArray_methods.join$1(childLines, "\n"));
    }
  };
  K.OtherTagBlockHtmlSyntax.prototype = {
    get$canEndBlock: function() {
      return false;
    },
    get$pattern: function(_) {
      return P.RegExp_RegExp("^ {0,3}</?\\w+(?:>|\\s+[^>]*>)\\s*$", true, false);
    }
  };
  K.LongBlockHtmlSyntax.prototype = {
    parse$1: function(_, parser) {
      var t1, t2, t3, t4,
        childLines = H.setRuntimeTypeInfo([], [P.String]);
      for (t1 = parser.lines, t2 = this._endPattern; t3 = parser._pos, t4 = t1.length, t3 < t4;) {
        if (t3 >= t4)
          return H.ioore(t1, t3);
        C.JSArray_methods.add$1(childLines, t1[t3]);
        if (parser.matches$1(0, t2))
          break;
        ++parser._pos;
      }
      ++parser._pos;
      return new U.Text0(C.JSArray_methods.join$1(childLines, "\n"));
    },
    get$pattern: function(receiver) {
      return this.pattern;
    }
  };
  K.ListItem.prototype = {};
  K.ListSyntax.prototype = {
    get$canEndBlock: function() {
      return true;
    },
    parse$1: function(_, parser) {
      var endItem, tryMatch, t2, startNumber, indent, listMarker, t3, t4, t5, leadingSpace, leadingExpandedTabLength, line, precedingWhitespace, digits, marker, firstWhitespace, restWhitespace, $content, markerAsSpaces, itemNodes, anyEmptyLines, anyEmptyLinesBetweenBlocks, _i, item, t6, t7, itemParser, i, child, _this = this, _null = null, _box_0 = {},
        items = H.setRuntimeTypeInfo([], [K.ListItem]),
        t1 = P.String;
      _box_0.childLines = H.setRuntimeTypeInfo([], [t1]);
      endItem = new K.ListSyntax_parse_endItem(_box_0, items);
      _box_0.match = null;
      tryMatch = new K.ListSyntax_parse_tryMatch(_box_0, parser);
      for (t2 = parser.lines, startNumber = _null, indent = startNumber, listMarker = indent; t3 = parser._pos, t4 = t2.length, t3 < t4;) {
        t5 = $.$get$ListSyntax__whitespaceRe();
        if (t3 >= t4)
          return H.ioore(t2, t3);
        t3 = t2[t3];
        t5.toString;
        t3.length;
        t3 = t5._execAnchored$2(t3, 0)._match;
        if (0 >= t3.length)
          return H.ioore(t3, 0);
        leadingSpace = t3[0];
        leadingExpandedTabLength = K.ListSyntax__expandedTabLength(leadingSpace);
        t3 = $.$get$_emptyPattern();
        if (H.boolConversionCheck(tryMatch.call$1(t3))) {
          t4 = parser.get$next(parser);
          if (t3.firstMatch$1(t4 == null ? "" : t4) != null)
            break;
          C.JSArray_methods.add$1(_box_0.childLines, "");
        } else if (indent != null && indent.length <= leadingExpandedTabLength) {
          t3 = parser._pos;
          if (t3 >= t2.length)
            return H.ioore(t2, t3);
          t3 = t2[t3];
          t4 = C.JSString_methods.$mul(" ", leadingExpandedTabLength);
          t3.length;
          t3 = H.stringReplaceFirstUnchecked(t3, leadingSpace, t4, 0);
          line = H.stringReplaceFirstUnchecked(t3, indent, "", 0);
          C.JSArray_methods.add$1(_box_0.childLines, line);
        } else if (H.boolConversionCheck(tryMatch.call$1($.$get$_hrPattern())))
          break;
        else if (H.boolConversionCheck(tryMatch.call$1($.$get$_ulPattern())) || H.boolConversionCheck(tryMatch.call$1($.$get$_olPattern()))) {
          t3 = _box_0.match._match;
          t4 = t3.length;
          if (1 >= t4)
            return H.ioore(t3, 1);
          precedingWhitespace = t3[1];
          if (2 >= t4)
            return H.ioore(t3, 2);
          digits = t3[2];
          if (digits == null)
            digits = "";
          if (startNumber == null && digits.length !== 0)
            startNumber = P.int_parse(digits, _null, _null);
          t3 = _box_0.match._match;
          t4 = t3.length;
          if (3 >= t4)
            return H.ioore(t3, 3);
          marker = t3[3];
          if (5 >= t4)
            return H.ioore(t3, 5);
          firstWhitespace = t3[5];
          if (firstWhitespace == null)
            firstWhitespace = "";
          if (6 >= t4)
            return H.ioore(t3, 6);
          restWhitespace = t3[6];
          if (restWhitespace == null)
            restWhitespace = "";
          if (7 >= t4)
            return H.ioore(t3, 7);
          $content = t3[7];
          if ($content == null)
            $content = "";
          if (listMarker != null && listMarker !== marker)
            break;
          markerAsSpaces = C.JSString_methods.$mul(" ", digits.length + marker.length);
          if ($content.length === 0)
            indent = J.$add$ansx(precedingWhitespace, markerAsSpaces) + " ";
          else {
            t3 = J.getInterceptor$ansx(precedingWhitespace);
            indent = restWhitespace.length >= 4 ? t3.$add(precedingWhitespace, markerAsSpaces) + firstWhitespace : t3.$add(precedingWhitespace, markerAsSpaces) + firstWhitespace + restWhitespace;
          }
          endItem.call$0();
          C.JSArray_methods.add$1(_box_0.childLines, restWhitespace + $content);
          listMarker = marker;
        } else if (K.BlockSyntax_isAtBlockEnd(parser))
          break;
        else {
          t3 = _box_0.childLines;
          if (t3.length !== 0 && C.JSArray_methods.get$last(t3) === "") {
            parser.encounteredBlankLine = true;
            break;
          }
          t3 = _box_0.childLines;
          t4 = parser._pos;
          if (t4 >= t2.length)
            return H.ioore(t2, t4);
          C.JSArray_methods.add$1(t3, t2[t4]);
        }
        ++parser._pos;
      }
      endItem.call$0();
      itemNodes = H.setRuntimeTypeInfo([], [U.Element0]);
      C.JSArray_methods.forEach$1(items, _this.get$removeLeadingEmptyLine());
      anyEmptyLines = _this.removeTrailingEmptyLines$1(items);
      for (t2 = items.length, t3 = parser.document, t4 = [K.BlockSyntax], t5 = t3._blockSyntaxes, anyEmptyLinesBetweenBlocks = false, _i = 0; _i < items.length; items.length === t2 || (0, H.throwConcurrentModificationError)(items), ++_i) {
        item = items[_i];
        t6 = H.setRuntimeTypeInfo([], t4);
        t7 = H.setRuntimeTypeInfo([C.C_EmptyBlockSyntax, C.C_BlockTagBlockHtmlSyntax, new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<pre(?:\\s|>|$)", true, false), P.RegExp_RegExp("</pre>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<script(?:\\s|>|$)", true, false), P.RegExp_RegExp("</script>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<style(?:\\s|>|$)", true, false), P.RegExp_RegExp("</style>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<!--", true, false), P.RegExp_RegExp("-->", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<\\?", true, false), P.RegExp_RegExp("\\?>", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<![A-Z]", true, false), P.RegExp_RegExp(">", true, false)), new K.LongBlockHtmlSyntax(P.RegExp_RegExp("^ {0,3}<!\\[CDATA\\[", true, false), P.RegExp_RegExp("\\]\\]>", true, false)), C.C_OtherTagBlockHtmlSyntax, C.C_SetextHeaderSyntax, C.C_HeaderSyntax, C.C_CodeBlockSyntax, C.C_BlockquoteSyntax, C.C_HorizontalRuleSyntax, C.C_UnorderedListSyntax, C.C_OrderedListSyntax, C.C_ParagraphSyntax], t4);
        itemParser = new K.BlockParser(item.lines, t3, t6, t7);
        C.JSArray_methods.addAll$1(t6, t5);
        C.JSArray_methods.addAll$1(t6, t7);
        C.JSArray_methods.add$1(itemNodes, new U.Element0("li", itemParser.parseLines$0(), P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
        anyEmptyLinesBetweenBlocks = anyEmptyLinesBetweenBlocks || itemParser.encounteredBlankLine;
      }
      if (!anyEmptyLines && !anyEmptyLinesBetweenBlocks)
        for (t2 = itemNodes.length, _i = 0; _i < itemNodes.length; itemNodes.length === t2 || (0, H.throwConcurrentModificationError)(itemNodes), ++_i)
          for (t3 = itemNodes[_i].children, t4 = t3 && C.JSArray_methods, i = 0; i < t3.length; ++i) {
            child = t3[i];
            if (child instanceof U.Element0 && child.tag === "p") {
              t4.removeAt$1(t3, i);
              C.JSArray_methods.insertAll$2(t3, i, child.children);
            }
          }
      if (_this.get$listTag() === "ol" && startNumber !== 1) {
        t2 = _this.get$listTag();
        t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        t1.$indexSet(0, "start", H.S(startNumber));
        return new U.Element0(t2, itemNodes, t1);
      } else
        return new U.Element0(_this.get$listTag(), itemNodes, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    removeLeadingEmptyLine$1: function(item) {
      var t2, t3,
        t1 = H.interceptedTypeCheck(item, "$isListItem").lines;
      if (t1.length !== 0) {
        t2 = $.$get$_emptyPattern();
        t3 = C.JSArray_methods.get$first(t1);
        t2 = t2._nativeRegExp;
        if (typeof t3 !== "string")
          H.throwExpression(H.argumentErrorValue(t3));
        t2 = t2.test(t3);
      } else
        t2 = false;
      if (t2)
        C.JSArray_methods.removeAt$1(t1, 0);
    },
    removeTrailingEmptyLines$1: function(items) {
      var anyEmpty, i, t1, t2;
      H.assertSubtype(items, "$isList", [K.ListItem], "$asList");
      for (anyEmpty = false, i = 0; i < items.length; ++i) {
        if (items[i].lines.length === 1)
          continue;
        while (true) {
          if (i >= items.length)
            return H.ioore(items, i);
          t1 = items[i].lines;
          if (t1.length !== 0) {
            t2 = $.$get$_emptyPattern();
            t1 = C.JSArray_methods.get$last(t1);
            t2 = t2._nativeRegExp;
            if (typeof t1 !== "string")
              H.throwExpression(H.argumentErrorValue(t1));
            t1 = t2.test(t1);
          } else
            t1 = false;
          if (!t1)
            break;
          t1 = items.length;
          if (i < t1 - 1)
            anyEmpty = true;
          if (i >= t1)
            return H.ioore(items, i);
          t1 = items[i].lines;
          if (0 >= t1.length)
            return H.ioore(t1, -1);
          t1.pop();
        }
      }
      return anyEmpty;
    }
  };
  K.ListSyntax_parse_endItem.prototype = {
    call$0: function() {
      var t1 = this._box_0,
        t2 = t1.childLines;
      if (t2.length !== 0) {
        C.JSArray_methods.add$1(this.items, new K.ListItem(t2));
        t1.childLines = H.setRuntimeTypeInfo([], [P.String]);
      }
    },
    $signature: 1
  };
  K.ListSyntax_parse_tryMatch.prototype = {
    call$1: function(pattern) {
      var match,
        t1 = this.parser,
        t2 = t1.lines;
      t1 = t1._pos;
      if (t1 >= t2.length)
        return H.ioore(t2, t1);
      match = pattern.firstMatch$1(t2[t1]);
      this._box_0.match = match;
      return match != null;
    },
    $signature: 109
  };
  K.UnorderedListSyntax.prototype = {
    get$pattern: function(_) {
      return $.$get$_ulPattern();
    },
    get$listTag: function() {
      return "ul";
    }
  };
  K.OrderedListSyntax.prototype = {
    get$pattern: function(_) {
      return $.$get$_olPattern();
    },
    get$listTag: function() {
      return "ol";
    }
  };
  K.ParagraphSyntax.prototype = {
    get$canEndBlock: function() {
      return false;
    },
    canParse$1: function(parser) {
      return true;
    },
    parse$1: function(_, parser) {
      var t2, t3, paragraphLines,
        t1 = P.String,
        childLines = H.setRuntimeTypeInfo([], [t1]);
      for (t2 = parser.lines; !K.BlockSyntax_isAtBlockEnd(parser);) {
        t3 = parser._pos;
        if (t3 >= t2.length)
          return H.ioore(t2, t3);
        C.JSArray_methods.add$1(childLines, t2[t3]);
        ++parser._pos;
      }
      paragraphLines = this._extractReflinkDefinitions$2(parser, childLines);
      if (paragraphLines == null)
        return new U.Text0("");
      else
        return new U.Element0("p", H.setRuntimeTypeInfo([new U.UnparsedContent(C.JSArray_methods.join$1(paragraphLines, "\n"))], [U.Node0]), P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
    },
    _extractReflinkDefinitions$2: function(parser, lines) {
      var lineStartsReflinkDefinition, i, contents, j, t1;
      H.assertSubtype(lines, "$isList", [P.String], "$asList");
      lineStartsReflinkDefinition = new K.ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition(lines);
      $label0$0:
        for (i = 0; true; i = j) {
          if (!H.boolConversionCheck(lineStartsReflinkDefinition.call$1(i)))
            break $label0$0;
          if (i < 0 || i >= lines.length)
            return H.ioore(lines, i);
          contents = lines[i];
          j = i + 1;
          for (; j < lines.length;)
            if (H.boolConversionCheck(lineStartsReflinkDefinition.call$1(j)))
              if (this._parseReflinkDefinition$2(parser, contents))
                continue $label0$0;
              else
                break;
            else {
              t1 = J.$add$ansx(contents, "\n");
              if (j >= lines.length)
                return H.ioore(lines, j);
              contents = C.JSString_methods.$add(t1, lines[j]);
              ++j;
            }
          if (this._parseReflinkDefinition$2(parser, contents)) {
            i = j;
            break $label0$0;
          }
          for (t1 = H.getTypeArgumentByIndex(lines, 0); j >= i;) {
            P.RangeError_checkValidRange(i, j, lines.length);
            if (this._parseReflinkDefinition$2(parser, H.SubListIterable$(lines, i, j, t1).join$1(0, "\n"))) {
              i = j;
              break;
            }
            --j;
          }
          break $label0$0;
        }
      if (i === lines.length)
        return;
      else
        return C.JSArray_methods.sublist$1(lines, i);
    },
    _parseReflinkDefinition$2: function(parser, contents) {
      var t2, t3, label, destination, title, t1 = {},
        match = P.RegExp_RegExp("^[ ]{0,3}\\[((?:\\\\\\]|[^\\]])+)\\]:\\s*(?:<(\\S+)>|(\\S+))\\s*(\"[^\"]+\"|'[^']+'|\\([^)]+\\)|)\\s*$", true, true).firstMatch$1(contents);
      if (match == null)
        return false;
      t2 = match._match;
      t3 = t2.length;
      if (0 >= t3)
        return H.ioore(t2, 0);
      if (t2[0].length < contents.length)
        return false;
      if (1 >= t3)
        return H.ioore(t2, 1);
      label = t1.label = t2[1];
      if (2 >= t3)
        return H.ioore(t2, 2);
      destination = t2[2];
      if (destination == null) {
        if (3 >= t3)
          return H.ioore(t2, 3);
        destination = t2[3];
      }
      if (4 >= t3)
        return H.ioore(t2, 4);
      title = t1.title = t2[4];
      t2 = $.$get$ParagraphSyntax__whitespacePattern()._nativeRegExp;
      if (typeof label !== "string")
        H.throwExpression(H.argumentErrorValue(label));
      if (t2.test(label))
        return false;
      if (title === "")
        t1.title = null;
      else
        t1.title = J.substring$2$s(title, 1, title.length - 1);
      t2 = C.JSString_methods.trim$0(label.toLowerCase());
      t3 = $.$get$_oneOrMoreWhitespacePattern();
      label = H.stringReplaceAllUnchecked(t2, t3, " ");
      t1.label = label;
      parser.document.linkReferences.putIfAbsent$2(0, label, new K.ParagraphSyntax__parseReflinkDefinition_closure(t1, destination));
      return true;
    }
  };
  K.ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition.prototype = {
    call$1: function(i) {
      var t1 = this.lines;
      if (i < 0 || i >= t1.length)
        return H.ioore(t1, i);
      return J.startsWith$1$s(t1[i], $.$get$ParagraphSyntax__reflinkDefinitionStart());
    },
    $signature: 44
  };
  K.ParagraphSyntax__parseReflinkDefinition_closure.prototype = {
    call$0: function() {
      return new S.LinkReference(this.destination, this._box_0.title);
    },
    $signature: 111
  };
  S.Document0.prototype = {
    _parseInlineContent$1: function(nodes) {
      var i, t1, node, inlineNodes;
      H.assertSubtype(nodes, "$isList", [U.Node0], "$asList");
      for (i = 0; t1 = nodes.length, i < t1; ++i) {
        if (i < 0)
          return H.ioore(nodes, i);
        node = nodes[i];
        t1 = J.getInterceptor$(node);
        if (!!t1.$isUnparsedContent) {
          inlineNodes = R.InlineParser$(node.textContent, this).parse$0(0);
          C.JSArray_methods.removeAt$1(nodes, i);
          C.JSArray_methods.insertAll$2(nodes, i, inlineNodes);
          i += inlineNodes.length - 1;
        } else if (!!t1.$isElement0 && node.children != null)
          this._parseInlineContent$1(node.children);
      }
    }
  };
  S.LinkReference.prototype = {};
  E.ExtensionSet.prototype = {};
  X.HtmlRenderer.prototype = {
    render$1: function(nodes) {
      var t1, _i, _this = this;
      H.assertSubtype(nodes, "$isList", [U.Node0], "$asList");
      _this.buffer = new P.StringBuffer("");
      _this.set$uniqueIds(P.LinkedHashSet_LinkedHashSet(null, null, P.String));
      for (t1 = nodes.length, _i = 0; _i < nodes.length; nodes.length === t1 || (0, H.throwConcurrentModificationError)(nodes), ++_i)
        J.accept$1$z(nodes[_i], _this);
      return J.toString$0$(_this.buffer);
    },
    visitElementBefore$1: function(element) {
      var t1, t2, t3, _this = this;
      if (_this.buffer._contents.length !== 0 && $.$get$HtmlRenderer__blockTags().firstMatch$1(element.tag) != null)
        _this.buffer._contents += "\n";
      t1 = element.tag;
      _this.buffer._contents += "<" + H.S(t1);
      for (t2 = element.attributes, t2 = t2.get$entries(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        _this.buffer._contents += " " + H.S(t3.key) + '="' + H.S(t3.value) + '"';
      }
      t2 = _this.buffer;
      if (element.children == null) {
        t3 = t2._contents += " />";
        if (t1 === "br")
          t2._contents = t3 + "\n";
        return false;
      } else {
        t2._contents += ">";
        return true;
      }
    },
    set$uniqueIds: function(uniqueIds) {
      this.uniqueIds = H.assertSubtype(uniqueIds, "$isSet", [P.String], "$asSet");
    },
    $isNodeVisitor: 1
  };
  R.InlineParser.prototype = {
    InlineParser$2: function(source, $document) {
      var t1 = this.syntaxes,
        t2 = this.document,
        t3 = t2._inlineSyntaxes;
      C.JSArray_methods.addAll$1(t1, t3);
      if (t3.any$1(0, new R.InlineParser_closure(this)))
        C.JSArray_methods.add$1(t1, new R.TextSyntax(null, P.RegExp_RegExp("[A-Za-z0-9]+(?=\\s)", true, true)));
      else
        C.JSArray_methods.add$1(t1, new R.TextSyntax(null, P.RegExp_RegExp("[ \\tA-Za-z0-9]*[A-Za-z0-9](?=\\s)", true, true)));
      C.JSArray_methods.addAll$1(t1, $.$get$InlineParser__defaultSyntaxes());
      C.JSArray_methods.addAll$1(t1, $.$get$InlineParser__htmlSyntaxes());
      t2 = R.LinkSyntax$(t2.linkResolver, "\\[");
      C.JSArray_methods.insertAll$2(t1, 1, H.setRuntimeTypeInfo([t2, new R.ImageSyntax(new R.LinkSyntax_closure(), P.RegExp_RegExp("\\]", true, true), false, P.RegExp_RegExp("!\\[", true, true))], [R.InlineSyntax]));
    },
    parse$0: function(_) {
      var t2, t3, t4, _this = this,
        t1 = _this._stack;
      C.JSArray_methods.add$1(t1, new R.TagState(0, 0, null, H.setRuntimeTypeInfo([], [U.Node0]), null));
      for (t2 = _this.source.length, t3 = _this.syntaxes, t4 = [H.getTypeArgumentByIndex(t1, 0)]; _this.pos !== t2;) {
        if (new H.ReversedListIterable(t1, t4).any$1(0, new R.InlineParser_parse_closure(_this)))
          continue;
        if (C.JSArray_methods.any$1(t3, new R.InlineParser_parse_closure0(_this)))
          continue;
        ++_this.pos;
      }
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      return t1[0].close$2(0, _this, null);
    },
    writeText$0: function(_) {
      var _this = this;
      _this.writeTextRange$2(_this.start, _this.pos);
      _this.start = _this.pos;
    },
    writeTextRange$2: function(start, end) {
      var text, nodes, textNode;
      if (end <= start)
        return;
      text = J.substring$2$s(this.source, start, end);
      nodes = C.JSArray_methods.get$last(this._stack).children;
      if (nodes.length !== 0 && C.JSArray_methods.get$last(nodes) instanceof U.Text0) {
        textNode = H.interceptedTypeCast(C.JSArray_methods.get$last(nodes), "$isText0");
        C.JSArray_methods.$indexSet(nodes, nodes.length - 1, new U.Text0(H.S(textNode.text) + text));
      } else
        C.JSArray_methods.add$1(nodes, new U.Text0(text));
    },
    consume$1: function($length) {
      var t1 = this.pos += $length;
      this.start = t1;
    }
  };
  R.InlineParser_closure.prototype = {
    call$1: function(s) {
      H.interceptedTypeCheck(s, "$isInlineSyntax");
      return !C.JSArray_methods.contains$1(this.$this.document.extensionSet.inlineSyntaxes, s);
    },
    $signature: 40
  };
  R.InlineParser_parse_closure.prototype = {
    call$1: function(state) {
      H.interceptedTypeCheck(state, "$isTagState");
      return state.syntax != null && state.tryMatch$1(this.$this);
    },
    $signature: 113
  };
  R.InlineParser_parse_closure0.prototype = {
    call$1: function(syntax) {
      return H.interceptedTypeCheck(syntax, "$isInlineSyntax").tryMatch$1(this.$this);
    },
    $signature: 40
  };
  R.InlineSyntax.prototype = {
    tryMatch$1: function(parser) {
      var t1,
        startMatchPos = parser.pos,
        startMatch = this.pattern.matchAsPrefix$2(0, parser.source, startMatchPos);
      if (startMatch == null)
        return false;
      parser.writeText$0(0);
      if (this.onMatch$2(parser, startMatch)) {
        t1 = startMatch._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        parser.consume$1(t1[0].length);
      }
      return true;
    }
  };
  R.LineBreakSyntax.prototype = {
    onMatch$2: function(parser, match) {
      var t1 = P.String;
      C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("br", null, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
      return true;
    }
  };
  R.TextSyntax.prototype = {
    onMatch$2: function(parser, match) {
      var t1 = this.substitute;
      if (t1 == null) {
        t1 = match._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        parser.pos += t1[0].length;
        return false;
      }
      C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Text0(t1));
      return true;
    }
  };
  R.EscapeSyntax.prototype = {
    onMatch$2: function(parser, match) {
      var t1 = match._match;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1 = t1[0];
      if (1 >= t1.length)
        return H.ioore(t1, 1);
      t1 = t1[1];
      C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Text0(t1));
      return true;
    }
  };
  R.InlineHtmlSyntax.prototype = {};
  R.EmailAutolinkSyntax.prototype = {
    onMatch$2: function(parser, match) {
      var url, t2,
        t1 = match._match;
      if (1 >= t1.length)
        return H.ioore(t1, 1);
      url = t1[1];
      t1 = H.setRuntimeTypeInfo([new U.Text0(C.HtmlEscape_uMl.convert$1(url))], [U.Node0]);
      t2 = P.String;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      t2.$indexSet(0, "href", P._Uri__uriEncode(C.List_gnE, "mailto:" + H.S(url), C.C_Utf8Codec, false));
      C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("a", t1, t2));
      return true;
    }
  };
  R.AutolinkSyntax.prototype = {
    onMatch$2: function(parser, match) {
      var url, t2,
        t1 = match._match;
      if (1 >= t1.length)
        return H.ioore(t1, 1);
      url = t1[1];
      t1 = H.setRuntimeTypeInfo([new U.Text0(C.HtmlEscape_uMl.convert$1(url))], [U.Node0]);
      t2 = P.String;
      t2 = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      t2.$indexSet(0, "href", P._Uri__uriEncode(C.List_gnE, url, C.C_Utf8Codec, false));
      C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("a", t1, t2));
      return true;
    }
  };
  R._DelimiterRun.prototype = {
    toString$0: function(_) {
      var _this = this;
      return "<char: " + _this.char + ", length: " + _this.length + ", isLeftFlanking: " + _this.isLeftFlanking + ", isRightFlanking: " + _this.isRightFlanking + ">";
    },
    get$canOpen: function() {
      var t1, _this = this;
      if (_this.isLeftFlanking)
        t1 = _this.char === 42 || !_this.isRightFlanking || _this.isPrecededByPunctuation;
      else
        t1 = false;
      return t1;
    },
    get$canClose: function() {
      var t1, _this = this;
      if (_this.isRightFlanking)
        t1 = _this.char === 42 || !_this.isLeftFlanking || _this.isFollowedByPunctuation;
      else
        t1 = false;
      return t1;
    },
    get$length: function(receiver) {
      return this.length;
    }
  };
  R.TagSyntax.prototype = {
    onMatch$2: function(parser, match) {
      var runLength, matchStart, matchEnd, delimiterRun, t2,
        t1 = match._match;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      runLength = t1[0].length;
      matchStart = parser.pos;
      matchEnd = matchStart + runLength - 1;
      if (!this.requiresDelimiterRun) {
        C.JSArray_methods.add$1(parser._stack, new R.TagState(matchStart, matchEnd + 1, this, H.setRuntimeTypeInfo([], [U.Node0]), null));
        return true;
      }
      delimiterRun = R._DelimiterRun_tryParse(parser, matchStart, matchEnd);
      t1 = delimiterRun != null && delimiterRun.get$canOpen();
      t2 = parser.pos;
      if (t1) {
        C.JSArray_methods.add$1(parser._stack, new R.TagState(t2, matchEnd + 1, this, H.setRuntimeTypeInfo([], [U.Node0]), delimiterRun));
        return true;
      } else {
        parser.pos = t2 + runLength;
        return false;
      }
    },
    onMatchEnd$3: function(parser, match, state) {
      var runLength, matchStart, t2, openingRunLength, delimiterRun, t3, _s6_ = "strong",
        t1 = match._match;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      runLength = t1[0].length;
      matchStart = parser.pos;
      t1 = state.endPos;
      t2 = state.startPos;
      openingRunLength = t1 - t2;
      delimiterRun = R._DelimiterRun_tryParse(parser, matchStart, matchStart + runLength - 1);
      t3 = openingRunLength === 1;
      if (t3 && runLength === 1) {
        t1 = P.String;
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("em", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
      } else if (t3 && runLength > 1) {
        t1 = P.String;
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("em", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
        parser.start = parser.pos = parser.pos - (runLength - 1);
      } else if (openingRunLength > 1 && runLength === 1) {
        t3 = parser._stack;
        C.JSArray_methods.add$1(t3, new R.TagState(t2, t1 - 1, this, H.setRuntimeTypeInfo([], [U.Node0]), delimiterRun));
        t1 = P.String;
        C.JSArray_methods.add$1(C.JSArray_methods.get$last(t3).children, new U.Element0("em", state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
      } else {
        t3 = openingRunLength === 2;
        if (t3 && runLength === 2) {
          t1 = P.String;
          C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0(_s6_, state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
        } else if (t3 && runLength > 2) {
          t1 = P.String;
          C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0(_s6_, state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
          parser.start = parser.pos = parser.pos - (runLength - 2);
        } else {
          t3 = openingRunLength > 2;
          if (t3 && runLength === 2) {
            t3 = parser._stack;
            C.JSArray_methods.add$1(t3, new R.TagState(t2, t1 - 2, this, H.setRuntimeTypeInfo([], [U.Node0]), delimiterRun));
            t1 = P.String;
            C.JSArray_methods.add$1(C.JSArray_methods.get$last(t3).children, new U.Element0(_s6_, state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
          } else if (t3 && runLength > 2) {
            t3 = parser._stack;
            C.JSArray_methods.add$1(t3, new R.TagState(t2, t1 - 2, this, H.setRuntimeTypeInfo([], [U.Node0]), delimiterRun));
            t1 = P.String;
            C.JSArray_methods.add$1(C.JSArray_methods.get$last(t3).children, new U.Element0(_s6_, state.children, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1)));
            parser.start = parser.pos = parser.pos - (runLength - 2);
          }
        }
      }
      return true;
    }
  };
  R.LinkSyntax.prototype = {
    onMatch$2: function(parser, match) {
      if (!this.super$TagSyntax$onMatch(parser, match))
        return false;
      return this._pendingStatesAreActive = true;
    },
    onMatchEnd$3: function(parser, match, state) {
      var t1, t2, text, t3, char, inlineLink, label, _this = this;
      if (!_this._pendingStatesAreActive)
        return false;
      t1 = parser.source;
      t2 = parser.pos;
      text = J.substring$2$s(t1, state.endPos, t2);
      ++t2;
      t3 = t1.length;
      if (t2 >= t3)
        return _this._tryAddReferenceLink$3(parser, state, text);
      char = C.JSString_methods.codeUnitAt$1(t1, t2);
      if (char === 40) {
        parser.pos = t2;
        inlineLink = _this._parseInlineLink$1(parser);
        if (inlineLink != null)
          return _this._tryAddInlineLink$3(parser, state, inlineLink);
        parser.pos = t2;
        parser.pos = t2 + -1;
        return _this._tryAddReferenceLink$3(parser, state, text);
      }
      if (char === 91) {
        parser.pos = t2;
        ++t2;
        if (t2 < t3 && C.JSString_methods.codeUnitAt$1(t1, t2) === 93) {
          parser.pos = t2;
          return _this._tryAddReferenceLink$3(parser, state, text);
        }
        label = _this._parseReferenceLinkLabel$1(parser);
        if (label != null)
          return _this._tryAddReferenceLink$3(parser, state, label);
        return false;
      }
      return _this._tryAddReferenceLink$3(parser, state, text);
    },
    _resolveReferenceLink$3: function(label, state, linkReferences) {
      var t1,
        linkReference = H.assertSubtype(linkReferences, "$isMap", [P.String, S.LinkReference], "$asMap").$index(0, label.toLowerCase());
      if (linkReference != null)
        return this._createNode$3(state, linkReference.destination, linkReference.title);
      else {
        t1 = H.stringReplaceAllUnchecked(label, "\\\\", "\\");
        t1 = H.stringReplaceAllUnchecked(t1, "\\[", "[");
        return this.linkResolver.call$1(H.stringReplaceAllUnchecked(t1, "\\]", "]"));
      }
    },
    _createNode$3: function(state, destination, title) {
      var t1 = P.String;
      t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      t1.$indexSet(0, "href", M.escapeAttribute(destination));
      if (title != null && title.length !== 0)
        t1.$indexSet(0, "title", M.escapeAttribute(title));
      return new U.Element0("a", state.children, t1);
    },
    _tryAddReferenceLink$3: function(parser, state, label) {
      var element = this._resolveReferenceLink$3(label, state, parser.document.linkReferences);
      if (element == null)
        return false;
      C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, element);
      parser.start = parser.pos;
      this._pendingStatesAreActive = false;
      return true;
    },
    _tryAddInlineLink$3: function(parser, state, link) {
      var element = this._createNode$3(state, link.destination, link.title);
      C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, element);
      parser.start = parser.pos;
      this._pendingStatesAreActive = false;
      return true;
    },
    _parseReferenceLinkLabel$1: function(parser) {
      var t4, t5, t0, char, next, label,
        t1 = ++parser.pos,
        t2 = parser.source,
        t3 = t2.length;
      if (t1 === t3)
        return;
      for (t4 = J.getInterceptor$s(t2), t5 = ""; true; t0 = t5, t5 = t1, t1 = t0) {
        char = t4.codeUnitAt$1(t2, t1);
        if (char === 92) {
          ++t1;
          parser.pos = t1;
          next = C.JSString_methods.codeUnitAt$1(t2, t1);
          t1 = next !== 92 && next !== 93 ? t5 + H.Primitives_stringFromCharCode(char) : t5;
          t1 += H.Primitives_stringFromCharCode(next);
        } else if (char === 93)
          break;
        else
          t1 = t5 + H.Primitives_stringFromCharCode(char);
        t5 = ++parser.pos;
        if (t5 === t3)
          return;
      }
      label = t5.charCodeAt(0) == 0 ? t5 : t5;
      t1 = $.$get$LinkSyntax__entirelyWhitespacePattern()._nativeRegExp;
      if (t1.test(label))
        return;
      return label;
    },
    _parseInlineLink$1: function(parser) {
      var t1, t2;
      ++parser.pos;
      this._moveThroughWhitespace$1(parser);
      t1 = parser.pos;
      t2 = parser.source;
      if (t1 === t2.length)
        return;
      if (J.codeUnitAt$1$s(t2, t1) === 60)
        return this._parseInlineBracketedLink$1(parser);
      else
        return this._parseInlineBareDestinationLink$1(parser);
    },
    _parseInlineBracketedLink$1: function(parser) {
      var t2, t3, t4, t0, char, next, destination, title,
        t1 = ++parser.pos;
      for (t2 = parser.source, t3 = J.getInterceptor$s(t2), t4 = ""; true; t0 = t4, t4 = t1, t1 = t0) {
        char = t3.codeUnitAt$1(t2, t1);
        if (char === 92) {
          ++t1;
          parser.pos = t1;
          next = C.JSString_methods.codeUnitAt$1(t2, t1);
          if (char === 32 || char === 10 || char === 13 || char === 12)
            return;
          t1 = next !== 92 && next !== 62 ? t4 + H.Primitives_stringFromCharCode(char) : t4;
          t1 += H.Primitives_stringFromCharCode(next);
        } else if (char === 32 || char === 10 || char === 13 || char === 12)
          return;
        else if (char === 62)
          break;
        else
          t1 = t4 + H.Primitives_stringFromCharCode(char);
        t4 = ++parser.pos;
        if (t4 === t2.length)
          return;
      }
      destination = t4.charCodeAt(0) == 0 ? t4 : t4;
      ++t1;
      parser.pos = t1;
      char = t3.codeUnitAt$1(t2, t1);
      if (char === 32 || char === 10 || char === 13 || char === 12) {
        title = this._parseTitle$1(parser);
        if (title == null && C.JSString_methods.codeUnitAt$1(t2, parser.pos) !== 41)
          return;
        return new R.InlineLink(destination, title);
      } else if (char === 41)
        return new R.InlineLink(destination, null);
      else
        return;
    },
    _parseInlineBareDestinationLink$1: function(parser) {
      var t1, t2, parenCount, t3, t4, char, next, destination, title;
      for (t1 = parser.source, t2 = J.getInterceptor$s(t1), parenCount = 1, t3 = ""; true;) {
        t4 = parser.pos;
        char = t2.codeUnitAt$1(t1, t4);
        switch (char) {
          case 92:
            t4 = parser.pos = t4 + 1;
            if (t4 === t1.length)
              return;
            next = C.JSString_methods.codeUnitAt$1(t1, t4);
            if (next !== 92 && next !== 40 && next !== 41)
              t3 += H.Primitives_stringFromCharCode(char);
            t3 += H.Primitives_stringFromCharCode(next);
            break;
          case 32:
          case 10:
          case 13:
          case 12:
            destination = t3.charCodeAt(0) == 0 ? t3 : t3;
            title = this._parseTitle$1(parser);
            if (title == null) {
              t4 = parser.pos;
              t4 = t4 === t1.length || C.JSString_methods.codeUnitAt$1(t1, t4) !== 41;
            } else
              t4 = false;
            if (t4)
              return;
            --parenCount;
            if (parenCount === 0)
              return new R.InlineLink(destination, title);
            break;
          case 40:
            ++parenCount;
            t3 += H.Primitives_stringFromCharCode(char);
            break;
          case 41:
            --parenCount;
            if (parenCount === 0)
              return new R.InlineLink(t3.charCodeAt(0) == 0 ? t3 : t3, null);
            t3 += H.Primitives_stringFromCharCode(char);
            break;
          default:
            t3 += H.Primitives_stringFromCharCode(char);
        }
        if (++parser.pos === t1.length)
          return;
      }
    },
    _moveThroughWhitespace$1: function(parser) {
      var t1, t2, t3, t4, char;
      for (t1 = parser.source, t2 = t1.length, t3 = J.getInterceptor$s(t1); t4 = parser.pos, t4 !== t2;) {
        char = t3.codeUnitAt$1(t1, t4);
        if (char !== 32 && char !== 9 && char !== 10 && char !== 11 && char !== 13 && char !== 12)
          return;
        parser.pos = t4 + 1;
      }
    },
    _parseTitle$1: function(parser) {
      var t1, t2, t3, delimiter, closeDelimiter, t4, t0, char, next;
      this._moveThroughWhitespace$1(parser);
      t1 = parser.pos;
      t2 = parser.source;
      t3 = t2.length;
      if (t1 === t3)
        return;
      delimiter = J.codeUnitAt$1$s(t2, t1);
      if (delimiter !== 39 && delimiter !== 34 && delimiter !== 40)
        return;
      closeDelimiter = delimiter === 40 ? 41 : delimiter;
      t1 = parser.pos = t1 + 1;
      for (t4 = ""; true; t0 = t4, t4 = t1, t1 = t0) {
        char = C.JSString_methods.codeUnitAt$1(t2, t1);
        if (char === 92) {
          ++t1;
          parser.pos = t1;
          next = C.JSString_methods.codeUnitAt$1(t2, t1);
          t1 = next !== 92 && next !== closeDelimiter ? t4 + H.Primitives_stringFromCharCode(char) : t4;
          t1 += H.Primitives_stringFromCharCode(next);
        } else if (char === closeDelimiter)
          break;
        else
          t1 = t4 + H.Primitives_stringFromCharCode(char);
        t4 = ++parser.pos;
        if (t4 === t3)
          return;
      }
      ++t1;
      parser.pos = t1;
      if (t1 === t3)
        return;
      this._moveThroughWhitespace$1(parser);
      t1 = parser.pos;
      if (t1 === t3)
        return;
      if (C.JSString_methods.codeUnitAt$1(t2, t1) !== 41)
        return;
      return t4.charCodeAt(0) == 0 ? t4 : t4;
    }
  };
  R.LinkSyntax_closure.prototype = {
    call$2: function(_, __) {
      H.stringTypeCheck(_);
      H.stringTypeCheck(__);
      return;
    },
    call$1: function(_) {
      return this.call$2(_, null);
    },
    "call*": "call$2",
    $defaultValues: function() {
      return [null];
    },
    $signature: 114
  };
  R.ImageSyntax.prototype = {
    _createNode$3: function(state, destination, title) {
      var t2,
        t1 = P.String;
      t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      t1.$indexSet(0, "src", C.HtmlEscape_uMl.convert$1(destination));
      t2 = state.get$textContent();
      t1.$indexSet(0, "alt", t2);
      if (title != null && title.length !== 0)
        t1.$indexSet(0, "title", M.escapeAttribute(H.stringReplaceAllUnchecked(title, "&", "&amp;")));
      return new U.Element0("img", null, t1);
    },
    _tryAddReferenceLink$3: function(parser, state, label) {
      var element = this._resolveReferenceLink$3(label, state, parser.document.linkReferences);
      if (element == null)
        return false;
      C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, element);
      parser.start = parser.pos;
      return true;
    }
  };
  R.CodeSyntax.prototype = {
    tryMatch$1: function(parser) {
      var match, t2,
        t1 = parser.pos;
      if (t1 > 0 && J.codeUnitAt$1$s(parser.source, t1 - 1) === 96)
        return false;
      match = this.pattern.matchAsPrefix$2(0, parser.source, t1);
      if (match == null)
        return false;
      parser.writeText$0(0);
      this.onMatch$2(parser, match);
      t1 = match._match;
      t2 = t1.length;
      if (0 >= t2)
        return H.ioore(t1, 0);
      parser.consume$1(t1[0].length);
      return true;
    },
    onMatch$2: function(parser, match) {
      var code, t2,
        t1 = match._match;
      if (2 >= t1.length)
        return H.ioore(t1, 2);
      code = C.HtmlEscape_uMl.convert$1(J.trim$0$s(t1[2]));
      t1 = H.setRuntimeTypeInfo([new U.Text0(code)], [U.Node0]);
      t2 = P.String;
      C.JSArray_methods.add$1(C.JSArray_methods.get$last(parser._stack).children, new U.Element0("code", t1, P.LinkedHashMap_LinkedHashMap$_empty(t2, t2)));
      return true;
    }
  };
  R.TagState.prototype = {
    tryMatch$1: function(parser) {
      var runLength, closingMatchStart, closingDelimiterRun, oneRunOpensAndCloses, _this = this,
        t1 = _this.syntax,
        endMatch = t1.endPattern.matchAsPrefix$2(0, parser.source, parser.pos);
      if (endMatch == null)
        return false;
      if (!t1.requiresDelimiterRun) {
        _this.close$2(0, parser, endMatch);
        return true;
      }
      t1 = endMatch._match;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      runLength = t1[0].length;
      closingMatchStart = parser.pos;
      closingDelimiterRun = R._DelimiterRun_tryParse(parser, closingMatchStart, closingMatchStart + runLength - 1);
      if (closingDelimiterRun != null && closingDelimiterRun.get$canClose()) {
        t1 = _this.openingDelimiterRun;
        if (!(t1.get$canOpen() && t1.get$canClose()))
          oneRunOpensAndCloses = closingDelimiterRun.get$canOpen() && closingDelimiterRun.get$canClose();
        else
          oneRunOpensAndCloses = true;
        if (oneRunOpensAndCloses && C.JSInt_methods.$mod(_this.endPos - _this.startPos + closingDelimiterRun.length, 3) === 0)
          return false;
        _this.close$2(0, parser, endMatch);
        return true;
      } else
        return false;
    },
    close$2: function(_, parser, endMatch) {
      var t3, _i, unmatched, endMatchIndex, _this = this,
        t1 = parser._stack,
        t2 = C.JSArray_methods.indexOf$1(t1, _this) + 1,
        unmatchedTags = C.JSArray_methods.sublist$1(t1, t2);
      C.JSArray_methods.removeRange$2(t1, t2, t1.length);
      for (t2 = unmatchedTags.length, t3 = _this.children, _i = 0; _i < unmatchedTags.length; unmatchedTags.length === t2 || (0, H.throwConcurrentModificationError)(unmatchedTags), ++_i) {
        unmatched = unmatchedTags[_i];
        parser.writeTextRange$2(unmatched.startPos, unmatched.endPos);
        C.JSArray_methods.addAll$1(t3, unmatched.children);
      }
      parser.writeText$0(0);
      if (0 >= t1.length)
        return H.ioore(t1, -1);
      t1.pop();
      if (t1.length === 0)
        return t3;
      endMatchIndex = parser.pos;
      if (_this.syntax.onMatchEnd$3(parser, endMatch, _this)) {
        t1 = endMatch._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        parser.consume$1(t1[0].length);
      } else {
        parser.writeTextRange$2(_this.startPos, _this.endPos);
        C.JSArray_methods.addAll$1(C.JSArray_methods.get$last(t1).children, t3);
        parser.pos = endMatchIndex;
        t1 = endMatch._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        parser.pos = endMatchIndex + t1[0].length;
      }
      return;
    },
    get$textContent: function() {
      var t1 = this.children,
        t2 = P.String,
        t3 = H.getTypeArgumentByIndex(t1, 0);
      return new H.MappedListIterable(t1, H.functionTypeCheck(new R.TagState_textContent_closure(), {func: 1, ret: t2, args: [t3]}), [t3, t2]).join$1(0, "");
    }
  };
  R.TagState_textContent_closure.prototype = {
    call$1: function(child) {
      return H.interceptedTypeCheck(child, "$isNode0").get$textContent();
    },
    $signature: 46
  };
  R.InlineLink.prototype = {};
  B.ChangeNotifier.prototype = {
    deliverChanges$0: function() {
      var t1, t2, changes, _this = this;
      if (_this._scheduled && _this.get$hasObservers()) {
        t1 = _this._queue;
        t2 = _this.$ti;
        if (t1 == null)
          changes = new Y.ChangeRecords(true, C.List_empty2, C.List_empty2, t2);
        else {
          t1 = G.freezeInDevMode(t1, H.getTypeArgumentByIndex(_this, 0));
          changes = new Y.ChangeRecords(false, t1, t1, t2);
        }
        _this.set$_queue(null);
        _this._scheduled = false;
        C.JSNull_methods.add$1(null, changes);
        return true;
      }
      return false;
    },
    get$hasObservers: function() {
      return false;
    },
    notifyChange$1: function(change) {
      var t1, _this = this;
      H.assertSubtypeOfRuntimeType(change, H.getTypeArgumentByIndex(_this, 0));
      if (!_this.get$hasObservers())
        return;
      t1 = _this._queue;
      if (t1 == null) {
        t1 = H.setRuntimeTypeInfo([], _this.$ti);
        _this.set$_queue(t1);
      }
      C.JSArray_methods.add$1(t1, change);
      if (!_this._scheduled) {
        P.scheduleMicrotask(_this.get$deliverChanges());
        _this._scheduled = true;
      }
    },
    set$_queue: function(_queue) {
      this._queue = H.assertSubtype(_queue, "$isList", this.$ti, "$asList");
    }
  };
  E.Observable.prototype = {
    notifyPropertyChange$1$3: function(field, oldValue, newValue, $T) {
      var t1, t2;
      H.assertSubtypeOfRuntimeType(oldValue, $T);
      H.assertSubtypeOfRuntimeType(newValue, $T);
      t1 = this._delegate;
      if (t1.get$hasObservers() && oldValue !== newValue)
        if (this._isNotGeneric) {
          t2 = H.getRuntimeTypeArgument(this, "Observable", 0);
          t1.notifyChange$1(H.assertSubtypeOfRuntimeType(H.subtypeOfRuntimeTypeCast(new Y.PropertyChangeRecord(field, oldValue, newValue, [$T]), t2), t2));
        }
      return newValue;
    }
  };
  Y.ObservableMap.prototype = {
    get$keys: function(_) {
      var t1 = this._observable_map$_map;
      return t1.get$keys(t1);
    },
    get$length: function(_) {
      var t1 = this._observable_map$_map;
      return t1.get$length(t1);
    },
    $index: function(_, key) {
      return this._observable_map$_map.$index(0, key);
    },
    $indexSet: function(_, key, value) {
      var t1, t2, len, oldValue, _this = this;
      H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(_this, 0));
      H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(_this, 1));
      t1 = _this._delegate;
      if (!t1.get$hasObservers()) {
        _this._observable_map$_map.$indexSet(0, key, value);
        return;
      }
      t2 = _this._observable_map$_map;
      len = t2.get$length(t2);
      oldValue = t2.$index(0, key);
      t2.$indexSet(0, key, value);
      if (len !== t2.get$length(t2)) {
        _this.notifyPropertyChange$1$3(C.Symbol_length, len, t2.get$length(t2), P.int);
        t1.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.MapChangeRecord(key, null, value, true, false, _this.$ti), H.getRuntimeTypeArgument(_this, "Observable", 0)));
        _this._notifyKeysValuesChanged$0();
      } else if (!J.$eq$(oldValue, value)) {
        t2 = H.getRuntimeTypeArgument(_this, "Observable", 0);
        t1.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.MapChangeRecord(key, oldValue, value, false, false, _this.$ti), t2));
        t1.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.PropertyChangeRecord(C.Symbol_values, null, null, [P.Null]), t2));
      }
    },
    addAll$1: function(_, other) {
      H.assertSubtype(other, "$isMap", this.$ti, "$asMap").forEach$1(0, new Y.ObservableMap_addAll_closure(this));
    },
    forEach$1: function(_, f) {
      return this._observable_map$_map.forEach$1(0, H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]}));
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    _notifyKeysValuesChanged$0: function() {
      var _null = null,
        t1 = [P.Null],
        t2 = H.getRuntimeTypeArgument(this, "Observable", 0),
        t3 = this._delegate;
      t3.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.PropertyChangeRecord(C.Symbol_keys, _null, _null, t1), t2));
      t3.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.PropertyChangeRecord(C.Symbol_values, _null, _null, t1), t2));
    },
    $isMap: 1,
    $asObservable: function($K, $V) {
      return [Y.ChangeRecord];
    }
  };
  Y.ObservableMap_addAll_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this.$this;
      t1.$indexSet(0, H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(t1, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(t1, 1)));
    },
    $signature: function() {
      var t1 = this.$this;
      return {func: 1, ret: P.Null, args: [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]};
    }
  };
  Y.ChangeRecord.prototype = {};
  Y.ChangeRecords.prototype = {
    get$hashCode: function(_) {
      return X._finish(X._combine(X._combine(0, J.get$hashCode$(this._records$_delegate)), C.JSBool_methods.get$hashCode(this._isAny)));
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        if (!!J.getInterceptor$(other).$isChangeRecords)
          if (new H.TypeImpl(H.getRti(_this)).$eq(0, new H.TypeImpl(H.getRti(other)))) {
            t1 = _this._isAny;
            if (!(t1 && other._isAny))
              t1 = !t1 && !other._isAny && C.C_ListEquality.equals$2(_this._records$_delegate, other._records$_delegate);
            else
              t1 = true;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    toString$0: function(_) {
      return this._isAny ? "ChangeRecords.any" : "ChangeRecords(" + H.S(this._records$_delegate) + ")";
    }
  };
  Y.MapChangeRecord.prototype = {
    $eq: function(_, o) {
      var _this = this;
      if (o == null)
        return false;
      if (H.checkSubtype(o, "$isMapChangeRecord", _this.$ti, null))
        return J.$eq$(_this.key, o.key) && J.$eq$(_this.oldValue, o.oldValue) && J.$eq$(_this.newValue, o.newValue) && _this.isInsert === o.isInsert && _this.isRemove === o.isRemove;
      return false;
    },
    get$hashCode: function(_) {
      var _this = this;
      return X.hashObjects([_this.key, _this.oldValue, _this.newValue, _this.isInsert, _this.isRemove]);
    },
    toString$0: function(_) {
      var kind, _this = this;
      if (_this.isInsert)
        kind = "insert";
      else
        kind = _this.isRemove ? "remove" : "set";
      return "#<MapChangeRecord " + kind + " " + H.S(_this.key) + " from " + H.S(_this.oldValue) + " to " + H.S(_this.newValue);
    },
    $isChangeRecord: 1
  };
  Y.PropertyChangeRecord.prototype = {
    toString$0: function(_) {
      return "#<" + C.Type_PropertyChangeRecord_8EM.toString$0(0) + " " + this.name.toString$0(0) + " from " + H.S(this.oldValue) + " to: " + H.S(this.newValue);
    },
    $isChangeRecord: 1
  };
  X.hashObjects_closure.prototype = {
    call$2: function(h, i) {
      return X._combine(H.intTypeCheck(h), J.get$hashCode$(i));
    },
    $signature: 115
  };
  V.Clock.prototype = {};
  V.SkawaCkeditorComponent.prototype = {
    ngAfterViewInit$0: function() {
      var t2, t3, t4, _this = this,
        t1 = _this._ckeditor;
      if (t1 == null) {
        t1 = _this.editorName;
        t2 = _this.extraPlugins;
        t3 = _this.configUrl;
        t4 = new V._CKEditor();
        t4._maybeAddExtraPlugins$1(t2);
        t2 = P.String;
        t2 = P.LinkedHashMap_LinkedHashMap$_literal(["customConfig", t3], t2, t2);
        t2 = P._convertDataTree(t2);
        H.interceptedTypeCheck(self.CKEDITOR.replace(t1, t2), "$isCKEditorInstance");
        _this._ckeditor = t4;
        t1 = t4;
      }
      return t1;
    },
    set$extraPlugins: function(extraPlugins) {
      this.extraPlugins = H.assertSubtype(extraPlugins, "$isList", [V.ExtraPlugin], "$asList");
    }
  };
  V.ExtraPlugin.prototype = {};
  V._CKEditor.prototype = {
    _maybeAddExtraPlugins$1: function(extraPlugins) {
      var t1, _i, extraPlugin, t2, t3, t4;
      H.assertSubtype(extraPlugins, "$isIterable", [V.ExtraPlugin], "$asIterable");
      if (extraPlugins == null)
        return;
      for (t1 = extraPlugins.length, _i = 0; _i < extraPlugins.length; extraPlugins.length === t1 || (0, H.throwConcurrentModificationError)(extraPlugins), ++_i) {
        extraPlugin = extraPlugins[_i];
        t2 = extraPlugin.name;
        t3 = extraPlugin.path;
        t4 = extraPlugin.entrypoint;
        self.CKEDITOR.plugins.addExternal(t2, t3, t4);
      }
    }
  };
  A.ViewSkawaCkeditorComponent0.prototype = {
    build$0: function() {
      var _this = this,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl);
      _this._ckeditor_template$_el_0 = H.interceptedTypeCheck(T.appendElement(document, parentRenderNode, "textarea"), "$isTextAreaElement");
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var t1, currVal_1, currVal_2, _this = this,
        _ctx = _this.ctx,
        currVal_0 = _ctx.editorName;
      if (currVal_0 == null)
        currVal_0 = "";
      t1 = _this._ckeditor_template$_expr_0;
      if (t1 !== currVal_0) {
        _this._ckeditor_template$_el_0.name = currVal_0;
        _this._ckeditor_template$_expr_0 = currVal_0;
      }
      currVal_1 = _ctx.editorName;
      if (currVal_1 == null)
        currVal_1 = "";
      t1 = _this._ckeditor_template$_expr_1;
      if (t1 !== currVal_1) {
        _this._ckeditor_template$_el_0.id = currVal_1;
        _this._ckeditor_template$_expr_1 = currVal_1;
      }
      currVal_2 = _ctx.content;
      if (currVal_2 == null)
        currVal_2 = "";
      t1 = _this._ckeditor_template$_expr_2;
      if (t1 !== currVal_2) {
        _this._ckeditor_template$_el_0.value = currVal_2;
        _this._ckeditor_template$_expr_2 = currVal_2;
      }
    },
    $asAppView: function() {
      return [V.SkawaCkeditorComponent];
    }
  };
  U.CKEditor.prototype = {};
  U.CKEditorInstance.prototype = {};
  Y.LanguageDirectionDirective.prototype = {
    setLanguageDirection$1: function(value) {
      var t1 = T.Bidi_estimateDirectionOfText(value == null ? "" : value).spanText;
      this.textDirection = t1;
      this.textAlign = t1 === "ltr" ? null : "right";
    }
  };
  X.LanguageDirectionDirectiveNgCd.prototype = {
    detectHostChanges$2: function(view, el) {
      var currVal_1, _this = this,
        t1 = _this.instance,
        currVal_0 = t1.textDirection,
        t2 = _this._language_direction_directive_template$_expr_0;
      if (t2 !== currVal_0) {
        t2 = el.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, (t2 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t2, "direction"), currVal_0, null);
        _this._language_direction_directive_template$_expr_0 = currVal_0;
      }
      currVal_1 = t1.textAlign;
      t1 = _this._language_direction_directive_template$_expr_1;
      if (t1 != currVal_1) {
        t1 = el.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "text-align"), currVal_1, null);
        _this._language_direction_directive_template$_expr_1 = currVal_1;
      }
    }
  };
  O.SkawaInfobarComponent.prototype = {
    get$icon: function(_) {
      var t1 = this._icon;
      if (t1 != null)
        return t1;
      if (this.url != null)
        return "info";
      return;
    },
    navigate$0: function(_) {
      var t1 = this.url;
      if (t1 != null)
        C.Window_methods.open$2(window, t1, "_blank");
    }
  };
  G.ViewSkawaInfobarComponent0.prototype = {
    build$0: function() {
      var _el_1, doc, _el_3, subscription_0, _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = U.ViewMaterialButtonComponent0$(_this, 0);
      _this._infobar_template$_compView_0 = t1;
      t1 = t1.rootEl;
      _this._infobar_template$_el_0 = t1;
      parentRenderNode.appendChild(t1);
      T.setAttribute(_this._infobar_template$_el_0, "icon", "");
      _this.addShimC$1(_this._infobar_template$_el_0);
      t1 = F.AcxDarkTheme$(H.boolTypeCheck(_this.parentView.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, _this.viewData.parentIndex)));
      _this._infobar_template$_AcxDarkTheme_0_5 = t1;
      _this._infobar_template$_MaterialButtonComponent_0_6 = B.MaterialButtonComponent$(_this._infobar_template$_el_0, t1, _this._infobar_template$_compView_0, null);
      t1 = M.ViewMaterialIconComponent0$(_this, 1);
      _this._infobar_template$_compView_1 = t1;
      _el_1 = t1.rootEl;
      T.setAttribute(_el_1, "size", "medium");
      _this.addShimC$1(_el_1);
      t1 = new Y.MaterialIconComponent(_el_1);
      _this._MaterialIconComponent_1_5 = t1;
      _this._infobar_template$_compView_1.create0$1(t1);
      _this._infobar_template$_compView_0.create$2(0, _this._infobar_template$_MaterialButtonComponent_0_6, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_1], [W.HtmlElement])], [P.Object]));
      doc = document;
      t1 = T.appendDiv(doc, parentRenderNode);
      _this._infobar_template$_el_2 = t1;
      _this.updateChildClass$2(t1, "info-text");
      _this.addShimC$1(_this._infobar_template$_el_2);
      _el_3 = T.appendSpan(doc, _this._infobar_template$_el_2);
      _this.updateChildClass$2(_el_3, "ws-truncate-fix");
      _this.addShimE$1(_el_3);
      _this.project$2(_el_3, 0);
      t1 = _this._infobar_template$_MaterialButtonComponent_0_6._trigger;
      subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(_this.eventHandler0$1$1(_ctx.get$navigate(_ctx), W.UIEvent));
      _ctx.primaryActionButton = _this._infobar_template$_MaterialButtonComponent_0_6;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([subscription_0], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if (nodeIndex <= 1) {
        if (token === C.Type_AcxDarkTheme_Tng)
          return this._infobar_template$_AcxDarkTheme_0_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          return this._infobar_template$_MaterialButtonComponent_0_6;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var changed, currVal_0, currVal_1, currVal_2, currVal_4, _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData._cdState,
        currVal_3 = _ctx.get$icon(_ctx),
        t2 = _this._infobar_template$_expr_3;
      if (t2 != currVal_3) {
        _this._MaterialIconComponent_1_5.set$icon(0, currVal_3);
        _this._infobar_template$_expr_3 = currVal_3;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._infobar_template$_compView_1.viewData.set$cdMode(1);
      currVal_0 = _ctx.url;
      t2 = _this._infobar_template$_expr_0;
      if (t2 != currVal_0) {
        _this._infobar_template$_el_0.title = currVal_0;
        _this._infobar_template$_expr_0 = currVal_0;
      }
      currVal_1 = _ctx.get$icon(_ctx) == null;
      t2 = _this._infobar_template$_expr_1;
      if (t2 !== currVal_1) {
        T.updateClassBindingNonHtml(_this._infobar_template$_el_0, "hide-without-icon", currVal_1);
        _this._infobar_template$_expr_1 = currVal_1;
      }
      currVal_2 = _ctx.url == null;
      t2 = _this._infobar_template$_expr_2;
      if (t2 !== currVal_2) {
        T.updateClassBindingNonHtml(_this._infobar_template$_el_0, "without-url", currVal_2);
        _this._infobar_template$_expr_2 = currVal_2;
      }
      _this._infobar_template$_compView_0.detectHostChanges$1(t1 === 0);
      currVal_4 = _ctx.get$icon(_ctx) == null;
      t1 = _this._infobar_template$_expr_4;
      if (t1 !== currVal_4) {
        T.updateClassBinding(_this._infobar_template$_el_2, "without-icon", currVal_4);
        _this._infobar_template$_expr_4 = currVal_4;
      }
      _this._infobar_template$_compView_0.detectChanges$0();
      _this._infobar_template$_compView_1.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._infobar_template$_compView_0.destroyInternalState$0();
      this._infobar_template$_compView_1.destroyInternalState$0();
    },
    $asAppView: function() {
      return [O.SkawaInfobarComponent];
    }
  };
  Q.EditorRenderTarget.prototype = {
    updateRender$2$classes: function(newTarget, classes) {
      var t1, t2, t3, _this = this;
      H.assertSubtype(classes, "$isList", [P.String], "$asList");
      _this._onRenderController.add$1(0, newTarget);
      if (newTarget == null)
        return;
      t1 = _this.htmlElement;
      (t1 && C.DivElement_methods)._clearChildren$0(t1);
      _this.renderer.toString;
      t2 = X.markdownToHtml(newTarget);
      t3 = document.body;
      t1.appendChild((t3 && C.BodyElement_methods).createFragment$3$treeSanitizer$validator(t3, t2, null, null));
      _this._updateElementChildren$2(t1, classes);
    },
    _updateElementChildren$2: function(element, classes) {
      var t1;
      H.assertSubtype(classes, "$isList", [P.String], "$asList");
      if (classes != null)
        if (J.get$isNotEmpty$asx(classes)) {
          t1 = J.get$children$x(element);
          t1 = !t1.get$isEmpty(t1);
        } else
          t1 = false;
      else
        t1 = false;
      if (t1) {
        t1 = J.get$children$x(element);
        t1.forEach$1(t1, new Q.EditorRenderTarget__updateElementChildren_closure(this, classes));
      }
    }
  };
  Q.EditorRenderTarget__updateElementChildren_closure.prototype = {
    call$1: function(child) {
      var t1;
      H.interceptedTypeCheck(child, "$isElement");
      t1 = this.classes;
      J.get$classes$x(child).addAll$1(0, t1);
      this.$this._updateElementChildren$2(child, t1);
    },
    $signature: 116
  };
  Q.EditorRenderer.prototype = {};
  Q.MarkdownRenderer.prototype = {$isEditorRenderer: 1};
  L.SkawaMarkdownRendererComponent.prototype = {
    set$source: function(_, source) {
      this._markdown_renderer$_source = source;
      this.editorRenderTarget.updateRender$2$classes(source, this._emulatedCssClass);
    },
    ngOnInit$0: function() {
      var t2, t3, classes, _this = this,
        t1 = _this.editorRenderTarget.htmlElement;
      t1.toString;
      t2 = H.functionTypeCheck(new L.SkawaMarkdownRendererComponent_ngOnInit_closure(), {func: 1, ret: P.bool, args: [P.String]});
      t1 = new W._ElementCssClassSet(t1).readClasses$0();
      t3 = H.getTypeArgumentByIndex(t1, 0);
      classes = new H.WhereIterable(t1, H.functionTypeCheck(t2, {func: 1, ret: P.bool, args: [t3]}), [t3]);
      _this.set$_emulatedCssClass(!classes.get$isEmpty(classes) ? P.List_List$from(classes, true, t3) : H.setRuntimeTypeInfo([], [P.String]));
      _this.editorRenderTarget.updateRender$2$classes(_this._markdown_renderer$_source, _this._emulatedCssClass);
    },
    set$_emulatedCssClass: function(_emulatedCssClass) {
      this._emulatedCssClass = H.assertSubtype(_emulatedCssClass, "$isList", [P.String], "$asList");
    }
  };
  L.SkawaMarkdownRendererComponent_ngOnInit_closure.prototype = {
    call$1: function(cssClass) {
      return !J.contains$1$asx(H.stringTypeCheck(cssClass), "markdown-container");
    },
    $signature: 12
  };
  A.ViewSkawaMarkdownRendererComponent0.prototype = {
    build$0: function() {
      var t2, t3, subscription_0, _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = T.appendDiv(document, parentRenderNode);
      _this._markdown_renderer_template$_el_0 = t1;
      T.setAttribute(t1, "editorRenderTarget", "");
      T.setAttribute(_this._markdown_renderer_template$_el_0, "skawaLangugageDirection", "");
      _this.addShimC$1(_this._markdown_renderer_template$_el_0);
      t1 = _this._markdown_renderer_template$_el_0;
      t2 = H.interceptedTypeCheck(_this.parentView.injectorGet$2(C.Type_EditorRenderer_wbs, _this.viewData.parentIndex), "$isEditorRenderer");
      t3 = P.String;
      t1 = new Q.EditorRenderTarget(t1, t2, new P._AsyncBroadcastStreamController(null, null, [t3]));
      _this._EditorRenderTarget_0_5 = t1;
      _this._LanguageDirectionDirective_0_6 = new X.LanguageDirectionDirectiveNgCd(new Y.LanguageDirectionDirective(_this._markdown_renderer_template$_el_0));
      t1 = t1._onRenderController;
      subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(_this.eventHandler1$2$1(_this.get$_handle_render_0_0(), t3, t3));
      _ctx.editorRenderTarget = _this._EditorRenderTarget_0_5;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([subscription_0], [[P.StreamSubscription, -1]]));
    },
    detectChangesInternal$0: function() {
      this._LanguageDirectionDirective_0_6.detectHostChanges$2(this, this._markdown_renderer_template$_el_0);
    },
    destroyInternal$0: function() {
      this._EditorRenderTarget_0_5._onRenderController.close$0(0);
    },
    _handle_render_0_0$1: function($$event) {
      this._LanguageDirectionDirective_0_6.instance.setLanguageDirection$1(H.stringTypeCheck($$event));
    },
    $asAppView: function() {
      return [L.SkawaMarkdownRendererComponent];
    }
  };
  X.SkawaRawMarkdownRendererComponent.prototype = {};
  T.ViewSkawaRawMarkdownRendererComponent0.prototype = {
    build$0: function() {
      var t2, t3, subscription_0, _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = T.appendDiv(document, parentRenderNode);
      _this._raw_markdown_renderer_template$_el_0 = t1;
      T.setAttribute(t1, "editorRenderTarget", "");
      T.setAttribute(_this._raw_markdown_renderer_template$_el_0, "skawaLangugageDirection", "");
      _this.addShimC$1(_this._raw_markdown_renderer_template$_el_0);
      t1 = _this._raw_markdown_renderer_template$_el_0;
      t2 = H.interceptedTypeCheck(_this.parentView.injectorGet$2(C.Type_EditorRenderer_wbs, _this.viewData.parentIndex), "$isEditorRenderer");
      t3 = P.String;
      t1 = new Q.EditorRenderTarget(t1, t2, new P._AsyncBroadcastStreamController(null, null, [t3]));
      _this._raw_markdown_renderer_template$_EditorRenderTarget_0_5 = t1;
      _this._raw_markdown_renderer_template$_LanguageDirectionDirective_0_6 = new X.LanguageDirectionDirectiveNgCd(new Y.LanguageDirectionDirective(_this._raw_markdown_renderer_template$_el_0));
      t1 = t1._onRenderController;
      subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(_this.eventHandler1$2$1(_this.get$_raw_markdown_renderer_template$_handle_render_0_0(), t3, t3));
      _ctx.editorRenderTarget = _this._raw_markdown_renderer_template$_EditorRenderTarget_0_5;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([subscription_0], [[P.StreamSubscription, -1]]));
    },
    detectChangesInternal$0: function() {
      this._raw_markdown_renderer_template$_LanguageDirectionDirective_0_6.detectHostChanges$2(this, this._raw_markdown_renderer_template$_el_0);
    },
    destroyInternal$0: function() {
      this._raw_markdown_renderer_template$_EditorRenderTarget_0_5._onRenderController.close$0(0);
    },
    _raw_markdown_renderer_template$_handle_render_0_0$1: function($$event) {
      this._raw_markdown_renderer_template$_LanguageDirectionDirective_0_6.instance.setLanguageDirection$1(H.stringTypeCheck($$event));
    },
    $asAppView: function() {
      return [X.SkawaRawMarkdownRendererComponent];
    }
  };
  Z.SkawaNavItemComponent.prototype = {
    focusedStateChanged$0: function() {
      this._changeDetector.markPathToRootAsCheckOnce$0();
      return;
    },
    onMouseEnter$0: function(_) {
      return this.hovering = true;
    },
    onMouseOut$0: function(_) {
      return this.hovering = false;
    }
  };
  Z._SkawaNavItemComponent_MaterialButtonBase_TextOnlyMixin.prototype = {};
  Y.ViewSkawaNavItemComponent0.prototype = {
    build$0: function() {
      var _el_0, t2, t3, _el_1, t4, _this = this,
        _s9_ = "mousedown",
        _ctx = _this.ctx,
        _rootEl = _this.rootEl,
        parentRenderNode = _this.initViewRoot$1(_rootEl),
        t1 = K.ViewSkawaSidebarItemComponent0$(_this, 0);
      _this._nav_item_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      _this.updateChildClassNonHtml$2(_el_0, "content");
      _this.addShimC$1(_el_0);
      _this._SkawaSidebarItemComponent_0_5 = new E.SkawaSidebarItemComponent(null);
      _this._NgClass_0_6 = new Y.NgClass(_el_0, H.setRuntimeTypeInfo([], [P.String]));
      t1 = _this._nav_item_template$_compView_0;
      t2 = _this._SkawaSidebarItemComponent_0_5;
      t3 = _this.viewData.projectedNodes;
      if (0 >= t3.length)
        return H.ioore(t3, 0);
      t1.create$2(0, t2, H.setRuntimeTypeInfo([t3[0]], [P.Object]));
      t3 = L.ViewMaterialRippleComponent0$(_this, 1);
      _this._nav_item_template$_compView_1 = t3;
      _el_1 = t3.rootEl;
      parentRenderNode.appendChild(_el_1);
      _this.addShimC$1(_el_1);
      t3 = B.MaterialRippleComponent$(_el_1);
      _this._MaterialRippleComponent_1_5 = t3;
      _this._nav_item_template$_compView_1.create0$1(t3);
      _this.set$_map_0(A.pureProxy2(new Y.ViewSkawaNavItemComponent0_build_closure(), [P.Map, P.String,,], null, null));
      t3 = _ctx.get$onMouseDown(_ctx);
      t2 = W.Event;
      t1 = J.getInterceptor$x(_el_1);
      t1.addEventListener$2(_el_1, _s9_, _this.eventHandler1$2$1(t3, t2, t2));
      t4 = _ctx.get$onMouseUp(_ctx);
      t1.addEventListener$2(_el_1, "mouseup", _this.eventHandler1$2$1(t4, t2, t2));
      _this.init0$0();
      t1 = J.getInterceptor$x(_rootEl);
      t1.addEventListener$2(_rootEl, "click", _this.eventHandler1$2$1(_ctx.get$handleClick(), t2, W.MouseEvent));
      t1.addEventListener$2(_rootEl, "keypress", _this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t2, W.KeyboardEvent));
      t1.addEventListener$2(_rootEl, _s9_, _this.eventHandler1$2$1(t3, t2, t2));
      t1.addEventListener$2(_rootEl, "mouseup", _this.eventHandler1$2$1(t4, t2, t2));
      t4 = W.UIEvent;
      t1.addEventListener$2(_rootEl, "focus", _this.eventHandler1$2$1(_ctx.get$onFocus(_ctx), t2, t4));
      t1.addEventListener$2(_rootEl, "blur", _this.eventHandler1$2$1(_ctx.get$onBlur(_ctx), t2, t4));
      t1.addEventListener$2(_rootEl, "mouseenter", _this.eventHandler0$1$1(_ctx.get$onMouseEnter(_ctx), t2));
      t1.addEventListener$2(_rootEl, "mouseout", _this.eventHandler0$1$1(_ctx.get$onMouseOut(_ctx), t2));
    },
    detectChangesInternal$0: function() {
      var changed, currVal_1, t2, currVal_3, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0,
        currVal_0 = _ctx.TextOnlyMixin_textOnly,
        t1 = _this._nav_item_template$_expr_0;
      if (t1 != currVal_0) {
        _this._nav_item_template$_expr_0 = _this._SkawaSidebarItemComponent_0_5.TextOnlyMixin_textOnly = currVal_0;
        changed = true;
      } else
        changed = false;
      currVal_1 = _ctx.icon;
      t1 = _this._nav_item_template$_expr_1;
      if (t1 != currVal_1) {
        _this._nav_item_template$_expr_1 = _this._SkawaSidebarItemComponent_0_5.icon = currVal_1;
        changed = true;
      }
      if (changed)
        _this._nav_item_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck)
        _this._NgClass_0_6.set$initialClasses("content");
      t1 = _ctx.hovering;
      t2 = _ctx.icon;
      currVal_3 = _this._map_0.call$2(t1, t2 == null);
      t1 = _this._expr_3;
      if (t1 == null ? currVal_3 != null : t1 !== currVal_3) {
        _this._NgClass_0_6.set$rawClass(currVal_3);
        _this._expr_3 = currVal_3;
      }
      _this._NgClass_0_6.ngDoCheck$0();
      _this._nav_item_template$_compView_0.detectHostChanges$1(firstCheck);
      _this._nav_item_template$_compView_0.detectChanges$0();
      _this._nav_item_template$_compView_1.detectChanges$0();
    },
    destroyInternal$0: function() {
      var t1, _this = this;
      _this._nav_item_template$_compView_0.destroyInternalState$0();
      _this._nav_item_template$_compView_1.destroyInternalState$0();
      t1 = _this._NgClass_0_6;
      t1._applyClasses$2(t1._rawClass, true);
      t1._applyInitialClasses$1(false);
      _this._MaterialRippleComponent_1_5.ngOnDestroy$0();
    },
    detectHostChanges$1: function(firstCheck) {
      var currVal_5, currVal_6, currVal_7, currVal_8, _this = this,
        _ctx = _this.ctx,
        currVal_4 = _ctx.get$tabIndex(_ctx),
        t1 = _this._expr_4;
      if (t1 != currVal_4) {
        T.updateAttribute(_this.rootEl, "tabindex", currVal_4);
        _this._expr_4 = currVal_4;
      }
      currVal_5 = _ctx.role;
      t1 = _this._expr_5;
      if (t1 != currVal_5) {
        T.updateAttribute(_this.rootEl, "role", currVal_5);
        _this._expr_5 = currVal_5;
      }
      currVal_6 = "" + _ctx.disabled;
      t1 = _this._expr_6;
      if (t1 !== currVal_6) {
        T.updateAttribute(_this.rootEl, "aria-disabled", currVal_6);
        _this._expr_6 = currVal_6;
      }
      currVal_7 = _ctx.disabled;
      t1 = _this._expr_7;
      if (t1 !== currVal_7) {
        T.updateClassBindingNonHtml(_this.rootEl, "is-disabled", currVal_7);
        _this._expr_7 = currVal_7;
      }
      currVal_8 = _ctx.TextOnlyMixin_textOnly;
      t1 = _this._expr_8;
      if (t1 != currVal_8) {
        T.updateAttribute(_this.rootEl, "textOnly", currVal_8);
        _this._expr_8 = currVal_8;
      }
    },
    set$_map_0: function(_map_0) {
      this._map_0 = H.functionTypeCheck(_map_0, {func: 1, ret: [P.Map, P.String,,], args: [,,]});
    },
    $asAppView: function() {
      return [Z.SkawaNavItemComponent];
    }
  };
  Y.ViewSkawaNavItemComponent0_build_closure.prototype = {
    call$2: function(p0, p1) {
      return P.LinkedHashMap_LinkedHashMap$_literal(["hovering", p0, "icon-padding", p1], P.String, null);
    },
    $signature: 117
  };
  L.SkawaHexColorizePipe.prototype = {
    transform$1: function(_, seed) {
      var hexHash, hash,
        t1 = typeof seed === "string";
      if (!(t1 || typeof seed === "number"))
        throw H.wrapException(K.InvalidPipeArgumentException$(C.Type_SkawaHexColorizePipe_cNQ, seed));
      if (t1) {
        hexHash = H.Primitives_parseInt(seed, 16);
        if (hexHash == null)
          hexHash = C.JSString_methods.get$hashCode(seed);
      } else
        hexHash = J.get$hashCode$(seed);
      hash = C.JSInt_methods.toRadixString$1(hexHash, 16);
      for (; hash.length < C.JSArray_methods.get$first(C.List_3_4_6_8);)
        hash += "0";
      for (; !C.JSArray_methods.contains$1(C.List_3_4_6_8, hash.length);)
        hash = C.JSString_methods.substring$1(hash, 1);
      return "#" + hash;
    }
  };
  E.SkawaSidebarItemComponent.prototype = {};
  E.TextOnlyMixin.prototype = {};
  E._SkawaSidebarItemComponent_Object_TextOnlyMixin.prototype = {};
  K.ViewSkawaSidebarItemComponent0.prototype = {
    build$0: function() {
      var _this = this,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = _this._sidebar_item_template$_appEl_0 = new V.ViewContainer(0, null, _this, T.appendAnchor(parentRenderNode));
      _this._sidebar_item_template$_NgIf_0_9 = new K.NgIf(new D.TemplateRef(t1, K.sidebar_item_template__viewFactory_SkawaSidebarItemComponent1$closure()), t1);
      t1 = T.appendSpan(document, parentRenderNode);
      _this._sidebar_item_template$_el_1 = t1;
      _this.updateChildClass$2(t1, "item-text");
      _this.addShimE$1(_this._sidebar_item_template$_el_1);
      _this.project$2(_this._sidebar_item_template$_el_1, 0);
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var currVal_1, _this = this,
        _ctx = _this.ctx,
        t1 = _this._sidebar_item_template$_NgIf_0_9;
      t1.set$ngIf(_ctx.TextOnlyMixin_textOnly == null && _ctx.icon != null);
      _this._sidebar_item_template$_appEl_0.detectChangesInNestedViews$0();
      currVal_1 = _ctx.TextOnlyMixin_textOnly != null;
      t1 = _this._sidebar_item_template$_expr_1;
      if (t1 !== currVal_1) {
        T.updateClassBinding(_this._sidebar_item_template$_el_1, "text-only", currVal_1);
        _this._sidebar_item_template$_expr_1 = currVal_1;
      }
    },
    destroyInternal$0: function() {
      this._sidebar_item_template$_appEl_0.destroyNestedViews$0();
    },
    detectHostChanges$1: function(firstCheck) {
      var _this = this,
        currVal_2 = _this.ctx.TextOnlyMixin_textOnly,
        t1 = _this._sidebar_item_template$_expr_2;
      if (t1 != currVal_2) {
        T.updateAttribute(_this.rootEl, "textOnly", currVal_2);
        _this._sidebar_item_template$_expr_2 = currVal_2;
      }
    },
    $asAppView: function() {
      return [E.SkawaSidebarItemComponent];
    }
  };
  K._ViewSkawaSidebarItemComponent1.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = M.ViewMaterialIconComponent0$(_this, 0);
      _this._sidebar_item_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      _this.updateChildClassNonHtml$2(_el_0, "item-icon");
      _this.addShimC$1(_el_0);
      t1 = new Y.MaterialIconComponent(_el_0);
      _this._sidebar_item_template$_MaterialIconComponent_0_5 = t1;
      _this._sidebar_item_template$_compView_0.create0$1(t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var changed, _this = this,
        currVal_0 = _this.ctx.icon,
        t1 = _this._sidebar_item_template$_expr_0;
      if (t1 != currVal_0) {
        _this._sidebar_item_template$_MaterialIconComponent_0_5.set$icon(0, currVal_0);
        _this._sidebar_item_template$_expr_0 = currVal_0;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._sidebar_item_template$_compView_0.viewData.set$cdMode(1);
      _this._sidebar_item_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._sidebar_item_template$_compView_0.destroyInternalState$0();
    },
    $asAppView: function() {
      return [E.SkawaSidebarItemComponent];
    }
  };
  Q.AppComponent.prototype = {};
  V.ViewAppComponent0.prototype = {
    build$0: function() {
      var _el_1, _text_2, t2, t3, _el_3, _el_4, t4, _el_6, _el_7, _el_9, _el_10, _el_12, _el_13, _el_15, _text_16, _el_17, _el_18, _el_20, _el_21, _el_23, _el_24, _el_26, _el_27, _el_29, _el_30, _el_32, _el_33, _el_35, _el_36, _el_38, _el_39, _el_41, _el_42, _el_44, _el_45, _el_47, _el_48, _el_50, _el_51, _el_53, _el_54, _el_55, _el_56, _el_58, _el_59, _el_60, styles, subscription_0, _this = this, _null = null,
        _s8_ = "textOnly",
        _s4_ = "href", _s6_ = "target", _s6_0 = "_blank", _s4_0 = "demo", _s2_ = "id",
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        doc = document,
        t1 = T.appendElement(doc, parentRenderNode, "material-drawer");
      _this._el_0 = t1;
      T.setAttribute(t1, "persistent", "");
      _this.addShimE$1(_this._el_0);
      _this._MaterialPersistentDrawerDirective_0_5 = new O.MaterialPersistentDrawerDirectiveNgCd(new G.MaterialPersistentDrawerDirective(true, new P._SyncBroadcastStreamController(_null, _null, [P.bool])));
      t1 = K.ViewSkawaSidebarItemComponent0$(_this, 1);
      _this._compView_1 = t1;
      _el_1 = t1.rootEl;
      _this._el_0.appendChild(_el_1);
      T.setAttribute(_el_1, _s8_, "");
      _this.addShimC$1(_el_1);
      t1 = new E.SkawaSidebarItemComponent(_null);
      _this._SkawaSidebarItemComponent_1_5 = t1;
      _text_2 = T.createText("Useful links");
      t2 = [W.Text];
      t3 = [P.Object];
      _this._compView_1.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_2], t2)], t3));
      t1 = K.ViewSkawaSidebarItemComponent0$(_this, 3);
      _this._compView_3 = t1;
      _el_3 = t1.rootEl;
      _this._el_0.appendChild(_el_3);
      T.setAttribute(_el_3, _s8_, "");
      _this.addShimC$1(_el_3);
      _this._SkawaSidebarItemComponent_3_5 = new E.SkawaSidebarItemComponent(_null);
      _el_4 = doc.createElement("a");
      T.setAttribute(_el_4, _s4_, "https://github.com/dart-lang/angular_components");
      T.setAttribute(_el_4, _s6_, _s6_0);
      H.interceptedTypeCheck(_el_4, "$isHtmlElement");
      _this.addShimC$1(_el_4);
      T.appendText(_el_4, "Angular Components");
      t1 = [W.Element];
      _this._compView_3.create$2(0, _this._SkawaSidebarItemComponent_3_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_4], t1)], t3));
      t4 = K.ViewSkawaSidebarItemComponent0$(_this, 6);
      _this._compView_6 = t4;
      _el_6 = t4.rootEl;
      _this._el_0.appendChild(_el_6);
      T.setAttribute(_el_6, _s8_, "");
      _this.addShimC$1(_el_6);
      _this._SkawaSidebarItemComponent_6_5 = new E.SkawaSidebarItemComponent(_null);
      _el_7 = doc.createElement("a");
      T.setAttribute(_el_7, _s4_, "https://github.com/skawa-universe/skawa_components_example/blob/master/lib/non_layout_examples/non_layout_demo.html");
      T.setAttribute(_el_7, _s6_, _s6_0);
      H.interceptedTypeCheck(_el_7, "$isHtmlElement");
      _this.addShimC$1(_el_7);
      T.appendText(_el_7, "Template code");
      _this._compView_6.create$2(0, _this._SkawaSidebarItemComponent_6_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_7], t1)], t3));
      t4 = K.ViewSkawaSidebarItemComponent0$(_this, 9);
      _this._compView_9 = t4;
      _el_9 = t4.rootEl;
      _this._el_0.appendChild(_el_9);
      T.setAttribute(_el_9, _s8_, "");
      _this.addShimC$1(_el_9);
      _this._SkawaSidebarItemComponent_9_5 = new E.SkawaSidebarItemComponent(_null);
      _el_10 = doc.createElement("a");
      T.setAttribute(_el_10, _s4_, "https://material.io/guidelines/");
      T.setAttribute(_el_10, _s6_, _s6_0);
      H.interceptedTypeCheck(_el_10, "$isHtmlElement");
      _this.addShimC$1(_el_10);
      T.appendText(_el_10, "Material design");
      _this._compView_9.create$2(0, _this._SkawaSidebarItemComponent_9_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_10], t1)], t3));
      t4 = K.ViewSkawaSidebarItemComponent0$(_this, 12);
      _this._compView_12 = t4;
      _el_12 = t4.rootEl;
      _this._el_0.appendChild(_el_12);
      T.setAttribute(_el_12, _s8_, "");
      _this.addShimC$1(_el_12);
      _this._SkawaSidebarItemComponent_12_5 = new E.SkawaSidebarItemComponent(_null);
      _el_13 = doc.createElement("a");
      T.setAttribute(_el_13, _s4_, "https://material.io/color/");
      T.setAttribute(_el_13, _s6_, _s6_0);
      H.interceptedTypeCheck(_el_13, "$isHtmlElement");
      _this.addShimC$1(_el_13);
      T.appendText(_el_13, "Color palette tool");
      _this._compView_12.create$2(0, _this._SkawaSidebarItemComponent_12_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_13], t1)], t3));
      t4 = K.ViewSkawaSidebarItemComponent0$(_this, 15);
      _this._compView_15 = t4;
      _el_15 = t4.rootEl;
      _this._el_0.appendChild(_el_15);
      T.setAttribute(_el_15, _s8_, "");
      _this.addShimC$1(_el_15);
      t4 = new E.SkawaSidebarItemComponent(_null);
      _this._SkawaSidebarItemComponent_15_5 = t4;
      _text_16 = T.createText("Component Examples");
      _this._compView_15.create$2(0, t4, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_16], t2)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 17);
      _this._compView_17 = t2;
      _el_17 = t2.rootEl;
      _this._el_0.appendChild(_el_17);
      T.setAttribute(_el_17, _s8_, "");
      _this.addShimC$1(_el_17);
      _this._SkawaSidebarItemComponent_17_5 = new E.SkawaSidebarItemComponent(_null);
      _el_18 = doc.createElement("a");
      T.setAttribute(_el_18, _s4_, "#card-demo");
      H.interceptedTypeCheck(_el_18, "$isHtmlElement");
      _this.addShimC$1(_el_18);
      T.appendText(_el_18, "Card Demo");
      _this._compView_17.create$2(0, _this._SkawaSidebarItemComponent_17_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_18], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 20);
      _this._compView_20 = t2;
      _el_20 = t2.rootEl;
      _this._el_0.appendChild(_el_20);
      T.setAttribute(_el_20, _s8_, "");
      _this.addShimC$1(_el_20);
      _this._SkawaSidebarItemComponent_20_5 = new E.SkawaSidebarItemComponent(_null);
      _el_21 = doc.createElement("a");
      T.setAttribute(_el_21, _s4_, "#ckeditor-demo");
      H.interceptedTypeCheck(_el_21, "$isHtmlElement");
      _this.addShimC$1(_el_21);
      T.appendText(_el_21, "Ckeditor Demo");
      _this._compView_20.create$2(0, _this._SkawaSidebarItemComponent_20_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_21], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 23);
      _this._compView_23 = t2;
      _el_23 = t2.rootEl;
      _this._el_0.appendChild(_el_23);
      T.setAttribute(_el_23, _s8_, "");
      _this.addShimC$1(_el_23);
      _this._SkawaSidebarItemComponent_23_5 = new E.SkawaSidebarItemComponent(_null);
      _el_24 = doc.createElement("a");
      T.setAttribute(_el_24, _s4_, "#data-table-demo");
      H.interceptedTypeCheck(_el_24, "$isHtmlElement");
      _this.addShimC$1(_el_24);
      T.appendText(_el_24, "Data Table Demo");
      _this._compView_23.create$2(0, _this._SkawaSidebarItemComponent_23_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_24], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 26);
      _this._compView_26 = t2;
      _el_26 = t2.rootEl;
      _this._el_0.appendChild(_el_26);
      T.setAttribute(_el_26, _s8_, "");
      _this.addShimC$1(_el_26);
      _this._SkawaSidebarItemComponent_26_5 = new E.SkawaSidebarItemComponent(_null);
      _el_27 = doc.createElement("a");
      T.setAttribute(_el_27, _s4_, "#grid-demo");
      H.interceptedTypeCheck(_el_27, "$isHtmlElement");
      _this.addShimC$1(_el_27);
      T.appendText(_el_27, "Grid Demo");
      _this._compView_26.create$2(0, _this._SkawaSidebarItemComponent_26_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_27], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 29);
      _this._compView_29 = t2;
      _el_29 = t2.rootEl;
      _this._el_0.appendChild(_el_29);
      T.setAttribute(_el_29, _s8_, "");
      _this.addShimC$1(_el_29);
      _this._SkawaSidebarItemComponent_29_5 = new E.SkawaSidebarItemComponent(_null);
      _el_30 = doc.createElement("a");
      T.setAttribute(_el_30, _s4_, "#hex-colorize-demo");
      H.interceptedTypeCheck(_el_30, "$isHtmlElement");
      _this.addShimC$1(_el_30);
      T.appendText(_el_30, "Hex Colorize Pipe Demo");
      _this._compView_29.create$2(0, _this._SkawaSidebarItemComponent_29_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_30], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 32);
      _this._compView_32 = t2;
      _el_32 = t2.rootEl;
      _this._el_0.appendChild(_el_32);
      T.setAttribute(_el_32, _s8_, "");
      _this.addShimC$1(_el_32);
      _this._SkawaSidebarItemComponent_32_5 = new E.SkawaSidebarItemComponent(_null);
      _el_33 = doc.createElement("a");
      T.setAttribute(_el_33, _s4_, "#infobar-demo");
      H.interceptedTypeCheck(_el_33, "$isHtmlElement");
      _this.addShimC$1(_el_33);
      T.appendText(_el_33, "Infobar Demo");
      _this._compView_32.create$2(0, _this._SkawaSidebarItemComponent_32_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_33], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 35);
      _this._compView_35 = t2;
      _el_35 = t2.rootEl;
      _this._el_0.appendChild(_el_35);
      T.setAttribute(_el_35, _s8_, "");
      _this.addShimC$1(_el_35);
      _this._SkawaSidebarItemComponent_35_5 = new E.SkawaSidebarItemComponent(_null);
      _el_36 = doc.createElement("a");
      T.setAttribute(_el_36, _s4_, "#markdown-demo");
      H.interceptedTypeCheck(_el_36, "$isHtmlElement");
      _this.addShimC$1(_el_36);
      T.appendText(_el_36, "Markdown Renderer Demo");
      _this._compView_35.create$2(0, _this._SkawaSidebarItemComponent_35_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_36], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 38);
      _this._compView_38 = t2;
      _el_38 = t2.rootEl;
      _this._el_0.appendChild(_el_38);
      T.setAttribute(_el_38, _s8_, "");
      _this.addShimC$1(_el_38);
      _this._SkawaSidebarItemComponent_38_5 = new E.SkawaSidebarItemComponent(_null);
      _el_39 = doc.createElement("a");
      T.setAttribute(_el_39, _s4_, "#nav-item-demo");
      H.interceptedTypeCheck(_el_39, "$isHtmlElement");
      _this.addShimC$1(_el_39);
      T.appendText(_el_39, "Nav Item Demo");
      _this._compView_38.create$2(0, _this._SkawaSidebarItemComponent_38_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_39], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 41);
      _this._compView_41 = t2;
      _el_41 = t2.rootEl;
      _this._el_0.appendChild(_el_41);
      T.setAttribute(_el_41, _s8_, "");
      _this.addShimC$1(_el_41);
      _this._SkawaSidebarItemComponent_41_5 = new E.SkawaSidebarItemComponent(_null);
      _el_42 = doc.createElement("a");
      T.setAttribute(_el_42, _s4_, "#sidebar-item-demo");
      H.interceptedTypeCheck(_el_42, "$isHtmlElement");
      _this.addShimC$1(_el_42);
      T.appendText(_el_42, "Sidebar Item Demo");
      _this._compView_41.create$2(0, _this._SkawaSidebarItemComponent_41_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_42], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 44);
      _this._compView_44 = t2;
      _el_44 = t2.rootEl;
      _this._el_0.appendChild(_el_44);
      T.setAttribute(_el_44, _s8_, "");
      _this.addShimC$1(_el_44);
      _this._SkawaSidebarItemComponent_44_5 = new E.SkawaSidebarItemComponent(_null);
      _el_45 = doc.createElement("a");
      T.setAttribute(_el_45, _s4_, "#snackbar-demo");
      H.interceptedTypeCheck(_el_45, "$isHtmlElement");
      _this.addShimC$1(_el_45);
      T.appendText(_el_45, "Snackbar Demo");
      _this._compView_44.create$2(0, _this._SkawaSidebarItemComponent_44_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_45], t1)], t3));
      t2 = K.ViewSkawaSidebarItemComponent0$(_this, 47);
      _this._compView_47 = t2;
      _el_47 = t2.rootEl;
      _this._el_0.appendChild(_el_47);
      T.setAttribute(_el_47, _s8_, "");
      _this.addShimC$1(_el_47);
      _this._SkawaSidebarItemComponent_47_5 = new E.SkawaSidebarItemComponent(_null);
      _el_48 = doc.createElement("a");
      T.setAttribute(_el_48, _s4_, "#extended-material-icon-demo");
      H.interceptedTypeCheck(_el_48, "$isHtmlElement");
      _this.addShimC$1(_el_48);
      T.appendText(_el_48, "Extended Material Icon Demo");
      _this._compView_47.create$2(0, _this._SkawaSidebarItemComponent_47_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_48], t1)], t3));
      _el_50 = T.appendElement(doc, parentRenderNode, "material-content");
      _this.addShimE$1(_el_50);
      _el_51 = T.appendDiv(doc, _el_50);
      _this.updateChildClass$2(_el_51, "container");
      _this.addShimC$1(_el_51);
      t1 = T.appendElement(doc, _el_51, "header");
      _this._el_52 = t1;
      _this.updateChildClass$2(H.interceptedTypeCheck(t1, "$isHtmlElement"), "material-header shadow");
      _this.addShimE$1(_this._el_52);
      _el_53 = T.appendDiv(doc, _this._el_52);
      _this.updateChildClass$2(_el_53, "material-header-row");
      _this.addShimC$1(_el_53);
      t1 = U.ViewMaterialButtonComponent0$(_this, 54);
      _this._compView_54 = t1;
      _el_54 = t1.rootEl;
      _el_53.appendChild(_el_54);
      _this.updateChildClassNonHtml$2(_el_54, "material-drawer-button");
      T.setAttribute(_el_54, "icon", "");
      _this.addShimC$1(_el_54);
      t1 = F.AcxDarkTheme$(H.boolTypeCheck(_this.parentView.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, _this.viewData.parentIndex)));
      _this._AcxDarkTheme_54_5 = t1;
      _this._MaterialButtonComponent_54_6 = B.MaterialButtonComponent$(_el_54, t1, _this._compView_54, _null);
      t1 = M.ViewMaterialIconComponent0$(_this, 55);
      _this._compView_55 = t1;
      _el_55 = t1.rootEl;
      T.setAttribute(_el_55, "icon", "menu");
      _this.addShimC$1(_el_55);
      t1 = new Y.MaterialIconComponent(_el_55);
      _this._MaterialIconComponent_55_5 = t1;
      _this._compView_55.create0$1(t1);
      _this._compView_54.create$2(0, _this._MaterialButtonComponent_54_6, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_55], [W.HtmlElement])], t3));
      _el_56 = T.appendSpan(doc, _el_53);
      _this.updateChildClass$2(_el_56, "material-header-title");
      _this.addShimE$1(_el_56);
      T.appendText(_el_56, "Skawa Component Examples");
      _el_58 = T.appendDiv(doc, _el_51);
      _this.addShimC$1(_el_58);
      _el_59 = T.appendDiv(doc, _el_58);
      T.setAttribute(_el_59, "style", "position: sticky; top: 0; height: 64px;");
      _this.addShimC$1(_el_59);
      _el_60 = T.appendElement(doc, _el_58, "main");
      _this.addShimE$1(_el_60);
      t3 = new L.ViewCardDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 61));
      styles = $.ViewCardDemoComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewCardDemoComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$CardDemoComponent, _null);
      t3.componentStyles = styles;
      t1 = doc.createElement("card-demo");
      H.interceptedTypeCheck(t1, "$isHtmlElement");
      t3.rootEl = t1;
      _this._compView_61 = t3;
      _el_60.appendChild(t1);
      _this.updateChildClassNonHtml$2(t1, _s4_0);
      T.setAttribute(t1, _s2_, "card-demo");
      _this.addShimC$1(t1);
      t1 = new N.CardDemoComponent();
      _this._CardDemoComponent_61_5 = t1;
      _this._compView_61.create0$1(t1);
      t1 = new M.ViewCkeditorDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 62));
      styles = $.ViewCkeditorDemoComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(_null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewCkeditorDemoComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = doc.createElement("ckeditor-demo");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._compView_62 = t1;
      _el_60.appendChild(t2);
      _this.updateChildClassNonHtml$2(t2, _s4_0);
      T.setAttribute(t2, _s2_, "ckeditor-demo");
      _this.addShimC$1(t2);
      t1 = new K.CkeditorDemoComponent(H.setRuntimeTypeInfo([new V.ExtraPlugin("dartlogo", "/ckeditor/dartlogo/plugin.js", "")], [V.ExtraPlugin]));
      _this._CkeditorDemoComponent_62_5 = t1;
      _this._compView_62.create0$1(t1);
      t1 = new E.ViewDataTableDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 63));
      styles = $.ViewDataTableDemoComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(_null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewDataTableDemoComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = doc.createElement("data-table-demo");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._compView_63 = t1;
      _el_60.appendChild(t2);
      _this.updateChildClassNonHtml$2(t2, _s4_0);
      T.setAttribute(t2, _s2_, "data-table-demo");
      _this.addShimC$1(t2);
      t1 = new T.DataTableDemoComponent();
      _this._DataTableDemoComponent_63_5 = t1;
      _this._compView_63.create0$1(t1);
      t1 = new S.ViewGridDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 64));
      styles = $.ViewGridDemoComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(_null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewGridDemoComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = doc.createElement("grid-demo");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._compView_64 = t1;
      _el_60.appendChild(t2);
      _this.updateChildClassNonHtml$2(t2, _s4_0);
      T.setAttribute(t2, _s2_, "grid-demo");
      _this.addShimC$1(t2);
      t1 = new Q.GridDemoComponent();
      _this._GridDemoComponent_64_5 = t1;
      _this._compView_64.create0$1(t1);
      t1 = new V.ViewHexColorizePipeDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 65));
      styles = $.ViewHexColorizePipeDemoComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewHexColorizePipeDemoComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$HexColorizePipeDemoComponent, _null);
      t1.componentStyles = styles;
      t2 = doc.createElement("hex-colorize-pipe-demo");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._compView_65 = t1;
      _el_60.appendChild(t2);
      _this.updateChildClassNonHtml$2(t2, _s4_0);
      T.setAttribute(t2, _s2_, "hex-colorize-demo");
      _this.addShimC$1(t2);
      t1 = new A.HexColorizePipeDemoComponent(H.setRuntimeTypeInfo("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.".split(" "), [P.String]));
      _this._HexColorizePipeDemoComponent_65_5 = t1;
      _this._compView_65.create0$1(t1);
      t1 = new O.ViewInfobarDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 66));
      styles = $.ViewInfobarDemoComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(_null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewInfobarDemoComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = doc.createElement("infobar-demo");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._compView_66 = t1;
      _el_60.appendChild(t2);
      _this.updateChildClassNonHtml$2(t2, _s4_0);
      T.setAttribute(t2, _s2_, "infobar-demo");
      _this.addShimC$1(t2);
      t1 = new Q.InfobarDemoComponent();
      _this._InfobarDemoComponent_66_5 = t1;
      _this._compView_66.create0$1(t1);
      t1 = new Z.ViewMarkdownDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 67));
      styles = $.ViewMarkdownDemoComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(_null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewMarkdownDemoComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = doc.createElement("markdown-demo");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._compView_67 = t1;
      _el_60.appendChild(t2);
      _this.updateChildClassNonHtml$2(t2, _s4_0);
      T.setAttribute(t2, _s2_, "markdown-demo");
      _this.addShimC$1(t2);
      t1 = new Q.MarkdownDemoComponent();
      _this._MarkdownDemoComponent_67_5 = t1;
      _this._compView_67.create0$1(t1);
      t1 = new Z.ViewNavItemDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 68));
      styles = $.ViewNavItemDemoComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewNavItemDemoComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$NavItemDemoComponent, _null);
      t1.componentStyles = styles;
      t2 = doc.createElement("nav-item-demo");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._compView_68 = t1;
      _el_60.appendChild(t2);
      _this.updateChildClassNonHtml$2(t2, _s4_0);
      T.setAttribute(t2, _s2_, "nav-item-demo");
      _this.addShimC$1(t2);
      t1 = new L.NavItemDemoComponent();
      _this._NavItemDemoComponent_68_5 = t1;
      _this._compView_68.create0$1(t1);
      t1 = new Y.ViewSidebarItemDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 69));
      styles = $.ViewSidebarItemDemoComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(_null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewSidebarItemDemoComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = doc.createElement("sidebar-item-demo");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._compView_69 = t1;
      _el_60.appendChild(t2);
      _this.updateChildClassNonHtml$2(t2, _s4_0);
      T.setAttribute(t2, _s2_, "sidebar-item-demo");
      _this.addShimC$1(t2);
      t1 = P.Null;
      t2 = new Q.SidebarItemDemoComponent(P.StreamController_StreamController(_null, _null, _null, false, t1));
      _this._SidebarItemDemoComponent_69_5 = t2;
      _this._compView_69.create0$1(t2);
      t2 = new D.ViewSnackbarDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 70));
      styles = $.ViewSnackbarDemoComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(_null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewSnackbarDemoComponent0__componentStyles = styles;
      }
      t2.componentStyles = styles;
      t3 = doc.createElement("snackbar-demo");
      H.interceptedTypeCheck(t3, "$isHtmlElement");
      t2.rootEl = t3;
      _this._compView_70 = t2;
      _el_60.appendChild(t3);
      _this.updateChildClassNonHtml$2(t3, _s4_0);
      T.setAttribute(t3, _s2_, "snackbar-demo");
      _this.addShimC$1(t3);
      t2 = new T.SnackbarService(P.StreamController_StreamController(_null, _null, _null, false, T.SnackMessage));
      _this._SnackbarService_70_5 = t2;
      t2 = new T.SnackbarDemoComponent(t2);
      _this._SnackbarDemoComponent_70_6 = t2;
      _this._compView_70.create0$1(t2);
      t2 = new X.ViewExtendedMaterialIconDemoComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 71));
      styles = $.ViewExtendedMaterialIconDemoComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewExtendedMaterialIconDemoComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$ExtendedMaterialIconDemoComponent, _null);
      t2.componentStyles = styles;
      t3 = doc.createElement("extended-material-icon-demo");
      H.interceptedTypeCheck(t3, "$isHtmlElement");
      t2.rootEl = t3;
      _this._compView_71 = t2;
      _el_60.appendChild(t3);
      _this.updateChildClassNonHtml$2(t3, _s4_0);
      T.setAttribute(t3, _s2_, "extended-material-icon-demo");
      _this.addShimC$1(t3);
      t2 = new V.ExtendedMaterialIconDemoComponent();
      _this._ExtendedMaterialIconDemoComponent_71_5 = t2;
      _this._compView_71.create0$1(t2);
      t2 = _this._MaterialButtonComponent_54_6._trigger;
      t3 = W.UIEvent;
      subscription_0 = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(_this.eventHandler1$2$1(_this.get$_handle_trigger_54_0(), t3, t3));
      t3 = _this._SidebarItemDemoComponent_69_5._openController;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([subscription_0, new P._ControllerStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(_this.eventHandler1$2$1(_this.get$_handle_open_69_0(), t1, t1))], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var t1, _this = this;
      if ((token === C.Type_gkc || token === C.Type_DeferredContentAware_BCk) && nodeIndex <= 49)
        return _this._MaterialPersistentDrawerDirective_0_5.instance;
      if (54 <= nodeIndex && nodeIndex <= 55) {
        if (token === C.Type_AcxDarkTheme_Tng)
          return _this._AcxDarkTheme_54_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          return _this._MaterialButtonComponent_54_6;
      }
      if (token === C.Type_EditorRenderer_wbs && 67 === nodeIndex) {
        t1 = _this.__EditorRenderer_67_6;
        return t1 == null ? _this.__EditorRenderer_67_6 = new Q.MarkdownRenderer() : t1;
      }
      if (token === C.Type_SnackbarService_v1z && 70 === nodeIndex)
        return _this._SnackbarService_70_5;
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var changed, t1, t2, t3, currVal_0, t4, currVal_1, currVal_17, _this = this,
        firstCheck = _this.viewData._cdState === 0,
        local_drawer = _this._MaterialPersistentDrawerDirective_0_5.instance;
      if (firstCheck)
        local_drawer._visibleChange.add$1(0, local_drawer._visible);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_1_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_1.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_3_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_3.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_6_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_6.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_9_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_9.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_12_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_12.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_15_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_15.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_17_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_17.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_20_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_20.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_23_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_23.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_26_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_26.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_29_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_29.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_32_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_32.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_35_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_35.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_38_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_38.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_41_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_41.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_44_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_44.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaSidebarItemComponent_47_5.TextOnlyMixin_textOnly = "";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_47.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._MaterialIconComponent_55_5.set$icon(0, "menu");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_55.viewData.set$cdMode(1);
      t1 = _this._MaterialPersistentDrawerDirective_0_5;
      t2 = _this._el_0;
      t3 = t1.instance;
      currVal_0 = !t3._visible;
      t4 = t1._material_persistent_drawer_template$_expr_0;
      if (t4 !== currVal_0) {
        T.updateClassBindingNonHtml(t2, "mat-drawer-collapsed", currVal_0);
        t1._material_persistent_drawer_template$_expr_0 = currVal_0;
      }
      currVal_1 = t3._visible;
      t3 = t1._material_persistent_drawer_template$_expr_1;
      if (t3 !== currVal_1) {
        T.updateClassBindingNonHtml(t2, "mat-drawer-expanded", currVal_1);
        t1._material_persistent_drawer_template$_expr_1 = currVal_1;
      }
      _this._compView_1.detectHostChanges$1(firstCheck);
      _this._compView_3.detectHostChanges$1(firstCheck);
      _this._compView_6.detectHostChanges$1(firstCheck);
      _this._compView_9.detectHostChanges$1(firstCheck);
      _this._compView_12.detectHostChanges$1(firstCheck);
      _this._compView_15.detectHostChanges$1(firstCheck);
      _this._compView_17.detectHostChanges$1(firstCheck);
      _this._compView_20.detectHostChanges$1(firstCheck);
      _this._compView_23.detectHostChanges$1(firstCheck);
      _this._compView_26.detectHostChanges$1(firstCheck);
      _this._compView_29.detectHostChanges$1(firstCheck);
      _this._compView_32.detectHostChanges$1(firstCheck);
      _this._compView_35.detectHostChanges$1(firstCheck);
      _this._compView_38.detectHostChanges$1(firstCheck);
      _this._compView_41.detectHostChanges$1(firstCheck);
      _this._compView_44.detectHostChanges$1(firstCheck);
      _this._compView_47.detectHostChanges$1(firstCheck);
      t1 = local_drawer._visible;
      currVal_17 = !t1;
      t1 = _this._app_component_template$_expr_17;
      if (t1 !== currVal_17) {
        T.updateClassBinding(H.interceptedTypeCheck(_this._el_52, "$isHtmlElement"), "no-drawer", currVal_17);
        _this._app_component_template$_expr_17 = currVal_17;
      }
      _this._compView_54.detectHostChanges$1(firstCheck);
      _this._compView_1.detectChanges$0();
      _this._compView_3.detectChanges$0();
      _this._compView_6.detectChanges$0();
      _this._compView_9.detectChanges$0();
      _this._compView_12.detectChanges$0();
      _this._compView_15.detectChanges$0();
      _this._compView_17.detectChanges$0();
      _this._compView_20.detectChanges$0();
      _this._compView_23.detectChanges$0();
      _this._compView_26.detectChanges$0();
      _this._compView_29.detectChanges$0();
      _this._compView_32.detectChanges$0();
      _this._compView_35.detectChanges$0();
      _this._compView_38.detectChanges$0();
      _this._compView_41.detectChanges$0();
      _this._compView_44.detectChanges$0();
      _this._compView_47.detectChanges$0();
      _this._compView_54.detectChanges$0();
      _this._compView_55.detectChanges$0();
      _this._compView_61.detectChanges$0();
      _this._compView_62.detectChanges$0();
      _this._compView_63.detectChanges$0();
      _this._compView_64.detectChanges$0();
      _this._compView_65.detectChanges$0();
      _this._compView_66.detectChanges$0();
      _this._compView_67.detectChanges$0();
      _this._compView_68.detectChanges$0();
      _this._compView_69.detectChanges$0();
      _this._compView_70.detectChanges$0();
      _this._compView_71.detectChanges$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._compView_1.destroyInternalState$0();
      _this._compView_3.destroyInternalState$0();
      _this._compView_6.destroyInternalState$0();
      _this._compView_9.destroyInternalState$0();
      _this._compView_12.destroyInternalState$0();
      _this._compView_15.destroyInternalState$0();
      _this._compView_17.destroyInternalState$0();
      _this._compView_20.destroyInternalState$0();
      _this._compView_23.destroyInternalState$0();
      _this._compView_26.destroyInternalState$0();
      _this._compView_29.destroyInternalState$0();
      _this._compView_32.destroyInternalState$0();
      _this._compView_35.destroyInternalState$0();
      _this._compView_38.destroyInternalState$0();
      _this._compView_41.destroyInternalState$0();
      _this._compView_44.destroyInternalState$0();
      _this._compView_47.destroyInternalState$0();
      _this._compView_54.destroyInternalState$0();
      _this._compView_55.destroyInternalState$0();
      _this._compView_61.destroyInternalState$0();
      _this._compView_62.destroyInternalState$0();
      _this._compView_63.destroyInternalState$0();
      _this._compView_64.destroyInternalState$0();
      _this._compView_65.destroyInternalState$0();
      _this._compView_66.destroyInternalState$0();
      _this._compView_67.destroyInternalState$0();
      _this._compView_68.destroyInternalState$0();
      _this._compView_69.destroyInternalState$0();
      _this._compView_70.destroyInternalState$0();
      _this._compView_71.destroyInternalState$0();
      _this._SidebarItemDemoComponent_69_5._openController.close$0(0);
    },
    _handle_trigger_54_0$1: function($$event) {
      var local_drawer = this._MaterialPersistentDrawerDirective_0_5.instance;
      local_drawer.set$visible(0, !local_drawer._visible);
    },
    _handle_open_69_0$1: function($$event) {
      var local_drawer = this._MaterialPersistentDrawerDirective_0_5.instance;
      local_drawer.set$visible(0, !local_drawer._visible);
    },
    $asAppView: function() {
      return [Q.AppComponent];
    }
  };
  V._ViewAppComponentHost0.prototype = {
    get$_Document_0_6: function() {
      var t1 = this.__Document_0_6;
      return t1 == null ? this.__Document_0_6 = document : t1;
    },
    get$_Window_0_8: function() {
      var t1 = this.__Window_0_8;
      return t1 == null ? this.__Window_0_8 = window : t1;
    },
    get$_DomService_0_9: function() {
      var _this = this,
        t1 = _this.__DomService_0_9;
      if (t1 == null) {
        t1 = _this.viewData.parentIndex;
        t1 = T.createDomService(H.interceptedTypeCheck(_this.injectorGetOptional$2(C.Type_DomService_2jN, t1), "$isDomService"), H.interceptedTypeCheck(_this.injectorGetOptional$2(C.Type_Disposer_k0p, t1), "$isDisposer"), H.interceptedTypeCheck(_this.injectorGet$2(C.Type_NgZone_6ty, t1), "$isNgZone"), _this.get$_Window_0_8());
        _this.__DomService_0_9 = t1;
      }
      return t1;
    },
    get$_AcxImperativeViewUtils_0_10: function() {
      var _this = this,
        t1 = _this.__AcxImperativeViewUtils_0_10;
      if (t1 == null) {
        H.interceptedTypeCheck(_this.injectorGet$2(C.Type_ComponentLoader_7xV, _this.viewData.parentIndex), "$isComponentLoader");
        _this.get$_DomService_0_9();
        t1 = _this.__AcxImperativeViewUtils_0_10 = new O.AcxImperativeViewUtils();
      }
      return t1;
    },
    get$_DomRuler_0_11: function() {
      var _this = this,
        t1 = _this.__DomRuler_0_11;
      return t1 == null ? _this.__DomRuler_0_11 = new K.DomRulerImpl(_this.get$_Document_0_6(), _this.get$_DomService_0_9(), P.Expando$(null, [P.List, P.String])) : t1;
    },
    get$_ManagedZone_0_12: function() {
      var _this = this,
        t1 = _this.__ManagedZone_0_12;
      if (t1 == null) {
        t1 = T.Angular2ManagedZone$(H.interceptedTypeCheck(_this.injectorGet$2(C.Type_NgZone_6ty, _this.viewData.parentIndex), "$isNgZone"));
        _this.__ManagedZone_0_12 = t1;
      }
      return t1;
    },
    get$_overlayContainerName_0_13: function() {
      var _this = this,
        t1 = _this.__overlayContainerName_0_13;
      if (t1 == null) {
        t1 = G.getDefaultContainerName(_this.injectorGetOptional$2(C.OpaqueToken_overlayContainerName, _this.viewData.parentIndex));
        _this.__overlayContainerName_0_13 = t1;
      }
      return t1;
    },
    get$_overlayContainerParent_0_14: function() {
      var _this = this,
        t1 = _this.__overlayContainerParent_0_14;
      if (t1 == null) {
        t1 = G.getOverlayContainerParent(_this.get$_Document_0_6(), _this.injectorGetOptional$2(C.OpaqueToken_overlayContainerParent, _this.viewData.parentIndex));
        _this.__overlayContainerParent_0_14 = t1;
      }
      return t1;
    },
    get$_overlayContainer_0_15: function() {
      var _this = this,
        t1 = _this.__overlayContainer_0_15;
      if (t1 == null) {
        t1 = G.getDefaultContainer(_this.get$_overlayContainerName_0_13(), _this.get$_overlayContainerParent_0_14(), _this.injectorGetOptional$2(C.OpaqueToken_overlayContainer, _this.viewData.parentIndex));
        _this.__overlayContainer_0_15 = t1;
      }
      return t1;
    },
    get$_overlaySyncDom_0_16: function() {
      var t1 = this.__overlaySyncDom_0_16;
      return t1 == null ? this.__overlaySyncDom_0_16 = true : t1;
    },
    get$_overlayRepositionLoop_0_17: function() {
      var t1 = this.__overlayRepositionLoop_0_17;
      return t1 == null ? this.__overlayRepositionLoop_0_17 = true : t1;
    },
    get$_OverlayStyleConfig_0_19: function() {
      var t1 = this.__OverlayStyleConfig_0_19;
      if (t1 == null) {
        t1 = this.get$_Document_0_6();
        t1 = this.__OverlayStyleConfig_0_19 = new R.OverlayStyleConfig(H.interceptedTypeCheck(t1.querySelector("head"), "$isHeadElement"), t1);
      }
      return t1;
    },
    get$_ZIndexer_0_20: function() {
      var t1 = this.__ZIndexer_0_20;
      if (t1 == null) {
        t1 = $.ZIndexer__currentInstance;
        if (t1 == null) {
          t1 = new X.ZIndexer();
          if (self.acxZIndex == null)
            self.acxZIndex = 1000;
          $.ZIndexer__currentInstance = t1;
        }
        t1 = this.__ZIndexer_0_20 = t1;
      }
      return t1;
    },
    get$_OverlayDomRenderService_0_21: function() {
      var t2, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this.__OverlayDomRenderService_0_21;
      if (t1 == null) {
        t1 = _this.get$_OverlayStyleConfig_0_19();
        t2 = _this.get$_overlayContainer_0_15();
        t3 = _this.get$_overlayContainerName_0_13();
        t4 = _this.get$_DomRuler_0_11();
        t5 = _this.get$_DomService_0_9();
        t6 = _this.get$_AcxImperativeViewUtils_0_10();
        t7 = _this.get$_overlaySyncDom_0_16();
        t8 = _this.get$_overlayRepositionLoop_0_17();
        t9 = _this.get$_ZIndexer_0_20();
        t8 = new K.OverlayDomRenderService(t2, t3, t4, t5, t6, t7, t8, t9);
        t2.setAttribute("name", t3);
        t1.registerStyles$0();
        t9.toString;
        t8._lastZIndex = self.acxZIndex;
        _this.__OverlayDomRenderService_0_21 = t8;
        t1 = t8;
      }
      return t1;
    },
    get$_OverlayService_0_22: function() {
      var t2, t3, t4, _this = this,
        t1 = _this.__OverlayService_0_22;
      if (t1 == null) {
        t1 = _this.viewData.parentIndex;
        t2 = H.interceptedTypeCheck(_this.injectorGet$2(C.Type_NgZone_6ty, t1), "$isNgZone");
        t3 = _this.get$_overlaySyncDom_0_16();
        t4 = _this.get$_OverlayDomRenderService_0_21();
        H.interceptedTypeCheck(_this.injectorGetOptional$2(C.Type_OverlayService_4iH, t1), "$isOverlayService");
        t1 = _this.__OverlayService_0_22 = new X.OverlayService(t3, t2, t4);
      }
      return t1;
    },
    build$0: function() {
      var t2, _this = this,
        t1 = new V.ViewAppComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 0)),
        styles = $.ViewAppComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewAppComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$AppComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("app-cmp");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._compView_0 = t1;
      _this.rootEl = t2;
      t2 = new Q.AppComponent();
      _this._AppComponent_0_5 = t2;
      t1.create$2(0, t2, _this.viewData.projectedNodes);
      _this.init1$1(_this.rootEl);
      return new D.ComponentRef(_this, 0, _this.rootEl, _this._AppComponent_0_5, [Q.AppComponent]);
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var t1, _this = this;
      if (0 === nodeIndex) {
        if (token === C.Type_Document_woc)
          return _this.get$_Document_0_6();
        if (token === C.Type_HtmlDocument_RWm) {
          t1 = _this.__HtmlDocument_0_7;
          return t1 == null ? _this.__HtmlDocument_0_7 = document : t1;
        }
        if (token === C.Type_Window_0H0)
          return _this.get$_Window_0_8();
        if (token === C.Type_DomService_2jN)
          return _this.get$_DomService_0_9();
        if (token === C.Type_AcxImperativeViewUtils_Ucj)
          return _this.get$_AcxImperativeViewUtils_0_10();
        if (token === C.Type_DomRuler_2Vk)
          return _this.get$_DomRuler_0_11();
        if (token === C.Type_ManagedZone_s3L)
          return _this.get$_ManagedZone_0_12();
        if (token === C.OpaqueToken_overlayContainerName)
          return _this.get$_overlayContainerName_0_13();
        if (token === C.OpaqueToken_overlayContainerParent)
          return _this.get$_overlayContainerParent_0_14();
        if (token === C.OpaqueToken_overlayContainer)
          return _this.get$_overlayContainer_0_15();
        if (token === C.OpaqueToken_overlaySyncDom)
          return _this.get$_overlaySyncDom_0_16();
        if (token === C.OpaqueToken_overlayRepositionLoop)
          return _this.get$_overlayRepositionLoop_0_17();
        if (token === C.OpaqueToken_overlayViewportBoundaries) {
          t1 = _this.__overlayViewportBoundaries_0_18;
          return t1 == null ? _this.__overlayViewportBoundaries_0_18 = C.C_Box : t1;
        }
        if (token === C.Type_OverlayStyleConfig_rp8)
          return _this.get$_OverlayStyleConfig_0_19();
        if (token === C.Type_ZIndexer_ViP)
          return _this.get$_ZIndexer_0_20();
        if (token === C.Type_OverlayDomRenderService_qUY)
          return _this.get$_OverlayDomRenderService_0_21();
        if (token === C.Type_OverlayService_4iH)
          return _this.get$_OverlayService_0_22();
        if (token === C.OpaqueToken_defaultPopupPositions) {
          if (_this.__defaultPopupPositions_0_23 == null)
            _this.set$__defaultPopupPositions_0_23(C.List_WrT);
          return _this.__defaultPopupPositions_0_23;
        }
        if (token === C.Type_DomPopupSourceFactory_gmZ) {
          t1 = _this.__DomPopupSourceFactory_0_24;
          return t1 == null ? _this.__DomPopupSourceFactory_0_24 = new K.DomPopupSourceFactory(_this.get$_DomRuler_0_11()) : t1;
        }
        if (token === C.Type_Clock_MYz || token === C.OpaqueToken_8qt) {
          t1 = _this.__Clock_0_25;
          return t1 == null ? _this.__Clock_0_25 = C.C_Clock : t1;
        }
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      this._compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._compView_0.destroyInternalState$0();
    },
    set$__defaultPopupPositions_0_23: function(__defaultPopupPositions_0_23) {
      this.__defaultPopupPositions_0_23 = H.assertSubtype(__defaultPopupPositions_0_23, "$isList", [K.RelativePosition], "$asList");
    },
    $asAppView: function() {
      return [Q.AppComponent];
    }
  };
  N.CardDemoComponent.prototype = {};
  L.ViewCardDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, doc, _el_1, _el_5, _el_6, _el_7, _el_10, t2, t3, t4, _el_14, _el_15, _el_16, _el_19, _el_21, _el_25, _el_26, _text_27, t5, _el_28, t6, t7, _el_29, _text_30, _el_31, _el_35, _el_36, _el_37, _el_39, _el_41, _el_42, _el_44, _el_48, _el_49, _el_50, _el_52, _el_53, _el_54, _el_55, _el_56, _text_57, _el_58, _el_59, _el_62, _text_63, _this = this, _null = null,
        _s11_ = "sub-options",
        _s14_ = "material-icons",
        _s16_ = "font-size: 40px;",
        _s14_0 = "account_circle",
        _s21_ = "color--primary-action",
        _s14_1 = "Primary action",
        _s11_0 = "statusColor",
        _s4_ = "icon",
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._card_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/ckeditor_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/card");
      T.setAttribute(_el_0, "title", "Card Demo");
      _this.addShimC$1(_el_0);
      t1 = new D.DemoHeaderComponent();
      _this._card_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._card_demo_template$_compView_0.create0$1(t1);
      doc = document;
      _el_1 = T.appendElement(doc, parentRenderNode, "h3");
      _this.addShimE$1(_el_1);
      T.appendText(_el_1, "Simple cards");
      t1 = H.interceptedTypeCheck(T.appendElement(doc, parentRenderNode, "p"), "$isHtmlElement");
      _this.updateChildClass$2(t1, _s11_);
      _this.addShimE$1(t1);
      T.appendText(t1, "Simple card with image and title");
      t1 = E.ViewSkawaCardComponent0$(_this, 5);
      _this._compView_5 = t1;
      _el_5 = t1.rootEl;
      parentRenderNode.appendChild(_el_5);
      _this.addShimC$1(_el_5);
      _this._SkawaCardComponent_5_5 = new V.SkawaCardComponent();
      t1 = E.ViewSkawaCardHeaderComponent0$(_this, 6);
      _this._card_demo_template$_compView_6 = t1;
      _el_6 = t1.rootEl;
      _this.addShimC$1(_el_6);
      _this._SkawaCardHeaderComponent_6_5 = new V.SkawaCardHeaderComponent();
      _el_7 = doc.createElement("skawa-header-image");
      _this.addShimE$1(_el_7);
      _this._SkawaCardHeaderImageDirective_7_5 = new F.SkawaCardHeaderImageDirective();
      t1 = H.interceptedTypeCheck(T.appendElement(doc, _el_7, "i"), "$isHtmlElement");
      _this.updateChildClass$2(t1, _s14_);
      T.setAttribute(t1, "style", _s16_);
      _this.addShimE$1(t1);
      T.appendText(t1, _s14_0);
      _el_10 = doc.createElement("skawa-header-title");
      _this.addShimE$1(_el_10);
      _this._SkawaCardHeaderTitleDirective_10_5 = new F.SkawaCardHeaderTitleDirective();
      T.appendText(_el_10, "Weee");
      t1 = _this._SkawaCardHeaderComponent_6_5;
      t1.image = _this._SkawaCardHeaderImageDirective_7_5;
      t2 = [W.Element];
      t3 = [P.Object];
      _this._card_demo_template$_compView_6.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_7, _el_10], t2)], t3));
      t1 = _this._SkawaCardComponent_5_5;
      t1.cardHeader = _this._SkawaCardHeaderComponent_6_5;
      t4 = [W.HtmlElement];
      _this._compView_5.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_6], t4)], t3));
      t1 = H.interceptedTypeCheck(T.appendElement(doc, parentRenderNode, "p"), "$isHtmlElement");
      _this.updateChildClass$2(t1, _s11_);
      _this.addShimE$1(t1);
      T.appendText(t1, "Simple card with image, title and subtitle");
      t1 = E.ViewSkawaCardComponent0$(_this, 14);
      _this._card_demo_template$_compView_14 = t1;
      _el_14 = t1.rootEl;
      parentRenderNode.appendChild(_el_14);
      _this.addShimC$1(_el_14);
      _this._SkawaCardComponent_14_5 = new V.SkawaCardComponent();
      t1 = E.ViewSkawaCardHeaderComponent0$(_this, 15);
      _this._card_demo_template$_compView_15 = t1;
      _el_15 = t1.rootEl;
      _this.addShimC$1(_el_15);
      _this._SkawaCardHeaderComponent_15_5 = new V.SkawaCardHeaderComponent();
      _el_16 = doc.createElement("skawa-header-image");
      _this.addShimE$1(_el_16);
      _this._SkawaCardHeaderImageDirective_16_5 = new F.SkawaCardHeaderImageDirective();
      t1 = H.interceptedTypeCheck(T.appendElement(doc, _el_16, "i"), "$isHtmlElement");
      _this.updateChildClass$2(t1, _s14_);
      T.setAttribute(t1, "style", _s16_);
      _this.addShimE$1(t1);
      T.appendText(t1, _s14_0);
      _el_19 = doc.createElement("skawa-header-title");
      _this.addShimE$1(_el_19);
      _this._SkawaCardHeaderTitleDirective_19_5 = new F.SkawaCardHeaderTitleDirective();
      T.appendText(_el_19, "Weee");
      _el_21 = doc.createElement("skawa-header-subhead");
      _this.addShimE$1(_el_21);
      _this._SkawaCardHeaderSubheadDirective_21_5 = new F.SkawaCardHeaderSubheadDirective();
      T.appendText(_el_21, "Subhead");
      t1 = _this._SkawaCardHeaderComponent_15_5;
      t1.subhead = _this._SkawaCardHeaderSubheadDirective_21_5;
      t1.image = _this._SkawaCardHeaderImageDirective_16_5;
      _this._card_demo_template$_compView_15.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_16, _el_19, _el_21], t2)], t3));
      t1 = _this._SkawaCardComponent_14_5;
      t1.cardHeader = _this._SkawaCardHeaderComponent_15_5;
      _this._card_demo_template$_compView_14.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_15], t4)], t3));
      t1 = H.interceptedTypeCheck(T.appendElement(doc, parentRenderNode, "p"), "$isHtmlElement");
      _this.updateChildClass$2(t1, _s11_);
      _this.addShimE$1(t1);
      T.appendText(t1, "Simple card with content and with a primary action");
      t1 = E.ViewSkawaCardComponent0$(_this, 25);
      _this._card_demo_template$_compView_25 = t1;
      _el_25 = t1.rootEl;
      parentRenderNode.appendChild(_el_25);
      _this.addShimC$1(_el_25);
      _this._SkawaCardComponent_25_5 = new V.SkawaCardComponent();
      t1 = E.ViewSkawaCardContentComponent0$(_this, 26);
      _this._card_demo_template$_compView_26 = t1;
      _el_26 = t1.rootEl;
      _this.addShimC$1(_el_26);
      t1 = new V.SkawaCardContentComponent(_this._SkawaCardComponent_25_5);
      _this._SkawaCardContentComponent_26_5 = t1;
      _text_27 = T.createText("In this demo, there is only content and actions below it.");
      t5 = [W.Text];
      _this._card_demo_template$_compView_26.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_27], t5)], t3));
      t1 = X.ViewSkawaCardActionsComponent0$(_this, 28);
      _this._compView_28 = t1;
      _el_28 = t1.rootEl;
      _this.addShimC$1(_el_28);
      t1 = _this.parentView;
      t6 = _this.viewData.parentIndex;
      t7 = H.interceptedTypeCheck(t1.injectorGetOptional$2(C.Type_SkawaCardHeaderComponent_2jN, t6), "$isSkawaCardHeaderComponent");
      _this._SkawaCardActionsComponent_28_5 = new X.SkawaCardActionsComponent(t7);
      t7 = U.ViewMaterialButtonComponent0$(_this, 29);
      _this._card_demo_template$_compView_29 = t7;
      _el_29 = t7.rootEl;
      _this.updateChildClassNonHtml$2(_el_29, _s21_);
      _this.addShimC$1(_el_29);
      t7 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t6)));
      _this._AcxDarkTheme_29_5 = t7;
      t7 = B.MaterialButtonComponent$(_el_29, t7, _this._card_demo_template$_compView_29, _null);
      _this._MaterialButtonComponent_29_6 = t7;
      _text_30 = T.createText(_s14_1);
      _this._card_demo_template$_compView_29.create$2(0, t7, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_30], t5)], t3));
      _this._compView_28.create$2(0, _this._SkawaCardActionsComponent_28_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_29], t4)], t3));
      _this._card_demo_template$_compView_25.create$2(0, _this._SkawaCardComponent_25_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_26, _el_28], t4)], t3));
      _el_31 = T.appendElement(doc, parentRenderNode, "h3");
      _this.addShimE$1(_el_31);
      T.appendText(_el_31, "Complex cards");
      t7 = H.interceptedTypeCheck(T.appendElement(doc, parentRenderNode, "p"), "$isHtmlElement");
      _this.updateChildClass$2(t7, _s11_);
      _this.addShimE$1(t7);
      T.appendText(t7, "Card with custom top box-shadow");
      t7 = E.ViewSkawaCardComponent0$(_this, 35);
      _this._card_demo_template$_compView_35 = t7;
      _el_35 = t7.rootEl;
      parentRenderNode.appendChild(_el_35);
      _this.addShimC$1(_el_35);
      _this._SkawaCardComponent_35_5 = new V.SkawaCardComponent();
      t7 = E.ViewSkawaCardHeaderComponent0$(_this, 36);
      _this._card_demo_template$_compView_36 = t7;
      _el_36 = t7.rootEl;
      T.setAttribute(_el_36, _s11_0, "rgb(0,127,0)");
      _this.addShimC$1(_el_36);
      _this._SkawaCardHeaderComponent_36_5 = new V.SkawaCardHeaderComponent();
      _el_37 = doc.createElement("skawa-header-title");
      _this.addShimE$1(_el_37);
      _this._SkawaCardHeaderTitleDirective_37_5 = new F.SkawaCardHeaderTitleDirective();
      T.appendText(_el_37, "Some");
      _el_39 = doc.createElement("skawa-header-subhead");
      _this.addShimE$1(_el_39);
      _this._SkawaCardHeaderSubheadDirective_39_5 = new F.SkawaCardHeaderSubheadDirective();
      T.appendText(_el_39, "subhead");
      t7 = _this._SkawaCardHeaderComponent_36_5;
      t7.subhead = _this._SkawaCardHeaderSubheadDirective_39_5;
      _this._card_demo_template$_compView_36.create$2(0, t7, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_37, _el_39], t2)], t3));
      t7 = E.ViewSkawaCardContentComponent0$(_this, 41);
      _this._card_demo_template$_compView_41 = t7;
      _el_41 = t7.rootEl;
      _this.addShimC$1(_el_41);
      _this._SkawaCardContentComponent_41_5 = new V.SkawaCardContentComponent(_this._SkawaCardComponent_35_5);
      _el_42 = doc.createElement("p");
      _this.addShimE$1(_el_42);
      T.appendText(_el_42, "Card components use `transclusion` a lot. Expect to see <ng-content></ng-content> pieces a lot.");
      _el_44 = doc.createElement("p");
      _this.addShimE$1(_el_44);
      T.appendText(_el_44, "There a million different ways a card can look like. Expect to customize it somewhat.");
      _this._card_demo_template$_compView_41.create$2(0, _this._SkawaCardContentComponent_41_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_42, _el_44], t2)], t3));
      t7 = _this._SkawaCardComponent_35_5;
      t7.cardHeader = _this._SkawaCardHeaderComponent_36_5;
      _this._card_demo_template$_compView_35.create$2(0, t7, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_36, _el_41], t4)], t3));
      t7 = H.interceptedTypeCheck(T.appendElement(doc, parentRenderNode, "p"), "$isHtmlElement");
      _this.updateChildClass$2(t7, _s11_);
      _this.addShimE$1(t7);
      T.appendText(t7, "Expandable card with a primary action in the header and in the card");
      t7 = E.ViewSkawaCardComponent0$(_this, 48);
      _this._compView_48 = t7;
      _el_48 = t7.rootEl;
      parentRenderNode.appendChild(_el_48);
      _this.addShimC$1(_el_48);
      _this._SkawaCardComponent_48_5 = new V.SkawaCardComponent();
      t7 = E.ViewSkawaCardHeaderComponent0$(_this, 49);
      _this._compView_49 = t7;
      _el_49 = t7.rootEl;
      T.setAttribute(_el_49, _s11_0, "rgb(127,127,127)");
      _this.addShimC$1(_el_49);
      _this._SkawaCardHeaderComponent_49_5 = new V.SkawaCardHeaderComponent();
      _el_50 = doc.createElement("skawa-header-title");
      _this.addShimE$1(_el_50);
      _this._SkawaCardHeaderTitleDirective_50_5 = new F.SkawaCardHeaderTitleDirective();
      T.appendText(_el_50, "This could be fun!");
      t7 = X.ViewSkawaCardActionsComponent0$(_this, 52);
      _this._compView_52 = t7;
      _el_52 = t7.rootEl;
      _this.addShimC$1(_el_52);
      _this._SkawaCardActionsComponent_52_5 = new X.SkawaCardActionsComponent(_this._SkawaCardHeaderComponent_49_5);
      t7 = U.ViewMaterialButtonComponent0$(_this, 53);
      _this._compView_53 = t7;
      _el_53 = t7.rootEl;
      T.setAttribute(_el_53, "align-right", "");
      T.setAttribute(_el_53, _s4_, "");
      _this.addShimC$1(_el_53);
      t7 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t6)));
      _this._AcxDarkTheme_53_5 = t7;
      _this._MaterialButtonComponent_53_6 = B.MaterialButtonComponent$(_el_53, t7, _this._compView_53, _null);
      t7 = M.ViewMaterialIconComponent0$(_this, 54);
      _this._card_demo_template$_compView_54 = t7;
      _el_54 = t7.rootEl;
      T.setAttribute(_el_54, _s4_, "more_vert");
      _this.addShimC$1(_el_54);
      t7 = new Y.MaterialIconComponent(_el_54);
      _this._MaterialIconComponent_54_5 = t7;
      _this._card_demo_template$_compView_54.create0$1(t7);
      _this._compView_53.create$2(0, _this._MaterialButtonComponent_53_6, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_54], t4)], t3));
      _this._compView_52.create$2(0, _this._SkawaCardActionsComponent_52_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_53], t4)], t3));
      t7 = _this._SkawaCardHeaderComponent_49_5;
      t7.headerActions = _this._SkawaCardActionsComponent_52_5;
      _this._compView_49.create$2(0, t7, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_50, _el_52], t2)], t3));
      t7 = X.ViewSkawaCardActionsComponent0$(_this, 55);
      _this._card_demo_template$_compView_55 = t7;
      _el_55 = t7.rootEl;
      _this.addShimC$1(_el_55);
      t7 = H.interceptedTypeCheck(t1.injectorGetOptional$2(C.Type_SkawaCardHeaderComponent_2jN, t6), "$isSkawaCardHeaderComponent");
      _this._SkawaCardActionsComponent_55_5 = new X.SkawaCardActionsComponent(t7);
      t7 = U.ViewMaterialButtonComponent0$(_this, 56);
      _this._card_demo_template$_compView_56 = t7;
      _el_56 = t7.rootEl;
      _this.updateChildClassNonHtml$2(_el_56, _s21_);
      _this.addShimC$1(_el_56);
      t7 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t6)));
      _this._AcxDarkTheme_56_5 = t7;
      t7 = B.MaterialButtonComponent$(_el_56, t7, _this._card_demo_template$_compView_56, _null);
      _this._MaterialButtonComponent_56_6 = t7;
      _text_57 = T.createText(_s14_1);
      _this._card_demo_template$_compView_56.create$2(0, t7, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_57], t5)], t3));
      _el_58 = doc.createElement("span");
      H.interceptedTypeCheck(_el_58, "$isHtmlElement");
      _this.updateChildClass$2(_el_58, "spacer");
      _this.addShimE$1(_el_58);
      t7 = U.ViewMaterialButtonComponent0$(_this, 59);
      _this._compView_59 = t7;
      _el_59 = t7.rootEl;
      T.setAttribute(_el_59, _s4_, "");
      _this.addShimC$1(_el_59);
      t1 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t6)));
      _this._AcxDarkTheme_59_5 = t1;
      t1 = B.MaterialButtonComponent$(_el_59, t1, _this._compView_59, _null);
      _this._MaterialButtonComponent_59_6 = t1;
      t6 = _this._appEl_60 = new V.ViewContainer(60, 59, _this, T.createAnchor());
      _this._NgIf_60_9 = new K.NgIf(new D.TemplateRef(t6, L.card_demo_template__viewFactory_CardDemoComponent1$closure()), t6);
      t7 = _this._appEl_61 = new V.ViewContainer(61, 59, _this, T.createAnchor());
      _this._NgIf_61_9 = new K.NgIf(new D.TemplateRef(t7, L.card_demo_template__viewFactory_CardDemoComponent2$closure()), t7);
      _this._compView_59.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([t6, t7], [V.ViewContainer])], t3));
      _this._card_demo_template$_compView_55.create$2(0, _this._SkawaCardActionsComponent_55_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_56, _el_58, _el_59], t2)], t3));
      t2 = E.ViewSkawaCardContentComponent0$(_this, 62);
      _this._card_demo_template$_compView_62 = t2;
      _el_62 = t2.rootEl;
      T.setAttribute(_el_62, "collapsed", "");
      _this.addShimC$1(_el_62);
      t2 = new V.SkawaCardContentComponent(_this._SkawaCardComponent_48_5);
      _this._SkawaCardContentComponent_62_5 = t2;
      _text_63 = T.createText("Secondary content");
      _this._card_demo_template$_compView_62.create$2(0, t2, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_63], t5)], t3));
      t5 = _this._SkawaCardComponent_48_5;
      t5.cardHeader = _this._SkawaCardHeaderComponent_49_5;
      _this._compView_48.create$2(0, t5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_49, _el_55, _el_62], t4)], t3));
      t3 = _this._MaterialButtonComponent_59_6._trigger;
      t4 = W.UIEvent;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(_this.eventHandler1$2$1(_this.get$_handle_trigger_59_0(), t4, t4))], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var _this = this,
        t1 = token === C.Type_SkawaCardComponent_sYn;
      if (t1 && 5 <= nodeIndex && nodeIndex <= 11)
        return _this._SkawaCardComponent_5_5;
      if (t1 && 14 <= nodeIndex && nodeIndex <= 22)
        return _this._SkawaCardComponent_14_5;
      if (25 <= nodeIndex && nodeIndex <= 30) {
        if (29 <= nodeIndex) {
          if (token === C.Type_AcxDarkTheme_Tng)
            return _this._AcxDarkTheme_29_5;
          if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
            return _this._MaterialButtonComponent_29_6;
        }
        if (t1)
          return _this._SkawaCardComponent_25_5;
      }
      if (t1 && 35 <= nodeIndex && nodeIndex <= 45)
        return _this._SkawaCardComponent_35_5;
      if (48 <= nodeIndex && nodeIndex <= 63) {
        if (53 <= nodeIndex && nodeIndex <= 54) {
          if (token === C.Type_AcxDarkTheme_Tng)
            return _this._AcxDarkTheme_53_5;
          if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
            return _this._MaterialButtonComponent_53_6;
        }
        if (56 <= nodeIndex && nodeIndex <= 57) {
          if (token === C.Type_AcxDarkTheme_Tng)
            return _this._AcxDarkTheme_56_5;
          if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
            return _this._MaterialButtonComponent_56_6;
        }
        if (59 <= nodeIndex && nodeIndex <= 61) {
          if (token === C.Type_AcxDarkTheme_Tng)
            return _this._AcxDarkTheme_59_5;
          if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
            return _this._MaterialButtonComponent_59_6;
        }
        if (t1)
          return _this._SkawaCardComponent_48_5;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var t1, changed, _this = this,
        firstCheck = _this.viewData._cdState === 0,
        local_secondaryContent = _this._SkawaCardContentComponent_62_5;
      if (firstCheck) {
        t1 = _this._card_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Card Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/card";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/ckeditor_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._card_demo_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaCardHeaderComponent_36_5.statusColor = "rgb(0,127,0)";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._card_demo_template$_compView_36.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaCardHeaderComponent_49_5.statusColor = "rgb(127,127,127)";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_49.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._MaterialIconComponent_54_5.set$icon(0, "more_vert");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._card_demo_template$_compView_54.viewData.set$cdMode(1);
      _this._NgIf_60_9.set$ngIf(local_secondaryContent.collapsed != null);
      _this._NgIf_61_9.set$ngIf(local_secondaryContent.collapsed == null);
      if (firstCheck && (_this._SkawaCardContentComponent_62_5.collapsed = true))
        _this._card_demo_template$_compView_62.viewData.set$cdMode(1);
      _this._appEl_60.detectChangesInNestedViews$0();
      _this._appEl_61.detectChangesInNestedViews$0();
      _this._card_demo_template$_compView_6.detectHostChanges$1(firstCheck);
      _this._card_demo_template$_compView_15.detectHostChanges$1(firstCheck);
      _this._card_demo_template$_compView_26.detectHostChanges$1(firstCheck);
      _this._compView_28.detectHostChanges$1(firstCheck);
      _this._card_demo_template$_compView_29.detectHostChanges$1(firstCheck);
      _this._card_demo_template$_compView_36.detectHostChanges$1(firstCheck);
      _this._card_demo_template$_compView_41.detectHostChanges$1(firstCheck);
      _this._compView_49.detectHostChanges$1(firstCheck);
      _this._compView_52.detectHostChanges$1(firstCheck);
      _this._compView_53.detectHostChanges$1(firstCheck);
      _this._card_demo_template$_compView_55.detectHostChanges$1(firstCheck);
      _this._card_demo_template$_compView_56.detectHostChanges$1(firstCheck);
      _this._compView_59.detectHostChanges$1(firstCheck);
      _this._card_demo_template$_compView_62.detectHostChanges$1(firstCheck);
      _this._card_demo_template$_compView_0.detectChanges$0();
      _this._compView_5.detectChanges$0();
      _this._card_demo_template$_compView_6.detectChanges$0();
      _this._card_demo_template$_compView_14.detectChanges$0();
      _this._card_demo_template$_compView_15.detectChanges$0();
      _this._card_demo_template$_compView_25.detectChanges$0();
      _this._card_demo_template$_compView_26.detectChanges$0();
      _this._compView_28.detectChanges$0();
      _this._card_demo_template$_compView_29.detectChanges$0();
      _this._card_demo_template$_compView_35.detectChanges$0();
      _this._card_demo_template$_compView_36.detectChanges$0();
      _this._card_demo_template$_compView_41.detectChanges$0();
      _this._compView_48.detectChanges$0();
      _this._compView_49.detectChanges$0();
      _this._compView_52.detectChanges$0();
      _this._compView_53.detectChanges$0();
      _this._card_demo_template$_compView_54.detectChanges$0();
      _this._card_demo_template$_compView_55.detectChanges$0();
      _this._card_demo_template$_compView_56.detectChanges$0();
      _this._compView_59.detectChanges$0();
      _this._card_demo_template$_compView_62.detectChanges$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._appEl_60.destroyNestedViews$0();
      _this._appEl_61.destroyNestedViews$0();
      _this._card_demo_template$_compView_0.destroyInternalState$0();
      _this._compView_5.destroyInternalState$0();
      _this._card_demo_template$_compView_6.destroyInternalState$0();
      _this._card_demo_template$_compView_14.destroyInternalState$0();
      _this._card_demo_template$_compView_15.destroyInternalState$0();
      _this._card_demo_template$_compView_25.destroyInternalState$0();
      _this._card_demo_template$_compView_26.destroyInternalState$0();
      _this._compView_28.destroyInternalState$0();
      _this._card_demo_template$_compView_29.destroyInternalState$0();
      _this._card_demo_template$_compView_35.destroyInternalState$0();
      _this._card_demo_template$_compView_36.destroyInternalState$0();
      _this._card_demo_template$_compView_41.destroyInternalState$0();
      _this._compView_48.destroyInternalState$0();
      _this._compView_49.destroyInternalState$0();
      _this._compView_52.destroyInternalState$0();
      _this._compView_53.destroyInternalState$0();
      _this._card_demo_template$_compView_54.destroyInternalState$0();
      _this._card_demo_template$_compView_55.destroyInternalState$0();
      _this._card_demo_template$_compView_56.destroyInternalState$0();
      _this._compView_59.destroyInternalState$0();
      _this._card_demo_template$_compView_62.destroyInternalState$0();
    },
    _handle_trigger_59_0$1: function($$event) {
      var local_secondaryContent = this._SkawaCardContentComponent_62_5;
      local_secondaryContent.collapsed = local_secondaryContent.collapsed == null ? true : null;
    },
    $asAppView: function() {
      return [N.CardDemoComponent];
    }
  };
  L._ViewCardDemoComponent1.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = M.ViewMaterialIconComponent0$(_this, 0);
      _this._card_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      T.setAttribute(_el_0, "icon", "expand_more");
      _this.addShimC$1(_el_0);
      t1 = new Y.MaterialIconComponent(_el_0);
      _this._card_demo_template$_MaterialIconComponent_0_5 = t1;
      _this._card_demo_template$_compView_0.create0$1(t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var changed, _this = this;
      if (_this.viewData._cdState === 0) {
        _this._card_demo_template$_MaterialIconComponent_0_5.set$icon(0, "expand_more");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._card_demo_template$_compView_0.viewData.set$cdMode(1);
      _this._card_demo_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._card_demo_template$_compView_0.destroyInternalState$0();
    },
    $asAppView: function() {
      return [N.CardDemoComponent];
    }
  };
  L._ViewCardDemoComponent2.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = M.ViewMaterialIconComponent0$(_this, 0);
      _this._card_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      T.setAttribute(_el_0, "icon", "expand_less");
      _this.addShimC$1(_el_0);
      t1 = new Y.MaterialIconComponent(_el_0);
      _this._card_demo_template$_MaterialIconComponent_0_5 = t1;
      _this._card_demo_template$_compView_0.create0$1(t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var changed, _this = this;
      if (_this.viewData._cdState === 0) {
        _this._card_demo_template$_MaterialIconComponent_0_5.set$icon(0, "expand_less");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._card_demo_template$_compView_0.viewData.set$cdMode(1);
      _this._card_demo_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._card_demo_template$_compView_0.destroyInternalState$0();
    },
    $asAppView: function() {
      return [N.CardDemoComponent];
    }
  };
  K.CkeditorDemoComponent.prototype = {};
  M.ViewCkeditorDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, doc, _el_3, t2, _el_6, _this = this, _null = null,
        _s9_ = "configUrl",
        _s10_ = "editorName",
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._ckeditor_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/card_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/ckeditor");
      T.setAttribute(_el_0, "title", "Ckeditor Demo");
      t1 = new D.DemoHeaderComponent();
      _this._ckeditor_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._ckeditor_demo_template$_compView_0.create0$1(t1);
      doc = document;
      T.appendText(T.appendElement(doc, parentRenderNode, "h3"), "Basic Ckeditor");
      t1 = A.ViewSkawaCkeditorComponent0$(_this, 3);
      _this._ckeditor_demo_template$_compView_3 = t1;
      _el_3 = t1.rootEl;
      parentRenderNode.appendChild(_el_3);
      T.setAttribute(_el_3, _s9_, "/ckeditor/basic_config.js");
      T.setAttribute(_el_3, _s10_, "basic_editor");
      t1 = [P.String];
      t2 = new V.SkawaCkeditorComponent(new P._AsyncBroadcastStreamController(_null, _null, t1));
      _this._SkawaCkeditorComponent_3_5 = t2;
      _this._ckeditor_demo_template$_compView_3.create0$1(t2);
      T.appendText(T.appendElement(doc, parentRenderNode, "h3"), "Ckeditor with external plugins");
      t2 = A.ViewSkawaCkeditorComponent0$(_this, 6);
      _this._ckeditor_demo_template$_compView_6 = t2;
      _el_6 = t2.rootEl;
      parentRenderNode.appendChild(_el_6);
      T.setAttribute(_el_6, _s9_, "/ckeditor/config.js");
      T.setAttribute(_el_6, "content", "Cat Dog");
      T.setAttribute(_el_6, _s10_, "editor");
      t1 = new V.SkawaCkeditorComponent(new P._AsyncBroadcastStreamController(_null, _null, t1));
      _this._SkawaCkeditorComponent_6_5 = t1;
      _this._ckeditor_demo_template$_compView_6.create0$1(t1);
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var t1, changed, currVal_6, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        t1 = _this._ckeditor_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Ckeditor Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/ckeditor";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/card_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._ckeditor_demo_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._SkawaCkeditorComponent_3_5;
        t1.editorName = "basic_editor";
        t1.configUrl = "/ckeditor/basic_config.js";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._ckeditor_demo_template$_compView_3.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._SkawaCkeditorComponent_6_5;
        t1.editorName = "editor";
        t1.content = "Cat Dog";
        t1.configUrl = "/ckeditor/config.js";
        changed = true;
      } else
        changed = false;
      currVal_6 = _ctx.plugins;
      t1 = _this._ckeditor_demo_template$_expr_6;
      if (t1 !== currVal_6) {
        _this._SkawaCkeditorComponent_6_5.set$extraPlugins(currVal_6);
        _this._ckeditor_demo_template$_expr_6 = currVal_6;
        changed = true;
      }
      if (changed)
        _this._ckeditor_demo_template$_compView_6.viewData.set$cdMode(1);
      _this._ckeditor_demo_template$_compView_0.detectChanges$0();
      _this._ckeditor_demo_template$_compView_3.detectChanges$0();
      _this._ckeditor_demo_template$_compView_6.detectChanges$0();
      if (firstCheck) {
        _this._SkawaCkeditorComponent_3_5.ngAfterViewInit$0();
        _this._SkawaCkeditorComponent_6_5.ngAfterViewInit$0();
      }
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._ckeditor_demo_template$_compView_0.destroyInternalState$0();
      _this._ckeditor_demo_template$_compView_3.destroyInternalState$0();
      _this._ckeditor_demo_template$_compView_6.destroyInternalState$0();
      _this._SkawaCkeditorComponent_3_5._changeController.close$0(0);
      _this._SkawaCkeditorComponent_6_5._changeController.close$0(0);
    },
    $asAppView: function() {
      return [K.CkeditorDemoComponent];
    }
  };
  K.CarTableComponent.prototype = {
    makeAccessor$1: function(row) {
      return H.interceptedTypeCheck(row, "$isCarRowData").name;
    },
    opinionAccessor$1: function(row) {
      return H.interceptedTypeCheck(row, "$isCarRowData").opinion;
    }
  };
  K.CarRowData.prototype = {};
  D.ViewCarTableComponent0.prototype = {
    build$0: function() {
      var t1, _el_3, t2, t3, _el_4, _this = this, _null = null,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl);
      T.appendText(T.appendElement(document, parentRenderNode, "h3"), "Simple datatable");
      t1 = K.CarRowData;
      _this.set$_car_table_template$_compView_2(N.ViewSkawaDataTableComponent0$(_this, 2, t1));
      parentRenderNode.appendChild(_this._car_table_template$_compView_2.rootEl);
      _this.set$_SkawaDataTableComponent_2_5(S.SkawaDataTableComponent$(_this._car_table_template$_compView_2, t1));
      _this.set$_car_table_template$_compView_3(Y.ViewSkawaDataTableColComponent0$(_this, 3, t1));
      _el_3 = _this._car_table_template$_compView_3.rootEl;
      _this.updateChildClassNonHtml$2(_el_3, "text-column");
      T.setAttribute(_el_3, "header", "Car make");
      t2 = [t1];
      t3 = [t1];
      _this.set$_car_table_template$_SkawaDataTableColComponent_3_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(_null, _null, t2), _null, t3));
      _this._car_table_template$_compView_3.create0$1(_this._car_table_template$_SkawaDataTableColComponent_3_5);
      _this.set$_car_table_template$_compView_4(Y.ViewSkawaDataTableColComponent0$(_this, 4, t1));
      _el_4 = _this._car_table_template$_compView_4.rootEl;
      T.setAttribute(_el_4, "header", "My strong opinion");
      _this.set$_car_table_template$_SkawaDataTableColComponent_4_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(_null, _null, t2), _null, t3));
      _this._car_table_template$_compView_4.create0$1(_this._car_table_template$_SkawaDataTableColComponent_4_5);
      _this._SkawaDataTableComponent_2_5.set$columns(0, H.setRuntimeTypeInfo([_this._car_table_template$_SkawaDataTableColComponent_3_5, _this._car_table_template$_SkawaDataTableColComponent_4_5], [[G.SkawaDataTableColComponent, K.CarRowData]]));
      _this._car_table_template$_compView_2.create$2(0, _this._SkawaDataTableComponent_2_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_3, _el_4], [W.HtmlElement])], [P.Object]));
      _this.init0$0();
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var t1;
      if (2 <= nodeIndex && nodeIndex <= 4) {
        t1 = token === C.Type_SkawaDataTableColComponent_tpI;
        if (t1 && 3 === nodeIndex)
          return this._car_table_template$_SkawaDataTableColComponent_3_5;
        if (t1 && 4 === nodeIndex)
          return this._car_table_template$_SkawaDataTableColComponent_4_5;
        if (token === C.Type_SkawaDataTableComponent_qdG)
          return this._SkawaDataTableComponent_2_5;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var changed, currVal_1, t1, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        _this._SkawaDataTableComponent_2_5.selectable = false;
        changed = true;
      } else
        changed = false;
      currVal_1 = _ctx.rowData;
      t1 = _this._car_table_template$_expr_1;
      if (t1 !== currVal_1) {
        _this._SkawaDataTableComponent_2_5.set$rows(0, currVal_1);
        _this._car_table_template$_expr_1 = currVal_1;
        changed = true;
      }
      if (changed)
        _this._car_table_template$_compView_2.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _ctx.get$makeAccessor();
        _this._car_table_template$_SkawaDataTableColComponent_3_5.set$accessor(t1);
        t1 = _this._car_table_template$_SkawaDataTableColComponent_3_5;
        t1.header = "Car make";
        t1.classString = "text-column";
      }
      if (firstCheck)
        _this._car_table_template$_SkawaDataTableColComponent_3_5.ngOnInit$0();
      if (firstCheck) {
        t1 = _ctx.get$opinionAccessor();
        _this._car_table_template$_SkawaDataTableColComponent_4_5.set$accessor(t1);
        _this._car_table_template$_SkawaDataTableColComponent_4_5.header = "My strong opinion";
      }
      if (firstCheck)
        _this._car_table_template$_SkawaDataTableColComponent_4_5.ngOnInit$0();
      _this._car_table_template$_compView_2.detectChanges$0();
      _this._car_table_template$_compView_3.detectChanges$0();
      _this._car_table_template$_compView_4.detectChanges$0();
      if (firstCheck)
        _this._SkawaDataTableComponent_2_5.ngAfterViewInit$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._car_table_template$_compView_2.destroyInternalState$0();
      _this._car_table_template$_compView_3.destroyInternalState$0();
      _this._car_table_template$_compView_4.destroyInternalState$0();
      _this._car_table_template$_SkawaDataTableColComponent_3_5._triggerController.close$0(0);
      _this._car_table_template$_SkawaDataTableColComponent_4_5._triggerController.close$0(0);
      _this._SkawaDataTableComponent_2_5._data_table$_tearDownDisposer.dispose$0();
    },
    set$_car_table_template$_compView_2: function(_compView_2) {
      this._car_table_template$_compView_2 = H.assertSubtype(_compView_2, "$isViewSkawaDataTableComponent0", [K.CarRowData], "$asViewSkawaDataTableComponent0");
    },
    set$_SkawaDataTableComponent_2_5: function(_SkawaDataTableComponent_2_5) {
      this._SkawaDataTableComponent_2_5 = H.assertSubtype(_SkawaDataTableComponent_2_5, "$isSkawaDataTableComponent", [K.CarRowData], "$asSkawaDataTableComponent");
    },
    set$_car_table_template$_compView_3: function(_compView_3) {
      this._car_table_template$_compView_3 = H.assertSubtype(_compView_3, "$isViewSkawaDataTableColComponent0", [K.CarRowData], "$asViewSkawaDataTableColComponent0");
    },
    set$_car_table_template$_SkawaDataTableColComponent_3_5: function(_SkawaDataTableColComponent_3_5) {
      this._car_table_template$_SkawaDataTableColComponent_3_5 = H.assertSubtype(_SkawaDataTableColComponent_3_5, "$isSkawaDataTableColComponent", [K.CarRowData], "$asSkawaDataTableColComponent");
    },
    set$_car_table_template$_compView_4: function(_compView_4) {
      this._car_table_template$_compView_4 = H.assertSubtype(_compView_4, "$isViewSkawaDataTableColComponent0", [K.CarRowData], "$asViewSkawaDataTableColComponent0");
    },
    set$_car_table_template$_SkawaDataTableColComponent_4_5: function(_SkawaDataTableColComponent_4_5) {
      this._car_table_template$_SkawaDataTableColComponent_4_5 = H.assertSubtype(_SkawaDataTableColComponent_4_5, "$isSkawaDataTableColComponent", [K.CarRowData], "$asSkawaDataTableColComponent");
    },
    $asAppView: function() {
      return [K.CarTableComponent];
    }
  };
  T.DataTableDemoComponent.prototype = {};
  E.ViewDataTableDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, styles, t2, t3, t4, _this = this, _null = null,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._data_table_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/data_table_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/data_table");
      T.setAttribute(_el_0, "title", "Data Table Demo");
      t1 = new D.DemoHeaderComponent();
      _this._data_table_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._data_table_demo_template$_compView_0.create0$1(t1);
      t1 = new D.ViewCarTableComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 1));
      styles = $.ViewCarTableComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(_null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewCarTableComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t2 = document;
      t3 = t2.createElement("car-table");
      H.interceptedTypeCheck(t3, "$isHtmlElement");
      t1.rootEl = t3;
      _this._data_table_demo_template$_compView_1 = t1;
      parentRenderNode.appendChild(t3);
      t1 = new K.CarTableComponent(H.setRuntimeTypeInfo([new K.CarRowData("Trabant", "Eastern delight", false, H.setRuntimeTypeInfo(["trabant"], [P.String])), new K.CarRowData("Jaguar", "Hrrrrr", false, _null), new K.CarRowData("Ford", "Something for everybody", false, _null), new K.CarRowData("Renault", "Well, RedBull F1 team uses them, why not?", false, _null)], [K.CarRowData]));
      _this._CarTableComponent_1_5 = t1;
      _this._data_table_demo_template$_compView_1.create0$1(t1);
      T.appendText(T.appendElement(t2, parentRenderNode, "h3"), "Selectable and sortable datatable");
      t1 = H.interceptedTypeCheck(T.appendElement(t2, parentRenderNode, "p"), "$isHtmlElement");
      _this.updateChildClass$2(t1, "sub-options");
      T.appendText(t1, "Sort can be attached to desired columns and can be configured for allowed sort directions.");
      t1 = new V.ViewSchoolTableComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 6));
      styles = $.ViewSchoolTableComponent0__componentStyles;
      if (styles == null) {
        styles = new O._UnscopedComponentStyles(_null, C.List_empty0, "", "", "");
        styles._appendStyles$0();
        $.ViewSchoolTableComponent0__componentStyles = styles;
      }
      t1.componentStyles = styles;
      t3 = t2.createElement("school-table");
      H.interceptedTypeCheck(t3, "$isHtmlElement");
      t1.rootEl = t3;
      _this._data_table_demo_template$_compView_6 = t1;
      parentRenderNode.appendChild(t3);
      t1 = new G.SchoolTableComponent(H.setRuntimeTypeInfo([new G.SchoolRowData("2. class", 11, 18, false, C.List_empty1), new G.SchoolRowData("3. class", 13, 13, false, C.List_empty1), new G.SchoolRowData("1. class", 15, 12, false, C.List_empty1), new G.SchoolRowData("4. class", 20, 13, false, C.List_empty1)], [G.SchoolRowData]));
      _this._SchoolTableComponent_6_5 = t1;
      _this._data_table_demo_template$_compView_6.create0$1(t1);
      t1 = new T.ViewWrTableComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 7));
      styles = $.ViewWrTableComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewWrTableComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$WrTableComponent, _null);
      t1.componentStyles = styles;
      t2 = t2.createElement("wr-table");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._data_table_demo_template$_compView_7 = t1;
      parentRenderNode.appendChild(t2);
      t1 = $.$get$WrTableComponent__columns();
      t2 = [G.SkawaDataTableColComponent, N.WrRowData];
      t3 = Z._MultiSelectionModelImpl$(t1, Z.selection_model___defaultKeyProvider$closure(), t2);
      t4 = H.setRuntimeTypeInfo([F.OptionGroup$withLabel(t1, _null, t2)], [[F.OptionGroup, [G.SkawaDataTableColComponent, N.WrRowData]]]);
      t2 = new F.SelectionOptions(new P._SyncBroadcastStreamController(_null, _null, [[P.List, [F.OptionGroup, t2]]]), [t2]);
      t2.set$optionGroups(t4);
      t1 = new N.WrTableComponent(t3, t2, H.setRuntimeTypeInfo([new N.WrRowData("Calvin Johnson", "DET", 122, 1964, 92, false, C.List_empty1), new N.WrRowData("Brandon Marshall", "CHI", 118, 1508, 75, false, C.List_empty1), new N.WrRowData("Wes Welker", "NE", 118, 1354, 72, false, C.List_empty1), new N.WrRowData("Andre Johnson", "HOU", 112, 1598, 79, false, C.List_empty1), new N.WrRowData("Jason Witten", "DAL", 110, 1039, 56, false, C.List_empty1), new N.WrRowData("Reggie Wayne", "IND", 106, 1355, 73, false, C.List_empty1), new N.WrRowData("A.J. Green", "CIN", 97, 1530, 61, false, C.List_empty1), new N.WrRowData("Demaryius Thomas", "DEN", 94, 1434, 60, false, C.List_empty1), new N.WrRowData("Tony Gonzalez", "ATL", 93, 930, 65, false, C.List_empty1), new N.WrRowData("Dez Bryant", "DAL", 92, 1382, 54, false, C.List_empty1)], [N.WrRowData]), t1, new L.Icon("more_vert"));
      _this._WrTableComponent_7_5 = t1;
      _this._data_table_demo_template$_compView_7.create0$1(t1);
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var t1, changed, _this = this,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        t1 = _this._data_table_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Data Table Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/data_table";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/data_table_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._data_table_demo_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck)
        _this._WrTableComponent_7_5.ngOnInit$0();
      _this._data_table_demo_template$_compView_0.detectChanges$0();
      _this._data_table_demo_template$_compView_1.detectChanges$0();
      _this._data_table_demo_template$_compView_6.detectChanges$0();
      _this._data_table_demo_template$_compView_7.detectChanges$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._data_table_demo_template$_compView_0.destroyInternalState$0();
      _this._data_table_demo_template$_compView_1.destroyInternalState$0();
      _this._data_table_demo_template$_compView_6.destroyInternalState$0();
      _this._data_table_demo_template$_compView_7.destroyInternalState$0();
    },
    $asAppView: function() {
      return [T.DataTableDemoComponent];
    }
  };
  G.SchoolTableComponent.prototype = {
    categoryAccessor$1: function(row) {
      return H.interceptedTypeCheck(row, "$isSchoolRowData").category;
    },
    maleAccessor$1: function(row) {
      return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isSchoolRowData").male);
    },
    femaleAccessor$1: function(row) {
      return C.JSInt_methods.toString$0(H.interceptedTypeCheck(row, "$isSchoolRowData").female);
    },
    peopleAccessor$1: function(row) {
      H.interceptedTypeCheck(row, "$isSchoolRowData");
      return C.JSInt_methods.toString$0(row.female + row.male);
    },
    aggregate$1: function(accessor) {
      var t1, t2, t3, mapped;
      H.functionTypeCheck(accessor, {func: 1, ret: P.String, args: [G.SchoolRowData]});
      t1 = this.selectableRowData;
      t2 = H.getTypeArgumentByIndex(t1, 0);
      t3 = P.String;
      mapped = new H.MappedIterable(new H.WhereIterable(t1, H.functionTypeCheck(new G.SchoolTableComponent_aggregate_closure(), {func: 1, ret: P.bool, args: [t2]}), [t2]), H.functionTypeCheck(accessor, {func: 1, ret: t3, args: [t2]}), [t2, t3]);
      return !mapped.get$isEmpty(mapped) ? mapped.reduce$1(0, this.get$_aggregateReducer()) : "-";
    },
    _aggregateReducer$2: function(a, b) {
      var t1, t2, _null = null;
      H.stringTypeCheck(a);
      H.stringTypeCheck(b);
      t1 = a == null;
      if (t1 || b == null)
        return t1 ? b : a;
      t1 = P.int_parse(a, _null, _null);
      t2 = P.int_parse(b, _null, _null);
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return H.iae(t2);
      return C.JSInt_methods.toString$0(t1 + t2);
    },
    sort$1: function(_, column) {
      var t1;
      H.assertSubtype(column, "$isSkawaDataTableColComponent", [U.RowData], "$asSkawaDataTableColComponent");
      t1 = this.selectableRowData;
      if (column.sortModel.activeSort == null)
        C.JSArray_methods.sort$1(t1, new G.SchoolTableComponent_sort_closure());
      else
        C.JSArray_methods.sort$1(t1, new G.SchoolTableComponent_sort_closure0(column));
    }
  };
  G.SchoolTableComponent_aggregate_closure.prototype = {
    call$1: function(row) {
      return H.interceptedTypeCheck(row, "$isSchoolRowData").checked;
    },
    $signature: 123
  };
  G.SchoolTableComponent_sort_closure.prototype = {
    call$2: function(a, b) {
      H.interceptedTypeCheck(a, "$isSchoolRowData");
      H.interceptedTypeCheck(b, "$isSchoolRowData");
      return C.JSString_methods.compareTo$1(a.category, b.category);
    },
    $signature: 33
  };
  G.SchoolTableComponent_sort_closure0.prototype = {
    call$2: function(a, b) {
      var t1, t2;
      H.interceptedTypeCheck(a, "$isSchoolRowData");
      H.interceptedTypeCheck(b, "$isSchoolRowData");
      t1 = this.column;
      t2 = t1.header;
      if (t2 === "Male")
        return t1.sortModel.activeSort === C.SortDirection_0 ? a.male - b.male : b.male - a.male;
      else if (t2 === "Female")
        return t1.sortModel.activeSort === C.SortDirection_0 ? a.female - b.female : b.female - a.female;
      else if (t2 === "All")
        return b.male + b.female - (a.male + a.female);
    },
    $signature: 33
  };
  G.SchoolRowData.prototype = {};
  V.ViewSchoolTableComponent0.prototype = {
    build$0: function() {
      var _el_1, t2, t3, _el_2, t4, _el_3, _el_4, _this = this, _s6_ = "header", _null = null,
        _s8_ = "sortable",
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = G.SchoolRowData;
      _this.set$_school_table_template$_compView_0(N.ViewSkawaDataTableComponent0$(_this, 0, t1));
      parentRenderNode.appendChild(_this._school_table_template$_compView_0.rootEl);
      _this.set$_SkawaDataTableComponent_0_5(S.SkawaDataTableComponent$(_this._school_table_template$_compView_0, t1));
      _this.set$_school_table_template$_compView_1(Y.ViewSkawaDataTableColComponent0$(_this, 1, t1));
      _el_1 = _this._school_table_template$_compView_1.rootEl;
      _this.updateChildClassNonHtml$2(_el_1, "text-column");
      T.setAttribute(_el_1, "footer", "Total:");
      T.setAttribute(_el_1, _s6_, "Class");
      t2 = [t1];
      t3 = [t1];
      _this.set$_SkawaDataTableColComponent_1_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(_null, _null, t2), _null, t3));
      _this._school_table_template$_compView_1.create0$1(_this._SkawaDataTableColComponent_1_5);
      _this.set$_school_table_template$_compView_2(Y.ViewSkawaDataTableColComponent0$(_this, 2, t1));
      _el_2 = _this._school_table_template$_compView_2.rootEl;
      T.setAttribute(_el_2, _s6_, "Male");
      T.setAttribute(_el_2, "initialSort", "asc");
      T.setAttribute(_el_2, _s8_, "");
      _this.set$_SkawaDataTableColComponent_2_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(_null, _null, t2), _null, t3));
      t4 = _this._SkawaDataTableColComponent_2_5;
      _this._SkawaDataTableSortDirective_2_6 = new S.SkawaDataTableSortDirective(t4);
      _this._school_table_template$_compView_2.create0$1(t4);
      _this.set$_school_table_template$_compView_3(Y.ViewSkawaDataTableColComponent0$(_this, 3, t1));
      _el_3 = _this._school_table_template$_compView_3.rootEl;
      T.setAttribute(_el_3, _s6_, "Female");
      T.setAttribute(_el_3, _s8_, "desc, asc");
      _this.set$_SkawaDataTableColComponent_3_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(_null, _null, t2), _null, t3));
      t4 = _this._SkawaDataTableColComponent_3_5;
      _this._SkawaDataTableSortDirective_3_6 = new S.SkawaDataTableSortDirective(t4);
      _this._school_table_template$_compView_3.create0$1(t4);
      _this.set$_school_table_template$_compView_4(Y.ViewSkawaDataTableColComponent0$(_this, 4, t1));
      _el_4 = _this._school_table_template$_compView_4.rootEl;
      T.setAttribute(_el_4, _s6_, "All");
      T.setAttribute(_el_4, _s8_, "desc");
      _this.set$_SkawaDataTableColComponent_4_5(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(_null, _null, t2), _null, t3));
      t1 = _this._SkawaDataTableColComponent_4_5;
      _this._SkawaDataTableSortDirective_4_6 = new S.SkawaDataTableSortDirective(t1);
      _this._school_table_template$_compView_4.create0$1(t1);
      t1 = [G.SkawaDataTableColComponent, G.SchoolRowData];
      _this._SkawaDataTableComponent_0_5.set$columns(0, H.setRuntimeTypeInfo([_this._SkawaDataTableColComponent_1_5, _this._SkawaDataTableColComponent_2_5, _this._SkawaDataTableColComponent_3_5, _this._SkawaDataTableColComponent_4_5], [t1]));
      _this._school_table_template$_compView_0.create$2(0, _this._SkawaDataTableComponent_0_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_1, _el_2, _el_3, _el_4], [W.HtmlElement])], [P.Object]));
      t2 = _this._SkawaDataTableComponent_0_5._sortController;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(_this.eventHandler1$2$1(_ctx.get$sort(_ctx), t1, t1))], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var t1, _this = this;
      if (nodeIndex <= 4) {
        t1 = token === C.Type_SkawaDataTableColComponent_tpI;
        if (t1 && 1 === nodeIndex)
          return _this._SkawaDataTableColComponent_1_5;
        if (t1 && 2 === nodeIndex)
          return _this._SkawaDataTableColComponent_2_5;
        if (t1 && 3 === nodeIndex)
          return _this._SkawaDataTableColComponent_3_5;
        if (t1 && 4 === nodeIndex)
          return _this._SkawaDataTableColComponent_4_5;
        if (token === C.Type_SkawaDataTableComponent_qdG)
          return _this._SkawaDataTableComponent_0_5;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var changed, currVal_1, t1, currVal_9, currVal_15, currVal_20, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        _this._SkawaDataTableComponent_0_5.selectable = true;
        changed = true;
      } else
        changed = false;
      currVal_1 = _ctx.selectableRowData;
      t1 = _this._school_table_template$_expr_1;
      if (t1 !== currVal_1) {
        _this._SkawaDataTableComponent_0_5.set$rows(0, currVal_1);
        _this._school_table_template$_expr_1 = currVal_1;
        changed = true;
      }
      if (changed)
        _this._school_table_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _ctx.get$categoryAccessor();
        _this._SkawaDataTableColComponent_1_5.set$accessor(t1);
        t1 = _this._SkawaDataTableColComponent_1_5;
        t1.header = "Class";
        t1.footer = "Total:";
        t1.skipFooter = false;
        t1.classString = "text-column";
      }
      if (firstCheck)
        _this._SkawaDataTableColComponent_1_5.ngOnInit$0();
      if (firstCheck) {
        t1 = _ctx.get$maleAccessor();
        _this._SkawaDataTableColComponent_2_5.set$accessor(t1);
        t1 = _this._SkawaDataTableColComponent_2_5;
        t1.header = "Male";
        t1.skipFooter = false;
      }
      currVal_9 = _ctx.aggregate$1(_ctx.get$maleAccessor());
      t1 = _this._school_table_template$_expr_9;
      if (t1 != currVal_9)
        _this._school_table_template$_expr_9 = _this._SkawaDataTableColComponent_2_5.footer = currVal_9;
      if (firstCheck)
        _this._SkawaDataTableColComponent_2_5.ngOnInit$0();
      if (firstCheck) {
        _this._SkawaDataTableSortDirective_2_6.set$allowedSorts("");
        t1 = _this._SkawaDataTableSortDirective_2_6;
        t1.toString;
        if (C.Map_oWjV0.$index(0, "asc") == null)
          H.throwExpression(P.ArgumentError$('SkawaDataTableSortDirective initial sort value can only be "asc" or "desc"'));
        t1.column.sortModel.activeSort = H.interceptedTypeCheck(C.Map_oWjV0.$index(0, "asc"), "$isSortDirection");
        _this._SkawaDataTableColComponent_3_5.set$accessor(_ctx.get$femaleAccessor());
        t1 = _this._SkawaDataTableColComponent_3_5;
        t1.header = "Female";
        t1.skipFooter = false;
      }
      currVal_15 = _ctx.aggregate$1(_ctx.get$femaleAccessor());
      t1 = _this._expr_15;
      if (t1 != currVal_15)
        _this._expr_15 = _this._SkawaDataTableColComponent_3_5.footer = currVal_15;
      if (firstCheck)
        _this._SkawaDataTableColComponent_3_5.ngOnInit$0();
      if (firstCheck) {
        _this._SkawaDataTableSortDirective_3_6.set$allowedSorts("desc, asc");
        _this._SkawaDataTableColComponent_4_5.set$accessor(_ctx.get$peopleAccessor());
        t1 = _this._SkawaDataTableColComponent_4_5;
        t1.header = "All";
        t1.skipFooter = false;
      }
      currVal_20 = _ctx.aggregate$1(_ctx.get$peopleAccessor());
      t1 = _this._school_table_template$_expr_20;
      if (t1 != currVal_20)
        _this._school_table_template$_expr_20 = _this._SkawaDataTableColComponent_4_5.footer = currVal_20;
      if (firstCheck)
        _this._SkawaDataTableColComponent_4_5.ngOnInit$0();
      if (firstCheck)
        _this._SkawaDataTableSortDirective_4_6.set$allowedSorts("desc");
      _this._school_table_template$_compView_0.detectChanges$0();
      _this._school_table_template$_compView_1.detectChanges$0();
      _this._school_table_template$_compView_2.detectChanges$0();
      _this._school_table_template$_compView_3.detectChanges$0();
      _this._school_table_template$_compView_4.detectChanges$0();
      if (firstCheck)
        _this._SkawaDataTableComponent_0_5.ngAfterViewInit$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._school_table_template$_compView_0.destroyInternalState$0();
      _this._school_table_template$_compView_1.destroyInternalState$0();
      _this._school_table_template$_compView_2.destroyInternalState$0();
      _this._school_table_template$_compView_3.destroyInternalState$0();
      _this._school_table_template$_compView_4.destroyInternalState$0();
      _this._SkawaDataTableColComponent_1_5._triggerController.close$0(0);
      _this._SkawaDataTableColComponent_2_5._triggerController.close$0(0);
      _this._SkawaDataTableColComponent_3_5._triggerController.close$0(0);
      _this._SkawaDataTableColComponent_4_5._triggerController.close$0(0);
      _this._SkawaDataTableComponent_0_5._data_table$_tearDownDisposer.dispose$0();
    },
    set$_school_table_template$_compView_0: function(_compView_0) {
      this._school_table_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewSkawaDataTableComponent0", [G.SchoolRowData], "$asViewSkawaDataTableComponent0");
    },
    set$_SkawaDataTableComponent_0_5: function(_SkawaDataTableComponent_0_5) {
      this._SkawaDataTableComponent_0_5 = H.assertSubtype(_SkawaDataTableComponent_0_5, "$isSkawaDataTableComponent", [G.SchoolRowData], "$asSkawaDataTableComponent");
    },
    set$_school_table_template$_compView_1: function(_compView_1) {
      this._school_table_template$_compView_1 = H.assertSubtype(_compView_1, "$isViewSkawaDataTableColComponent0", [G.SchoolRowData], "$asViewSkawaDataTableColComponent0");
    },
    set$_SkawaDataTableColComponent_1_5: function(_SkawaDataTableColComponent_1_5) {
      this._SkawaDataTableColComponent_1_5 = H.assertSubtype(_SkawaDataTableColComponent_1_5, "$isSkawaDataTableColComponent", [G.SchoolRowData], "$asSkawaDataTableColComponent");
    },
    set$_school_table_template$_compView_2: function(_compView_2) {
      this._school_table_template$_compView_2 = H.assertSubtype(_compView_2, "$isViewSkawaDataTableColComponent0", [G.SchoolRowData], "$asViewSkawaDataTableColComponent0");
    },
    set$_SkawaDataTableColComponent_2_5: function(_SkawaDataTableColComponent_2_5) {
      this._SkawaDataTableColComponent_2_5 = H.assertSubtype(_SkawaDataTableColComponent_2_5, "$isSkawaDataTableColComponent", [G.SchoolRowData], "$asSkawaDataTableColComponent");
    },
    set$_school_table_template$_compView_3: function(_compView_3) {
      this._school_table_template$_compView_3 = H.assertSubtype(_compView_3, "$isViewSkawaDataTableColComponent0", [G.SchoolRowData], "$asViewSkawaDataTableColComponent0");
    },
    set$_SkawaDataTableColComponent_3_5: function(_SkawaDataTableColComponent_3_5) {
      this._SkawaDataTableColComponent_3_5 = H.assertSubtype(_SkawaDataTableColComponent_3_5, "$isSkawaDataTableColComponent", [G.SchoolRowData], "$asSkawaDataTableColComponent");
    },
    set$_school_table_template$_compView_4: function(_compView_4) {
      this._school_table_template$_compView_4 = H.assertSubtype(_compView_4, "$isViewSkawaDataTableColComponent0", [G.SchoolRowData], "$asViewSkawaDataTableColComponent0");
    },
    set$_SkawaDataTableColComponent_4_5: function(_SkawaDataTableColComponent_4_5) {
      this._SkawaDataTableColComponent_4_5 = H.assertSubtype(_SkawaDataTableColComponent_4_5, "$isSkawaDataTableColComponent", [G.SchoolRowData], "$asSkawaDataTableColComponent");
    },
    $asAppView: function() {
      return [G.SchoolTableComponent];
    }
  };
  L.FirstDownPercentComponent.prototype = {
    $asRendersValue: function() {
      return [N.WrRowData];
    }
  };
  U.ViewFirstDownPercentComponent0.prototype = {
    build$0: function() {
      var t2, _this = this,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = new S.ViewMaterialProgressComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 0)),
        styles = $.ViewMaterialProgressComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewMaterialProgressComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$MaterialProgressComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("material-progress");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._first_down_percent_template$_compView_0 = t1;
      parentRenderNode.appendChild(t2);
      _this.addShimC$1(t2);
      t1 = new X.MaterialProgressComponent(_this._first_down_percent_template$_compView_0, t2, true, T.Intl_message("loading", null, "Label text for loading progress", C.Map_empty0, null));
      _this._MaterialProgressComponent_0_5 = t1;
      _this._first_down_percent_template$_compView_0.create0$1(t1);
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var changed, t1, currVal_0, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        _this._MaterialProgressComponent_0_5.max = 10000;
        changed = true;
      } else
        changed = false;
      t1 = _ctx.value;
      currVal_0 = C.JSDouble_methods.toInt$0(t1.firstDowns / t1.rec * 10000);
      t1 = _this._first_down_percent_template$_expr_0;
      if (t1 !== currVal_0) {
        _this._first_down_percent_template$_expr_0 = _this._MaterialProgressComponent_0_5.activeProgress = currVal_0;
        changed = true;
      }
      if (changed)
        _this._first_down_percent_template$_compView_0.viewData.set$cdMode(1);
      _this._first_down_percent_template$_compView_0.detectChanges$0();
      if (firstCheck) {
        t1 = _this._MaterialProgressComponent_0_5;
        t1._isInitialized = true;
        t1.toString;
      }
    },
    destroyInternal$0: function() {
      var t1, t2;
      this._first_down_percent_template$_compView_0.destroyInternalState$0();
      t1 = this._MaterialProgressComponent_0_5;
      t2 = t1._primaryAnimation;
      if (t2 != null)
        t2.cancel();
      t2 = t1._secondaryAnimation;
      if (t2 != null)
        t2.cancel();
      t1._secondaryIndicator = t1._primaryIndicator = t1._secondaryAnimation = t1._primaryAnimation = null;
    },
    $asAppView: function() {
      return [L.FirstDownPercentComponent];
    }
  };
  U._ViewFirstDownPercentComponentHost0.prototype = {
    build$0: function() {
      var t2, _this = this,
        t1 = new U.ViewFirstDownPercentComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 0)),
        styles = $.ViewFirstDownPercentComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewFirstDownPercentComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$FirstDownPercentComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("first-down-percent");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._first_down_percent_template$_compView_0 = t1;
      _this.rootEl = t2;
      t2 = new L.FirstDownPercentComponent();
      _this._FirstDownPercentComponent_0_5 = t2;
      t1.create$2(0, t2, _this.viewData.projectedNodes);
      _this.init1$1(_this.rootEl);
      return new D.ComponentRef(_this, 0, _this.rootEl, _this._FirstDownPercentComponent_0_5, [L.FirstDownPercentComponent]);
    },
    detectChangesInternal$0: function() {
      this._first_down_percent_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._first_down_percent_template$_compView_0.destroyInternalState$0();
    },
    $asAppView: function() {
      return [L.FirstDownPercentComponent];
    }
  };
  N.WrTableComponent.prototype = {
    itemRenderer$1: function(row) {
      return H.assertSubtype(row, "$isSkawaDataTableColComponent", [N.WrRowData], "$asSkawaDataTableColComponent").header;
    },
    ngOnInit$0: function() {
      return this.columnModel.get$selectionChanges().listen$1(new N.WrTableComponent_ngOnInit_closure(this));
    },
    set$columns: function(_, columns) {
      this.columns = H.assertSubtype(columns, "$isList", [[G.SkawaDataTableColComponent, N.WrRowData]], "$asList");
    },
    set$dataTableComponent: function(dataTableComponent) {
      this.dataTableComponent = H.assertSubtype(dataTableComponent, "$isSkawaDataTableComponent", [U.RowData], "$asSkawaDataTableComponent");
    }
  };
  N.WrTableComponent_closure.prototype = {
    call$1: function(row) {
      H.interceptedTypeCheck(row, "$isRowData");
      return C.ComponentFactory_Ohe;
    },
    $signature: 126
  };
  N.WrTableComponent_ngOnInit_closure.prototype = {
    call$1: function(_) {
      var t1, t2, t3;
      H.assertSubtype(_, "$isList", [[Z.SelectionChangeRecord, [G.SkawaDataTableColComponent, N.WrRowData]]], "$asList");
      t1 = this.$this;
      t2 = $.$get$WrTableComponent__columns();
      t3 = H.getTypeArgumentByIndex(t2, 0);
      t1.set$columns(0, P.List_List$from(new H.WhereIterable(t2, H.functionTypeCheck(new N.WrTableComponent_ngOnInit__closure(t1), {func: 1, ret: P.bool, args: [t3]}), [t3]), true, t3));
      t1.dataTableComponent.changeDetectorRef.markPathToRootAsCheckOnce$0();
    },
    $signature: 127
  };
  N.WrTableComponent_ngOnInit__closure.prototype = {
    call$1: function(row) {
      return this.$this.columnModel.selectedValues.contains$1(0, H.assertSubtype(row, "$isSkawaDataTableColComponent", [N.WrRowData], "$asSkawaDataTableColComponent"));
    },
    $signature: 128
  };
  N.WrRowData.prototype = {};
  T.ViewWrTableComponent0.prototype = {
    build$0: function() {
      var _el_1, t1, t2, styles, t3, _el_3, _this = this, _null = null,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        doc = document,
        _el_0 = T.appendElement(doc, parentRenderNode, "h3");
      _this.addShimE$1(_el_0);
      _el_1 = T.appendSpan(doc, _el_0);
      _this.addShimE$1(_el_1);
      T.appendText(_el_1, "Datatable with colRenderer");
      t1 = [G.SkawaDataTableColComponent, N.WrRowData];
      t2 = new Y.ViewMaterialDropdownSelectComponent0(_this, S.AppViewData_AppViewData(3, C.ViewType_1, 3), [t1]);
      styles = $.ViewMaterialDropdownSelectComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewMaterialDropdownSelectComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$MaterialDropdownSelectComponent, _null);
      t2.componentStyles = styles;
      t3 = doc.createElement("material-dropdown-select");
      t2.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
      _this.set$_wr_table_template$_compView_3(t2);
      _el_3 = _this._wr_table_template$_compView_3.rootEl;
      _el_0.appendChild(_el_3);
      _this.addShimC$1(_el_3);
      t2 = _this.parentView;
      t3 = _this.viewData.parentIndex;
      t1 = M.MaterialDropdownSelectComponent$(H.interceptedTypeCheck(t2.injectorGetOptional$2(C.Type_IdGenerator_yLN, t3), "$isIdGenerator"), H.interceptedTypeCheck(t2.injectorGetOptional$2(C.Type_PopupSizeProvider_a5y, t3), "$isPopupSizeProvider"), H.boolTypeCheck(t2.injectorGetOptional$2(C.OpaqueToken_isRtl, t3)), _null, _null, _this._wr_table_template$_compView_3, _el_3, t1);
      _this.set$_MaterialDropdownSelectComponent_3_5(t1);
      _this._wr_table_template$_compView_3.create$2(0, _this._MaterialDropdownSelectComponent_3_5, H.setRuntimeTypeInfo([C.List_empty0, C.List_empty0, C.List_empty0, C.List_empty0, C.List_empty0, C.List_empty0], [P.Object]));
      t1 = _this._appEl_4 = new V.ViewContainer(4, _null, _this, T.appendAnchor(parentRenderNode));
      _this._NgIf_4_9 = new K.NgIf(new D.TemplateRef(t1, T.wr_table_template__viewFactory_WrTableComponent1$closure()), t1);
      _this.init0$0();
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var t1, _this = this;
      if (3 === nodeIndex) {
        if (token === C.Type_Qkw || token === C.Type_DropdownHandle_YMM || token === C.Type_HasDisabled_qzc || token === C.Type_HasRenderer_wsa || token === C.Type_DeferredContentAware_BCk || token === C.Type_SelectionContainer_yzp || token === C.Type_PopupSizeProvider_a5y || token === C.Type_ActivationHandler_Nm5)
          return _this._MaterialDropdownSelectComponent_3_5;
        if (token === C.Type_ActiveItemModel_69t) {
          t1 = _this.__ActiveItemModel_3_13;
          return t1 == null ? _this.__ActiveItemModel_3_13 = _this._MaterialDropdownSelectComponent_3_5.activeModel : t1;
        }
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var t1, t2, changed, currVal_0, _this = this,
        _ctx = _this.ctx;
      if (_this.viewData._cdState === 0) {
        _this._MaterialDropdownSelectComponent_3_5.set$selectionInput(_ctx.columnModel);
        t1 = _this._MaterialDropdownSelectComponent_3_5;
        t1.showButtonBorder = false;
        t2 = _ctx.get$itemRenderer();
        t1.toString;
        t1.super$SelectionContainer$itemRenderer(H.functionTypeCheck(t2, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(t1, 0)]}));
        _this._MaterialDropdownSelectComponent_3_5.super$SelectionInputAdapter$optionsInput(_ctx.columnOptions);
        changed = true;
      } else
        changed = false;
      currVal_0 = _ctx.icon;
      t1 = _this._wr_table_template$_expr_0;
      if (t1 !== currVal_0) {
        _this._wr_table_template$_expr_0 = _this._MaterialDropdownSelectComponent_3_5.MaterialButtonWrapper_icon = currVal_0;
        changed = true;
      }
      if (changed) {
        t1 = _this._MaterialDropdownSelectComponent_3_5;
        t1._disabledChanged = false;
      }
      _this._NgIf_4_9.set$ngIf(_ctx.columnModel.selectedValues._collection$_length !== 0);
      _this._appEl_4.detectChangesInNestedViews$0();
      if (_this._query_SkawaDataTableComponent_1_0_isDirty) {
        t1 = _this._appEl_4.mapNestedViews$2$1(new T.ViewWrTableComponent0_detectChangesInternal_closure(), [S.SkawaDataTableComponent, U.RowData], T._ViewWrTableComponent1);
        _ctx.set$dataTableComponent(t1.length !== 0 ? C.JSArray_methods.get$first(t1) : null);
        _this._query_SkawaDataTableComponent_1_0_isDirty = false;
      }
      _this._wr_table_template$_compView_3.detectChanges$0();
    },
    destroyInternal$0: function() {
      var t1, t2;
      this._appEl_4.destroyNestedViews$0();
      this._wr_table_template$_compView_3.destroyInternalState$0();
      t1 = this._MaterialDropdownSelectComponent_3_5;
      t2 = t1._optionsListener;
      if (t2 != null)
        t2.cancel$0(0);
      t1 = t1._selectionListener;
      if (t1 != null)
        t1.cancel$0(0);
    },
    set$_wr_table_template$_compView_3: function(_compView_3) {
      this._wr_table_template$_compView_3 = H.assertSubtype(_compView_3, "$isViewMaterialDropdownSelectComponent0", [[G.SkawaDataTableColComponent, N.WrRowData]], "$asViewMaterialDropdownSelectComponent0");
    },
    set$_MaterialDropdownSelectComponent_3_5: function(_MaterialDropdownSelectComponent_3_5) {
      this._MaterialDropdownSelectComponent_3_5 = H.assertSubtype(_MaterialDropdownSelectComponent_3_5, "$isMaterialDropdownSelectComponent", [[G.SkawaDataTableColComponent, N.WrRowData]], "$asMaterialDropdownSelectComponent");
    },
    $asAppView: function() {
      return [N.WrTableComponent];
    }
  };
  T.ViewWrTableComponent0_detectChangesInternal_closure.prototype = {
    call$1: function(nestedView) {
      return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewWrTableComponent1")._wr_table_template$_SkawaDataTableComponent_0_5], [[S.SkawaDataTableComponent, U.RowData]]);
    },
    $signature: 129
  };
  T._ViewWrTableComponent1.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = N.WrRowData;
      _this.set$_wr_table_template$_compView_0(N.ViewSkawaDataTableComponent0$(_this, 0, t1));
      _el_0 = _this._wr_table_template$_compView_0.rootEl;
      _this.addShimC$1(_el_0);
      _this.set$_wr_table_template$_SkawaDataTableComponent_0_5(S.SkawaDataTableComponent$(_this._wr_table_template$_compView_0, t1));
      t1 = _this._wr_table_template$_appEl_1 = new V.ViewContainer(1, 0, _this, T.createAnchor());
      _this._wr_table_template$_NgFor_1_9 = new R.NgFor(t1, new D.TemplateRef(t1, T.wr_table_template__viewFactory_WrTableComponent2$closure()));
      _this._wr_table_template$_compView_0.create$2(0, _this._wr_table_template$_SkawaDataTableComponent_0_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([t1], [V.ViewContainer])], [P.Object]));
      _this.init1$1(_el_0);
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if (token === C.Type_SkawaDataTableComponent_qdG && nodeIndex <= 1)
        return this._wr_table_template$_SkawaDataTableComponent_0_5;
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var t1, changed, currVal_2, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        t1 = _this._wr_table_template$_SkawaDataTableComponent_0_5;
        t1.selectable = false;
        t1.set$rows(0, _ctx.wrRowData);
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._wr_table_template$_compView_0.viewData.set$cdMode(1);
      currVal_2 = _ctx.columns;
      t1 = _this._wr_table_template$_expr_2;
      if (t1 !== currVal_2) {
        _this._wr_table_template$_NgFor_1_9.set$ngForOf(currVal_2);
        _this._wr_table_template$_expr_2 = currVal_2;
      }
      _this._wr_table_template$_NgFor_1_9.ngDoCheck$0();
      _this._wr_table_template$_appEl_1.detectChangesInNestedViews$0();
      if (_this._query_SkawaDataTableColComponent_0_0_isDirty) {
        _this._wr_table_template$_SkawaDataTableComponent_0_5.set$columns(0, _this._wr_table_template$_appEl_1.mapNestedViews$2$1(new T._ViewWrTableComponent1_detectChangesInternal_closure(), [G.SkawaDataTableColComponent, N.WrRowData], T._ViewWrTableComponent2));
        _this._query_SkawaDataTableColComponent_0_0_isDirty = false;
      }
      _this._wr_table_template$_compView_0.detectChanges$0();
      if (firstCheck)
        _this._wr_table_template$_SkawaDataTableComponent_0_5.ngAfterViewInit$0();
    },
    dirtyParentQueriesInternal$0: function() {
      H.interceptedTypeCheck(this.parentView, "$isViewWrTableComponent0")._query_SkawaDataTableComponent_1_0_isDirty = true;
    },
    destroyInternal$0: function() {
      this._wr_table_template$_appEl_1.destroyNestedViews$0();
      this._wr_table_template$_compView_0.destroyInternalState$0();
      this._wr_table_template$_SkawaDataTableComponent_0_5._data_table$_tearDownDisposer.dispose$0();
    },
    set$_wr_table_template$_compView_0: function(_compView_0) {
      this._wr_table_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewSkawaDataTableComponent0", [N.WrRowData], "$asViewSkawaDataTableComponent0");
    },
    set$_wr_table_template$_SkawaDataTableComponent_0_5: function(_SkawaDataTableComponent_0_5) {
      this._wr_table_template$_SkawaDataTableComponent_0_5 = H.assertSubtype(_SkawaDataTableComponent_0_5, "$isSkawaDataTableComponent", [N.WrRowData], "$asSkawaDataTableComponent");
    },
    $asAppView: function() {
      return [N.WrTableComponent];
    }
  };
  T._ViewWrTableComponent1_detectChangesInternal_closure.prototype = {
    call$1: function(nestedView) {
      return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewWrTableComponent2")._SkawaDataTableColComponent_0_6], [[G.SkawaDataTableColComponent, N.WrRowData]]);
    },
    $signature: 130
  };
  T._ViewWrTableComponent2.prototype = {
    build$0: function() {
      var _el_0, t2, _this = this,
        t1 = N.WrRowData;
      _this.set$_wr_table_template$_compView_0(Y.ViewSkawaDataTableColComponent0$(_this, 0, t1));
      _el_0 = _this._wr_table_template$_compView_0.rootEl;
      _this.addShimC$1(_el_0);
      _this.set$_SkawaDataColRendererDirective_0_5(new G.SkawaDataColRendererDirective([t1]));
      t2 = _this._SkawaDataColRendererDirective_0_5;
      _this.set$_SkawaDataTableColComponent_0_6(new G.SkawaDataTableColComponent(new P._AsyncBroadcastStreamController(null, null, [t1]), t2, [t1]));
      _this._wr_table_template$_compView_0.create0$1(_this._SkawaDataTableColComponent_0_6);
      _this.init1$1(_el_0);
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if (0 === nodeIndex) {
        if (token === C.Type_iap)
          return this._SkawaDataColRendererDirective_0_5;
        if (token === C.Type_SkawaDataTableColComponent_tpI)
          return this._SkawaDataTableColComponent_0_6;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var currVal_0, currVal_1, currVal_2, currVal_3, _this = this,
        t1 = _this.viewData,
        t2 = t1._cdState,
        local_column = H.assertSubtypeOfRuntimeType(t1.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, N.WrRowData]);
      t1 = local_column.columnRenderer;
      currVal_0 = t1 == null ? null : H.functionTypeCheck(t1.SkawaDataColRendererDirective_factoryRenderer, {func: 1, ret: [D.ComponentFactory,,], args: [N.WrRowData]});
      t1 = _this._wr_table_template$_expr_0;
      if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
        _this._SkawaDataColRendererDirective_0_5.set$factoryRenderer(currVal_0);
        _this._wr_table_template$_expr_0 = currVal_0;
      }
      currVal_1 = H.functionTypeCheck(local_column.accessor, {func: 1, ret: P.String, args: [N.WrRowData]});
      t1 = _this._wr_table_template$_expr_1;
      if (t1 == null ? currVal_1 != null : t1 !== currVal_1) {
        _this._SkawaDataTableColComponent_0_6.set$accessor(currVal_1);
        _this._wr_table_template$_expr_1 = currVal_1;
      }
      currVal_2 = local_column.header;
      t1 = _this._wr_table_template$_expr_2;
      if (t1 != currVal_2)
        _this._wr_table_template$_expr_2 = _this._SkawaDataTableColComponent_0_6.header = currVal_2;
      currVal_3 = local_column.classString;
      t1 = _this._wr_table_template$_expr_3;
      if (t1 != currVal_3)
        _this._wr_table_template$_expr_3 = _this._SkawaDataTableColComponent_0_6.classString = currVal_3;
      if (t2 === 0)
        _this._SkawaDataTableColComponent_0_6.ngOnInit$0();
      _this._wr_table_template$_compView_0.detectChanges$0();
    },
    dirtyParentQueriesInternal$0: function() {
      H.interceptedTypeCheck(this.parentView, "$is_ViewWrTableComponent1")._query_SkawaDataTableColComponent_0_0_isDirty = true;
    },
    destroyInternal$0: function() {
      this._wr_table_template$_compView_0.destroyInternalState$0();
      this._SkawaDataTableColComponent_0_6._triggerController.close$0(0);
    },
    set$_wr_table_template$_compView_0: function(_compView_0) {
      this._wr_table_template$_compView_0 = H.assertSubtype(_compView_0, "$isViewSkawaDataTableColComponent0", [N.WrRowData], "$asViewSkawaDataTableColComponent0");
    },
    set$_SkawaDataColRendererDirective_0_5: function(_SkawaDataColRendererDirective_0_5) {
      this._SkawaDataColRendererDirective_0_5 = H.assertSubtype(_SkawaDataColRendererDirective_0_5, "$isSkawaDataColRendererDirective", [N.WrRowData], "$asSkawaDataColRendererDirective");
    },
    set$_SkawaDataTableColComponent_0_6: function(_SkawaDataTableColComponent_0_6) {
      this._SkawaDataTableColComponent_0_6 = H.assertSubtype(_SkawaDataTableColComponent_0_6, "$isSkawaDataTableColComponent", [N.WrRowData], "$asSkawaDataTableColComponent");
    },
    $asAppView: function() {
      return [N.WrTableComponent];
    }
  };
  D.DemoHeaderComponent.prototype = {};
  S.ViewDemoHeaderComponent0.prototype = {
    build$0: function() {
      var t1, _el_3, t2, t3, _el_4, t4, t5, _el_7, _el_8, _this = this,
        _s11_ = "source-link",
        _s4_ = "icon",
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        doc = document,
        _el_0 = T.appendElement(doc, parentRenderNode, "h2");
      _this.addShimE$1(_el_0);
      _el_0.appendChild(_this._textBinding_1.element);
      t1 = H.interceptedTypeCheck(T.appendElement(doc, parentRenderNode, "a"), "$isAnchorElement");
      _this._el_2 = t1;
      _this.updateChildClass$2(t1, _s11_);
      T.setAttribute(_this._el_2, "target", "_blank");
      T.setAttribute(_this._el_2, "title", "Component Source");
      _this.addShimC$1(_this._el_2);
      t1 = U.ViewMaterialButtonComponent0$(_this, 3);
      _this._demo_header_template$_compView_3 = t1;
      _el_3 = t1.rootEl;
      _this._el_2.appendChild(_el_3);
      T.setAttribute(_el_3, _s4_, "");
      _this.addShimC$1(_el_3);
      t1 = _this.parentView;
      t2 = _this.viewData.parentIndex;
      t3 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t2)));
      _this._AcxDarkTheme_3_5 = t3;
      _this._MaterialButtonComponent_3_6 = B.MaterialButtonComponent$(_el_3, t3, _this._demo_header_template$_compView_3, null);
      t3 = M.ViewMaterialIconComponent0$(_this, 4);
      _this._demo_header_template$_compView_4 = t3;
      _el_4 = t3.rootEl;
      T.setAttribute(_el_4, _s4_, "code");
      _this.addShimC$1(_el_4);
      t3 = new Y.MaterialIconComponent(_el_4);
      _this._MaterialIconComponent_4_5 = t3;
      _this._demo_header_template$_compView_4.create0$1(t3);
      t3 = [W.HtmlElement];
      t4 = [P.Object];
      _this._demo_header_template$_compView_3.create$2(0, _this._MaterialButtonComponent_3_6, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_4], t3)], t4));
      T.appendText(parentRenderNode, "\n");
      t5 = H.interceptedTypeCheck(T.appendElement(doc, parentRenderNode, "a"), "$isAnchorElement");
      _this._el_6 = t5;
      _this.updateChildClass$2(t5, _s11_);
      T.setAttribute(_this._el_6, "target", "_blank");
      T.setAttribute(_this._el_6, "title", "Example Source");
      _this.addShimC$1(_this._el_6);
      t5 = U.ViewMaterialButtonComponent0$(_this, 7);
      _this._compView_7 = t5;
      _el_7 = t5.rootEl;
      _this._el_6.appendChild(_el_7);
      T.setAttribute(_el_7, _s4_, "");
      _this.addShimC$1(_el_7);
      t1 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t2)));
      _this._AcxDarkTheme_7_5 = t1;
      _this._MaterialButtonComponent_7_6 = B.MaterialButtonComponent$(_el_7, t1, _this._compView_7, null);
      t1 = M.ViewMaterialIconComponent0$(_this, 8);
      _this._demo_header_template$_compView_8 = t1;
      _el_8 = t1.rootEl;
      T.setAttribute(_el_8, _s4_, "wb_incandescent");
      _this.addShimC$1(_el_8);
      t1 = new Y.MaterialIconComponent(_el_8);
      _this._MaterialIconComponent_8_5 = t1;
      _this._demo_header_template$_compView_8.create0$1(t1);
      _this._compView_7.create$2(0, _this._MaterialButtonComponent_7_6, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_8], t3)], t4));
      _this.init0$0();
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var _this = this;
      if (3 <= nodeIndex && nodeIndex <= 4) {
        if (token === C.Type_AcxDarkTheme_Tng)
          return _this._AcxDarkTheme_3_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          return _this._MaterialButtonComponent_3_6;
      }
      if (7 <= nodeIndex && nodeIndex <= 8) {
        if (token === C.Type_AcxDarkTheme_Tng)
          return _this._AcxDarkTheme_7_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          return _this._MaterialButtonComponent_7_6;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var changed, t1, currVal_0, currVal_2, _this = this,
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        _this._MaterialIconComponent_4_5.set$icon(0, "code");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._demo_header_template$_compView_4.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._MaterialIconComponent_8_5.set$icon(0, "wb_incandescent");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._demo_header_template$_compView_8.viewData.set$cdMode(1);
      t1 = _ctx.title;
      if (t1 == null)
        t1 = "";
      _this._textBinding_1.updateText$1(t1);
      currVal_0 = _ctx.sourceHref;
      if (currVal_0 == null)
        currVal_0 = "";
      t1 = _this._demo_header_template$_expr_0;
      if (t1 !== currVal_0) {
        _this._el_2.href = $.appViewUtils.sanitizer.sanitizeUrl$1(currVal_0);
        _this._demo_header_template$_expr_0 = currVal_0;
      }
      _this._demo_header_template$_compView_3.detectHostChanges$1(firstCheck);
      currVal_2 = _ctx.exampleHref;
      if (currVal_2 == null)
        currVal_2 = "";
      t1 = _this._expr_2;
      if (t1 !== currVal_2) {
        _this._el_6.href = $.appViewUtils.sanitizer.sanitizeUrl$1(currVal_2);
        _this._expr_2 = currVal_2;
      }
      _this._compView_7.detectHostChanges$1(firstCheck);
      _this._demo_header_template$_compView_3.detectChanges$0();
      _this._demo_header_template$_compView_4.detectChanges$0();
      _this._compView_7.detectChanges$0();
      _this._demo_header_template$_compView_8.detectChanges$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._demo_header_template$_compView_3.destroyInternalState$0();
      _this._demo_header_template$_compView_4.destroyInternalState$0();
      _this._compView_7.destroyInternalState$0();
      _this._demo_header_template$_compView_8.destroyInternalState$0();
    },
    $asAppView: function() {
      return [D.DemoHeaderComponent];
    }
  };
  V.ExtendedMaterialIconDemoComponent.prototype = {};
  X.ViewExtendedMaterialIconDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, doc, _el_1, _el_2, _el_4, _el_5, _el_6, _el_8, _el_9, _el_10, _el_12, _el_14, _this = this, _s4_ = "icon",
        _s18_ = "chart-line-stacked",
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._extended_material_icon_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/extended_material_icon_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/extended_material_icon");
      T.setAttribute(_el_0, "title", "Hex Colorize Pipe Demo");
      _this.addShimC$1(_el_0);
      t1 = new D.DemoHeaderComponent();
      _this._DemoHeaderComponent_0_5 = t1;
      _this._extended_material_icon_demo_template$_compView_0.create0$1(t1);
      doc = document;
      _el_1 = T.appendDiv(doc, parentRenderNode);
      _this.addShimC$1(_el_1);
      t1 = Q.ViewExtendedMaterialIconComponent0$(_this, 2);
      _this._compView_2 = t1;
      _el_2 = t1.rootEl;
      _el_1.appendChild(_el_2);
      T.setAttribute(_el_2, _s4_, "hubspot");
      _this.addShimC$1(_el_2);
      t1 = new R.ExtendedMaterialIconComponent();
      _this._ExtendedMaterialIconComponent_2_5 = t1;
      _this._compView_2.create0$1(t1);
      T.appendText(_el_1, "Flipped horizontally");
      t1 = Q.ViewExtendedMaterialIconComponent0$(_this, 4);
      _this._compView_4 = t1;
      _el_4 = t1.rootEl;
      _el_1.appendChild(_el_4);
      T.setAttribute(_el_4, _s4_, "hubspot");
      _this.addShimC$1(_el_4);
      t1 = new R.ExtendedMaterialIconComponent();
      _this._ExtendedMaterialIconComponent_4_5 = t1;
      _this._compView_4.create0$1(t1);
      _el_5 = T.appendDiv(doc, parentRenderNode);
      _this.addShimC$1(_el_5);
      t1 = Q.ViewExtendedMaterialIconComponent0$(_this, 6);
      _this._extended_material_icon_demo_template$_compView_6 = t1;
      _el_6 = t1.rootEl;
      _el_5.appendChild(_el_6);
      T.setAttribute(_el_6, _s4_, "star");
      _this.addShimC$1(_el_6);
      t1 = new R.ExtendedMaterialIconComponent();
      _this._ExtendedMaterialIconComponent_6_5 = t1;
      _this._extended_material_icon_demo_template$_compView_6.create0$1(t1);
      T.appendText(_el_5, "Flipped vertically");
      t1 = Q.ViewExtendedMaterialIconComponent0$(_this, 8);
      _this._compView_8 = t1;
      _el_8 = t1.rootEl;
      _el_5.appendChild(_el_8);
      T.setAttribute(_el_8, _s4_, "star");
      _this.addShimC$1(_el_8);
      t1 = new R.ExtendedMaterialIconComponent();
      _this._ExtendedMaterialIconComponent_8_5 = t1;
      _this._compView_8.create0$1(t1);
      _el_9 = T.appendDiv(doc, parentRenderNode);
      _this.addShimC$1(_el_9);
      t1 = Q.ViewExtendedMaterialIconComponent0$(_this, 10);
      _this._compView_10 = t1;
      _el_10 = t1.rootEl;
      _el_9.appendChild(_el_10);
      T.setAttribute(_el_10, _s4_, _s18_);
      _this.addShimC$1(_el_10);
      t1 = new R.ExtendedMaterialIconComponent();
      _this._ExtendedMaterialIconComponent_10_5 = t1;
      _this._compView_10.create0$1(t1);
      T.appendText(_el_9, "Rotated by 45 deg");
      t1 = Q.ViewExtendedMaterialIconComponent0$(_this, 12);
      _this._extended_material_icon_demo_template$_compView_12 = t1;
      _el_12 = t1.rootEl;
      _el_9.appendChild(_el_12);
      T.setAttribute(_el_12, _s4_, _s18_);
      _this.addShimC$1(_el_12);
      t1 = new R.ExtendedMaterialIconComponent();
      _this._ExtendedMaterialIconComponent_12_5 = t1;
      _this._extended_material_icon_demo_template$_compView_12.create0$1(t1);
      T.appendText(_el_9, "Spinning icon");
      t1 = Q.ViewExtendedMaterialIconComponent0$(_this, 14);
      _this._compView_14 = t1;
      _el_14 = t1.rootEl;
      _el_9.appendChild(_el_14);
      T.setAttribute(_el_14, _s4_, _s18_);
      _this.addShimC$1(_el_14);
      t1 = new R.ExtendedMaterialIconComponent();
      _this._ExtendedMaterialIconComponent_14_5 = t1;
      _this._compView_14.create0$1(t1);
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var t1, changed, _this = this,
        _s18_ = "chart-line-stacked",
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        t1 = _this._DemoHeaderComponent_0_5;
        t1.title = "Hex Colorize Pipe Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/extended_material_icon";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/extended_material_icon_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._extended_material_icon_demo_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._ExtendedMaterialIconComponent_2_5.icon = "hubspot";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_2.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._ExtendedMaterialIconComponent_4_5;
        t1.icon = "hubspot";
        changed = t1.flipHorizontal = true;
      } else
        changed = false;
      if (changed)
        _this._compView_4.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._ExtendedMaterialIconComponent_6_5.icon = "star";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._extended_material_icon_demo_template$_compView_6.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._ExtendedMaterialIconComponent_8_5;
        t1.icon = "star";
        changed = t1.flipVertical = true;
      } else
        changed = false;
      if (changed)
        _this._compView_8.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._ExtendedMaterialIconComponent_10_5.icon = _s18_;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_10.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._ExtendedMaterialIconComponent_12_5;
        t1.icon = _s18_;
        t1.rotate = 45;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._extended_material_icon_demo_template$_compView_12.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._ExtendedMaterialIconComponent_14_5;
        t1.icon = _s18_;
        changed = t1.spin = true;
      } else
        changed = false;
      if (changed)
        _this._compView_14.viewData.set$cdMode(1);
      _this._extended_material_icon_demo_template$_compView_0.detectChanges$0();
      _this._compView_2.detectChanges$0();
      _this._compView_4.detectChanges$0();
      _this._extended_material_icon_demo_template$_compView_6.detectChanges$0();
      _this._compView_8.detectChanges$0();
      _this._compView_10.detectChanges$0();
      _this._extended_material_icon_demo_template$_compView_12.detectChanges$0();
      _this._compView_14.detectChanges$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._extended_material_icon_demo_template$_compView_0.destroyInternalState$0();
      _this._compView_2.destroyInternalState$0();
      _this._compView_4.destroyInternalState$0();
      _this._extended_material_icon_demo_template$_compView_6.destroyInternalState$0();
      _this._compView_8.destroyInternalState$0();
      _this._compView_10.destroyInternalState$0();
      _this._extended_material_icon_demo_template$_compView_12.destroyInternalState$0();
      _this._compView_14.destroyInternalState$0();
    },
    $asAppView: function() {
      return [V.ExtendedMaterialIconDemoComponent];
    }
  };
  Q.GridDemoComponent.prototype = {};
  S.ViewGridDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, doc, _el_4, _el_6, _el_8, _el_10, _el_12, t2, t3, t4, _el_17, _el_18, _el_19, _el_22, t5, _el_24, _el_25, _el_26, _el_29, _el_31, _el_33, _el_34, t6, t7, _el_36, t8, _el_37, _text_38, _el_39, _el_40, _el_41, _el_43, _el_45, _el_46, _el_48, _el_50, _el_51, _el_52, _el_54, _el_55, _el_56, _el_57, _el_58, _text_59, _el_60, _el_61, _el_64, _text_65, _this = this, _null = null,
        _s8_ = "gridTile",
        _s14_ = "material-icons",
        _s16_ = "font-size: 40px;",
        _s14_0 = "account_circle",
        _s21_ = "color--primary-action",
        _s14_1 = "Primary action",
        _s11_ = "statusColor",
        _s4_ = "icon",
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._grid_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/grid_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/grid");
      T.setAttribute(_el_0, "title", "Grid Demo");
      t1 = new D.DemoHeaderComponent();
      _this._grid_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._grid_demo_template$_compView_0.create0$1(t1);
      doc = document;
      T.appendText(T.appendElement(doc, parentRenderNode, "h3"), "Grid with basic GridTile");
      t1 = X.ViewGridComponent0$(_this, 3);
      _this._grid_demo_template$_compView_3 = t1;
      parentRenderNode.appendChild(t1.rootEl);
      _this._GridComponent_3_5 = new T.GridComponent();
      _el_4 = doc.createElement("div");
      T.setAttribute(_el_4, _s8_, "");
      H.interceptedTypeCheck(_el_4, "$isHtmlElement");
      _this._GridTileDirective_4_5 = new T.GridTileDirective(_el_4);
      T.appendText(_el_4, "Cat");
      _el_6 = doc.createElement("div");
      T.setAttribute(_el_6, _s8_, "");
      H.interceptedTypeCheck(_el_6, "$isHtmlElement");
      _this._GridTileDirective_6_5 = new T.GridTileDirective(_el_6);
      T.appendText(_el_6, "Dog");
      _el_8 = doc.createElement("div");
      T.setAttribute(_el_8, _s8_, "");
      H.interceptedTypeCheck(_el_8, "$isHtmlElement");
      _this._GridTileDirective_8_5 = new T.GridTileDirective(_el_8);
      T.appendText(_el_8, "Wolf");
      _el_10 = doc.createElement("div");
      T.setAttribute(_el_10, _s8_, "");
      H.interceptedTypeCheck(_el_10, "$isHtmlElement");
      _this._GridTileDirective_10_5 = new T.GridTileDirective(_el_10);
      T.appendText(_el_10, "Lion");
      _el_12 = doc.createElement("div");
      T.setAttribute(_el_12, _s8_, "");
      H.interceptedTypeCheck(_el_12, "$isHtmlElement");
      _this._GridTileDirective_12_5 = new T.GridTileDirective(_el_12);
      T.appendText(_el_12, "Tiger");
      t1 = _this._GridComponent_3_5;
      t2 = [A.GridTile];
      t3 = H.setRuntimeTypeInfo([_this._GridTileDirective_4_5, _this._GridTileDirective_6_5, _this._GridTileDirective_8_5, _this._GridTileDirective_10_5, _this._GridTileDirective_12_5], t2);
      t1.toString;
      t1.set$_tiles(H.assertSubtype(t3, "$isList", t2, "$asList"));
      t1.updateAndDisplay$1(true);
      t1 = [W.Element];
      t3 = [P.Object];
      _this._grid_demo_template$_compView_3.create$2(0, _this._GridComponent_3_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_4, _el_6, _el_8, _el_10, _el_12], t1)], t3));
      T.appendText(T.appendElement(doc, parentRenderNode, "h3"), "Grid with card as GridTile");
      t4 = X.ViewGridComponent0$(_this, 16);
      _this._compView_16 = t4;
      parentRenderNode.appendChild(t4.rootEl);
      _this._GridComponent_16_5 = new T.GridComponent();
      t4 = E.ViewSkawaCardComponent0$(_this, 17);
      _this._grid_demo_template$_compView_17 = t4;
      _el_17 = t4.rootEl;
      T.setAttribute(_el_17, _s8_, "");
      _this._GridTileDirective_17_5 = new T.GridTileDirective(_el_17);
      _this._SkawaCardComponent_17_6 = new V.SkawaCardComponent();
      t4 = E.ViewSkawaCardHeaderComponent0$(_this, 18);
      _this._compView_18 = t4;
      _el_18 = t4.rootEl;
      _this._SkawaCardHeaderComponent_18_5 = new V.SkawaCardHeaderComponent();
      _el_19 = doc.createElement("skawa-header-image");
      _this._SkawaCardHeaderImageDirective_19_5 = new F.SkawaCardHeaderImageDirective();
      t4 = H.interceptedTypeCheck(T.appendElement(doc, _el_19, "i"), "$isHtmlElement");
      _this.updateChildClass$2(t4, _s14_);
      T.setAttribute(t4, "style", _s16_);
      T.appendText(t4, _s14_0);
      _el_22 = doc.createElement("skawa-header-title");
      _this._SkawaCardHeaderTitleDirective_22_5 = new F.SkawaCardHeaderTitleDirective();
      T.appendText(_el_22, "Weee");
      t4 = _this._SkawaCardHeaderComponent_18_5;
      t4.image = _this._SkawaCardHeaderImageDirective_19_5;
      _this._compView_18.create$2(0, t4, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_19, _el_22], t1)], t3));
      t4 = _this._SkawaCardComponent_17_6;
      t4.cardHeader = _this._SkawaCardHeaderComponent_18_5;
      t5 = [W.HtmlElement];
      _this._grid_demo_template$_compView_17.create$2(0, t4, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_18], t5)], t3));
      t4 = E.ViewSkawaCardComponent0$(_this, 24);
      _this._compView_24 = t4;
      _el_24 = t4.rootEl;
      T.setAttribute(_el_24, _s8_, "");
      _this._GridTileDirective_24_5 = new T.GridTileDirective(_el_24);
      _this._SkawaCardComponent_24_6 = new V.SkawaCardComponent();
      t4 = E.ViewSkawaCardHeaderComponent0$(_this, 25);
      _this._compView_25 = t4;
      _el_25 = t4.rootEl;
      _this._SkawaCardHeaderComponent_25_5 = new V.SkawaCardHeaderComponent();
      _el_26 = doc.createElement("skawa-header-image");
      _this._SkawaCardHeaderImageDirective_26_5 = new F.SkawaCardHeaderImageDirective();
      t4 = H.interceptedTypeCheck(T.appendElement(doc, _el_26, "i"), "$isHtmlElement");
      _this.updateChildClass$2(t4, _s14_);
      T.setAttribute(t4, "style", _s16_);
      T.appendText(t4, _s14_0);
      _el_29 = doc.createElement("skawa-header-title");
      _this._SkawaCardHeaderTitleDirective_29_5 = new F.SkawaCardHeaderTitleDirective();
      T.appendText(_el_29, "Weee");
      _el_31 = doc.createElement("skawa-header-subhead");
      _this._SkawaCardHeaderSubheadDirective_31_5 = new F.SkawaCardHeaderSubheadDirective();
      T.appendText(_el_31, "Subhead");
      t4 = _this._SkawaCardHeaderComponent_25_5;
      t4.subhead = _this._SkawaCardHeaderSubheadDirective_31_5;
      t4.image = _this._SkawaCardHeaderImageDirective_26_5;
      _this._compView_25.create$2(0, t4, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_26, _el_29, _el_31], t1)], t3));
      t4 = _this._SkawaCardComponent_24_6;
      t4.cardHeader = _this._SkawaCardHeaderComponent_25_5;
      _this._compView_24.create$2(0, t4, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_25], t5)], t3));
      t4 = E.ViewSkawaCardComponent0$(_this, 33);
      _this._compView_33 = t4;
      _el_33 = t4.rootEl;
      T.setAttribute(_el_33, _s8_, "");
      _this._GridTileDirective_33_5 = new T.GridTileDirective(_el_33);
      _this._SkawaCardComponent_33_6 = new V.SkawaCardComponent();
      t4 = _this._compView_34 = E.ViewSkawaCardContentComponent0$(_this, 34);
      _el_34 = t4.rootEl;
      t6 = new V.SkawaCardContentComponent(_this._SkawaCardComponent_33_6);
      _this._SkawaCardContentComponent_34_5 = t6;
      t7 = [W.Text];
      t4.create$2(0, t6, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([T.createText("In this demo, there is only content and actions below it.")], t7)], t3));
      t6 = X.ViewSkawaCardActionsComponent0$(_this, 36);
      _this._compView_36 = t6;
      _el_36 = t6.rootEl;
      t4 = _this.parentView;
      t6 = _this.viewData.parentIndex;
      t8 = H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_SkawaCardHeaderComponent_2jN, t6), "$isSkawaCardHeaderComponent");
      _this._SkawaCardActionsComponent_36_5 = new X.SkawaCardActionsComponent(t8);
      t8 = U.ViewMaterialButtonComponent0$(_this, 37);
      _this._compView_37 = t8;
      _el_37 = t8.rootEl;
      _this.updateChildClassNonHtml$2(_el_37, _s21_);
      t8 = F.AcxDarkTheme$(H.boolTypeCheck(t4.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t6)));
      _this._AcxDarkTheme_37_5 = t8;
      t8 = B.MaterialButtonComponent$(_el_37, t8, _this._compView_37, _null);
      _this._MaterialButtonComponent_37_6 = t8;
      _text_38 = T.createText(_s14_1);
      _this._compView_37.create$2(0, t8, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_38], t7)], t3));
      _this._compView_36.create$2(0, _this._SkawaCardActionsComponent_36_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_37], t5)], t3));
      _this._compView_33.create$2(0, _this._SkawaCardComponent_33_6, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_34, _el_36], t5)], t3));
      t8 = E.ViewSkawaCardComponent0$(_this, 39);
      _this._compView_39 = t8;
      _el_39 = t8.rootEl;
      T.setAttribute(_el_39, _s8_, "");
      _this._GridTileDirective_39_5 = new T.GridTileDirective(_el_39);
      _this._SkawaCardComponent_39_6 = new V.SkawaCardComponent();
      t8 = E.ViewSkawaCardHeaderComponent0$(_this, 40);
      _this._compView_40 = t8;
      _el_40 = t8.rootEl;
      T.setAttribute(_el_40, _s11_, "rgb(0,127,0)");
      _this._SkawaCardHeaderComponent_40_5 = new V.SkawaCardHeaderComponent();
      _el_41 = doc.createElement("skawa-header-title");
      _this._SkawaCardHeaderTitleDirective_41_5 = new F.SkawaCardHeaderTitleDirective();
      T.appendText(_el_41, "Some");
      _el_43 = doc.createElement("skawa-header-subhead");
      _this._SkawaCardHeaderSubheadDirective_43_5 = new F.SkawaCardHeaderSubheadDirective();
      T.appendText(_el_43, "subhead");
      t8 = _this._SkawaCardHeaderComponent_40_5;
      t8.subhead = _this._SkawaCardHeaderSubheadDirective_43_5;
      _this._compView_40.create$2(0, t8, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_41, _el_43], t1)], t3));
      t8 = E.ViewSkawaCardContentComponent0$(_this, 45);
      _this._compView_45 = t8;
      _el_45 = t8.rootEl;
      _this._SkawaCardContentComponent_45_5 = new V.SkawaCardContentComponent(_this._SkawaCardComponent_39_6);
      _el_46 = doc.createElement("p");
      T.appendText(_el_46, "Card components use `transclusion` a lot. Expect to see <ng-content></ng-content> pieces a lot.");
      _el_48 = doc.createElement("p");
      T.appendText(_el_48, "There a million different ways a card can look like. Expect to customize it somewhat.");
      _this._compView_45.create$2(0, _this._SkawaCardContentComponent_45_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_46, _el_48], t1)], t3));
      t8 = _this._SkawaCardComponent_39_6;
      t8.cardHeader = _this._SkawaCardHeaderComponent_40_5;
      _this._compView_39.create$2(0, t8, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_40, _el_45], t5)], t3));
      t8 = E.ViewSkawaCardComponent0$(_this, 50);
      _this._compView_50 = t8;
      _el_50 = t8.rootEl;
      T.setAttribute(_el_50, _s8_, "");
      _this._GridTileDirective_50_5 = new T.GridTileDirective(_el_50);
      _this._SkawaCardComponent_50_6 = new V.SkawaCardComponent();
      t8 = E.ViewSkawaCardHeaderComponent0$(_this, 51);
      _this._compView_51 = t8;
      _el_51 = t8.rootEl;
      T.setAttribute(_el_51, _s11_, "rgb(127,127,127)");
      _this._SkawaCardHeaderComponent_51_5 = new V.SkawaCardHeaderComponent();
      _el_52 = doc.createElement("skawa-header-title");
      _this._SkawaCardHeaderTitleDirective_52_5 = new F.SkawaCardHeaderTitleDirective();
      T.appendText(_el_52, "This could be fun!");
      t8 = X.ViewSkawaCardActionsComponent0$(_this, 54);
      _this._grid_demo_template$_compView_54 = t8;
      _el_54 = t8.rootEl;
      _this._SkawaCardActionsComponent_54_5 = new X.SkawaCardActionsComponent(_this._SkawaCardHeaderComponent_51_5);
      t8 = U.ViewMaterialButtonComponent0$(_this, 55);
      _this._grid_demo_template$_compView_55 = t8;
      _el_55 = t8.rootEl;
      T.setAttribute(_el_55, "align-right", "");
      T.setAttribute(_el_55, _s4_, "");
      t8 = F.AcxDarkTheme$(H.boolTypeCheck(t4.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t6)));
      _this._AcxDarkTheme_55_5 = t8;
      _this._MaterialButtonComponent_55_6 = B.MaterialButtonComponent$(_el_55, t8, _this._grid_demo_template$_compView_55, _null);
      t8 = M.ViewMaterialIconComponent0$(_this, 56);
      _this._compView_56 = t8;
      _el_56 = t8.rootEl;
      T.setAttribute(_el_56, _s4_, "more_vert");
      t8 = new Y.MaterialIconComponent(_el_56);
      _this._MaterialIconComponent_56_5 = t8;
      _this._compView_56.create0$1(t8);
      _this._grid_demo_template$_compView_55.create$2(0, _this._MaterialButtonComponent_55_6, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_56], t5)], t3));
      _this._grid_demo_template$_compView_54.create$2(0, _this._SkawaCardActionsComponent_54_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_55], t5)], t3));
      t8 = _this._SkawaCardHeaderComponent_51_5;
      t8.headerActions = _this._SkawaCardActionsComponent_54_5;
      _this._compView_51.create$2(0, t8, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_52, _el_54], t1)], t3));
      t8 = X.ViewSkawaCardActionsComponent0$(_this, 57);
      _this._compView_57 = t8;
      _el_57 = t8.rootEl;
      t8 = H.interceptedTypeCheck(t4.injectorGetOptional$2(C.Type_SkawaCardHeaderComponent_2jN, t6), "$isSkawaCardHeaderComponent");
      _this._SkawaCardActionsComponent_57_5 = new X.SkawaCardActionsComponent(t8);
      t8 = U.ViewMaterialButtonComponent0$(_this, 58);
      _this._compView_58 = t8;
      _el_58 = t8.rootEl;
      _this.updateChildClassNonHtml$2(_el_58, _s21_);
      t8 = F.AcxDarkTheme$(H.boolTypeCheck(t4.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t6)));
      _this._AcxDarkTheme_58_5 = t8;
      t8 = B.MaterialButtonComponent$(_el_58, t8, _this._compView_58, _null);
      _this._MaterialButtonComponent_58_6 = t8;
      _text_59 = T.createText(_s14_1);
      _this._compView_58.create$2(0, t8, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_59], t7)], t3));
      _el_60 = doc.createElement("span");
      H.interceptedTypeCheck(_el_60, "$isHtmlElement");
      _this.updateChildClass$2(_el_60, "spacer");
      t8 = U.ViewMaterialButtonComponent0$(_this, 61);
      _this._grid_demo_template$_compView_61 = t8;
      _el_61 = t8.rootEl;
      T.setAttribute(_el_61, _s4_, "");
      t4 = F.AcxDarkTheme$(H.boolTypeCheck(t4.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t6)));
      _this._AcxDarkTheme_61_5 = t4;
      t4 = B.MaterialButtonComponent$(_el_61, t4, _this._grid_demo_template$_compView_61, _null);
      _this._MaterialButtonComponent_61_6 = t4;
      t6 = _this._appEl_62 = new V.ViewContainer(62, 61, _this, T.createAnchor());
      _this._NgIf_62_9 = new K.NgIf(new D.TemplateRef(t6, S.grid_demo_template__viewFactory_GridDemoComponent1$closure()), t6);
      t8 = _this._appEl_63 = new V.ViewContainer(63, 61, _this, T.createAnchor());
      _this._NgIf_63_9 = new K.NgIf(new D.TemplateRef(t8, S.grid_demo_template__viewFactory_GridDemoComponent2$closure()), t8);
      _this._grid_demo_template$_compView_61.create$2(0, t4, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([t6, t8], [V.ViewContainer])], t3));
      _this._compView_57.create$2(0, _this._SkawaCardActionsComponent_57_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_58, _el_60, _el_61], t1)], t3));
      t1 = E.ViewSkawaCardContentComponent0$(_this, 64);
      _this._grid_demo_template$_compView_64 = t1;
      _el_64 = t1.rootEl;
      T.setAttribute(_el_64, "collapsed", "");
      t1 = new V.SkawaCardContentComponent(_this._SkawaCardComponent_50_6);
      _this._SkawaCardContentComponent_64_5 = t1;
      _text_65 = T.createText("Secondary content");
      _this._grid_demo_template$_compView_64.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_65], t7)], t3));
      t7 = _this._SkawaCardComponent_50_6;
      t7.cardHeader = _this._SkawaCardHeaderComponent_51_5;
      _this._compView_50.create$2(0, t7, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_51, _el_57, _el_64], t5)], t3));
      t7 = _this._GridComponent_16_5;
      t1 = H.setRuntimeTypeInfo([_this._GridTileDirective_17_5, _this._GridTileDirective_24_5, _this._GridTileDirective_33_5, _this._GridTileDirective_39_5, _this._GridTileDirective_50_5], t2);
      t7.toString;
      t7.set$_tiles(H.assertSubtype(t1, "$isList", t2, "$asList"));
      t7.updateAndDisplay$1(true);
      _this._compView_16.create$2(0, _this._GridComponent_16_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_17, _el_24, _el_33, _el_39, _el_50], t5)], t3));
      t3 = _this._MaterialButtonComponent_61_6._trigger;
      t5 = W.UIEvent;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(_this.eventHandler1$2$1(_this.get$_handle_trigger_61_0(), t5, t5))], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var _this = this,
        t1 = token === C.Type_SkawaCardComponent_sYn;
      if (t1 && 17 <= nodeIndex && nodeIndex <= 23)
        return _this._SkawaCardComponent_17_6;
      if (t1 && 24 <= nodeIndex && nodeIndex <= 32)
        return _this._SkawaCardComponent_24_6;
      if (33 <= nodeIndex && nodeIndex <= 38) {
        if (37 <= nodeIndex) {
          if (token === C.Type_AcxDarkTheme_Tng)
            return _this._AcxDarkTheme_37_5;
          if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
            return _this._MaterialButtonComponent_37_6;
        }
        if (t1)
          return _this._SkawaCardComponent_33_6;
      }
      if (t1 && 39 <= nodeIndex && nodeIndex <= 49)
        return _this._SkawaCardComponent_39_6;
      if (50 <= nodeIndex && nodeIndex <= 65) {
        if (55 <= nodeIndex && nodeIndex <= 56) {
          if (token === C.Type_AcxDarkTheme_Tng)
            return _this._AcxDarkTheme_55_5;
          if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
            return _this._MaterialButtonComponent_55_6;
        }
        if (58 <= nodeIndex && nodeIndex <= 59) {
          if (token === C.Type_AcxDarkTheme_Tng)
            return _this._AcxDarkTheme_58_5;
          if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
            return _this._MaterialButtonComponent_58_6;
        }
        if (61 <= nodeIndex && nodeIndex <= 63) {
          if (token === C.Type_AcxDarkTheme_Tng)
            return _this._AcxDarkTheme_61_5;
          if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
            return _this._MaterialButtonComponent_61_6;
        }
        if (t1)
          return _this._SkawaCardComponent_50_6;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var t1, changed, _this = this,
        firstCheck = _this.viewData._cdState === 0,
        local_secondaryContent = _this._SkawaCardContentComponent_64_5;
      if (firstCheck) {
        t1 = _this._grid_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Grid Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/grid";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/grid_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._grid_demo_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck)
        _this._GridComponent_3_5.ngOnInit$0();
      if (firstCheck)
        _this._GridComponent_16_5.ngOnInit$0();
      if (firstCheck) {
        _this._SkawaCardHeaderComponent_40_5.statusColor = "rgb(0,127,0)";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_40.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaCardHeaderComponent_51_5.statusColor = "rgb(127,127,127)";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_51.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._MaterialIconComponent_56_5.set$icon(0, "more_vert");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_56.viewData.set$cdMode(1);
      _this._NgIf_62_9.set$ngIf(local_secondaryContent.collapsed != null);
      _this._NgIf_63_9.set$ngIf(local_secondaryContent.collapsed == null);
      if (firstCheck && (_this._SkawaCardContentComponent_64_5.collapsed = true))
        _this._grid_demo_template$_compView_64.viewData.set$cdMode(1);
      _this._appEl_62.detectChangesInNestedViews$0();
      _this._appEl_63.detectChangesInNestedViews$0();
      _this._grid_demo_template$_compView_3.detectHostChanges$1(firstCheck);
      _this._compView_16.detectHostChanges$1(firstCheck);
      _this._compView_18.detectHostChanges$1(firstCheck);
      _this._compView_25.detectHostChanges$1(firstCheck);
      _this._compView_34.detectHostChanges$1(firstCheck);
      _this._compView_36.detectHostChanges$1(firstCheck);
      _this._compView_37.detectHostChanges$1(firstCheck);
      _this._compView_40.detectHostChanges$1(firstCheck);
      _this._compView_45.detectHostChanges$1(firstCheck);
      _this._compView_51.detectHostChanges$1(firstCheck);
      _this._grid_demo_template$_compView_54.detectHostChanges$1(firstCheck);
      _this._grid_demo_template$_compView_55.detectHostChanges$1(firstCheck);
      _this._compView_57.detectHostChanges$1(firstCheck);
      _this._compView_58.detectHostChanges$1(firstCheck);
      _this._grid_demo_template$_compView_61.detectHostChanges$1(firstCheck);
      _this._grid_demo_template$_compView_64.detectHostChanges$1(firstCheck);
      _this._grid_demo_template$_compView_0.detectChanges$0();
      _this._grid_demo_template$_compView_3.detectChanges$0();
      _this._compView_16.detectChanges$0();
      _this._grid_demo_template$_compView_17.detectChanges$0();
      _this._compView_18.detectChanges$0();
      _this._compView_24.detectChanges$0();
      _this._compView_25.detectChanges$0();
      _this._compView_33.detectChanges$0();
      _this._compView_34.detectChanges$0();
      _this._compView_36.detectChanges$0();
      _this._compView_37.detectChanges$0();
      _this._compView_39.detectChanges$0();
      _this._compView_40.detectChanges$0();
      _this._compView_45.detectChanges$0();
      _this._compView_50.detectChanges$0();
      _this._compView_51.detectChanges$0();
      _this._grid_demo_template$_compView_54.detectChanges$0();
      _this._grid_demo_template$_compView_55.detectChanges$0();
      _this._compView_56.detectChanges$0();
      _this._compView_57.detectChanges$0();
      _this._compView_58.detectChanges$0();
      _this._grid_demo_template$_compView_61.detectChanges$0();
      _this._grid_demo_template$_compView_64.detectChanges$0();
      if (firstCheck) {
        _this._GridComponent_3_5.updateAndDisplay$1(true);
        _this._GridComponent_16_5.updateAndDisplay$1(true);
      }
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._appEl_62.destroyNestedViews$0();
      _this._appEl_63.destroyNestedViews$0();
      _this._grid_demo_template$_compView_0.destroyInternalState$0();
      _this._grid_demo_template$_compView_3.destroyInternalState$0();
      _this._compView_16.destroyInternalState$0();
      _this._grid_demo_template$_compView_17.destroyInternalState$0();
      _this._compView_18.destroyInternalState$0();
      _this._compView_24.destroyInternalState$0();
      _this._compView_25.destroyInternalState$0();
      _this._compView_33.destroyInternalState$0();
      _this._compView_34.destroyInternalState$0();
      _this._compView_36.destroyInternalState$0();
      _this._compView_37.destroyInternalState$0();
      _this._compView_39.destroyInternalState$0();
      _this._compView_40.destroyInternalState$0();
      _this._compView_45.destroyInternalState$0();
      _this._compView_50.destroyInternalState$0();
      _this._compView_51.destroyInternalState$0();
      _this._grid_demo_template$_compView_54.destroyInternalState$0();
      _this._grid_demo_template$_compView_55.destroyInternalState$0();
      _this._compView_56.destroyInternalState$0();
      _this._compView_57.destroyInternalState$0();
      _this._compView_58.destroyInternalState$0();
      _this._grid_demo_template$_compView_61.destroyInternalState$0();
      _this._grid_demo_template$_compView_64.destroyInternalState$0();
    },
    _handle_trigger_61_0$1: function($$event) {
      var local_secondaryContent = this._SkawaCardContentComponent_64_5;
      local_secondaryContent.collapsed = local_secondaryContent.collapsed == null ? true : null;
    },
    $asAppView: function() {
      return [Q.GridDemoComponent];
    }
  };
  S._ViewGridDemoComponent1.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = M.ViewMaterialIconComponent0$(_this, 0);
      _this._grid_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      T.setAttribute(_el_0, "icon", "expand_more");
      t1 = new Y.MaterialIconComponent(_el_0);
      _this._MaterialIconComponent_0_5 = t1;
      _this._grid_demo_template$_compView_0.create0$1(t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var changed, _this = this;
      if (_this.viewData._cdState === 0) {
        _this._MaterialIconComponent_0_5.set$icon(0, "expand_more");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._grid_demo_template$_compView_0.viewData.set$cdMode(1);
      _this._grid_demo_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._grid_demo_template$_compView_0.destroyInternalState$0();
    },
    $asAppView: function() {
      return [Q.GridDemoComponent];
    }
  };
  S._ViewGridDemoComponent2.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = M.ViewMaterialIconComponent0$(_this, 0);
      _this._grid_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      T.setAttribute(_el_0, "icon", "expand_less");
      t1 = new Y.MaterialIconComponent(_el_0);
      _this._MaterialIconComponent_0_5 = t1;
      _this._grid_demo_template$_compView_0.create0$1(t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var changed, _this = this;
      if (_this.viewData._cdState === 0) {
        _this._MaterialIconComponent_0_5.set$icon(0, "expand_less");
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._grid_demo_template$_compView_0.viewData.set$cdMode(1);
      _this._grid_demo_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._grid_demo_template$_compView_0.destroyInternalState$0();
    },
    $asAppView: function() {
      return [Q.GridDemoComponent];
    }
  };
  A.HexColorizePipeDemoComponent.prototype = {};
  V.ViewHexColorizePipeDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._hex_colorize_pipe_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/hex_colorize_pipe_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/pipes/hex_colorize_pipe");
      T.setAttribute(_el_0, "title", "Hex Colorize Pipe Demo");
      _this.addShimC$1(_el_0);
      t1 = new D.DemoHeaderComponent();
      _this._hex_colorize_pipe_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._hex_colorize_pipe_demo_template$_compView_0.create0$1(t1);
      t1 = _this._hex_colorize_pipe_demo_template$_appEl_1 = new V.ViewContainer(1, null, _this, T.appendAnchor(parentRenderNode));
      _this._NgFor_1_9 = new R.NgFor(t1, new D.TemplateRef(t1, V.hex_colorize_pipe_demo_template__viewFactory_HexColorizePipeDemoComponent1$closure()));
      _this._pipe_hedColorize_0 = new L.SkawaHexColorizePipe();
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var t1, changed, currVal_3, _this = this,
        _ctx = _this.ctx;
      if (_this.viewData._cdState === 0) {
        t1 = _this._hex_colorize_pipe_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Hex Colorize Pipe Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/pipes/hex_colorize_pipe";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/hex_colorize_pipe_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._hex_colorize_pipe_demo_template$_compView_0.viewData.set$cdMode(1);
      currVal_3 = _ctx.parts;
      t1 = _this._hex_colorize_pipe_demo_template$_expr_3;
      if (t1 !== currVal_3) {
        _this._NgFor_1_9.set$ngForOf(currVal_3);
        _this._hex_colorize_pipe_demo_template$_expr_3 = currVal_3;
      }
      _this._NgFor_1_9.ngDoCheck$0();
      _this._hex_colorize_pipe_demo_template$_appEl_1.detectChangesInNestedViews$0();
      _this._hex_colorize_pipe_demo_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._hex_colorize_pipe_demo_template$_appEl_1.destroyNestedViews$0();
      this._hex_colorize_pipe_demo_template$_compView_0.destroyInternalState$0();
    },
    $asAppView: function() {
      return [A.HexColorizePipeDemoComponent];
    }
  };
  V._ViewHexColorizePipeDemoComponent1.prototype = {
    build$0: function() {
      var _this = this,
        t1 = document.createElement("div");
      H.interceptedTypeCheck(t1, "$isDivElement");
      _this._hex_colorize_pipe_demo_template$_el_0 = t1;
      _this.addShimC$1(t1);
      _this._hex_colorize_pipe_demo_template$_el_0.appendChild(_this._hex_colorize_pipe_demo_template$_textBinding_1.element);
      t1 = H.interceptedTypeCheck(_this.parentView, "$isViewHexColorizePipeDemoComponent0")._pipe_hedColorize_0;
      _this.set$_pipe_hedColorize_0_0(A.pureProxy1(t1.get$transform(t1), P.String, null));
      _this.init1$1(_this._hex_colorize_pipe_demo_template$_el_0);
    },
    detectChangesInternal$0: function() {
      var t2, _this = this,
        local_part = H.stringTypeCheck(_this.viewData.locals.$index(0, "$implicit")),
        currVal_0 = _this._pipe_hedColorize_0_0.call$1(local_part),
        t1 = _this._hex_colorize_pipe_demo_template$_expr_0;
      if (t1 != currVal_0) {
        t1 = _this._hex_colorize_pipe_demo_template$_el_0.style;
        t2 = currVal_0 == null ? null : currVal_0;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "background"), t2, null);
        _this._hex_colorize_pipe_demo_template$_expr_0 = currVal_0;
      }
      t1 = local_part == null ? "" : local_part;
      _this._hex_colorize_pipe_demo_template$_textBinding_1.updateText$1(t1);
    },
    set$_pipe_hedColorize_0_0: function(_pipe_hedColorize_0_0) {
      this._pipe_hedColorize_0_0 = H.functionTypeCheck(_pipe_hedColorize_0_0, {func: 1, ret: P.String, args: [,]});
    },
    $asAppView: function() {
      return [A.HexColorizePipeDemoComponent];
    }
  };
  Q.InfobarDemoComponent.prototype = {
    alert$0: function(_) {
      window.alert("Triggered!");
    }
  };
  O.ViewInfobarDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, doc, t2, t3, t4, _el_7, _el_11, _el_15, _this = this, _s2_ = "h3", _s4_ = "icon",
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._infobar_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/infobar_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/infobar");
      T.setAttribute(_el_0, "title", "Infobar Demo");
      t1 = new D.DemoHeaderComponent();
      _this._infobar_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._infobar_demo_template$_compView_0.create0$1(t1);
      doc = document;
      T.appendText(T.appendElement(doc, parentRenderNode, _s2_), "Simple inforbar without icon");
      t1 = G.ViewSkawaInfobarComponent0$(_this, 3);
      _this._infobar_demo_template$_compView_3 = t1;
      parentRenderNode.appendChild(t1.rootEl);
      t1 = _this._infobar_demo_template$_compView_3;
      t2 = new O.SkawaInfobarComponent(t1);
      _this._SkawaInfobarComponent_3_5 = t2;
      t3 = [W.Text];
      t4 = [P.Object];
      t1.create$2(0, t2, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([T.createText("No icon, no url")], t3)], t4));
      T.appendText(T.appendElement(doc, parentRenderNode, _s2_), "Inforbar with icon");
      t2 = G.ViewSkawaInfobarComponent0$(_this, 7);
      _this._infobar_demo_template$_compView_7 = t2;
      _el_7 = t2.rootEl;
      parentRenderNode.appendChild(_el_7);
      T.setAttribute(_el_7, _s4_, "info");
      t2 = _this._infobar_demo_template$_compView_7;
      t1 = new O.SkawaInfobarComponent(t2);
      _this._SkawaInfobarComponent_7_5 = t1;
      t2.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([T.createText("Info icon, still no url")], t3)], t4));
      T.appendText(T.appendElement(doc, parentRenderNode, _s2_), "Inforbar with url");
      t1 = G.ViewSkawaInfobarComponent0$(_this, 11);
      _this._compView_11 = t1;
      _el_11 = t1.rootEl;
      parentRenderNode.appendChild(_el_11);
      T.setAttribute(_el_11, _s4_, "open_in_new");
      T.setAttribute(_el_11, "url", "https://github.com");
      t1 = _this._compView_11;
      t2 = new O.SkawaInfobarComponent(t1);
      _this._SkawaInfobarComponent_11_5 = t2;
      t1.create$2(0, t2, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([T.createText("Clicking icon will redirect if URL is specified")], t3)], t4));
      T.appendText(T.appendElement(doc, parentRenderNode, _s2_), "Infobar which alerting when the icon triggers");
      t2 = G.ViewSkawaInfobarComponent0$(_this, 15);
      _this._infobar_demo_template$_compView_15 = t2;
      _el_15 = t2.rootEl;
      parentRenderNode.appendChild(_el_15);
      T.setAttribute(_el_15, _s4_, "lightbulb_outline");
      t2 = _this._infobar_demo_template$_compView_15;
      t1 = new O.SkawaInfobarComponent(t2);
      _this._SkawaInfobarComponent_15_5 = t1;
      t2.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([T.createText("Can also subscribe to primary action with (trigger)")], t3)], t4));
      t4 = _this._SkawaInfobarComponent_15_5.primaryActionButton._trigger;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([new P._BroadcastStream(t4, [H.getTypeArgumentByIndex(t4, 0)]).listen$1(_this.eventHandler0$1$1(_ctx.get$alert(_ctx), W.UIEvent))], [[P.StreamSubscription, -1]]));
    },
    detectChangesInternal$0: function() {
      var t1, changed, _this = this,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        t1 = _this._infobar_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Infobar Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/infobar";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/infobar_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._infobar_demo_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._SkawaInfobarComponent_7_5;
        t1._icon = "info";
        t1._infobar$_changeDetectorRef.markPathToRootAsCheckOnce$0();
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._infobar_demo_template$_compView_7.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._SkawaInfobarComponent_11_5;
        t1.url = "https://github.com";
        t1._icon = "open_in_new";
        t1._infobar$_changeDetectorRef.markPathToRootAsCheckOnce$0();
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._compView_11.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._SkawaInfobarComponent_15_5;
        t1._icon = "lightbulb_outline";
        t1._infobar$_changeDetectorRef.markPathToRootAsCheckOnce$0();
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._infobar_demo_template$_compView_15.viewData.set$cdMode(1);
      _this._infobar_demo_template$_compView_0.detectChanges$0();
      _this._infobar_demo_template$_compView_3.detectChanges$0();
      _this._infobar_demo_template$_compView_7.detectChanges$0();
      _this._compView_11.detectChanges$0();
      _this._infobar_demo_template$_compView_15.detectChanges$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._infobar_demo_template$_compView_0.destroyInternalState$0();
      _this._infobar_demo_template$_compView_3.destroyInternalState$0();
      _this._infobar_demo_template$_compView_7.destroyInternalState$0();
      _this._compView_11.destroyInternalState$0();
      _this._infobar_demo_template$_compView_15.destroyInternalState$0();
    },
    $asAppView: function() {
      return [Q.InfobarDemoComponent];
    }
  };
  Q.MarkdownDemoComponent.prototype = {};
  Z.ViewMarkdownDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, doc, styles, t2, _this = this,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._markdown_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/markdown_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/markdown_renderer");
      T.setAttribute(_el_0, "title", "Markdown Renderer Demo");
      t1 = new D.DemoHeaderComponent();
      _this._markdown_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._markdown_demo_template$_compView_0.create0$1(t1);
      doc = document;
      T.appendText(T.appendElement(doc, parentRenderNode, "h3"), "Plain markdown rendering without styling.");
      t1 = new T.ViewSkawaRawMarkdownRendererComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 3));
      styles = $.ViewSkawaRawMarkdownRendererComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaRawMarkdownRendererComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaRawMarkdownRendererComponent, null);
      t1.componentStyles = styles;
      t2 = doc.createElement("skawa-raw-markdown-renderer");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._markdown_demo_template$_compView_3 = t1;
      parentRenderNode.appendChild(t2);
      t1 = new X.SkawaRawMarkdownRendererComponent();
      _this._SkawaRawMarkdownRendererComponent_3_5 = t1;
      _this._markdown_demo_template$_compView_3.create0$1(t1);
      T.appendText(T.appendElement(doc, parentRenderNode, "h3"), "Plain markdown rendering with styling.");
      t1 = new A.ViewSkawaMarkdownRendererComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 6));
      styles = $.ViewSkawaMarkdownRendererComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaMarkdownRendererComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaMarkdownRendererComponent, null);
      t1.componentStyles = styles;
      t2 = doc.createElement("skawa-markdown-renderer");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._markdown_demo_template$_compView_6 = t1;
      parentRenderNode.appendChild(t2);
      t1 = new L.SkawaMarkdownRendererComponent();
      _this._SkawaMarkdownRendererComponent_6_5 = t1;
      _this._markdown_demo_template$_compView_6.create0$1(t1);
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var t1, changed, _this = this,
        _s540_ = "  ## Fuissem ibat manus et negata\n\n  Arduus suus frustra, alite et sociamque spes quique turba faciem. Nos huius\n  populos nostra iamdudum tibi, sic positos numquam parvos umidus *acutis* suae\n  quo maturus frequentant equidem. Ostentare opem arva: Assyrii intellegit dei\n  quies pariter de utinam recognoscit, et sanguine fratres adsimulavit virgo?\n  Pretium Turnus instigant, verba nam actaque virent **altum**, induitur.\n\n  > Segnibus o templis collo. Est tum, et quaeris pulsat mollitaque, puta est\n  > ingens. Puellam luctisono orbem.\n",
        _ctx = _this.ctx,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        t1 = _this._markdown_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Markdown Renderer Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/markdown_renderer";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/markdown_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._markdown_demo_template$_compView_0.viewData.set$cdMode(1);
      _ctx.toString;
      t1 = _this._markdown_demo_template$_expr_3;
      if (t1 !== _s540_) {
        _this._SkawaRawMarkdownRendererComponent_3_5.set$source(0, _s540_);
        _this._markdown_demo_template$_expr_3 = _s540_;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._markdown_demo_template$_compView_3.viewData.set$cdMode(1);
      if (firstCheck)
        _this._SkawaRawMarkdownRendererComponent_3_5.ngOnInit$0();
      t1 = _this._markdown_demo_template$_expr_4;
      if (t1 !== _s540_) {
        _this._SkawaMarkdownRendererComponent_6_5.set$source(0, _s540_);
        _this._markdown_demo_template$_expr_4 = _s540_;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._markdown_demo_template$_compView_6.viewData.set$cdMode(1);
      if (firstCheck)
        _this._SkawaMarkdownRendererComponent_6_5.ngOnInit$0();
      _this._markdown_demo_template$_compView_0.detectChanges$0();
      _this._markdown_demo_template$_compView_3.detectChanges$0();
      _this._markdown_demo_template$_compView_6.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._markdown_demo_template$_compView_0.destroyInternalState$0();
      this._markdown_demo_template$_compView_3.destroyInternalState$0();
      this._markdown_demo_template$_compView_6.destroyInternalState$0();
    },
    $asAppView: function() {
      return [Q.MarkdownDemoComponent];
    }
  };
  L.NavItemDemoComponent.prototype = {};
  Z.ViewNavItemDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, _el_1, _text_2, t2, t3, styles, t4, _el_4, t5, t6, _el_6, _el_8, subscription_0, _this = this, _null = null, _s6_ = "button",
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._nav_item_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/nav_item_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/nav_item");
      T.setAttribute(_el_0, "title", "Nav Item Demo");
      _this.addShimC$1(_el_0);
      t1 = new D.DemoHeaderComponent();
      _this._nav_item_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._nav_item_demo_template$_compView_0.create0$1(t1);
      t1 = U.ViewMaterialButtonComponent0$(_this, 1);
      _this._nav_item_demo_template$_compView_1 = t1;
      _el_1 = t1.rootEl;
      parentRenderNode.appendChild(_el_1);
      _this.addShimC$1(_el_1);
      t1 = F.AcxDarkTheme$(H.boolTypeCheck(_this.parentView.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, _this.viewData.parentIndex)));
      _this._nav_item_demo_template$_AcxDarkTheme_1_5 = t1;
      t1 = B.MaterialButtonComponent$(_el_1, t1, _this._nav_item_demo_template$_compView_1, _null);
      _this._nav_item_demo_template$_MaterialButtonComponent_1_6 = t1;
      _text_2 = T.createText("Open");
      t2 = [W.Text];
      t3 = [P.Object];
      _this._nav_item_demo_template$_compView_1.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_2], t2)], t3));
      t1 = new V.ViewMaterialTemporaryDrawerComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 3));
      styles = $.ViewMaterialTemporaryDrawerComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewMaterialTemporaryDrawerComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$MaterialTemporaryDrawerComponent, _null);
      t1.componentStyles = styles;
      t4 = document.createElement("material-drawer");
      H.interceptedTypeCheck(t4, "$isHtmlElement");
      t1.rootEl = t4;
      _this._nav_item_demo_template$_compView_3 = t1;
      parentRenderNode.appendChild(t4);
      T.setAttribute(t4, "style", "position: fixed");
      T.setAttribute(t4, "temporary", "");
      _this.addShimC$1(t4);
      _this._MaterialTemporaryDrawerComponent_3_5 = new B.MaterialTemporaryDrawerComponent(false, new P._SyncBroadcastStreamController(_null, _null, [P.bool]));
      t1 = Y.ViewSkawaNavItemComponent0$(_this, 4);
      _this._nav_item_demo_template$_compView_4 = t1;
      _el_4 = t1.rootEl;
      T.setAttribute(_el_4, "icon", "close");
      _this.addShimC$1(_el_4);
      t1 = _this._nav_item_demo_template$_compView_4;
      t4 = W.UIEvent;
      t5 = [t4];
      t6 = new Z.SkawaNavItemComponent(t1, _null, new P._SyncBroadcastStreamController(_null, _null, t5), _null, true, _s6_, _null, _el_4);
      _this._SkawaNavItemComponent_4_5 = t6;
      t1.create$2(0, t6, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([T.createText("Close")], t2)], t3));
      t6 = Y.ViewSkawaNavItemComponent0$(_this, 6);
      _this._nav_item_demo_template$_compView_6 = t6;
      _el_6 = t6.rootEl;
      T.setAttribute(_el_6, "icon", "rowing");
      _this.addShimC$1(_el_6);
      t6 = _this._nav_item_demo_template$_compView_6;
      t1 = new Z.SkawaNavItemComponent(t6, _null, new P._SyncBroadcastStreamController(_null, _null, t5), _null, true, _s6_, _null, _el_6);
      _this._SkawaNavItemComponent_6_5 = t1;
      t6.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([T.createText("Rowing")], t2)], t3));
      t1 = Y.ViewSkawaNavItemComponent0$(_this, 8);
      _this._nav_item_demo_template$_compView_8 = t1;
      _el_8 = t1.rootEl;
      _this.addShimC$1(_el_8);
      t1 = _this._nav_item_demo_template$_compView_8;
      t5 = new Z.SkawaNavItemComponent(t1, _null, new P._SyncBroadcastStreamController(_null, _null, t5), _null, true, _s6_, _null, _el_8);
      _this._SkawaNavItemComponent_8_5 = t5;
      t1.create$2(0, t5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([T.createText("Without icon")], t2)], t3));
      _this._nav_item_demo_template$_compView_3.create$2(0, _this._MaterialTemporaryDrawerComponent_3_5, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_el_4, _el_6, _el_8], [W.HtmlElement])], t3));
      t3 = _this._nav_item_demo_template$_MaterialButtonComponent_1_6._trigger;
      subscription_0 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(_this.eventHandler1$2$1(_this.get$_handle_trigger_1_0(), t4, t4));
      t4 = W.Event;
      J.addEventListener$2$x(_el_4, "click", _this.eventHandler1$2$1(_this.get$_handle_click_4_0(), t4, t4));
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([subscription_0], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var t1, _this = this;
      if (1 <= nodeIndex && nodeIndex <= 2) {
        if (token === C.Type_AcxDarkTheme_Tng)
          return _this._nav_item_demo_template$_AcxDarkTheme_1_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          return _this._nav_item_demo_template$_MaterialButtonComponent_1_6;
      }
      if (3 <= nodeIndex && nodeIndex <= 9) {
        t1 = token === C.Type_ButtonDirective_hH0;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return _this._SkawaNavItemComponent_4_5;
        if (t1 && 6 <= nodeIndex && nodeIndex <= 7)
          return _this._SkawaNavItemComponent_6_5;
        if (t1 && 8 <= nodeIndex)
          return _this._SkawaNavItemComponent_8_5;
        if (token === C.Type_gap || token === C.Type_DeferredContentAware_BCk)
          return _this._MaterialTemporaryDrawerComponent_3_5;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var t1, changed, _ctx, currVal_0, t2, currVal_1, _this = this,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        t1 = _this._nav_item_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Nav Item Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/nav_item";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/nav_item_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._nav_item_demo_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck) {
        t1 = _this._MaterialTemporaryDrawerComponent_3_5;
        t1._visibleChange.add$1(0, t1._visible);
      }
      if (firstCheck) {
        _this._SkawaNavItemComponent_4_5.icon = "close";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._nav_item_demo_template$_compView_4.viewData.set$cdMode(1);
      if (firstCheck) {
        _this._SkawaNavItemComponent_6_5.icon = "rowing";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._nav_item_demo_template$_compView_6.viewData.set$cdMode(1);
      _this._nav_item_demo_template$_compView_1.detectHostChanges$1(firstCheck);
      t1 = _this._nav_item_demo_template$_compView_3;
      _ctx = t1.ctx;
      currVal_0 = !_ctx._visible;
      t2 = t1._material_temporary_drawer_template$_expr_0;
      if (t2 !== currVal_0) {
        T.updateClassBindingNonHtml(t1.rootEl, "mat-drawer-collapsed", currVal_0);
        t1._material_temporary_drawer_template$_expr_0 = currVal_0;
      }
      currVal_1 = _ctx._visible;
      t2 = t1._material_temporary_drawer_template$_expr_1;
      if (t2 !== currVal_1) {
        T.updateClassBindingNonHtml(t1.rootEl, "mat-drawer-expanded", currVal_1);
        t1._material_temporary_drawer_template$_expr_1 = currVal_1;
      }
      _this._nav_item_demo_template$_compView_4.detectHostChanges$1(firstCheck);
      _this._nav_item_demo_template$_compView_6.detectHostChanges$1(firstCheck);
      _this._nav_item_demo_template$_compView_8.detectHostChanges$1(firstCheck);
      _this._nav_item_demo_template$_compView_0.detectChanges$0();
      _this._nav_item_demo_template$_compView_1.detectChanges$0();
      _this._nav_item_demo_template$_compView_3.detectChanges$0();
      _this._nav_item_demo_template$_compView_4.detectChanges$0();
      _this._nav_item_demo_template$_compView_6.detectChanges$0();
      _this._nav_item_demo_template$_compView_8.detectChanges$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._nav_item_demo_template$_compView_0.destroyInternalState$0();
      _this._nav_item_demo_template$_compView_1.destroyInternalState$0();
      _this._nav_item_demo_template$_compView_3.destroyInternalState$0();
      _this._nav_item_demo_template$_compView_4.destroyInternalState$0();
      _this._nav_item_demo_template$_compView_6.destroyInternalState$0();
      _this._nav_item_demo_template$_compView_8.destroyInternalState$0();
    },
    _handle_trigger_1_0$1: function($$event) {
      this._MaterialTemporaryDrawerComponent_3_5.set$visible(0, true);
    },
    _handle_click_4_0$1: function($$event) {
      this._MaterialTemporaryDrawerComponent_3_5.set$visible(0, false);
    },
    $asAppView: function() {
      return [L.NavItemDemoComponent];
    }
  };
  Q.SidebarItemDemoComponent.prototype = {
    open$0: function(_) {
      return this._openController.add$1(0, null);
    }
  };
  Y.ViewSidebarItemDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, _el_1, _text_2, _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._sidebar_item_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/sidebar_item_demo");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/sidebar_item");
      T.setAttribute(_el_0, "title", "Sidebar Item Demo");
      t1 = new D.DemoHeaderComponent();
      _this._sidebar_item_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._sidebar_item_demo_template$_compView_0.create0$1(t1);
      t1 = U.ViewMaterialButtonComponent0$(_this, 1);
      _this._sidebar_item_demo_template$_compView_1 = t1;
      _el_1 = t1.rootEl;
      parentRenderNode.appendChild(_el_1);
      t1 = F.AcxDarkTheme$(H.boolTypeCheck(_this.parentView.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, _this.viewData.parentIndex)));
      _this._AcxDarkTheme_1_5 = t1;
      t1 = B.MaterialButtonComponent$(_el_1, t1, _this._sidebar_item_demo_template$_compView_1, null);
      _this._MaterialButtonComponent_1_6 = t1;
      _text_2 = T.createText("Open");
      _this._sidebar_item_demo_template$_compView_1.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_2], [W.Text])], [P.Object]));
      t1 = _this._MaterialButtonComponent_1_6._trigger;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(_this.eventHandler0$1$1(_ctx.get$open(_ctx), W.UIEvent))], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if (1 <= nodeIndex && nodeIndex <= 2) {
        if (token === C.Type_AcxDarkTheme_Tng)
          return this._AcxDarkTheme_1_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          return this._MaterialButtonComponent_1_6;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var t1, changed, _this = this,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        t1 = _this._sidebar_item_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Sidebar Item Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_components/lib/sidebar_item";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/sidebar_item_demo";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._sidebar_item_demo_template$_compView_0.viewData.set$cdMode(1);
      _this._sidebar_item_demo_template$_compView_1.detectHostChanges$1(firstCheck);
      _this._sidebar_item_demo_template$_compView_0.detectChanges$0();
      _this._sidebar_item_demo_template$_compView_1.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._sidebar_item_demo_template$_compView_0.destroyInternalState$0();
      this._sidebar_item_demo_template$_compView_1.destroyInternalState$0();
    },
    $asAppView: function() {
      return [Q.SidebarItemDemoComponent];
    }
  };
  T.SnackbarDemoComponent.prototype = {
    showMessage$0: function() {
      return this._snackbarService.showMessage$1("Feedback what happend");
    },
    showMessageWithCallback$0: function() {
      var action = new T.SnackAction();
      action.label = "Click me";
      action.callback = new T.SnackbarDemoComponent_showMessageWithCallback_closure();
      this._snackbarService.showMessage$3$action$duration("For more information", action, P.Duration$(0, 10));
    }
  };
  T.SnackbarDemoComponent_showMessageWithCallback_closure.prototype = {
    call$0: function() {
      window.alert("Triggered!");
    },
    $signature: 0
  };
  D.ViewSnackbarDemoComponent0.prototype = {
    build$0: function() {
      var _el_0, styles, t2, t3, _el_2, _text_3, t4, t5, _el_4, _text_5, subscription_0, _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = S.ViewDemoHeaderComponent0$(_this, 0);
      _this._snackbar_demo_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      parentRenderNode.appendChild(_el_0);
      T.setAttribute(_el_0, "exampleHref", "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/snackbar_example");
      T.setAttribute(_el_0, "sourceHref", "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/snackbar");
      T.setAttribute(_el_0, "title", "Snackbar Demo");
      t1 = new D.DemoHeaderComponent();
      _this._snackbar_demo_template$_DemoHeaderComponent_0_5 = t1;
      _this._snackbar_demo_template$_compView_0.create0$1(t1);
      t1 = new S.ViewSkawaSnackbarComponent0(_this, S.AppViewData_AppViewData(1, C.ViewType_1, 1));
      styles = $.ViewSkawaSnackbarComponent0__componentStyles;
      if (styles == null)
        styles = $.ViewSkawaSnackbarComponent0__componentStyles = O.ComponentStyles_ComponentStyles$scoped($.styles$SkawaSnackbarComponent, null);
      t1.componentStyles = styles;
      t2 = document.createElement("skawa-snackbar");
      H.interceptedTypeCheck(t2, "$isHtmlElement");
      t1.rootEl = t2;
      _this._snackbar_demo_template$_compView_1 = t1;
      parentRenderNode.appendChild(t2);
      t1 = _this.parentView;
      t2 = _this.viewData.parentIndex;
      t3 = new T.SkawaSnackbarComponent(_this._snackbar_demo_template$_compView_1, H.interceptedTypeCheck(t1.injectorGet$2(C.Type_SnackbarService_v1z, t2), "$isSnackbarService"), new R.Disposer(true));
      _this._SkawaSnackbarComponent_1_5 = t3;
      _this._snackbar_demo_template$_compView_1.create0$1(t3);
      t3 = U.ViewMaterialButtonComponent0$(_this, 2);
      _this._snackbar_demo_template$_compView_2 = t3;
      _el_2 = t3.rootEl;
      parentRenderNode.appendChild(_el_2);
      T.setAttribute(_el_2, "dense", "");
      T.setAttribute(_el_2, "raised", "");
      t3 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t2)));
      _this._AcxDarkTheme_2_5 = t3;
      t3 = B.MaterialButtonComponent$(_el_2, t3, _this._snackbar_demo_template$_compView_2, null);
      _this._MaterialButtonComponent_2_6 = t3;
      _text_3 = T.createText("Simple snackbar");
      t4 = [W.Text];
      t5 = [P.Object];
      _this._snackbar_demo_template$_compView_2.create$2(0, t3, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_3], t4)], t5));
      t3 = U.ViewMaterialButtonComponent0$(_this, 4);
      _this._snackbar_demo_template$_compView_4 = t3;
      _el_4 = t3.rootEl;
      parentRenderNode.appendChild(_el_4);
      T.setAttribute(_el_4, "dense", "");
      T.setAttribute(_el_4, "raised", "");
      t1 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t2)));
      _this._AcxDarkTheme_4_5 = t1;
      t1 = B.MaterialButtonComponent$(_el_4, t1, _this._snackbar_demo_template$_compView_4, null);
      _this._MaterialButtonComponent_4_6 = t1;
      _text_5 = T.createText("Snackbar with callback");
      _this._snackbar_demo_template$_compView_4.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_text_5], t4)], t5));
      t5 = _this._MaterialButtonComponent_2_6._trigger;
      t4 = W.UIEvent;
      subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(_this.eventHandler0$1$1(_ctx.get$showMessage(), t4));
      t5 = _this._MaterialButtonComponent_4_6._trigger;
      _this.init$2(C.List_empty, H.setRuntimeTypeInfo([subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(_this.eventHandler0$1$1(_ctx.get$showMessageWithCallback(), t4))], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      var _this = this;
      if (2 <= nodeIndex && nodeIndex <= 3) {
        if (token === C.Type_AcxDarkTheme_Tng)
          return _this._AcxDarkTheme_2_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          return _this._MaterialButtonComponent_2_6;
      }
      if (4 <= nodeIndex && nodeIndex <= 5) {
        if (token === C.Type_AcxDarkTheme_Tng)
          return _this._AcxDarkTheme_4_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          return _this._MaterialButtonComponent_4_6;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var t1, changed, _this = this,
        firstCheck = _this.viewData._cdState === 0;
      if (firstCheck) {
        t1 = _this._snackbar_demo_template$_DemoHeaderComponent_0_5;
        t1.title = "Snackbar Demo";
        t1.sourceHref = "https://github.com/skawa-universe/skawa_components/tree/master/skawa_material_components/lib/snackbar";
        t1.exampleHref = "https://github.com/skawa-universe/skawa_components_example/tree/master/lib/snackbar_example";
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._snackbar_demo_template$_compView_0.viewData.set$cdMode(1);
      if (firstCheck)
        _this._SkawaSnackbarComponent_1_5.ngOnInit$0();
      if (firstCheck && (_this._MaterialButtonComponent_2_6.raised = true))
        _this._snackbar_demo_template$_compView_2.viewData.set$cdMode(1);
      if (firstCheck && (_this._MaterialButtonComponent_4_6.raised = true))
        _this._snackbar_demo_template$_compView_4.viewData.set$cdMode(1);
      _this._snackbar_demo_template$_compView_2.detectHostChanges$1(firstCheck);
      _this._snackbar_demo_template$_compView_4.detectHostChanges$1(firstCheck);
      _this._snackbar_demo_template$_compView_0.detectChanges$0();
      _this._snackbar_demo_template$_compView_1.detectChanges$0();
      _this._snackbar_demo_template$_compView_2.detectChanges$0();
      _this._snackbar_demo_template$_compView_4.detectChanges$0();
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._snackbar_demo_template$_compView_0.destroyInternalState$0();
      _this._snackbar_demo_template$_compView_1.destroyInternalState$0();
      _this._snackbar_demo_template$_compView_2.destroyInternalState$0();
      _this._snackbar_demo_template$_compView_4.destroyInternalState$0();
      _this._SkawaSnackbarComponent_1_5._tearDownDisposer.dispose$0();
    },
    $asAppView: function() {
      return [T.SnackbarDemoComponent];
    }
  };
  A.GridUpdate.prototype = {};
  A.GridTile.prototype = {};
  A.DomTransformReposition.prototype = {};
  A.GridBase.prototype = {
    calculateGridUpdate$2$gutterSize: function(gridWidth, gutterSize) {
      var tileWidthWithGutter, colNumber, xTranslations, yTranslationForCol, t2, tileTransformations, t3, t4, colIndex, tileNumber, t5, tile, maxYTranslation, maxColIndex, t6,
        t1 = this._tiles,
        tileWidth = (t1 && C.JSArray_methods).get$first(t1).tile.clientWidth;
      if (typeof tileWidth !== "number")
        return tileWidth.$add();
      if (typeof gutterSize !== "number")
        return H.iae(gutterSize);
      tileWidthWithGutter = tileWidth + gutterSize;
      if (typeof gridWidth !== "number")
        return gridWidth.$tdiv();
      colNumber = C.JSInt_methods.$tdiv(gridWidth, tileWidthWithGutter);
      if (colNumber === 0)
        colNumber = 1;
      t1 = P.int;
      xTranslations = P.List_List$generate(colNumber, new A.GridBase_calculateGridUpdate_closure(tileWidthWithGutter, C.JSInt_methods._tdivFast$1(gridWidth - tileWidthWithGutter * colNumber - gutterSize, 2)), false, t1);
      yTranslationForCol = P.List_List$filled(colNumber, 0, false, t1);
      this._tiles.length;
      t2 = new Array(5);
      t2.fixed$length = Array;
      tileTransformations = H.setRuntimeTypeInfo(t2, [[P.Point, P.int]]);
      for (t2 = [t1], t3 = H.getTypeArgumentByIndex(yTranslationForCol, 0), t4 = {func: 1, ret: P.bool, args: [t3]}, t3 = [t3], colIndex = 0, tileNumber = 0; t5 = this._tiles, t5.length, tileNumber < 5; ++tileNumber) {
        tile = t5[tileNumber];
        maxYTranslation = C.JSArray_methods.reduce$1(yTranslationForCol, H.instantiate1(P.math__max$closure(), t1));
        maxColIndex = C.JSArray_methods.indexOf$1(yTranslationForCol, maxYTranslation);
        t5 = new H.WhereIterable(yTranslationForCol, H.functionTypeCheck(new A.GridBase_calculateGridUpdate_closure0(maxYTranslation), t4), t3);
        if (t5.get$length(t5) <= 1 && maxColIndex === colIndex)
          colIndex = C.JSInt_methods.$mod(colIndex + 1, colNumber);
        if (colIndex < 0 || colIndex >= xTranslations.length)
          return H.ioore(xTranslations, colIndex);
        t5 = xTranslations[colIndex];
        if (colIndex >= yTranslationForCol.length)
          return H.ioore(yTranslationForCol, colIndex);
        C.JSArray_methods.$indexSet(tileTransformations, tileNumber, new P.Point(t5, yTranslationForCol[colIndex], t2));
        t5 = tile.tile.clientHeight;
        if (colIndex >= yTranslationForCol.length)
          return H.ioore(yTranslationForCol, colIndex);
        t6 = yTranslationForCol[colIndex];
        if (typeof t5 !== "number")
          return t5.$add();
        if (typeof t6 !== "number")
          return H.iae(t6);
        C.JSArray_methods.$indexSet(yTranslationForCol, colIndex, t5 + t6 + gutterSize);
        colIndex = C.JSInt_methods.$mod(colIndex + 1, colNumber);
      }
      return new A.GridUpdate(tileTransformations, J.$add$ansx(C.JSArray_methods.reduce$1(yTranslationForCol, H.instantiate1(P.math__max$closure(), t1)), gutterSize));
    }
  };
  A.GridBase_calculateGridUpdate_closure.prototype = {
    call$1: function(index) {
      return index * this.tileWidthWithGutter + this.xAdjustmentForCentering;
    },
    $signature: 56
  };
  A.GridBase_calculateGridUpdate_closure0.prototype = {
    call$1: function(e) {
      return H.intTypeCheck(e) == this.maxYTranslation;
    },
    $signature: 44
  };
  V.SkawaCardComponent.prototype = {};
  V.SkawaCardContentComponent.prototype = {};
  V.SkawaCardHeaderComponent.prototype = {
    get$statusStyle: function() {
      var t1 = $.$get$SkawaCardHeaderComponent__rgbaRegexp(),
        t2 = this.statusColor;
      t1 = t1._nativeRegExp;
      if (t1.test(t2))
        return "inset 0 4px 0 0 " + this.statusColor;
      return;
    }
  };
  E.ViewSkawaCardComponent0.prototype = {
    build$0: function() {
      var _this = this;
      _this.project$2(_this.initViewRoot$1(_this.rootEl), 0);
      _this.init0$0();
    },
    $asAppView: function() {
      return [V.SkawaCardComponent];
    }
  };
  E.ViewSkawaCardContentComponent0.prototype = {
    build$0: function() {
      var _this = this;
      _this.project$2(_this.initViewRoot$1(_this.rootEl), 0);
      _this.init0$0();
    },
    detectHostChanges$1: function(firstCheck) {
      var currVal_1, _this = this,
        _ctx = _this.ctx,
        currVal_0 = _ctx.parentCard.cardHeader != null,
        t1 = _this._card_template$_expr_0;
      if (t1 !== currVal_0) {
        T.updateClassBindingNonHtml(_this.rootEl, "with-header", currVal_0);
        _this._card_template$_expr_0 = currVal_0;
      }
      currVal_1 = _ctx.collapsed != null;
      t1 = _this._card_template$_expr_1;
      if (t1 !== currVal_1) {
        T.updateClassBindingNonHtml(_this.rootEl, "skawa-collapsed", currVal_1);
        _this._card_template$_expr_1 = currVal_1;
      }
    },
    $asAppView: function() {
      return [V.SkawaCardContentComponent];
    }
  };
  E.ViewSkawaCardHeaderComponent0.prototype = {
    build$0: function() {
      var _this = this;
      _this.project$2(_this.initViewRoot$1(_this.rootEl), 0);
      _this.init0$0();
    },
    detectHostChanges$1: function(firstCheck) {
      var currVal_1, currVal_2, currVal_3, _this = this,
        _ctx = _this.ctx,
        currVal_0 = _ctx.image != null,
        t1 = _this._card_template$_expr_0;
      if (t1 !== currVal_0) {
        T.updateClassBindingNonHtml(_this.rootEl, "with-title-image", currVal_0);
        _this._card_template$_expr_0 = currVal_0;
      }
      currVal_1 = _ctx.subhead != null;
      t1 = _this._card_template$_expr_1;
      if (t1 !== currVal_1) {
        T.updateClassBindingNonHtml(_this.rootEl, "with-subhead", currVal_1);
        _this._card_template$_expr_1 = currVal_1;
      }
      currVal_2 = _ctx.headerActions != null;
      t1 = _this._card_template$_expr_2;
      if (t1 !== currVal_2) {
        T.updateClassBindingNonHtml(_this.rootEl, "with-actions", currVal_2);
        _this._card_template$_expr_2 = currVal_2;
      }
      currVal_3 = _ctx.get$statusStyle();
      t1 = _this._card_template$_expr_3;
      if (t1 != currVal_3) {
        t1 = _this.rootEl.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "box-shadow"), currVal_3, null);
        _this._card_template$_expr_3 = currVal_3;
      }
    },
    $asAppView: function() {
      return [V.SkawaCardHeaderComponent];
    }
  };
  X.SkawaCardActionsComponent.prototype = {};
  X.ViewSkawaCardActionsComponent0.prototype = {
    build$0: function() {
      var _this = this;
      _this.project$2(_this.initViewRoot$1(_this.rootEl), 0);
      _this.init0$0();
    },
    detectHostChanges$1: function(firstCheck) {
      var _this = this,
        currVal_0 = _this.ctx.cardHeader != null,
        t1 = _this._card_actions_template$_expr_0;
      if (t1 !== currVal_0) {
        T.updateClassBindingNonHtml(_this.rootEl, "in-header", currVal_0);
        _this._card_actions_template$_expr_0 = currVal_0;
      }
    },
    $asAppView: function() {
      return [X.SkawaCardActionsComponent];
    }
  };
  F.SkawaCardHeaderTitleDirective.prototype = {};
  F.SkawaCardHeaderSubheadDirective.prototype = {};
  F.SkawaCardHeaderImageDirective.prototype = {};
  S.SkawaDataTableComponent.prototype = {
    SkawaDataTableComponent$1: function(changeDetectorRef, $T) {
      var _this = this,
        t1 = _this._data_table$_tearDownDisposer,
        t2 = _this._data_table$_changeController;
      t1.addEventSink$1$1(t2, [P.List, $T]);
      t1.addEventSink$1$1(_this._highlightController, $T);
      t1.addEventSink$1$1(_this._sortController, [G.SkawaDataTableColComponent, $T]);
      t1 = H.getTypeArgumentByIndex(t2, 0);
      _this.set$onChange(0, new P._DistinctStream(H.functionTypeCheck(new S.SkawaDataTableComponent_closure(_this, $T), {func: 1, ret: P.bool, args: [t1, t1]}), new P._BroadcastStream(t2, [t1]), [t1]));
    },
    getColspanFor$2: function(col, skippedIndex) {
      var t1, colIndex, i, span, prevIndex, _this = this;
      H.assertSubtype(col, "$isSkawaDataTableColComponent", _this.$ti, "$asSkawaDataTableColComponent");
      if (skippedIndex === 0 && H.boolConversionCheck(_this.selectable))
        return 2;
      t1 = _this.columns;
      t1 = H.setRuntimeTypeInfo(t1.slice(0), [H.getTypeArgumentByIndex(t1, 0)]);
      colIndex = C.JSArray_methods.indexOf$1(t1, col);
      for (t1 = _this.columns, i = colIndex, span = 1; i >= 0; i = prevIndex) {
        prevIndex = i - 1;
        if (prevIndex < 0)
          break;
        if (prevIndex >= t1.length)
          return H.ioore(t1, prevIndex);
        if (t1[prevIndex].skipFooter)
          ++span;
        else
          break;
      }
      return span;
    },
    changeRowSelection$2: function(row, selected) {
      H.assertSubtypeOfRuntimeType(row, H.getTypeArgumentByIndex(this, 0));
      J.set$checked$x(row, selected);
      this._emitChange$0();
    },
    markAllRowsChecked$2: function(checked, emit) {
      var t1 = this.rows;
      (t1 && C.JSArray_methods).forEach$1(t1, new S.SkawaDataTableComponent_markAllRowsChecked_closure(this, checked));
      this._emitChange$0();
    },
    _canHighlight$1: function(ev) {
      var t1, t2, target;
      if (H.boolConversionCheck(this.selectable)) {
        t1 = J.getInterceptor$x(ev);
        if (!!J.getInterceptor$(t1.get$target(ev)).$isElement) {
          t1 = t1.get$target(ev);
          t2 = W._convertNativeToDart_EventTarget(ev.currentTarget);
          t2 = t1 == null ? t2 != null : t1 !== t2;
          t1 = t2;
        } else
          t1 = false;
      } else
        t1 = false;
      if (t1) {
        target = H.interceptedTypeCast(J.get$target$x(ev), "$isElement");
        if (!!J.getInterceptor$(target).$isElement)
          while (true) {
            t1 = W._convertNativeToDart_EventTarget(ev.currentTarget);
            if (!((target == null ? t1 != null : target !== t1) && target.tagName !== "TR" && target != null))
              break;
            if (J.get$classes$x(target).contains$1(0, "selector-checkbox"))
              return false;
            target = target.parentElement;
          }
      }
      return true;
    },
    triggerSort$1: function(column) {
      var t1, t2, t3, directionIndex, t4, _i, c;
      column = H.subtypeCast(H.assertSubtype(column, "$isSkawaDataTableColComponent", [U.RowData], "$asSkawaDataTableColComponent"), "$isSkawaDataTableColComponent", this.$ti, "$asSkawaDataTableColComponent");
      t1 = column.sortModel;
      t2 = t1.allowedDirections;
      if (t2.length === 0)
        H.throwExpression(P.ArgumentError$("SortModel does not have any allowed sort directions"));
      t3 = t1.activeSort;
      if (t3 == null)
        t1.activeSort = H.interceptedTypeCheck(C.JSArray_methods.get$first(t2), "$isSortDirection");
      else {
        directionIndex = C.JSArray_methods.indexOf$1(t2, t3);
        t3 = t2.length;
        if (directionIndex === t3 - 1)
          t1.activeSort = null;
        else {
          t4 = directionIndex + 1;
          if (t4 < 0 || t4 >= t3)
            return H.ioore(t2, t4);
          t1.activeSort = H.interceptedTypeCheck(t2[t4], "$isSortDirection");
        }
      }
      for (t1 = this.columns, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        c = t1[_i];
        if (!J.$eq$(c, column) && c.sortModel != null)
          c.sortModel.activeSort = null;
      }
      this._sortController.add$1(0, column);
    },
    _emitChange$0: function() {
      var t2,
        t1 = this.rows;
      t1.toString;
      t2 = H.getTypeArgumentByIndex(t1, 0);
      this._data_table$_changeController.add$1(0, P.List_List$from(new H.WhereIterable(t1, H.functionTypeCheck(new S.SkawaDataTableComponent__emitChange_closure(this), {func: 1, ret: P.bool, args: [t2]}), [t2]), false, t2));
    },
    get$isEveryRowChecked: function() {
      var t1 = this.rows;
      return t1 == null ? null : C.JSArray_methods.every$1(t1, new S.SkawaDataTableComponent_isEveryRowChecked_closure(this));
    },
    get$isEveryRowSkippedInFooter: function() {
      var t1 = this.columns;
      t1 = t1 == null ? null : C.JSArray_methods.every$1(t1, new S.SkawaDataTableComponent_isEveryRowSkippedInFooter_closure(this));
      return t1 !== false;
    },
    _areOfSameCheckedState$2: function(a, b) {
      var t2, i, t3, t4,
        t1 = this.$ti;
      H.assertSubtype(a, "$isList", t1, "$asList");
      H.assertSubtype(b, "$isList", t1, "$asList");
      t1 = J.getInterceptor$asx(a);
      t2 = J.getInterceptor$asx(b);
      i = 0;
      while (true) {
        t3 = t1.get$length(a);
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!(i < t3))
          break;
        t3 = J.get$checked$x(t1.$index(a, i));
        t4 = J.get$checked$x(t2.$index(b, i));
        if (t3 == null ? t4 != null : t3 !== t4)
          return false;
        ++i;
      }
      return true;
    },
    ngAfterViewInit$0: function() {
      var t2, initialSorts,
        t1 = this.columns;
      if (t1 == null)
        t1 = null;
      else {
        t2 = H.getTypeArgumentByIndex(t1, 0);
        t2 = new H.WhereIterable(t1, H.functionTypeCheck(new S.SkawaDataTableComponent_ngAfterViewInit_closure(this), {func: 1, ret: P.bool, args: [t2]}), [t2]);
        t1 = t2;
      }
      initialSorts = t1 == null ? null : P.List_List$from(t1, false, H.getRuntimeTypeArgument(t1, "Iterable", 0));
      t1 = (initialSorts == null ? H.setRuntimeTypeInfo([], [[G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]]) : initialSorts).length;
      if (t1 > 1)
        throw H.wrapException(P.ArgumentError$("Initial sort can only be set on one column at most, found " + t1 + " columns"));
    },
    set$rows: function(_, rows) {
      this.rows = H.assertSubtype(rows, "$isIterable", this.$ti, "$asIterable");
    },
    set$highlightedRow: function(highlightedRow) {
      this.highlightedRow = H.assertSubtypeOfRuntimeType(highlightedRow, H.getTypeArgumentByIndex(this, 0));
    },
    set$columns: function(_, columns) {
      this.columns = H.assertSubtype(columns, "$isList", [[G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]], "$asList");
    },
    set$onChange: function(_, onChange) {
      H.assertSubtype(onChange, "$isStream", [[P.List, H.getTypeArgumentByIndex(this, 0)]], "$asStream");
    }
  };
  S.SkawaDataTableComponent_closure.prototype = {
    call$2: function(a, b) {
      var t1 = [this.T];
      H.assertSubtype(a, "$isList", t1, "$asList");
      H.assertSubtype(b, "$isList", t1, "$asList");
      if (!J.$eq$(a, b))
        t1 = S.listsEqual(a, b) && this.$this._areOfSameCheckedState$2(a, b);
      else
        t1 = true;
      return t1;
    },
    $signature: function() {
      var t1 = this.T;
      return {func: 1, ret: P.bool, args: [[P.List, t1], [P.List, t1]]};
    }
  };
  S.SkawaDataTableComponent_markAllRowsChecked_closure.prototype = {
    call$1: function(row) {
      var t1 = this.checked;
      J.set$checked$x(H.assertSubtypeOfRuntimeType(row, H.getTypeArgumentByIndex(this.$this, 0)), t1);
      return t1;
    },
    $signature: function() {
      return {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this.$this, 0)]};
    }
  };
  S.SkawaDataTableComponent__emitChange_closure.prototype = {
    call$1: function(r) {
      return J.get$checked$x(H.assertSubtypeOfRuntimeType(r, H.getTypeArgumentByIndex(this.$this, 0)));
    },
    $signature: function() {
      return {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this.$this, 0)]};
    }
  };
  S.SkawaDataTableComponent_isEveryRowChecked_closure.prototype = {
    call$1: function(row) {
      return J.get$checked$x(H.assertSubtypeOfRuntimeType(row, H.getTypeArgumentByIndex(this.$this, 0)));
    },
    $signature: function() {
      return {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this.$this, 0)]};
    }
  };
  S.SkawaDataTableComponent_isEveryRowSkippedInFooter_closure.prototype = {
    call$1: function(col) {
      return H.assertSubtype(col, "$isSkawaDataTableColComponent", [H.getTypeArgumentByIndex(this.$this, 0)], "$asSkawaDataTableColComponent").skipFooter;
    },
    $signature: function() {
      return {func: 1, ret: P.bool, args: [[G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this.$this, 0)]]};
    }
  };
  S.SkawaDataTableComponent_ngAfterViewInit_closure.prototype = {
    call$1: function(c) {
      var t1 = H.assertSubtype(c, "$isSkawaDataTableColComponent", [H.getTypeArgumentByIndex(this.$this, 0)], "$asSkawaDataTableColComponent").sortModel;
      return (t1 == null ? null : t1.activeSort) != null;
    },
    $signature: function() {
      return {func: 1, ret: P.bool, args: [[G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this.$this, 0)]]};
    }
  };
  S.UnskippedInFooterPipe.prototype = {
    transform$1: function(_, data) {
      var t1;
      H.assertSubtype(data, "$isList", [[G.SkawaDataTableColComponent, U.RowData]], "$asList");
      t1 = J.getInterceptor$(data);
      if (!t1.$isList)
        throw H.wrapException(K.InvalidPipeArgumentException$(C.Type_UnskippedInFooterPipe_ENo, data));
      t1 = t1.where$1(data, new S.UnskippedInFooterPipe_transform_closure());
      return P.List_List$from(t1, true, H.getTypeArgumentByIndex(t1, 0));
    }
  };
  S.UnskippedInFooterPipe_transform_closure.prototype = {
    call$1: function(d) {
      return !H.assertSubtype(d, "$isSkawaDataTableColComponent", [U.RowData], "$asSkawaDataTableColComponent").skipFooter;
    },
    $signature: 132
  };
  N.ViewSkawaDataTableComponent0.prototype = {
    build$0: function() {
      var _el_1, _el_2, _el_5, _this = this,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        doc = document,
        t1 = H.interceptedTypeCheck(T.appendElement(doc, parentRenderNode, "table"), "$isTableElement");
      _this._data_table_template$_el_0 = t1;
      _this.addShimC$1(t1);
      _el_1 = T.appendElement(doc, _this._data_table_template$_el_0, "thead");
      _this.addShimE$1(_el_1);
      _el_2 = T.appendElement(doc, _el_1, "tr");
      _this.addShimE$1(_el_2);
      t1 = _this._data_table_template$_appEl_3 = new V.ViewContainer(3, 2, _this, T.appendAnchor(_el_2));
      _this._data_table_template$_NgIf_3_9 = new K.NgIf(new D.TemplateRef(t1, new N.ViewSkawaDataTableComponent0_build_closure(_this)), t1);
      t1 = _this._data_table_template$_appEl_4 = new V.ViewContainer(4, 2, _this, T.appendAnchor(_el_2));
      _this._NgFor_4_9 = new R.NgFor(t1, new D.TemplateRef(t1, new N.ViewSkawaDataTableComponent0_build_closure0(_this)));
      _el_5 = T.appendElement(doc, _this._data_table_template$_el_0, "tbody");
      _this.addShimE$1(_el_5);
      t1 = _this._data_table_template$_appEl_6 = new V.ViewContainer(6, 5, _this, T.appendAnchor(_el_5));
      _this._NgFor_6_9 = new R.NgFor(t1, new D.TemplateRef(t1, new N.ViewSkawaDataTableComponent0_build_closure1(_this)));
      t1 = _this._appEl_7 = new V.ViewContainer(7, 0, _this, T.appendAnchor(_this._data_table_template$_el_0));
      _this._NgIf_7_9 = new K.NgIf(new D.TemplateRef(t1, new N.ViewSkawaDataTableComponent0_build_closure2(_this)), t1);
      _this.project$2(parentRenderNode, 0);
      _this._pipe_unskippedInFooter_0 = new S.UnskippedInFooterPipe();
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var currVal_3, t1, currVal_4, currVal_0, currVal_1, _this = this,
        _ctx = _this.ctx;
      _this._data_table_template$_NgIf_3_9.set$ngIf(_ctx.selectable);
      currVal_3 = _ctx.columns;
      t1 = _this._data_table_template$_expr_3;
      if (t1 == null ? currVal_3 != null : t1 !== currVal_3) {
        _this._NgFor_4_9.set$ngForOf(currVal_3);
        _this._data_table_template$_expr_3 = currVal_3;
      }
      _this._NgFor_4_9.ngDoCheck$0();
      currVal_4 = _ctx.rows;
      t1 = _this._data_table_template$_expr_4;
      if (t1 == null ? currVal_4 != null : t1 !== currVal_4) {
        _this._NgFor_6_9.set$ngForOf(currVal_4);
        _this._data_table_template$_expr_4 = currVal_4;
      }
      _this._NgFor_6_9.ngDoCheck$0();
      _this._NgIf_7_9.set$ngIf(!_ctx.get$isEveryRowSkippedInFooter());
      _this._data_table_template$_appEl_3.detectChangesInNestedViews$0();
      _this._data_table_template$_appEl_4.detectChangesInNestedViews$0();
      _this._data_table_template$_appEl_6.detectChangesInNestedViews$0();
      _this._appEl_7.detectChangesInNestedViews$0();
      currVal_0 = _ctx.selectable;
      t1 = _this._data_table_template$_expr_0;
      if (t1 != currVal_0) {
        T.updateClassBinding(_this._data_table_template$_el_0, "selectable", currVal_0);
        _this._data_table_template$_expr_0 = currVal_0;
      }
      currVal_1 = !H.boolConversionCheck(_ctx.selectable);
      t1 = _this._data_table_template$_expr_1;
      if (t1 !== currVal_1) {
        T.updateClassBinding(_this._data_table_template$_el_0, "non-selectable", currVal_1);
        _this._data_table_template$_expr_1 = currVal_1;
      }
    },
    destroyInternal$0: function() {
      var _this = this;
      _this._data_table_template$_appEl_3.destroyNestedViews$0();
      _this._data_table_template$_appEl_4.destroyNestedViews$0();
      _this._data_table_template$_appEl_6.destroyNestedViews$0();
      _this._appEl_7.destroyNestedViews$0();
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N.ViewSkawaDataTableComponent0_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new N._ViewSkawaDataTableComponent1(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N.ViewSkawaDataTableComponent0_build_closure0.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new N._ViewSkawaDataTableComponent3(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N.ViewSkawaDataTableComponent0_build_closure1.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new N._ViewSkawaDataTableComponent6(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N.ViewSkawaDataTableComponent0_build_closure2.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new N._ViewSkawaDataTableComponent12(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent1.prototype = {
    build$0: function() {
      var t1, _this = this,
        _el_0 = document.createElement("th");
      _this.addShimE$1(_el_0);
      t1 = _this._data_table_template$_appEl_1 = new V.ViewContainer(1, 0, _this, T.appendAnchor(_el_0));
      _this._data_table_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent1_build_closure(_this)), t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var _ctx = this.ctx,
        t1 = this._data_table_template$_NgIf_1_9;
      _ctx.toString;
      t1.set$ngIf(true);
      this._data_table_template$_appEl_1.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      this._data_table_template$_appEl_1.destroyNestedViews$0();
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent1_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new N._ViewSkawaDataTableComponent2(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent2.prototype = {
    build$0: function() {
      var _el_0, _this = this,
        t1 = G.ViewMaterialCheckboxComponent0$(_this, 0);
      _this._data_table_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      _this.addShimC$1(_el_0);
      t1 = B.MaterialCheckboxComponent$(_el_0, _this._data_table_template$_compView_0, null, null, null);
      _this._data_table_template$_MaterialCheckboxComponent_0_5 = t1;
      _this._data_table_template$_compView_0.create$2(0, t1, H.setRuntimeTypeInfo([C.List_empty0], [P.Object]));
      t1 = W.Event;
      J.addEventListener$2$x(_el_0, "click", _this.eventHandler1$2$1(_this.get$_data_table_template$_handle_click_0_0(), t1, t1));
      _this.init1$1(_el_0);
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if (token === C.Type_HasDisabled_qzc && 0 === nodeIndex)
        return this._data_table_template$_MaterialCheckboxComponent_0_5;
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var changed, _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData._cdState,
        currVal_0 = _ctx.get$isEveryRowChecked(),
        t2 = _this._data_table_template$_expr_0;
      if (t2 != currVal_0) {
        _this._data_table_template$_MaterialCheckboxComponent_0_5.set$checked(0, currVal_0);
        _this._data_table_template$_expr_0 = currVal_0;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._data_table_template$_compView_0.viewData.set$cdMode(1);
      _this._data_table_template$_compView_0.detectHostChanges$1(t1 === 0);
      _this._data_table_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._data_table_template$_compView_0.destroyInternalState$0();
      this._data_table_template$_MaterialCheckboxComponent_0_5.toString;
    },
    _data_table_template$_handle_click_0_0$1: function($$event) {
      var local_markAllCheckbox = this._data_table_template$_MaterialCheckboxComponent_0_5;
      this.ctx.markAllRowsChecked$2(local_markAllCheckbox._checked, true);
      J.stopPropagation$0$x($$event);
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent3.prototype = {
    build$0: function() {
      var _this = this,
        t1 = document.createElement("th");
      _this._data_table_template$_el_0 = t1;
      _this.addShimE$1(t1);
      _this._data_table_template$_NgClass_0_5 = new Y.NgClass(_this._data_table_template$_el_0, H.setRuntimeTypeInfo([], [P.String]));
      t1 = _this._data_table_template$_appEl_1 = new V.ViewContainer(1, 0, _this, T.appendAnchor(_this._data_table_template$_el_0));
      _this._data_table_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent3_build_closure(_this)), t1);
      T.appendText(_this._data_table_template$_el_0, " ");
      t1 = _this._data_table_template$_appEl_3 = new V.ViewContainer(3, 0, _this, T.appendAnchor(_this._data_table_template$_el_0));
      _this._data_table_template$_NgIf_3_9 = new K.NgIf(new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent3_build_closure0(_this)), t1);
      _this.init1$1(_this._data_table_template$_el_0);
    },
    detectChangesInternal$0: function() {
      var currVal_0, currVal_1, currVal_2, _this = this,
        local_c = H.assertSubtypeOfRuntimeType(_this.viewData.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(_this, 0)]),
        currVal_3 = local_c.getClasses$1("--header"),
        t1 = _this._data_table_template$_expr_3;
      if (t1 != currVal_3) {
        _this._data_table_template$_NgClass_0_5.set$rawClass(currVal_3);
        _this._data_table_template$_expr_3 = currVal_3;
      }
      _this._data_table_template$_NgClass_0_5.ngDoCheck$0();
      _this._data_table_template$_NgIf_1_9.set$ngIf(local_c.sortModel == null);
      _this._data_table_template$_NgIf_3_9.set$ngIf(local_c.sortModel != null);
      _this._data_table_template$_appEl_1.detectChangesInNestedViews$0();
      _this._data_table_template$_appEl_3.detectChangesInNestedViews$0();
      t1 = local_c.sortModel;
      currVal_0 = t1 != null && t1.activeSort == null;
      t1 = _this._data_table_template$_expr_0;
      if (t1 !== currVal_0) {
        T.updateClassBinding(H.interceptedTypeCheck(_this._data_table_template$_el_0, "$isHtmlElement"), "sort-enabled", currVal_0);
        _this._data_table_template$_expr_0 = currVal_0;
      }
      t1 = local_c.sortModel;
      t1 = t1 == null ? null : t1.activeSort != null;
      currVal_1 = t1 === true;
      t1 = _this._data_table_template$_expr_1;
      if (t1 !== currVal_1) {
        T.updateClassBinding(H.interceptedTypeCheck(_this._data_table_template$_el_0, "$isHtmlElement"), "sort", currVal_1);
        _this._data_table_template$_expr_1 = currVal_1;
      }
      t1 = local_c.sortModel;
      t1 = t1 == null ? null : t1.activeSort === C.SortDirection_1;
      currVal_2 = t1 === true;
      t1 = _this._data_table_template$_expr_2;
      if (t1 !== currVal_2) {
        T.updateClassBinding(H.interceptedTypeCheck(_this._data_table_template$_el_0, "$isHtmlElement"), "desc", currVal_2);
        _this._data_table_template$_expr_2 = currVal_2;
      }
    },
    destroyInternal$0: function() {
      this._data_table_template$_appEl_1.destroyNestedViews$0();
      this._data_table_template$_appEl_3.destroyNestedViews$0();
      var t1 = this._data_table_template$_NgClass_0_5;
      t1._applyClasses$2(t1._rawClass, true);
      t1._applyInitialClasses$1(false);
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent3_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      H.intTypeCheck(parentIndex);
      t1 = new N._ViewSkawaDataTableComponent4(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent3_build_closure0.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      H.intTypeCheck(parentIndex);
      t1 = new N._ViewSkawaDataTableComponent5(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent4.prototype = {
    build$0: function() {
      this.init1$1(this._textBinding_0.element);
    },
    detectChangesInternal$0: function() {
      var t1 = H.assertSubtypeOfRuntimeType(this.parentView.viewData.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]).header;
      if (t1 == null)
        t1 = "";
      this._textBinding_0.updateText$1(t1);
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent5.prototype = {
    build$0: function() {
      var t1, _this = this,
        _el_0 = document.createElement("a");
      H.interceptedTypeCheck(_el_0, "$isHtmlElement");
      _this.addShimC$1(_el_0);
      _el_0.appendChild(_this._data_table_template$_textBinding_1.element);
      t1 = W.Event;
      J.addEventListener$2$x(_el_0, "click", _this.eventHandler1$2$1(_this.get$_data_table_template$_handle_click_0_0(), t1, t1));
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var t1 = H.assertSubtypeOfRuntimeType(this.parentView.viewData.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]).header;
      if (t1 == null)
        t1 = "";
      this._data_table_template$_textBinding_1.updateText$1(t1);
    },
    _data_table_template$_handle_click_0_0$1: function($$event) {
      var local_c = H.assertSubtypeOfRuntimeType(this.parentView.viewData.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(this, 0)]);
      this.ctx.triggerSort$1(local_c);
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent6.prototype = {
    build$0: function() {
      var _this = this,
        t1 = document.createElement("tr");
      _this._data_table_template$_el_0 = t1;
      _this.addShimE$1(t1);
      _this._data_table_template$_NgClass_0_5 = new Y.NgClass(_this._data_table_template$_el_0, H.setRuntimeTypeInfo([], [P.String]));
      t1 = _this._data_table_template$_appEl_1 = new V.ViewContainer(1, 0, _this, T.appendAnchor(_this._data_table_template$_el_0));
      _this._data_table_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent6_build_closure(_this)), t1);
      t1 = _this._data_table_template$_appEl_2 = new V.ViewContainer(2, 0, _this, T.appendAnchor(_this._data_table_template$_el_0));
      _this._data_table_template$_NgFor_2_9 = new R.NgFor(t1, new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent6_build_closure0(_this)));
      t1 = W.Event;
      J.addEventListener$2$x(_this._data_table_template$_el_0, "click", _this.eventHandler1$2$1(_this.get$_data_table_template$_handle_click_0_0(), t1, t1));
      _this.init1$1(_this._data_table_template$_el_0);
    },
    detectChangesInternal$0: function() {
      var currVal_4, t2, currVal_6, currVal_0, currVal_1, t3, currVal_2, currVal_3, _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData.locals,
        local_row = H.assertSubtypeOfRuntimeType(t1.$index(0, "$implicit"), H.getTypeArgumentByIndex(_this, 0)),
        local_index = H.intTypeCheck(t1.$index(0, "index"));
      t1 = J.getInterceptor$x(local_row);
      currVal_4 = t1.get$classes(local_row);
      t2 = _this._data_table_template$_expr_4;
      if (t2 == null ? currVal_4 != null : t2 !== currVal_4) {
        _this._data_table_template$_NgClass_0_5.set$rawClass(currVal_4);
        _this._data_table_template$_expr_4 = currVal_4;
      }
      _this._data_table_template$_NgClass_0_5.ngDoCheck$0();
      _this._data_table_template$_NgIf_1_9.set$ngIf(_ctx.selectable);
      currVal_6 = _ctx.columns;
      t2 = _this._data_table_template$_expr_6;
      if (t2 == null ? currVal_6 != null : t2 !== currVal_6) {
        _this._data_table_template$_NgFor_2_9.set$ngForOf(currVal_6);
        _this._data_table_template$_expr_6 = currVal_6;
      }
      _this._data_table_template$_NgFor_2_9.ngDoCheck$0();
      _this._data_table_template$_appEl_1.detectChangesInNestedViews$0();
      _this._data_table_template$_appEl_2.detectChangesInNestedViews$0();
      currVal_0 = t1.get$checked(local_row);
      t2 = _this._data_table_template$_expr_0;
      if (t2 != currVal_0) {
        T.updateClassBinding(H.interceptedTypeCheck(_this._data_table_template$_el_0, "$isHtmlElement"), "selected", currVal_0);
        _this._data_table_template$_expr_0 = currVal_0;
      }
      if (typeof local_index !== "number")
        return local_index.$mod();
      t2 = C.JSInt_methods.$mod(local_index, 2) === 0;
      if (!t2) {
        _ctx.toString;
        currVal_1 = true;
      } else
        currVal_1 = false;
      t3 = _this._data_table_template$_expr_1;
      if (t3 !== currVal_1) {
        T.updateClassBinding(H.interceptedTypeCheck(_this._data_table_template$_el_0, "$isHtmlElement"), "odd-row", currVal_1);
        _this._data_table_template$_expr_1 = currVal_1;
      }
      if (t2) {
        _ctx.toString;
        currVal_2 = true;
      } else
        currVal_2 = false;
      t2 = _this._data_table_template$_expr_2;
      if (t2 !== currVal_2) {
        T.updateClassBinding(H.interceptedTypeCheck(_this._data_table_template$_el_0, "$isHtmlElement"), "even-row", currVal_2);
        _this._data_table_template$_expr_2 = currVal_2;
      }
      currVal_3 = t1.$eq(local_row, _ctx.highlightedRow);
      t1 = _this._data_table_template$_expr_3;
      if (t1 !== currVal_3) {
        T.updateClassBinding(H.interceptedTypeCheck(_this._data_table_template$_el_0, "$isHtmlElement"), "highlighted", currVal_3);
        _this._data_table_template$_expr_3 = currVal_3;
      }
    },
    destroyInternal$0: function() {
      this._data_table_template$_appEl_1.destroyNestedViews$0();
      this._data_table_template$_appEl_2.destroyNestedViews$0();
      var t1 = this._data_table_template$_NgClass_0_5;
      t1._applyClasses$2(t1._rawClass, true);
      t1._applyInitialClasses$1(false);
    },
    _data_table_template$_handle_click_0_0$1: function($$event) {
      var t1,
        local_row = H.assertSubtypeOfRuntimeType(this.viewData.locals.$index(0, "$implicit"), H.getTypeArgumentByIndex(this, 0)),
        _ctx = this.ctx;
      H.interceptedTypeCheck($$event, "$isEvent");
      _ctx.toString;
      H.assertSubtypeOfRuntimeType(local_row, H.getTypeArgumentByIndex(_ctx, 0));
      if (_ctx._canHighlight$1($$event)) {
        _ctx.set$highlightedRow(!J.$eq$(local_row, _ctx.highlightedRow) ? local_row : null);
        t1 = _ctx._highlightController;
        if ((t1._state & 4) === 0)
          t1.add$1(0, _ctx.highlightedRow);
      }
      $$event.stopPropagation();
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent6_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new N._ViewSkawaDataTableComponent7(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent6_build_closure0.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new N._ViewSkawaDataTableComponent8(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent7.prototype = {
    build$0: function() {
      var t1, _el_1, t2, t3, subscription_0, _this = this,
        _el_0 = document.createElement("td");
      _this.addShimE$1(_el_0);
      t1 = G.ViewMaterialCheckboxComponent0$(_this, 1);
      _this._data_table_template$_compView_1 = t1;
      _el_1 = t1.rootEl;
      _el_0.appendChild(_el_1);
      _this.updateChildClassNonHtml$2(_el_1, "selector-checkbox themeable");
      _this.addShimC$1(_el_1);
      t1 = B.MaterialCheckboxComponent$(_el_1, _this._data_table_template$_compView_1, null, null, null);
      _this._MaterialCheckboxComponent_1_5 = t1;
      t2 = [P.Object];
      _this._data_table_template$_compView_1.create$2(0, t1, H.setRuntimeTypeInfo([C.List_empty0], t2));
      t1 = _this._MaterialCheckboxComponent_1_5._onChecked;
      t3 = P.bool;
      subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(_this.eventHandler1$2$1(_this.get$_handle_checkedChange_1_0(), t3, t3));
      _this.init$2(H.setRuntimeTypeInfo([_el_0], t2), H.setRuntimeTypeInfo([subscription_0], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if (token === C.Type_HasDisabled_qzc && 1 === nodeIndex)
        return this._MaterialCheckboxComponent_1_5;
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var changed, _this = this,
        t1 = _this.viewData._cdState,
        currVal_0 = J.get$checked$x(H.assertSubtypeOfRuntimeType(_this.parentView.viewData.locals.$index(0, "$implicit"), H.getTypeArgumentByIndex(_this, 0))),
        t2 = _this._data_table_template$_expr_0;
      if (t2 != currVal_0) {
        _this._MaterialCheckboxComponent_1_5.set$checked(0, currVal_0);
        _this._data_table_template$_expr_0 = currVal_0;
        changed = true;
      } else
        changed = false;
      if (changed)
        _this._data_table_template$_compView_1.viewData.set$cdMode(1);
      _this._data_table_template$_compView_1.detectHostChanges$1(t1 === 0);
      _this._data_table_template$_compView_1.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._data_table_template$_compView_1.destroyInternalState$0();
      this._MaterialCheckboxComponent_1_5.toString;
    },
    _handle_checkedChange_1_0$1: function($$event) {
      var local_row = H.assertSubtypeOfRuntimeType(this.parentView.viewData.locals.$index(0, "$implicit"), H.getTypeArgumentByIndex(this, 0));
      this.ctx.changeRowSelection$2(local_row, H.boolTypeCheck($$event));
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent8.prototype = {
    build$0: function() {
      var t1, _this = this,
        _el_0 = document.createElement("td");
      _this.addShimE$1(_el_0);
      _this._data_table_template$_NgClass_0_5 = new Y.NgClass(_el_0, H.setRuntimeTypeInfo([], [P.String]));
      t1 = _this._data_table_template$_appEl_1 = new V.ViewContainer(1, 0, _this, T.appendAnchor(_el_0));
      _this._data_table_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent8_build_closure(_this)), t1);
      t1 = _this._data_table_template$_appEl_2 = new V.ViewContainer(2, 0, _this, T.appendAnchor(_el_0));
      _this._data_table_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent8_build_closure0(_this)), t1);
      T.appendText(_el_0, " ");
      t1 = _this._data_table_template$_appEl_4 = new V.ViewContainer(4, 0, _this, T.appendAnchor(_el_0));
      _this._data_table_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent8_build_closure1(_this)), t1);
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var _this = this,
        local_c = H.assertSubtypeOfRuntimeType(_this.viewData.locals.$index(0, "$implicit"), [G.SkawaDataTableColComponent, H.getTypeArgumentByIndex(_this, 0)]),
        currVal_0 = local_c.getClasses$0(),
        t1 = _this._data_table_template$_expr_0;
      if (t1 != currVal_0) {
        _this._data_table_template$_NgClass_0_5.set$rawClass(currVal_0);
        _this._data_table_template$_expr_0 = currVal_0;
      }
      _this._data_table_template$_NgClass_0_5.ngDoCheck$0();
      _this._data_table_template$_NgIf_1_9.set$ngIf(local_c.get$useColumnRenderer());
      t1 = _this._data_table_template$_NgIf_2_9;
      t1.set$ngIf(!local_c.get$useColumnRenderer() && local_c._triggerController._firstSubscription != null);
      t1 = _this._data_table_template$_NgIf_4_9;
      t1.set$ngIf(!local_c.get$useColumnRenderer() && local_c._triggerController._firstSubscription == null);
      _this._data_table_template$_appEl_1.detectChangesInNestedViews$0();
      _this._data_table_template$_appEl_2.detectChangesInNestedViews$0();
      _this._data_table_template$_appEl_4.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      var t1, _this = this;
      _this._data_table_template$_appEl_1.destroyNestedViews$0();
      _this._data_table_template$_appEl_2.destroyNestedViews$0();
      _this._data_table_template$_appEl_4.destroyNestedViews$0();
      t1 = _this._data_table_template$_NgClass_0_5;
      t1._applyClasses$2(t1._rawClass, true);
      t1._applyInitialClasses$1(false);
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent8_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      t1 = new N._ViewSkawaDataTableComponent9(parentView, S.AppViewData_AppViewData(3, C.ViewType_2, H.intTypeCheck(parentIndex)), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent8_build_closure0.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      H.intTypeCheck(parentIndex);
      t1 = new N._ViewSkawaDataTableComponent10(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent8_build_closure1.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      H.intTypeCheck(parentIndex);
      t1 = new N._ViewSkawaDataTableComponent11(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent9.prototype = {
    build$0: function() {
      var _el_0, t2, _this = this, _null = null,
        t1 = Q.ViewDynamicComponent0$(_this, 0);
      _this._data_table_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      _this.addShimC$1(_el_0);
      _this._data_table_template$_appEl_0 = new V.ViewContainer(0, _null, _this, _el_0);
      t1 = _this.parentView.parentView.parentView;
      t1 = H.interceptedTypeCheck(t1.parentView.injectorGet$2(C.Type_SlowComponentLoader_qxe, t1.viewData.parentIndex), "$isSlowComponentLoader");
      t2 = _this._data_table_template$_compView_0;
      t1 = new Z.DynamicComponent(t1, _this._data_table_template$_appEl_0, t2, P.StreamController_StreamController(_null, _null, _null, false, [D.ComponentRef,,]));
      _this._data_table_template$_DynamicComponent_0_8 = t1;
      t2.create0$1(t1);
      _this.init1$1(_this._data_table_template$_appEl_0);
    },
    detectChangesInternal$0: function() {
      var changed, _this = this,
        _s9_ = "$implicit",
        t1 = _this.parentView,
        t2 = H.getTypeArgumentByIndex(_this, 0),
        local_row = H.assertSubtypeOfRuntimeType(t1.parentView.viewData.locals.$index(0, _s9_), t2),
        currVal_0 = H.functionTypeCheck(H.assertSubtypeOfRuntimeType(t1.viewData.locals.$index(0, _s9_), [G.SkawaDataTableColComponent, t2]).columnRenderer.SkawaDataColRendererDirective_factoryRenderer, {func: 1, ret: [D.ComponentFactory,,], args: [t2]}).call$1(local_row);
      t1 = _this._data_table_template$_expr_0;
      if (t1 != currVal_0) {
        _this._data_table_template$_DynamicComponent_0_8.set$componentFactory(currVal_0);
        _this._data_table_template$_expr_0 = currVal_0;
        changed = true;
      } else
        changed = false;
      t1 = _this._data_table_template$_expr_1;
      if (t1 == null ? local_row != null : t1 !== local_row) {
        t1 = _this._data_table_template$_DynamicComponent_0_8;
        t1._dynamic_component$_value = local_row;
        changed = t1._valueChanged = true;
        _this._data_table_template$_expr_1 = local_row;
      }
      if (changed)
        _this._data_table_template$_DynamicComponent_0_8.ngAfterChanges$0();
      _this._data_table_template$_appEl_0.detectChangesInNestedViews$0();
      _this._data_table_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._data_table_template$_appEl_0.destroyNestedViews$0();
      this._data_table_template$_compView_0.destroyInternalState$0();
      var t1 = this._data_table_template$_DynamicComponent_0_8;
      t1._disposeChildComponent$0();
      t1._viewContainerRef = null;
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent10.prototype = {
    build$0: function() {
      var t1, _this = this,
        _el_0 = document.createElement("a");
      H.interceptedTypeCheck(_el_0, "$isHtmlElement");
      _this.updateChildClass$2(_el_0, "has-action");
      _this.addShimC$1(_el_0);
      _el_0.appendChild(_this._data_table_template$_textBinding_1.element);
      t1 = W.Event;
      J.addEventListener$2$x(_el_0, "click", _this.eventHandler1$2$1(_this.get$_data_table_template$_handle_click_0_0(), t1, t1));
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var _s9_ = "$implicit",
        t1 = this.parentView,
        t2 = H.getTypeArgumentByIndex(this, 0),
        local_row = H.assertSubtypeOfRuntimeType(t1.parentView.viewData.locals.$index(0, _s9_), t2);
      this._data_table_template$_textBinding_1.updateText$1(O.interpolate0(H.functionTypeCheck(H.assertSubtypeOfRuntimeType(t1.viewData.locals.$index(0, _s9_), [G.SkawaDataTableColComponent, t2]).accessor, {func: 1, ret: P.String, args: [t2]}).call$1(local_row)));
    },
    _data_table_template$_handle_click_0_0$1: function($$event) {
      var _s9_ = "$implicit",
        t1 = this.parentView,
        t2 = H.getTypeArgumentByIndex(this, 0),
        local_row = H.assertSubtypeOfRuntimeType(t1.parentView.viewData.locals.$index(0, _s9_), t2),
        local_c = H.assertSubtypeOfRuntimeType(t1.viewData.locals.$index(0, _s9_), [G.SkawaDataTableColComponent, t2]);
      local_c.toString;
      H.assertSubtypeOfRuntimeType(local_row, H.getTypeArgumentByIndex(local_c, 0));
      local_c._triggerController.add$1(0, local_row);
      t2 = J.getInterceptor$x($$event);
      t2.preventDefault$0($$event);
      t2.stopPropagation$0($$event);
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent11.prototype = {
    build$0: function() {
      this.init1$1(this._textBinding_0.element);
    },
    detectChangesInternal$0: function() {
      var _s9_ = "$implicit",
        t1 = this.parentView,
        t2 = H.getTypeArgumentByIndex(this, 0),
        local_row = H.assertSubtypeOfRuntimeType(t1.parentView.viewData.locals.$index(0, _s9_), t2);
      this._textBinding_0.updateText$1(O.interpolate0(H.functionTypeCheck(H.assertSubtypeOfRuntimeType(t1.viewData.locals.$index(0, _s9_), [G.SkawaDataTableColComponent, t2]).accessor, {func: 1, ret: P.String, args: [t2]}).call$1(local_row)));
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent12.prototype = {
    build$0: function() {
      var _el_1, t1, t2, _this = this,
        doc = document,
        _el_0 = doc.createElement("tfoot");
      _this.addShimE$1(_el_0);
      _el_1 = T.appendElement(doc, _el_0, "tr");
      _this.addShimE$1(_el_1);
      t1 = _this._data_table_template$_appEl_2 = new V.ViewContainer(2, 1, _this, T.appendAnchor(_el_1));
      _this._data_table_template$_NgFor_2_9 = new R.NgFor(t1, new D.TemplateRef(t1, new N._ViewSkawaDataTableComponent12_build_closure(_this)));
      t1 = H.assertSubtypeOfRuntimeType(_this.parentView, [N.ViewSkawaDataTableComponent0, U.RowData])._pipe_unskippedInFooter_0;
      t2 = [P.List, [G.SkawaDataTableColComponent, U.RowData]];
      _this.set$_pipe_unskippedInFooter_0_0(A.pureProxy1(t1.get$transform(t1), t2, t2));
      _this.init1$1(_el_0);
    },
    detectChangesInternal$0: function() {
      var _this = this,
        t1 = _this.ctx.columns,
        currVal_0 = _this._pipe_unskippedInFooter_0_0.call$1(t1);
      t1 = _this._data_table_template$_expr_0;
      if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
        _this._data_table_template$_NgFor_2_9.set$ngForOf(currVal_0);
        _this._data_table_template$_expr_0 = currVal_0;
      }
      _this._data_table_template$_NgFor_2_9.ngDoCheck$0();
      _this._data_table_template$_appEl_2.detectChangesInNestedViews$0();
    },
    destroyInternal$0: function() {
      this._data_table_template$_appEl_2.destroyNestedViews$0();
    },
    set$_pipe_unskippedInFooter_0_0: function(_pipe_unskippedInFooter_0_0) {
      this._pipe_unskippedInFooter_0_0 = H.functionTypeCheck(_pipe_unskippedInFooter_0_0, {func: 1, ret: [P.List, [G.SkawaDataTableColComponent, U.RowData]], args: [[P.List, [G.SkawaDataTableColComponent, U.RowData]]]});
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  N._ViewSkawaDataTableComponent12_build_closure.prototype = {
    call$2: function(parentView, parentIndex) {
      var t1;
      H.assertSubtype(parentView, "$isAppView", [P.Object], "$asAppView");
      H.intTypeCheck(parentIndex);
      t1 = new N._ViewSkawaDataTableComponent13(N.TextBinding$(), parentView, S.AppViewData_AppViewData(3, C.ViewType_2, parentIndex), [H.getTypeArgumentByIndex(this.$this, 0)]);
      t1.componentStyles = parentView.componentStyles;
      return t1;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 3
  };
  N._ViewSkawaDataTableComponent13.prototype = {
    build$0: function() {
      var _this = this,
        t1 = document.createElement("td");
      _this._data_table_template$_el_0 = t1;
      _this.addShimE$1(t1);
      _this._data_table_template$_NgClass_0_5 = new Y.NgClass(_this._data_table_template$_el_0, H.setRuntimeTypeInfo([], [P.String]));
      _this._data_table_template$_el_0.appendChild(_this._data_table_template$_textBinding_1.element);
      _this.init1$1(_this._data_table_template$_el_0);
    },
    detectChangesInternal$0: function() {
      var currVal_0, t2, _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData.locals,
        local_c = t1.$index(0, "$implicit"),
        local_i = H.intTypeCheck(t1.$index(0, "index")),
        currVal_1 = local_c.getClasses$1("--footer");
      t1 = _this._data_table_template$_expr_1;
      if (t1 != currVal_1) {
        _this._data_table_template$_NgClass_0_5.set$rawClass(currVal_1);
        _this._data_table_template$_expr_1 = currVal_1;
      }
      _this._data_table_template$_NgClass_0_5.ngDoCheck$0();
      H.assertSubtype(local_c, "$isSkawaDataTableColComponent", _this.$ti, "$asSkawaDataTableColComponent");
      currVal_0 = _ctx.getColspanFor$2(local_c, local_i);
      t1 = _this._data_table_template$_expr_0;
      if (t1 !== currVal_0) {
        t1 = _this._data_table_template$_el_0;
        t2 = C.JSInt_methods.toString$0(currVal_0);
        T.updateAttribute(t1, "colspan", t2);
        _this._data_table_template$_expr_0 = currVal_0;
      }
      _this._data_table_template$_textBinding_1.updateText$1(O.interpolate0(local_c.footer));
    },
    destroyInternal$0: function() {
      var t1 = this._data_table_template$_NgClass_0_5;
      t1._applyClasses$2(t1._rawClass, true);
      t1._applyInitialClasses$1(false);
    },
    $asAppView: function($T) {
      return [[S.SkawaDataTableComponent, $T]];
    }
  };
  G.SkawaDataTableColComponent.prototype = {
    get$useColumnRenderer: function() {
      var t1 = this.columnRenderer;
      return (t1 == null ? null : H.functionTypeCheck(t1.SkawaDataColRendererDirective_factoryRenderer, {func: 1, ret: [D.ComponentFactory,,], args: [H.getTypeArgumentByIndex(this, 0)]})) != null;
    },
    getClasses$1: function(suffix) {
      var t2, t3,
        t1 = this.classString;
      t1 = t1 == null ? null : C.JSString_methods.trim$0(t1);
      t1 = t1 == null ? null : H.setRuntimeTypeInfo(t1.split(" "), [P.String]);
      if (t1 == null)
        t1 = null;
      else {
        t2 = P.String;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        t2 = new H.MappedListIterable(t1, H.functionTypeCheck(new G.SkawaDataTableColComponent_getClasses_closure(suffix), {func: 1, ret: t2, args: [t3]}), [t3, t2]);
        t1 = t2;
      }
      return t1;
    },
    getClasses$0: function() {
      return this.getClasses$1(null);
    },
    ngOnInit$0: function() {
      if (this._triggerController._firstSubscription != null && this.get$useColumnRenderer())
        throw H.wrapException(P.ArgumentError$("Cannot use [colRenderer] together with (trigger)"));
    },
    set$accessor: function(accessor) {
      this.accessor = H.functionTypeCheck(accessor, {func: 1, ret: P.String, args: [H.getTypeArgumentByIndex(this, 0)]});
    }
  };
  G.SkawaDataTableColComponent_getClasses_closure.prototype = {
    call$1: function(className) {
      var t1;
      H.stringTypeCheck(className);
      t1 = this.suffix;
      return t1 != null ? H.S(className) + t1 : className;
    },
    $signature: 14
  };
  G.SkawaDataColRendererDirective.prototype = {
    set$factoryRenderer: function(factoryRenderer) {
      this.SkawaDataColRendererDirective_factoryRenderer = H.functionTypeCheck(factoryRenderer, {func: 1, ret: [D.ComponentFactory,,], args: [H.getTypeArgumentByIndex(this, 0)]});
    },
    $asHasFactoryRenderer: function($T) {
      return [[G.RendersValue,,], $T];
    }
  };
  Y.ViewSkawaDataTableColComponent0.prototype = {
    build$0: function() {
      this.initViewRoot$1(this.rootEl);
      this.init0$0();
    },
    $asAppView: function($T) {
      return [[G.SkawaDataTableColComponent, $T]];
    }
  };
  U.RowData.prototype = {
    set$checked: function(_, checked) {
      this.checked = H.boolTypeCheck(checked);
    },
    get$checked: function(receiver) {
      return this.checked;
    },
    get$classes: function(receiver) {
      return this.classes;
    }
  };
  S.SortDirection.prototype = {
    toString$0: function(_) {
      return this._sort$_name;
    }
  };
  S.SortModel.prototype = {};
  S.SkawaDataTableSortDirective.prototype = {
    set$allowedSorts: function(allowedSorts) {
      var t1, t2, t3, directions;
      if (allowedSorts.length !== 0) {
        t1 = P.String;
        t2 = H.setRuntimeTypeInfo(allowedSorts.split(","), [t1]);
        t3 = H.getTypeArgumentByIndex(t2, 0);
        directions = new H.MappedListIterable(t2, H.functionTypeCheck(new S.SkawaDataTableSortDirective_allowedSorts_closure(), {func: 1, ret: t1, args: [t3]}), [t3, t1]).toList$1$growable(0, false);
      } else {
        t1 = C.Map_oWjV0.get$keys(C.Map_oWjV0);
        directions = P.List_List$from(t1, false, H.getRuntimeTypeArgument(t1, "Iterable", 0));
      }
      if (directions.length === 0 || C.JSArray_methods.any$1(directions, new S.SkawaDataTableSortDirective_allowedSorts_closure0()))
        throw H.wrapException(P.ArgumentError$('SkawaDataTableSortDirective accepts only "asc" and/or "desc" as sort directions. Use comma separated values for both directions.'));
      t1 = S.SortDirection;
      t2 = H.getTypeArgumentByIndex(directions, 0);
      this.column.sortModel = new S.SortModel(new H.MappedListIterable(directions, H.functionTypeCheck(new S.SkawaDataTableSortDirective_allowedSorts_closure1(), {func: 1, ret: t1, args: [t2]}), [t2, t1]).toList$1$growable(0, false));
    }
  };
  S.SkawaDataTableSortDirective_allowedSorts_closure.prototype = {
    call$1: function(s) {
      return J.trim$0$s(H.stringTypeCheck(s));
    },
    $signature: 14
  };
  S.SkawaDataTableSortDirective_allowedSorts_closure0.prototype = {
    call$1: function(s) {
      return C.Map_oWjV0.$index(0, H.stringTypeCheck(s)) == null;
    },
    $signature: 12
  };
  S.SkawaDataTableSortDirective_allowedSorts_closure1.prototype = {
    call$1: function(s) {
      return C.Map_oWjV0.$index(0, H.stringTypeCheck(s));
    },
    $signature: 133
  };
  R.ExtendedMaterialIconComponent.prototype = {};
  Q.ViewExtendedMaterialIconComponent0.prototype = {
    build$0: function() {
      var _this = this,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        _el_0 = T.appendSpan(document, parentRenderNode);
      _this.addShimE$1(_el_0);
      _this._NgClass_0_5 = new Y.NgClass(_el_0, H.setRuntimeTypeInfo([], [P.String]));
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var t2, t3, t4, t5, currVal_1, _this = this,
        _ctx = _this.ctx,
        t1 = _ctx.icon,
        currVal_0 = "mdi mdi-" + (t1 == null ? "" : t1);
      t1 = _this._expr_0;
      if (t1 !== currVal_0) {
        _this._NgClass_0_5.set$initialClasses(currVal_0);
        _this._expr_0 = currVal_0;
      }
      t1 = _ctx.flipHorizontal;
      t2 = _ctx.flipVertical;
      t3 = _ctx.spin;
      t4 = _ctx.rotate;
      t4 = "mdi-rotate-" + C.JSInt_methods.$mod(t4 == null ? 0 : t4, 360);
      if (!_ctx.flipHorizontal)
        if (!_ctx.flipVertical) {
          t5 = _ctx.rotate;
          t5 = t5 != null && C.JSInt_methods.$mod(t5, 45) === 0;
        } else
          t5 = false;
      else
        t5 = false;
      currVal_1 = P.LinkedHashMap_LinkedHashMap$_literal(["mdi-flip-h", t1, "mdi-flip-v", t2, "mdi-spin", t3, t4, t5], P.String, P.bool);
      t1 = _this._expr_1;
      if (t1 !== currVal_1) {
        _this._NgClass_0_5.set$rawClass(currVal_1);
        _this._expr_1 = currVal_1;
      }
      _this._NgClass_0_5.ngDoCheck$0();
    },
    destroyInternal$0: function() {
      var t1 = this._NgClass_0_5;
      t1._applyClasses$2(t1._rawClass, true);
      t1._applyInitialClasses$1(false);
    },
    $asAppView: function() {
      return [R.ExtendedMaterialIconComponent];
    }
  };
  T.GridComponent.prototype = {
    updateAndDisplay$1: function(forceRefresh) {
      var t1 = this._resizeTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._resizeTimer = P.Timer_Timer(P.Duration$(100, 0), new T.GridComponent_updateAndDisplay_closure(this, forceRefresh));
    },
    ngOnInit$0: function() {
      var t1 = W.Event;
      W._EventStreamSubscription$(window, "resize", H.functionTypeCheck(new T.GridComponent_ngOnInit_closure(this), {func: 1, ret: -1, args: [t1]}), false, t1);
    },
    set$_tiles: function(_tiles) {
      this._tiles = H.assertSubtype(_tiles, "$isList", [A.GridTile], "$asList");
    }
  };
  T.GridComponent_updateAndDisplay_closure.prototype = {
    call$0: function() {
      var gridWidth, gridUpdate, t2, t3, t4, i, newPosition, t5, value, t6,
        t1 = this.$this;
      t1._tiles.length;
      gridWidth = t1.grid.clientWidth;
      if (t1._previousWidth == gridWidth && !this.forceRefresh)
        return;
      t1._previousWidth = gridWidth;
      gridUpdate = t1.calculateGridUpdate$2$gutterSize(gridWidth, P.int_parse("16", null, null));
      t1.visibility = "";
      t2 = t1.grid.style;
      t3 = "" + gridUpdate.gridHeight + "px";
      t2.height = t3;
      for (t2 = gridUpdate.tilePositions, t3 = t2.length, t4 = [P.int], i = 0; i < t3; ++i) {
        newPosition = t2[i];
        t5 = t1._tiles;
        t5.length;
        if (i >= 5)
          return H.ioore(t5, i);
        t5 = t5[i];
        t5.toString;
        H.assertSubtype(newPosition, "$isPoint", t4, "$asPoint");
        t5 = t5.tile.style;
        value = "translate(" + H.S(newPosition.x) + "px, " + H.S(newPosition.y) + "px)";
        t6 = (t5 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t5, "transform");
        t5.setProperty(t6, value, "");
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  T.GridComponent_ngOnInit_closure.prototype = {
    call$1: function(_) {
      this.$this.updateAndDisplay$1(false);
    },
    $signature: 13
  };
  T.GridTileDirective.prototype = {$isGridTile: 1};
  T._GridTileDirective_Object_DomTransformReposition.prototype = {};
  X.ViewGridComponent0.prototype = {
    build$0: function() {
      var _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        _el_0 = T.appendDiv(document, parentRenderNode);
      _this.updateChildClass$2(_el_0, "grid-container");
      _this.addShimC$1(_el_0);
      _this.project$2(_el_0, 0);
      _ctx.grid = _el_0;
      _this.init0$0();
    },
    detectHostChanges$1: function(firstCheck) {
      var _this = this,
        currVal_0 = _this.ctx.visibility,
        t1 = _this._grid_component_template$_expr_0;
      if (t1 != currVal_0) {
        t1 = _this.rootEl.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "visibility"), currVal_0, null);
        _this._grid_component_template$_expr_0 = currVal_0;
      }
    },
    $asAppView: function() {
      return [T.GridComponent];
    }
  };
  T.SnackbarService.prototype = {
    showMessage$3$action$duration: function(message, action, duration) {
      var t1 = new T.SnackMessage();
      t1.text = message;
      t1.duration = duration == null ? $.$get$SnackbarService__defaultDuration() : duration;
      t1.action = action;
      this._messageQueue.add$1(0, t1);
    },
    showMessage$1: function(message) {
      return this.showMessage$3$action$duration(message, null, null);
    }
  };
  T.SnackAction.prototype = {};
  T.SnackMessage.prototype = {};
  T.SkawaSnackbarComponent.prototype = {
    ngOnInit$0: function() {
      var t1 = this._snackbar$_snackbarService._messageQueue;
      this._tearDownDisposer.addStreamSubscription$1$1(new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new T.SkawaSnackbarComponent_ngOnInit_closure(this)), null);
    },
    _slideIn$0: function() {
      var _this = this;
      _this.show = true;
      _this._animationBlocker = P.Timer_Timer($.$get$SkawaSnackbarComponent__minimumSlideInDelay(), new T.SkawaSnackbarComponent__slideIn_closure(_this));
      _this._changeDetectorRef.markPathToRootAsCheckOnce$0();
    },
    transitionEnd$1: function(_) {
      var t1, _this = this;
      if (H.boolConversionCheck(_this.show))
        _this._messageTimer = P.Timer_Timer(_this.message.duration, new T.SkawaSnackbarComponent_transitionEnd_closure(_this));
      else {
        t1 = _this.nextMessage;
        if (t1 == null) {
          _this.message = null;
          _this._changeDetectorRef.markPathToRootAsCheckOnce$0();
        } else {
          _this.message = t1;
          _this.nextMessage = null;
          _this._slideIn$0();
        }
      }
    }
  };
  T.SkawaSnackbarComponent_ngOnInit_closure.prototype = {
    call$1: function(newMessage) {
      var t1, t2;
      H.interceptedTypeCheck(newMessage, "$isSnackMessage");
      t1 = this.$this;
      if (t1.message == null) {
        t1.message = newMessage;
        t1._slideIn$0();
      } else {
        t1.nextMessage = newMessage;
        t2 = t1._messageTimer;
        if (t2 != null)
          t2.cancel$0(0);
        t1._messageTimer = null;
        if (t1._animationBlocker == null) {
          t1.show = false;
          t1._changeDetectorRef.markPathToRootAsCheckOnce$0();
        }
      }
    },
    $signature: 134
  };
  T.SkawaSnackbarComponent__slideIn_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._animationBlocker = null;
      if (t1.nextMessage != null) {
        t1.show = false;
        t1._changeDetectorRef.markPathToRootAsCheckOnce$0();
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  T.SkawaSnackbarComponent_transitionEnd_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._messageTimer = null;
      t1.show = false;
      t1._changeDetectorRef.markPathToRootAsCheckOnce$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  S.ViewSkawaSnackbarComponent0.prototype = {
    build$0: function() {
      var t2, _this = this,
        _ctx = _this.ctx,
        parentRenderNode = _this.initViewRoot$1(_this.rootEl),
        t1 = T.appendDiv(document, parentRenderNode);
      _this._snackbar_template$_el_0 = t1;
      _this.updateChildClass$2(t1, "snackbar-container");
      _this.addShimC$1(_this._snackbar_template$_el_0);
      t1 = _this._appEl_1 = new V.ViewContainer(1, 0, _this, T.appendAnchor(_this._snackbar_template$_el_0));
      _this._NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, S.snackbar_template__viewFactory_SkawaSnackbarComponent1$closure()), t1);
      t1 = _this._snackbar_template$_el_0;
      t2 = W.Event;
      (t1 && C.DivElement_methods).addEventListener$2(t1, "transitionend", _this.eventHandler1$2$1(_ctx.get$transitionEnd(), t2, t2));
      _this.init0$0();
    },
    detectChangesInternal$0: function() {
      var currVal_0, t1, _this = this,
        _ctx = _this.ctx;
      _this._NgIf_1_9.set$ngIf(_ctx.message != null);
      _this._appEl_1.detectChangesInNestedViews$0();
      currVal_0 = _ctx.show;
      t1 = _this._snackbar_template$_expr_0;
      if (t1 != currVal_0) {
        T.updateClassBinding(_this._snackbar_template$_el_0, "show", currVal_0);
        _this._snackbar_template$_expr_0 = currVal_0;
      }
    },
    destroyInternal$0: function() {
      this._appEl_1.destroyNestedViews$0();
    },
    $asAppView: function() {
      return [T.SkawaSnackbarComponent];
    }
  };
  S._ViewSkawaSnackbarComponent1.prototype = {
    build$0: function() {
      var t1, _this = this,
        _el_0 = document.createElement("span");
      H.interceptedTypeCheck(_el_0, "$isHtmlElement");
      _this.updateChildClass$2(_el_0, "message");
      _this.addShimE$1(_el_0);
      _el_0.appendChild(_this._snackbar_template$_textBinding_1.element);
      t1 = _this._appEl_2 = new V.ViewContainer(2, null, _this, T.createAnchor());
      _this._NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, S.snackbar_template__viewFactory_SkawaSnackbarComponent2$closure()), t1);
      _this.init$2(H.setRuntimeTypeInfo([_el_0, t1], [P.Object]), null);
    },
    detectChangesInternal$0: function() {
      var t1, _this = this,
        _ctx = _this.ctx;
      _this._NgIf_2_9.set$ngIf(_ctx.message.action != null);
      _this._appEl_2.detectChangesInNestedViews$0();
      t1 = _ctx.message.text;
      if (t1 == null)
        t1 = "";
      _this._snackbar_template$_textBinding_1.updateText$1(t1);
    },
    destroyInternal$0: function() {
      this._appEl_2.destroyNestedViews$0();
    },
    $asAppView: function() {
      return [T.SkawaSnackbarComponent];
    }
  };
  S._ViewSkawaSnackbarComponent2.prototype = {
    build$0: function() {
      var _el_0, t2, t3, subscription_0, _this = this,
        t1 = U.ViewMaterialButtonComponent0$(_this, 0);
      _this._snackbar_template$_compView_0 = t1;
      _el_0 = t1.rootEl;
      _this.addShimC$1(_el_0);
      t1 = _this.parentView.parentView;
      t1 = F.AcxDarkTheme$(H.boolTypeCheck(t1.parentView.injectorGetOptional$2(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex)));
      _this._AcxDarkTheme_0_5 = t1;
      t1 = B.MaterialButtonComponent$(_el_0, t1, _this._snackbar_template$_compView_0, null);
      _this._MaterialButtonComponent_0_6 = t1;
      t2 = [P.Object];
      _this._snackbar_template$_compView_0.create$2(0, t1, H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([_this._snackbar_template$_textBinding_1.element], [W.Text])], t2));
      t1 = _this._MaterialButtonComponent_0_6._trigger;
      t3 = W.UIEvent;
      subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(_this.eventHandler1$2$1(_this.get$_handle_trigger_0_0(), t3, t3));
      _this.init$2(H.setRuntimeTypeInfo([_el_0], t2), H.setRuntimeTypeInfo([subscription_0], [[P.StreamSubscription, -1]]));
    },
    injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
      if (nodeIndex <= 1) {
        if (token === C.Type_AcxDarkTheme_Tng)
          return this._AcxDarkTheme_0_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          return this._MaterialButtonComponent_0_6;
      }
      return notFoundResult;
    },
    detectChangesInternal$0: function() {
      var _this = this,
        _ctx = _this.ctx,
        t1 = _this.viewData._cdState;
      _this._snackbar_template$_compView_0.detectHostChanges$1(t1 === 0);
      t1 = _ctx.message.action.label;
      if (t1 == null)
        t1 = "";
      _this._snackbar_template$_textBinding_1.updateText$1(t1);
      _this._snackbar_template$_compView_0.detectChanges$0();
    },
    destroyInternal$0: function() {
      this._snackbar_template$_compView_0.destroyInternalState$0();
    },
    _handle_trigger_0_0$1: function($$event) {
      this.ctx.message.action.callback.call$0();
    },
    $asAppView: function() {
      return [T.SkawaSnackbarComponent];
    }
  };
  (function aliases() {
    var _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _.super$Interceptor$noSuchMethod = _.noSuchMethod$1;
    _ = J.JavaScriptObject.prototype;
    _.super$JavaScriptObject$toString = _.toString$0;
    _ = P._BroadcastStreamController.prototype;
    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;
    _.super$_BroadcastStreamController$add = _.add$1;
    _.super$_BroadcastStreamController$close = _.close$0;
    _.super$_BroadcastStreamController$_callOnCancel = _._callOnCancel$0;
    _ = P._BufferingStreamSubscription.prototype;
    _.super$_BufferingStreamSubscription$_add = _._add$1;
    _.super$_BufferingStreamSubscription$_addError = _._addError$2;
    _.super$_BufferingStreamSubscription$_close = _._async$_close$0;
    _ = P._LinkedHashSet.prototype;
    _.super$_LinkedHashSet$_contains = _._contains$1;
    _.super$_LinkedHashSet$_add = _._collection$_add$1;
    _.super$_LinkedHashSet$_remove = _._remove$1;
    _ = P.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _ = P.Object.prototype;
    _.super$Object$toString = _.toString$0;
    _ = W._SimpleNodeValidator.prototype;
    _.super$_SimpleNodeValidator$allowsAttribute = _.allowsAttribute$3;
    _ = P.JsObject.prototype;
    _.super$JsObject$$index = _.$index;
    _.super$JsObject$$indexSet = _.$indexSet;
    _ = L.MaterialDrawerBase.prototype;
    _.super$MaterialDrawerBase$toggle = _.toggle$0;
    _ = E.RootFocusable.prototype;
    _.super$RootFocusable$focus = _.focus$0;
    _.super$RootFocusable$dispose = _.dispose$0;
    _ = M.MaterialDropdownBase.prototype;
    _.super$MaterialDropdownBase$visible = _.set$visible;
    _ = K.SelectionInputAdapter.prototype;
    _.super$SelectionInputAdapter$optionsInput = _.set$optionsInput;
    _ = L.SelectionContainer.prototype;
    _.super$SelectionContainer$selection = _.set$selection;
    _.super$SelectionContainer$options = _.set$options;
    _.super$SelectionContainer$itemRenderer = _.set$itemRenderer;
    _ = F.SelectionOptions.prototype;
    _.super$SelectionOptions$optionGroups = _.set$optionGroups;
    _ = L.PopupBase.prototype;
    _.super$PopupBase$matchMinSourceWidth = _.set$matchMinSourceWidth;
    _.super$PopupBase$source = _.set$source;
    _ = L.RulerBase.prototype;
    _.super$RulerBase$measure = _.measure$2$offset;
    _.super$RulerBase$track = _.track$1;
    _ = V.ManagedZoneBase.prototype;
    _.super$ManagedZoneBase$capturedTurnDone = _.capturedTurnDone$1;
    _.super$ManagedZoneBase$capturedEventDone = _.capturedEventDone$1;
    _ = R.TagSyntax.prototype;
    _.super$TagSyntax$onMatch = _.onMatch$2;
  })();
  (function installTearOffs() {
    var _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0,
      _static = hunkHelpers.installStaticTearOff,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_1_u = hunkHelpers._instance_1u,
      _static_2 = hunkHelpers._static_2;
    _static_1(P, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 25);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 25);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 25);
    _static_0(P, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 1);
    _static_1(P, "async___nullDataHandler$closure", "_nullDataHandler", 8);
    _static(P, "async___nullErrorHandler$closure", 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["_nullErrorHandler", function(error) {
      return P._nullErrorHandler(error, null);
    }], 16, 0);
    _static_0(P, "async___nullDoneHandler$closure", "_nullDoneHandler", 1);
    _static(P, "async___rootHandleUncaughtError$closure", 5, null, ["call$5"], ["_rootHandleUncaughtError"], 48, 0);
    _static(P, "async___rootRun$closure", 4, null, ["call$1$4", "call$4"], ["_rootRun", function($self, $parent, zone, f) {
      return P._rootRun($self, $parent, zone, f, null);
    }], 52, 1);
    _static(P, "async___rootRunUnary$closure", 5, null, ["call$2$5", "call$5"], ["_rootRunUnary", function($self, $parent, zone, f, arg) {
      return P._rootRunUnary($self, $parent, zone, f, arg, null, null);
    }], 50, 1);
    _static(P, "async___rootRunBinary$closure", 6, null, ["call$3$6", "call$6"], ["_rootRunBinary", function($self, $parent, zone, f, arg1, arg2) {
      return P._rootRunBinary($self, $parent, zone, f, arg1, arg2, null, null, null);
    }], 49, 1);
    _static(P, "async___rootRegisterCallback$closure", 4, null, ["call$1$4", "call$4"], ["_rootRegisterCallback", function($self, $parent, zone, f) {
      return P._rootRegisterCallback($self, $parent, zone, f, null);
    }], 136, 0);
    _static(P, "async___rootRegisterUnaryCallback$closure", 4, null, ["call$2$4", "call$4"], ["_rootRegisterUnaryCallback", function($self, $parent, zone, f) {
      return P._rootRegisterUnaryCallback($self, $parent, zone, f, null, null);
    }], 137, 0);
    _static(P, "async___rootRegisterBinaryCallback$closure", 4, null, ["call$3$4", "call$4"], ["_rootRegisterBinaryCallback", function($self, $parent, zone, f) {
      return P._rootRegisterBinaryCallback($self, $parent, zone, f, null, null, null);
    }], 138, 0);
    _static(P, "async___rootErrorCallback$closure", 5, null, ["call$5"], ["_rootErrorCallback"], 139, 0);
    _static(P, "async___rootScheduleMicrotask$closure", 4, null, ["call$4"], ["_rootScheduleMicrotask"], 53, 0);
    _static(P, "async___rootCreateTimer$closure", 5, null, ["call$5"], ["_rootCreateTimer"], 47, 0);
    _static(P, "async___rootCreatePeriodicTimer$closure", 5, null, ["call$5"], ["_rootCreatePeriodicTimer"], 140, 0);
    _static(P, "async___rootPrint$closure", 4, null, ["call$4"], ["_rootPrint"], 141, 0);
    _static(P, "async___rootFork$closure", 5, null, ["call$5"], ["_rootFork"], 142, 0);
    var _;
    _instance_0_u(_ = P._BroadcastSubscription.prototype, "get$_onPause", "_onPause$0", 1);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 1);
    _instance_1_i(_ = P._AsBroadcastStreamController.prototype, "get$add", "add$1", 8);
    _instance(_, "get$addError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["addError$2", "addError$1"], 16, 0);
    _instance_0_i(_, "get$close", "close$0", 15);
    _instance(P._Completer.prototype, "get$completeError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["completeError$2", "completeError$1"], 16, 0);
    _instance(P._SyncCompleter.prototype, "get$complete", 1, 0, function() {
      return [null];
    }, ["call$1", "call$0"], ["complete$1", "complete$0"], 120, 0);
    _instance(P._Future.prototype, "get$_completeError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["_completeError$2", "_completeError$1"], 16, 0);
    _instance_1_i(_ = P._StreamController.prototype, "get$add", "add$1", 8);
    _instance_1_i(_, "get$_add", "_add$1", 8);
    _instance_2_u(_, "get$_addError", "_addError$2", 112);
    _instance_0_u(_, "get$_async$_close", "_async$_close$0", 1);
    _instance_0_u(_ = P._ControllerSubscription.prototype, "get$_onPause", "_onPause$0", 1);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 1);
    _instance_0_u(_ = P._BufferingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 1);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 1);
    _instance_0_u(P._DoneStreamSubscription.prototype, "get$_sendDone", "_sendDone$0", 1);
    _instance_0_u(_ = P._AsBroadcastStream.prototype, "get$_onCancel", "_onCancel$0", 1);
    _instance_0_u(_, "get$_onListen", "_onListen$0", 1);
    _instance_0_u(_ = P._ForwardingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 1);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 1);
    _instance_1_u(_, "get$_handleData", "_handleData$1", 8);
    _instance_2_u(_, "get$_handleError", "_handleError$2", 110);
    _instance_0_u(_, "get$_handleDone", "_handleDone$0", 1);
    _instance_1_i(P._EventSinkWrapper.prototype, "get$add", "add$1", 8);
    _instance_0_u(_ = P._SinkTransformerStreamSubscription.prototype, "get$_onPause", "_onPause$0", 1);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 1);
    _instance_1_u(_, "get$_handleData", "_handleData$1", 8);
    _instance(_, "get$_handleError", 0, 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["_handleError$2", "_handleError$1"], 107, 0);
    _instance_0_u(_, "get$_handleDone", "_handleDone$0", 1);
    _static_2(P, "collection___defaultEquals$closure", "_defaultEquals", 143);
    _static_1(P, "collection___defaultHashCode$closure", "_defaultHashCode", 144);
    _static_1(P, "core__identityHashCode$closure", "identityHashCode", 145);
    _static_2(P, "core__identical$closure", "identical", 146);
    _static(W, "html__Html5NodeValidator__standardAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__standardAttributeValidator"], 38, 0);
    _static(W, "html__Html5NodeValidator__uriAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__uriAttributeValidator"], 38, 0);
    _static(P, "html_common__convertDartToNative_Dictionary$closure", 1, function() {
      return [null];
    }, ["call$2", "call$1"], ["convertDartToNative_Dictionary", function(dict) {
      return P.convertDartToNative_Dictionary(dict, null);
    }], 148, 0);
    _instance_1_u(P.CssClassSetImpl.prototype, "get$_validateToken", "_validateToken$1", 14);
    _static_1(P, "js___convertToJS$closure", "_convertToJS", 6);
    _static_1(P, "js___convertToDart$closure", "_convertToDart", 149);
    _static(P, "math__max$closure", 2, null, ["call$1$2", "call$2"], ["max", function(a, b) {
      return P.max(a, b, P.num);
    }], 150, 1);
    _static_0(G, "modules__createNgZone$closure", "createNgZone", 51);
    _static(Y, "modules_template__minimalApp$Injector$closure", 0, null, ["call$1", "call$0"], ["minimalApp$Injector", function() {
      return Y.minimalApp$Injector(null);
    }], 55, 0);
    _static(G, "run___identityInjector$closure", 0, null, ["call$1", "call$0"], ["_identityInjector", function() {
      return G._identityInjector(null);
    }], 55, 0);
    _static_2(R, "default_iterable_differ___trackByIdentity$closure", "_trackByIdentity", 152);
    _instance_0_u(M.ChangeDetectionHost.prototype, "get$tick", "tick$0", 1);
    _instance_0_i(_ = D.Testability.prototype, "get$isStable", "isStable$0", 30);
    _instance_1_i(_, "get$whenStable", "whenStable$1", 59);
    _instance(_ = Y.NgZone.prototype, "get$_ng_zone$_scheduleMicrotask", 0, 4, null, ["call$4"], ["_ng_zone$_scheduleMicrotask$4"], 53, 0);
    _instance(_, "get$_run", 0, 4, null, ["call$1$4", "call$4"], ["_run$1$4", "_run$4"], 52, 0);
    _instance(_, "get$_runUnary", 0, 5, null, ["call$2$5", "call$5"], ["_runUnary$2$5", "_runUnary$5"], 50, 0);
    _instance(_, "get$_runBinary", 0, 6, null, ["call$3$6"], ["_runBinary$3$6"], 49, 0);
    _instance(_, "get$_onErrorWithoutLongStackTrace", 0, 5, null, ["call$5"], ["_onErrorWithoutLongStackTrace$5"], 48, 0);
    _instance(_, "get$_createTimer", 0, 5, null, ["call$5"], ["_createTimer$5"], 47, 0);
    _instance(_, "get$runOutsideAngular", 0, 1, null, ["call$1$1", "call$1"], ["runOutsideAngular$1$1", "runOutsideAngular$1"], 66, 1);
    _instance_0_i(B.MaterialTemporaryDrawerComponent.prototype, "get$toggle", "toggle$0", 1);
    _instance_1_u(V.ViewMaterialTemporaryDrawerComponent0.prototype, "get$_handle_click_0_0", "_handle_click_0_0$1", 2);
    _instance_1_u(_ = T.ButtonDirective.prototype, "get$handleClick", "handleClick$1", 21);
    _instance_1_u(_, "get$handleKeyPress", "handleKeyPress$1", 5);
    _instance_0_i(_ = E.AutoFocusDirective.prototype, "get$focus", "focus$0", 1);
    _instance_1_u(_, "get$_onModalOrPopupVisibleChanged", "_onModalOrPopupVisibleChanged$1", 41);
    _instance_1_u(_ = O.KeyboardOnlyFocusIndicatorDirective.prototype, "get$keydown", "keydown$1", 5);
    _instance_0_u(_, "get$onMouseInteraction", "onMouseInteraction$0", 1);
    _instance_1_i(D.AbstractTestability.prototype, "get$whenStable", "whenStable$1", 77);
    _instance_1_i(_ = S.MaterialButtonBase.prototype, "get$onMouseDown", "onMouseDown$1", 2);
    _instance_1_i(_, "get$onMouseUp", "onMouseUp$1", 2);
    _instance_1_i(_, "get$onFocus", "onFocus$1", 20);
    _instance_1_i(_, "get$onBlur", "onBlur$1", 20);
    _instance_1_u(_ = B.MaterialCheckboxComponent.prototype, "get$handleKeyUp", "handleKeyUp$1", 5);
    _instance_1_u(_, "get$handleClick", "handleClick$1", 21);
    _instance_1_u(_, "get$handleMouseDown", "handleMouseDown$1", 21);
    _instance_1_u(_, "get$handleKeyPress", "handleKeyPress$1", 5);
    _instance_1_u(_, "get$handleFocus", "handleFocus$1", 2);
    _instance_1_u(_, "get$handleBlur", "handleBlur$1", 39);
    _static_2(G, "material_checkbox_template__viewFactory_MaterialCheckboxComponent1$closure", "viewFactory_MaterialCheckboxComponent1", 4);
    _instance_0_i(_ = G.MaterialPopupComponent.prototype, "get$_open", "_open$0", 15);
    _instance_1_u(_, "get$_reposition", "_reposition$1", 2);
    _static_2(A, "material_popup_template__viewFactory_MaterialPopupComponent1$closure", "viewFactory_MaterialPopupComponent1", 4);
    _instance_1_u(_ = A._ViewMaterialPopupComponent1.prototype, "get$_handle_focus_6_0", "_handle_focus_6_0$1", 2);
    _instance_1_u(_, "get$_handle_focus_24_0", "_handle_focus_24_0$1", 2);
    _static_2(Z, "dropdown_button_template__viewFactory_DropdownButtonComponent1$closure", "viewFactory_DropdownButtonComponent1", 4);
    _static_2(Z, "dropdown_button_template__viewFactory_DropdownButtonComponent2$closure", "viewFactory_DropdownButtonComponent2", 4);
    _static_2(Z, "dropdown_button_template__viewFactory_DropdownButtonComponent3$closure", "viewFactory_DropdownButtonComponent3", 4);
    _instance_1_u(_ = Z.ViewDropdownButtonComponent0.prototype, "get$_handle_focus_0_0", "_handle_focus_0_0$1", 2);
    _instance_1_u(_, "get$_handle_blur_0_1", "_handle_blur_0_1$1", 2);
    _instance_1_u(_, "get$_handle_click_0_2", "_handle_click_0_2$1", 2);
    _instance_1_i(_ = M.MaterialDropdownSelectComponent.prototype, "get$onFocus", "onFocus$1", 36);
    _instance_1_i(_, "get$onBlur", "onBlur$1", 36);
    _instance_1_u(_, "get$handleClick", "handleClick$1", 20);
    _instance_0_u(_, "get$deselectCurrentSelection", "deselectCurrentSelection$0", 1);
    _instance_1_u(Y._ViewMaterialDropdownSelectComponent1.prototype, "get$_handle_mouseout_0_3", "_handle_mouseout_0_3$1", 2);
    _instance_1_u(Y._ViewMaterialDropdownSelectComponent3.prototype, "get$_handle_mouseenter_0_1", "_handle_mouseenter_0_1$1", 2);
    _instance_1_u(Y._ViewMaterialDropdownSelectComponent9.prototype, "get$_handle_mouseenter_0_0", "_handle_mouseenter_0_0$1", 2);
    _instance_1_u(_ = F.MaterialSelectDropdownItemComponent.prototype, "get$preventTextSelectionIfShiftKey", "preventTextSelectionIfShiftKey$1", 21);
    _instance_1_u(_, "get$onLoadCustomComponent", "onLoadCustomComponent$1", 87);
    _instance_1_u(B.MaterialSelectItemComponent.prototype, "get$handleActivate", "handleActivate$1", 20);
    _instance_1_u(M.MaterialDropdownBase.prototype, "get$onVisible", "onVisible$1", 41);
    _instance_0_u(_ = O.ActiveItemModel.prototype, "get$activateNext", "activateNext$0", 1);
    _instance_0_u(_, "get$activatePrevious", "activatePrevious$0", 1);
    _instance_0_u(_, "get$activateFirst", "activateFirst$0", 1);
    _instance_0_u(_, "get$activateLast", "activateLast$0", 1);
    _instance_0_i(B.ActiveItemDirective.prototype, "get$onMouseLeave", "onMouseLeave$0", 1);
    _instance_1_i(_ = R.KeyboardHandlerMixin.prototype, "get$onKeyPress", "onKeyPress$1", 5);
    _instance_1_i(_, "get$onKeyDown", "onKeyDown$1", 5);
    _instance_1_i(_, "get$onKeyUp", "onKeyUp$1", 5);
    _static_1(Z, "selection_model___defaultKeyProvider$closure", "_defaultKeyProvider", 154);
    _instance_1_u(_ = Z._MultiSelectionModelImpl.prototype, "get$deselect", "deselect$1", 19);
    _instance_1_i(_, "get$select", "select$1", 19);
    _instance_0_u(Z.SelectionChangeNotifier.prototype, "get$deliverSelectionChanges", "deliverSelectionChanges$0", 30);
    _instance_1_i(_ = Z._SingleSelectionModelImpl.prototype, "get$select", "select$1", 19);
    _instance_1_u(_, "get$deselect", "deselect$1", 19);
    _static_1(R, "string_selection_options___stringFormatSuggestion$closure", "_stringFormatSuggestion", 14);
    _instance_2_u(R.StringSelectionOptions.prototype, "get$filterOption", "filterOption$2", 89);
    _static_1(G, "has_renderer__defaultItemRenderer$closure", "defaultItemRenderer", 26);
    _static_1(G, "has_renderer___nullRenderer$closure", "_nullRenderer", 26);
    _static_2(B, "overlay_ref_OverlayRef__isEqualSize$closure", "OverlayRef__isEqualSize", 31);
    _instance_0_u(B.OverlayRef.prototype, "get$dispose", "dispose$0", 1);
    _instance(X.OverlayService.prototype, "get$_measurePane", 0, 1, null, ["call$2$track", "call$1"], ["_measurePane$2$track", "_measurePane$1"], 32, 0);
    _instance_2_u(K.OverlayDomRenderService.prototype, "get$applyState", "applyState$2", 94);
    _instance(K.DomPopupSourceFactory.prototype, "get$_asyncMeasureSize", 0, 1, function() {
      return {track: false};
    }, ["call$2$track", "call$1"], ["_asyncMeasureSize$2$track", "_asyncMeasureSize$1"], 32, 0);
    _instance_1_u(_ = Z.PopupHierarchy.prototype, "get$_onTrigger", "_onTrigger$1", 39);
    _instance_1_u(_, "get$_onKeyUp", "_onKeyUp$1", 5);
    _instance_1_u(V.ManagedZoneBase.prototype, "get$capturedTurnStart", "capturedTurnStart$1", 2);
    _instance_1_u(_ = T.Angular2ManagedZone.prototype, "get$capturedTurnDone", "capturedTurnDone$1", 2);
    _instance_1_u(_, "get$capturedEventDone", "capturedEventDone$1", 2);
    _instance_0_u(X.DisposableCallback.prototype, "get$$call", "call$0", 103);
    _instance(R.Disposer.prototype, "get$addStreamSubscription", 0, 1, null, ["call$1$1", "call$1"], ["addStreamSubscription$1$1", "addStreamSubscription$1"], 104, 1);
    _static(R, "rate_limit_utils__throttleGuaranteeLast$closure", 2, null, ["call$1$2", "call$2"], ["throttleGuaranteeLast", function(delegate, interval) {
      return R.throttleGuaranteeLast(delegate, interval, null);
    }], 155, 0);
    _instance_1_u(K.ListSyntax.prototype, "get$removeLeadingEmptyLine", "removeLeadingEmptyLine$1", 108);
    _instance_0_u(B.ChangeNotifier.prototype, "get$deliverChanges", "deliverChanges$0", 30);
    _static_0(V, "time__systemTime$closure", "systemTime", 156);
    _instance_0_i(O.SkawaInfobarComponent.prototype, "get$navigate", "navigate$0", 1);
    _instance_1_u(A.ViewSkawaMarkdownRendererComponent0.prototype, "get$_handle_render_0_0", "_handle_render_0_0$1", 2);
    _instance_1_u(T.ViewSkawaRawMarkdownRendererComponent0.prototype, "get$_raw_markdown_renderer_template$_handle_render_0_0", "_raw_markdown_renderer_template$_handle_render_0_0$1", 2);
    _instance_0_i(_ = Z.SkawaNavItemComponent.prototype, "get$onMouseEnter", "onMouseEnter$0", 1);
    _instance_0_i(_, "get$onMouseOut", "onMouseOut$0", 1);
    _instance_1_i(L.SkawaHexColorizePipe.prototype, "get$transform", "transform$1", 26);
    _static_2(K, "sidebar_item_template__viewFactory_SkawaSidebarItemComponent1$closure", "viewFactory_SkawaSidebarItemComponent1", 4);
    _static_2(V, "app_component_template__viewFactory_AppComponentHost0$closure", "viewFactory_AppComponentHost0", 157);
    _instance_1_u(_ = V.ViewAppComponent0.prototype, "get$_handle_trigger_54_0", "_handle_trigger_54_0$1", 2);
    _instance_1_u(_, "get$_handle_open_69_0", "_handle_open_69_0$1", 2);
    _static_2(L, "card_demo_template__viewFactory_CardDemoComponent1$closure", "viewFactory_CardDemoComponent1", 4);
    _static_2(L, "card_demo_template__viewFactory_CardDemoComponent2$closure", "viewFactory_CardDemoComponent2", 4);
    _instance_1_u(L.ViewCardDemoComponent0.prototype, "get$_handle_trigger_59_0", "_handle_trigger_59_0$1", 2);
    _instance_1_u(_ = K.CarTableComponent.prototype, "get$makeAccessor", "makeAccessor$1", 34);
    _instance_1_u(_, "get$opinionAccessor", "opinionAccessor$1", 34);
    _instance_1_u(_ = G.SchoolTableComponent.prototype, "get$categoryAccessor", "categoryAccessor$1", 17);
    _instance_1_u(_, "get$maleAccessor", "maleAccessor$1", 17);
    _instance_1_u(_, "get$femaleAccessor", "femaleAccessor$1", 17);
    _instance_1_u(_, "get$peopleAccessor", "peopleAccessor$1", 17);
    _instance_2_u(_, "get$_aggregateReducer", "_aggregateReducer$2", 121);
    _instance_1_i(_, "get$sort", "sort$1", 122);
    _static_2(U, "first_down_percent_template__viewFactory_FirstDownPercentComponentHost0$closure", "viewFactory_FirstDownPercentComponentHost0", 158);
    _static_1(N, "wr_table_WrTableComponent_nameAccessor$closure", "WrTableComponent_nameAccessor", 9);
    _static_1(N, "wr_table_WrTableComponent_teamAccessor$closure", "WrTableComponent_teamAccessor", 9);
    _static_1(N, "wr_table_WrTableComponent_recAccessor$closure", "WrTableComponent_recAccessor", 9);
    _static_1(N, "wr_table_WrTableComponent_yardsAccessor$closure", "WrTableComponent_yardsAccessor", 9);
    _static_1(N, "wr_table_WrTableComponent_avgAccessor$closure", "WrTableComponent_avgAccessor", 9);
    _static_1(N, "wr_table_WrTableComponent_yardPerGameAccessor$closure", "WrTableComponent_yardPerGameAccessor", 9);
    _static_1(N, "wr_table_WrTableComponent_firstDownAccessor$closure", "WrTableComponent_firstDownAccessor", 9);
    _instance_1_u(N.WrTableComponent.prototype, "get$itemRenderer", "itemRenderer$1", 159);
    _static_2(T, "wr_table_template__viewFactory_WrTableComponent1$closure", "viewFactory_WrTableComponent1", 4);
    _static_2(T, "wr_table_template__viewFactory_WrTableComponent2$closure", "viewFactory_WrTableComponent2", 4);
    _static_2(S, "grid_demo_template__viewFactory_GridDemoComponent1$closure", "viewFactory_GridDemoComponent1", 4);
    _static_2(S, "grid_demo_template__viewFactory_GridDemoComponent2$closure", "viewFactory_GridDemoComponent2", 4);
    _instance_1_u(S.ViewGridDemoComponent0.prototype, "get$_handle_trigger_61_0", "_handle_trigger_61_0$1", 2);
    _static_2(V, "hex_colorize_pipe_demo_template__viewFactory_HexColorizePipeDemoComponent1$closure", "viewFactory_HexColorizePipeDemoComponent1", 4);
    _instance_0_i(Q.InfobarDemoComponent.prototype, "get$alert", "alert$0", 1);
    _instance_1_u(_ = Z.ViewNavItemDemoComponent0.prototype, "get$_handle_trigger_1_0", "_handle_trigger_1_0$1", 2);
    _instance_1_u(_, "get$_handle_click_4_0", "_handle_click_4_0$1", 2);
    _instance_0_i(Q.SidebarItemDemoComponent.prototype, "get$open", "open$0", 1);
    _instance_0_u(_ = T.SnackbarDemoComponent.prototype, "get$showMessage", "showMessage$0", 1);
    _instance_0_u(_, "get$showMessageWithCallback", "showMessageWithCallback$0", 1);
    _instance_1_i(S.UnskippedInFooterPipe.prototype, "get$transform", "transform$1", 131);
    _instance_1_u(N._ViewSkawaDataTableComponent2.prototype, "get$_data_table_template$_handle_click_0_0", "_data_table_template$_handle_click_0_0$1", 2);
    _instance_1_u(N._ViewSkawaDataTableComponent5.prototype, "get$_data_table_template$_handle_click_0_0", "_data_table_template$_handle_click_0_0$1", 2);
    _instance_1_u(N._ViewSkawaDataTableComponent6.prototype, "get$_data_table_template$_handle_click_0_0", "_data_table_template$_handle_click_0_0$1", 2);
    _instance_1_u(N._ViewSkawaDataTableComponent7.prototype, "get$_handle_checkedChange_1_0", "_handle_checkedChange_1_0$1", 2);
    _instance_1_u(N._ViewSkawaDataTableComponent10.prototype, "get$_data_table_template$_handle_click_0_0", "_data_table_template$_handle_click_0_0$1", 2);
    _instance_1_u(T.SkawaSnackbarComponent.prototype, "get$transitionEnd", "transitionEnd$1", 2);
    _static_2(S, "snackbar_template__viewFactory_SkawaSnackbarComponent1$closure", "viewFactory_SkawaSnackbarComponent1", 4);
    _static_2(S, "snackbar_template__viewFactory_SkawaSnackbarComponent2$closure", "viewFactory_SkawaSnackbarComponent2", 4);
    _instance_1_u(S._ViewSkawaSnackbarComponent2.prototype, "get$_handle_trigger_0_0", "_handle_trigger_0_0$1", 2);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(P.Object, null);
    _inheritMany(P.Object, [H.JS_CONST, J.Interceptor, J.ArrayIterator, P._ListBase_Object_ListMixin, P.Iterable, H.ListIterator, P.Iterator, H.ExpandIterator, H.EmptyIterator, H.FixedLengthListMixin, H.UnmodifiableListMixin, H.Symbol, P.MapView, H.ConstantMap, H.Closure, H.JSInvocationMirror, H.TypeErrorDecoder, P.Error, H.ExceptionAndStackTrace, H._StackTrace, H.TypeImpl, P.MapMixin, H.LinkedHashMapCell, H.LinkedHashMapKeyIterator, H.JSSyntaxRegExp, H._MatchImplementation, H._AllMatchesIterator, H.StringMatch, H._StringAllMatchesIterator, P._TimerImpl, P._AsyncAwaitCompleter, P._AsyncStarStreamController, P._IterationMarker, P._SyncStarIterator, P.Stream, P._BufferingStreamSubscription, P._BroadcastStreamController, P.Future, P._Completer, P._FutureListener, P._Future, P._AsyncCallbackEntry, P.StreamSubscription, P.EventSink, P.StreamTransformerBase, P._StreamController, P._SyncStreamControllerDispatch, P._AsyncStreamControllerDispatch, P._AddStreamState, P._PendingEvents, P._DelayedEvent, P._DelayedDone, P._DoneStreamSubscription, P._BroadcastSubscriptionWrapper, P._StreamIterator, P._EventSinkWrapper, P.Timer, P.AsyncError, P._ZoneFunction, P.ZoneSpecification, P._ZoneSpecification, P.ZoneDelegate, P.Zone, P._ZoneDelegate, P._Zone, P._HashMapKeyIterator, P._SetBase, P._LinkedHashSetCell, P._LinkedHashSetIterator, P.ListMixin, P._UnmodifiableMapMixin, P.SetMixin, P._SetBase_Object_SetMixin, P.Codec, P.HtmlEscapeMode, P._Utf8Encoder, P.bool, P.DateTime, P.num, P.Duration, P.OutOfMemoryError, P.StackOverflowError, P._Exception, P.FormatException, P.Expando, P.Function, P.List, P.Map, P.MapEntry, P.Null, P.Match, P.RegExp, P.StackTrace, P._StringStackTrace, P.String, P.StringBuffer, P.Symbol0, P.Type, W.CssStyleDeclarationBase, W.CssClassSet, W._Html5NodeValidator, W.ImmutableListMixin, W.NodeValidatorBuilder, W._SimpleNodeValidator, W.FixedSizeListIterator, W._DOMWindowCrossFrame, W.NodeValidator, W._SameOriginUriPolicy, W._ValidatingTreeSanitizer, P._StructuredClone, P._AcceptStructuredClone, P.JsObject, P._JSRandom, P.Point, P._RectangleBase, G.ThrowingSlowComponentLoader, M.Injector, Y.NgClass, R.NgFor, R._RecordViewTuple, K.NgIf, K.TransitionalAppHost, M.ChangeDetectionHost, S.ChangeDetectorRef, R.DefaultIterableDiffer, R.CollectionChangeRecord, R._DuplicateItemRecordList, R._DuplicateMap, N.DefaultKeyValueDiffer, N.KeyValueChangeRecord, E.DirectiveChangeDetector, S.OpaqueToken, S.AppViewData, A.View, Q.AppViewUtils, D.ComponentRef, D.ComponentFactory, M.ComponentLoader, L.SlowComponentLoader, Z.ElementRef, O.ComponentStyles, D.TemplateRef, D.ViewFragment, L.ViewRef, R.ViewType, E.SanitizationService, D.Testability, D.TestabilityRegistry, D._NoopGetTestability, Y.NgZone, Y._WrappedTimer, Y.NgZoneError, U.ExceptionHandler, T.BrowserExceptionHandler, K.BrowserGetTestability, L.EventManager, N.TextBinding, Z.DomSanitizationService, R.DomSanitizationServiceImpl, L.MaterialDrawerBase, E.RootFocusable, K.DeferredContentDirective, E.DeferredContentAware, Z.DynamicComponent, O.Focusable, O.KeyboardOnlyFocusIndicatorDirective, O._InteractionType, D.AbstractTestability, D.NullTestability, L.GlyphComponent, U.HasDisabled, D.Modal, D.ModalComponent, K.Alignment, K.RelativePosition, L.Visibility, X.ZIndexer, L.BasePortalHost, K.DomRuler, L.RulerBase, B.MaterialCheckboxComponent, Y.MaterialIconComponent, B.MaterialListComponent, G._MaterialPopupComponent_Object_PopupBase, G.MaterialPopupRef, X.MaterialProgressComponent, B.MaterialRippleComponent, Z.ActivationHandler, Q._DropdownButtonComponent_Object_FocusableMixin, L.SelectionContainer, M.ActivateItemOnKeyPressMixin, X.ShiftClickSelectionMixin, U.MaterialButtonWrapper, O.FocusableMixin, B.HasTabIndex, M.DropdownHandle, M.MaterialDropdownBase, K.SelectionInputAdapter, F.TrackLayoutChangesMixin, O.ActiveItemModel, B.ActiveItemDirective, R.KeyboardHandlerMixin, M._DelegatingIterableBase, S.Box, L.SelectionItem, Z.CastIterable, Y.ChangeRecord, E.Observable, Z.SelectionChangeNotifier, F.GroupedOptions, O.HasFactoryRenderer, G.HasRenderer, G.RendersValue, L.Icon, B.OverlayRef, X.OverlayService, Z.OverlayState, Z._ImmutableOverlayState, Z.MutableOverlayState, K.OverlayDomRenderService, R.OverlayStyleConfig, K.DomPopupSourceFactory, K.DomPopupSource, Z.PopupHierarchy, Z.PopupHierarchyElement, L.PopupEvents, L.PopupBase, V.PopupRef, F.PopupSizeProvider, L.PopupSourceDirective, E.SelectableOption, V.ManagedZone, Z.AsyncUpdateScheduler, R._RateLimitSink, E._ZoneRunner, F.AcxDarkTheme, O.AcxImperativeViewUtils, F.ReferenceDirective, F.DomService, F.DomServiceState, X.DisposableCallbackBase, R.Disposable, R._NoopDisposable, R.Disposer, R.IdGenerator, R.SequentialIdGenerator, U.DefaultEquality, U.ListEquality, T.TextDirection, X.UninitializedLocaleData, U.Node0, U.Element0, U.Text0, U.UnparsedContent, K.BlockParser, K.BlockSyntax, K.ListItem, S.Document0, S.LinkReference, E.ExtensionSet, X.HtmlRenderer, R.InlineParser, R.InlineSyntax, R._DelimiterRun, R.TagState, R.InlineLink, B.ChangeNotifier, Y.MapChangeRecord, Y.PropertyChangeRecord, V.Clock, V.SkawaCkeditorComponent, V.ExtraPlugin, V._CKEditor, Y.LanguageDirectionDirective, O.SkawaInfobarComponent, Q.EditorRenderTarget, Q.EditorRenderer, Q.MarkdownRenderer, L.SkawaMarkdownRendererComponent, L.SkawaHexColorizePipe, E._SkawaSidebarItemComponent_Object_TextOnlyMixin, E.TextOnlyMixin, Q.AppComponent, N.CardDemoComponent, K.CkeditorDemoComponent, K.CarTableComponent, U.RowData, T.DataTableDemoComponent, G.SchoolTableComponent, N.WrTableComponent, D.DemoHeaderComponent, V.ExtendedMaterialIconDemoComponent, Q.GridDemoComponent, A.HexColorizePipeDemoComponent, Q.InfobarDemoComponent, Q.MarkdownDemoComponent, L.NavItemDemoComponent, Q.SidebarItemDemoComponent, T.SnackbarDemoComponent, A.GridUpdate, A.GridTile, A.DomTransformReposition, A.GridBase, V.SkawaCardComponent, V.SkawaCardContentComponent, V.SkawaCardHeaderComponent, X.SkawaCardActionsComponent, F.SkawaCardHeaderTitleDirective, F.SkawaCardHeaderSubheadDirective, F.SkawaCardHeaderImageDirective, S.SkawaDataTableComponent, S.UnskippedInFooterPipe, G.SkawaDataTableColComponent, S.SortDirection, S.SortModel, S.SkawaDataTableSortDirective, R.ExtendedMaterialIconComponent, T._GridTileDirective_Object_DomTransformReposition, T.SnackbarService, T.SnackAction, T.SnackMessage, T.SkawaSnackbarComponent]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, H.NativeByteBuffer, H.NativeTypedData, W.EventTarget, W.AccessibleNodeList, W.Event, W.Blob, W.CssStyleValue, W.CssTransformComponent, W.CssRule, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.DataTransferItemList, W.DomException, W._DomRectList_Interceptor_ListMixin, W.DomRectReadOnly, W._DomStringList_Interceptor_ListMixin, W.DomTokenList, W.Entry, W._FileList_Interceptor_ListMixin, W.FontFace, W.Gamepad, W.History, W._HtmlCollection_Interceptor_ListMixin, W.ImageData, W.Location, W.MediaList, W._MidiInputMap_Interceptor_MapMixin, W._MidiOutputMap_Interceptor_MapMixin, W.MimeType, W._MimeTypeArray_Interceptor_ListMixin, W._NodeList_Interceptor_ListMixin, W.Plugin, W._PluginArray_Interceptor_ListMixin, W._RtcStatsReport_Interceptor_MapMixin, W.SpeechGrammar, W._SpeechGrammarList_Interceptor_ListMixin, W.SpeechRecognitionResult, W._Storage_Interceptor_MapMixin, W.StyleSheet, W._TextTrackCueList_Interceptor_ListMixin, W.TimeRanges, W.Touch, W._TouchList_Interceptor_ListMixin, W.TrackDefaultList, W.Url, W.__CssRuleList_Interceptor_ListMixin, W.__GamepadList_Interceptor_ListMixin, W.__NamedNodeMap_Interceptor_ListMixin, W.__SpeechRecognitionResultList_Interceptor_ListMixin, W.__StyleSheetList_Interceptor_ListMixin, P.KeyRange, P.ObjectStore, P.Length, P._LengthList_Interceptor_ListMixin, P.Number, P._NumberList_Interceptor_ListMixin, P.PointList, P._StringList_Interceptor_ListMixin, P.Transform, P._TransformList_Interceptor_ListMixin, P.AudioBuffer, P._AudioParamMap_Interceptor_MapMixin, P._SqlResultSetRowList_Interceptor_ListMixin]);
    _inheritMany(J.JavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction, U.JsTestability, U.JsTestabilityRegistry, U.CKEditor, U.CKEditorInstance]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSDouble]);
    _inherit(P.ListBase, P._ListBase_Object_ListMixin);
    _inheritMany(P.ListBase, [H.UnmodifiableListBase, W._ChildrenElementList, W._FrozenElementList, W._ChildNodeListLazy, P.FilteredElementList]);
    _inheritMany(H.UnmodifiableListBase, [H.CodeUnits, P.UnmodifiableListView]);
    _inheritMany(P.Iterable, [H.EfficientLengthIterable, H.MappedIterable, H.WhereIterable, H.ExpandIterable, H.TakeIterable, H.SkipIterable, H._ConstantMapKeyIterable, P.IterableBase, H._StringAllMatchesIterable]);
    _inheritMany(H.EfficientLengthIterable, [H.ListIterable, H.LinkedHashMapKeyIterable, P._HashMapKeyIterable, P.Set]);
    _inheritMany(H.ListIterable, [H.SubListIterable, H.MappedListIterable, H.ReversedListIterable]);
    _inherit(H.EfficientLengthMappedIterable, H.MappedIterable);
    _inheritMany(P.Iterator, [H.MappedIterator, H.WhereIterator, H.TakeIterator, H.SkipIterator]);
    _inherit(H.EfficientLengthTakeIterable, H.TakeIterable);
    _inherit(H.EfficientLengthSkipIterable, H.SkipIterable);
    _inherit(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P.MapView);
    _inherit(P.UnmodifiableMapView, P._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(H.ConstantMapView, P.UnmodifiableMapView);
    _inherit(H.ConstantStringMap, H.ConstantMap);
    _inheritMany(H.Closure, [H.Instantiation, H.Primitives_functionNoSuchMethod_closure, H.unwrapException_saveStackTrace, H.TearOffClosure, H.JsLinkedHashMap_values_closure, H.initHooks_closure, H.initHooks_closure0, H.initHooks_closure1, P._AsyncRun__initializeScheduleImmediate_internalCallback, P._AsyncRun__initializeScheduleImmediate_closure, P._AsyncRun__scheduleImmediateJsOverride_internalCallback, P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, P._TimerImpl_internalCallback, P._TimerImpl$periodic_closure, P._AsyncAwaitCompleter_complete_closure, P._AsyncAwaitCompleter_completeError_closure, P._awaitOnObject_closure, P._awaitOnObject_closure0, P._wrapJsFunctionForAsync_closure, P._asyncStarHelper_closure, P._asyncStarHelper_closure0, P._AsyncStarStreamController__resumeBody, P._AsyncStarStreamController__resumeBody_closure, P._AsyncStarStreamController_closure0, P._AsyncStarStreamController_closure1, P._AsyncStarStreamController_closure, P._AsyncStarStreamController__closure, P._SyncBroadcastStreamController__sendData_closure, P._SyncBroadcastStreamController__sendError_closure, P._SyncBroadcastStreamController__sendDone_closure, P.Future_Future_closure, P._Future__addListener_closure, P._Future__prependListeners_closure, P._Future__chainForeignFuture_closure, P._Future__chainForeignFuture_closure0, P._Future__chainForeignFuture_closure1, P._Future__asyncComplete_closure, P._Future__chainFuture_closure, P._Future__asyncCompleteError_closure, P._Future__propagateToListeners_handleWhenCompleteCallback, P._Future__propagateToListeners_handleWhenCompleteCallback_closure, P._Future__propagateToListeners_handleValueCallback, P._Future__propagateToListeners_handleError, P.Stream_Stream$fromFuture_closure, P.Stream_Stream$fromFuture_closure0, P.Stream_Stream$fromIterable_closure, P.Stream_length_closure, P.Stream_length_closure0, P._StreamController__subscribe_closure, P._StreamController__recordCancel_complete, P._AddStreamState_cancel_closure, P._BufferingStreamSubscription__sendError_sendError, P._BufferingStreamSubscription__sendDone_sendDone, P._PendingEvents_schedule_closure, P._CustomZone_bindCallback_closure, P._CustomZone_bindUnaryCallback_closure, P._CustomZone_bindCallbackGuarded_closure, P._CustomZone_bindUnaryCallbackGuarded_closure, P._rootHandleUncaughtError_closure, P._RootZone_bindCallback_closure, P._RootZone_bindCallbackGuarded_closure, P._RootZone_bindUnaryCallbackGuarded_closure, P._LinkedCustomHashSet_closure, P.HashMap_HashMap$from_closure, P.MapBase_mapToString_closure, P.MapMixin_entries_closure, P.NoSuchMethodError_toString_closure, P.Duration_toString_sixDigits, P.Duration_toString_twoDigits, W.promiseToFuture_closure, W.promiseToFuture_closure0, W.Element_animate_closure, W.Entry_remove_closure, W.Entry_remove_closure0, W.MidiInputMap_keys_closure, W.MidiOutputMap_keys_closure, W.RtcStatsReport_keys_closure, W.Storage_keys_closure, W._MultiElementCssClassSet__MultiElementCssClassSet_closure, W._MultiElementCssClassSet_readClasses_closure, W._MultiElementCssClassSet_modify_closure, W._EventStreamSubscription_closure, W.NodeValidatorBuilder_allowsElement_closure, W.NodeValidatorBuilder_allowsAttribute_closure, W._SimpleNodeValidator_closure, W._SimpleNodeValidator_closure0, W._TemplatingNodeValidator_closure, W._ValidatingTreeSanitizer_sanitizeTree_walk, P._StructuredClone_walk_closure, P._AcceptStructuredClone_walk_closure, P.convertDartToNative_Dictionary_closure, P.convertNativePromiseToDartFuture_closure, P.convertNativePromiseToDartFuture_closure0, P.CssClassSetImpl_add_closure, P.CssClassSetImpl_addAll_closure, P.CssClassSetImpl_removeAll_closure, P.FilteredElementList__iterable_closure, P.FilteredElementList__iterable_closure0, P.FilteredElementList_removeRange_closure, P._completeRequest_closure, P._convertToJS_closure, P._convertToJS_closure0, P._wrapToDart_closure, P._wrapToDart_closure0, P._wrapToDart_closure1, P._convertDataTree__convert, P.AudioParamMap_keys_closure, G.createRandomAppId_char, G.appInjector_closure, G.appInjector_closure0, G.appInjector_closure1, G.appInjector_closure2, G.appInjector_closure3, Y.NgClass__applyKeyValueChanges_closure, Y.NgClass__applyKeyValueChanges_closure0, Y.NgClass__applyKeyValueChanges_closure1, Y.NgClass__applyIterableChanges_closure, Y.NgClass__applyIterableChanges_closure0, Y.NgClass__applyClasses_closure, R.NgFor__applyChanges_closure, R.NgFor__applyChanges_closure0, Y.ApplicationRef$__closure, Y.ApplicationRef$__closure0, Y.ApplicationRef_bootstrap_closure, Y.ApplicationRef__loadedRootComponent_closure, R.DefaultIterableDiffer_check_closure, N.DefaultKeyValueDiffer_check_closure, N.DefaultKeyValueDiffer_check_closure0, M.ChangeDetectionHost_run_closure, M.ChangeDetectionHost_run__closure, M.ChangeDetectionHost_run__closure0, S.AppView_eventHandler0_closure, S.AppView_eventHandler1_closure, S.AppView_eventHandler1__closure, D.Testability__watchAngularEvents_closure, D.Testability__watchAngularEvents_closure0, D.Testability__watchAngularEvents__closure, D.Testability__watchAngularEvents___closure, D.Testability__runCallbacksIfReady_closure, Y.NgZone__scheduleMicrotask_closure, Y.NgZone__run_closure, Y.NgZone__runUnary_closure, Y.NgZone__runBinary_closure, Y.NgZone__createTimer_closure, Y.NgZone__createTimer_closure0, Y.NgZone__checkStable_closure, K.BrowserGetTestability_addToWindow_closure, K.BrowserGetTestability_addToWindow_closure0, K.BrowserGetTestability_addToWindow_closure1, K.BrowserGetTestability_addToWindow__closure, K.BrowserGetTestability__createRegistry_closure, K.BrowserGetTestability__createRegistry_closure0, K.BrowserGetTestability__createRegistry__closure, A.pureProxy1_closure, A.pureProxy2_closure, L.MaterialDrawerBase_visible_closure, K.DeferredContentDirective_closure, Z.DynamicComponent__initialize_closure, O.KeyboardOnlyFocusIndicatorDirective_resetOutline_closure, O.KeyboardOnlyFocusIndicatorDirective_hideOutline_closure, D.AbstractTestability__runCallbacksIfStable_closure, D.AbstractTestability__runCallbacksIfStable__closure, K.DomRulerImpl_removeCssClassesSync_closure, K.DomRulerImpl_addCssClassesSync_closure, S.MaterialButtonBase__setFocused_closure, G.MaterialPopupComponent_closure, G.MaterialPopupComponent__open_closure, G.MaterialPopupComponent__open_closure0, G.MaterialPopupComponent__open__closure, G.MaterialPopupComponent__onPopupOpened_closure, G.MaterialPopupComponent__close_closure, G.MaterialPopupComponent__close_closure0, G.MaterialPopupComponent__startRepositionLoop_closure, G._mergeStreams_closure, G._mergeStreams__closure, G._mergeStreams___closure, G._mergeStreams_closure0, B.MaterialRippleComponent_closure, B.MaterialRippleComponent_closure0, B.MaterialRippleComponent_ngOnDestroy_closure, M.MaterialDropdownSelectComponent_options_closure, M.MaterialDropdownSelectComponent_selection_closure, M.ActivateItemOnKeyPressMixin_activateOnKeyPress_closure, M.ActivateItemOnKeyPressMixin_activateOnKeyPress_closure0, Y.ViewMaterialDropdownSelectComponent0_build_closure, Y._ViewMaterialDropdownSelectComponent1_build_closure, Y._ViewMaterialDropdownSelectComponent2_build_closure, Y._ViewMaterialDropdownSelectComponent2_build_closure0, Y._ViewMaterialDropdownSelectComponent4_build_closure, Y._ViewMaterialDropdownSelectComponent5_build_closure, Y._ViewMaterialDropdownSelectComponent5_build_closure0, Y._ViewMaterialDropdownSelectComponent5_build_closure1, Y._ViewMaterialDropdownSelectComponent5_build_closure2, Y._ViewMaterialDropdownSelectComponent8_build_closure, O.ViewMaterialSelectDropdownItemComponent0_build_closure, O.ViewMaterialSelectDropdownItemComponent0_build_closure0, O.ViewMaterialSelectDropdownItemComponent0_build_closure1, O.ViewMaterialSelectDropdownItemComponent0_build_closure2, O._ViewMaterialSelectDropdownItemComponent2_build_closure, O._ViewMaterialSelectDropdownItemComponent2_build_closure0, O._ViewMaterialSelectDropdownItemComponent4_build_closure, B.MaterialSelectItemComponent_closure, B.MaterialSelectItemComponent_selection_closure, B.ActiveItemDirective__scrollIntoViewIfNecessary_closure, B.ActiveItemDirective__scrollIntoView_closure, Z._MultiSelectionModelImpl_closure, Z._MultiSelectionModelImpl_closure0, F.SelectionOptions_optionGroups_closure, T.closure, B.OverlayRef_measureSizeChanges_closure, B.OverlayRef_closure, K.OverlayDomRenderService_applyState_closure, K.OverlayDomRenderService_measureContainer_closure, L.RulerBase_measure_closure, L.RulerBase_track_closure0, L.RulerBase_track__closure, L.RulerBase_track__closure0, L.RulerBase_track_closure, L.RulerBase_track_closure1, L.RulerBase_track_closure_withinEpsilon, L.RulerBase_updateSync_closure, Z.AsyncUpdateScheduler_scheduleUpdate_closure, R.RateLimitTransformer_bind_closure, E.ZonedFuture_then_closure, E.ZonedFuture_whenComplete_closure, E.ZonedStream_listen_closure, T.Angular2ManagedZone_closure, T.createDomService_closure, F.DomService_init_closure, F.DomService_init__closure, F.DomService_nextFrame_closure, F.DomService_nextFrame__closure, F.DomService_onLayoutChanged_closure, F.DomService_onLayoutChanged__closure, F.DomService_onLayoutChanged__closure0, F.DomService_onLayoutChanged__closure1, F.DomService__listenOnLayoutEvents_closure, F.DomService__scheduleProcessQueue_closure, F.DomService__scheduleOnLayoutChanged_closure, F.DomService__scheduleOnLayoutChanged_closure0, M.DomServiceWebdriverTestability$__closure, Z.triggersOutside_closure, Z.triggersOutsideAny_closure, Z.triggersOutsideAny__closure, Z.triggersOutsideAny__closure0, Z.triggersOutsideAny__closure1, Z.triggersOutsideAny__closure2, Z.triggersOutsideAny_closure0, R.SequentialIdGenerator__createUuid_closure, R.SequentialIdGenerator__createUuid_closure0, R._throttle_closure, R._throttle__closure, U.Element_textContent_closure, K.BlockSyntax_isAtBlockEnd_closure, K.BlockquoteSyntax_parseChildLines_closure, K.ListSyntax_parse_endItem, K.ListSyntax_parse_tryMatch, K.ParagraphSyntax__extractReflinkDefinitions_lineStartsReflinkDefinition, K.ParagraphSyntax__parseReflinkDefinition_closure, R.InlineParser_closure, R.InlineParser_parse_closure, R.InlineParser_parse_closure0, R.LinkSyntax_closure, R.TagState_textContent_closure, Y.ObservableMap_addAll_closure, X.hashObjects_closure, Q.EditorRenderTarget__updateElementChildren_closure, L.SkawaMarkdownRendererComponent_ngOnInit_closure, Y.ViewSkawaNavItemComponent0_build_closure, G.SchoolTableComponent_aggregate_closure, G.SchoolTableComponent_sort_closure, G.SchoolTableComponent_sort_closure0, N.WrTableComponent_closure, N.WrTableComponent_ngOnInit_closure, N.WrTableComponent_ngOnInit__closure, T.ViewWrTableComponent0_detectChangesInternal_closure, T._ViewWrTableComponent1_detectChangesInternal_closure, T.SnackbarDemoComponent_showMessageWithCallback_closure, A.GridBase_calculateGridUpdate_closure, A.GridBase_calculateGridUpdate_closure0, S.SkawaDataTableComponent_closure, S.SkawaDataTableComponent_markAllRowsChecked_closure, S.SkawaDataTableComponent__emitChange_closure, S.SkawaDataTableComponent_isEveryRowChecked_closure, S.SkawaDataTableComponent_isEveryRowSkippedInFooter_closure, S.SkawaDataTableComponent_ngAfterViewInit_closure, S.UnskippedInFooterPipe_transform_closure, N.ViewSkawaDataTableComponent0_build_closure, N.ViewSkawaDataTableComponent0_build_closure0, N.ViewSkawaDataTableComponent0_build_closure1, N.ViewSkawaDataTableComponent0_build_closure2, N._ViewSkawaDataTableComponent1_build_closure, N._ViewSkawaDataTableComponent3_build_closure, N._ViewSkawaDataTableComponent3_build_closure0, N._ViewSkawaDataTableComponent6_build_closure, N._ViewSkawaDataTableComponent6_build_closure0, N._ViewSkawaDataTableComponent8_build_closure, N._ViewSkawaDataTableComponent8_build_closure0, N._ViewSkawaDataTableComponent8_build_closure1, N._ViewSkawaDataTableComponent12_build_closure, G.SkawaDataTableColComponent_getClasses_closure, S.SkawaDataTableSortDirective_allowedSorts_closure, S.SkawaDataTableSortDirective_allowedSorts_closure0, S.SkawaDataTableSortDirective_allowedSorts_closure1, T.GridComponent_updateAndDisplay_closure, T.GridComponent_ngOnInit_closure, T.SkawaSnackbarComponent_ngOnInit_closure, T.SkawaSnackbarComponent__slideIn_closure, T.SkawaSnackbarComponent_transitionEnd_closure]);
    _inherit(H.Instantiation1, H.Instantiation);
    _inheritMany(P.Error, [H.NullError, H.JsNoSuchMethodError, H.UnknownJsTypeError, H.TypeErrorImplementation, H.CastErrorImplementation, H.RuntimeError, P.AssertionError, P.NullThrownError, P.ArgumentError, P.NoSuchMethodError, P.UnsupportedError, P.UnimplementedError, P.StateError, P.ConcurrentModificationError, P.CyclicInitializationError]);
    _inheritMany(H.TearOffClosure, [H.StaticClosure, H.BoundClosure]);
    _inherit(H._AssertionError, P.AssertionError);
    _inherit(P.MapBase, P.MapMixin);
    _inheritMany(P.MapBase, [H.JsLinkedHashMap, P._HashMap, W._AttributeMap]);
    _inheritMany(P.IterableBase, [H._AllMatchesIterable, P._SyncStarIterable]);
    _inherit(H.NativeTypedArray, H.NativeTypedData);
    _inheritMany(H.NativeTypedArray, [H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfDouble, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfInt, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(H.NativeTypedArrayOfInt, [H.NativeInt16List, H.NativeInt32List, H.NativeInt8List, H.NativeUint16List, H.NativeUint32List, H.NativeUint8ClampedList, H.NativeUint8List]);
    _inheritMany(P.Stream, [P._StreamImpl, P._AsBroadcastStream, P._ForwardingStream, P._BoundSinkStream, W._EventStream, E._ZonedStream_Stream__ZoneRunner]);
    _inheritMany(P._StreamImpl, [P._ControllerStream, P._GeneratedStreamImpl]);
    _inherit(P._BroadcastStream, P._ControllerStream);
    _inheritMany(P._BufferingStreamSubscription, [P._ControllerSubscription, P._ForwardingStreamSubscription, P._SinkTransformerStreamSubscription]);
    _inherit(P._BroadcastSubscription, P._ControllerSubscription);
    _inheritMany(P._BroadcastStreamController, [P._SyncBroadcastStreamController, P._AsyncBroadcastStreamController]);
    _inherit(P._AsBroadcastStreamController, P._SyncBroadcastStreamController);
    _inheritMany(P._Completer, [P._AsyncCompleter, P._SyncCompleter]);
    _inheritMany(P._StreamController, [P._AsyncStreamController, P._SyncStreamController]);
    _inherit(P._StreamControllerAddStreamState, P._AddStreamState);
    _inheritMany(P._PendingEvents, [P._IterablePendingEvents, P._StreamImplEvents]);
    _inheritMany(P._DelayedEvent, [P._DelayedData, P._DelayedError]);
    _inheritMany(P._ForwardingStream, [P._TakeStream, P._DistinctStream]);
    _inherit(P._StateStreamSubscription, P._ForwardingStreamSubscription);
    _inheritMany(P._Zone, [P._CustomZone, P._RootZone]);
    _inherit(P._IdentityHashMap, P._HashMap);
    _inherit(P._LinkedIdentityHashMap, H.JsLinkedHashMap);
    _inherit(P._LinkedHashSet, P._SetBase);
    _inheritMany(P._LinkedHashSet, [P._LinkedIdentityHashSet, P._LinkedCustomHashSet]);
    _inherit(P.SetBase, P._SetBase_Object_SetMixin);
    _inheritMany(P.StreamTransformerBase, [P.Converter, R.RateLimitTransformer]);
    _inherit(P.Encoding, P.Codec);
    _inheritMany(P.Converter, [P.HtmlEscape, P.Utf8Encoder]);
    _inherit(P.Utf8Codec, P.Encoding);
    _inheritMany(P.num, [P.double, P.int]);
    _inheritMany(P.ArgumentError, [P.RangeError, P.IndexError]);
    _inheritMany(W.EventTarget, [W.Node, W.AccessibleNode, W.Animation, W.FileWriter, W.FontFaceSet, W.MediaKeySession, W.MessagePort, W.SourceBuffer, W._SourceBufferList_EventTarget_ListMixin, W.TextTrack, W.TextTrackCue, W._TextTrackList_EventTarget_ListMixin, W.VideoTrackList, W.Window, W.WorkerGlobalScope, P.Request, P.AudioTrackList, P.BaseAudioContext]);
    _inheritMany(W.Node, [W.Element, W.CharacterData, W.Document, W._Attr]);
    _inheritMany(W.Element, [W.HtmlElement, P.SvgElement]);
    _inheritMany(W.HtmlElement, [W.AnchorElement, W.AreaElement, W.BaseElement, W.BodyElement, W.DivElement, W.FormElement, W.HeadElement, W.InputElement, W.SelectElement, W.SpanElement, W.TableElement, W.TemplateElement, W.TextAreaElement]);
    _inheritMany(W.Event, [W.AnimationEvent, W.UIEvent, W.TransitionEvent, P.VersionChangeEvent]);
    _inheritMany(W.CharacterData, [W.Comment, W.Text]);
    _inheritMany(W.CssStyleValue, [W.CssNumericValue, W.CssTransformValue, W.CssUnparsedValue]);
    _inherit(W.CssPerspective, W.CssTransformComponent);
    _inherit(W.CssStyleDeclaration, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase);
    _inherit(W._DomRectList_Interceptor_ListMixin_ImmutableListMixin, W._DomRectList_Interceptor_ListMixin);
    _inherit(W.DomRectList, W._DomRectList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomStringList_Interceptor_ListMixin_ImmutableListMixin, W._DomStringList_Interceptor_ListMixin);
    _inherit(W.DomStringList, W._DomStringList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.File, W.Blob);
    _inherit(W._FileList_Interceptor_ListMixin_ImmutableListMixin, W._FileList_Interceptor_ListMixin);
    _inherit(W.FileList, W._FileList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.UIEvent, [W.FocusEvent, W.KeyboardEvent, W.MouseEvent]);
    _inherit(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W._HtmlCollection_Interceptor_ListMixin);
    _inherit(W.HtmlCollection, W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.HtmlDocument, W.Document);
    _inherit(W.MidiInputMap, W._MidiInputMap_Interceptor_MapMixin);
    _inherit(W.MidiOutputMap, W._MidiOutputMap_Interceptor_MapMixin);
    _inherit(W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin, W._MimeTypeArray_Interceptor_ListMixin);
    _inherit(W.MimeTypeArray, W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W._NodeList_Interceptor_ListMixin);
    _inherit(W.NodeList, W._NodeList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._PluginArray_Interceptor_ListMixin_ImmutableListMixin, W._PluginArray_Interceptor_ListMixin);
    _inherit(W.PluginArray, W._PluginArray_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.RtcStatsReport, W._RtcStatsReport_Interceptor_MapMixin);
    _inherit(W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, W._SourceBufferList_EventTarget_ListMixin);
    _inherit(W.SourceBufferList, W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin, W._SpeechGrammarList_Interceptor_ListMixin);
    _inherit(W.SpeechGrammarList, W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.Storage, W._Storage_Interceptor_MapMixin);
    _inherit(W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin, W._TextTrackCueList_Interceptor_ListMixin);
    _inherit(W.TextTrackCueList, W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, W._TextTrackList_EventTarget_ListMixin);
    _inherit(W.TextTrackList, W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W._TouchList_Interceptor_ListMixin);
    _inherit(W.TouchList, W._TouchList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin, W.__CssRuleList_Interceptor_ListMixin);
    _inherit(W._CssRuleList, W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomRect, W.DomRectReadOnly);
    _inherit(W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin, W.__GamepadList_Interceptor_ListMixin);
    _inherit(W._GamepadList, W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.__NamedNodeMap_Interceptor_ListMixin);
    _inherit(W._NamedNodeMap, W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin, W.__SpeechRecognitionResultList_Interceptor_ListMixin);
    _inherit(W._SpeechRecognitionResultList, W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin, W.__StyleSheetList_Interceptor_ListMixin);
    _inherit(W._StyleSheetList, W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._ElementAttributeMap, W._AttributeMap);
    _inherit(P.CssClassSetImpl, P.SetBase);
    _inheritMany(P.CssClassSetImpl, [W._MultiElementCssClassSet, W._ElementCssClassSet, P.AttributeClassSet]);
    _inherit(W._EventStreamSubscription, P.StreamSubscription);
    _inherit(W._TemplatingNodeValidator, W._SimpleNodeValidator);
    _inherit(P._StructuredCloneDart2Js, P._StructuredClone);
    _inherit(P._AcceptStructuredCloneDart2Js, P._AcceptStructuredClone);
    _inherit(P.OpenDBRequest, P.Request);
    _inheritMany(P.JsObject, [P.JsFunction, P._JsArray_JsObject_ListMixin]);
    _inherit(P.JsArray, P._JsArray_JsObject_ListMixin);
    _inheritMany(P._RectangleBase, [P.Rectangle, P.MutableRectangle]);
    _inherit(P._LengthList_Interceptor_ListMixin_ImmutableListMixin, P._LengthList_Interceptor_ListMixin);
    _inherit(P.LengthList, P._LengthList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._NumberList_Interceptor_ListMixin_ImmutableListMixin, P._NumberList_Interceptor_ListMixin);
    _inherit(P.NumberList, P._NumberList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._StringList_Interceptor_ListMixin_ImmutableListMixin, P._StringList_Interceptor_ListMixin);
    _inherit(P.StringList, P._StringList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._TransformList_Interceptor_ListMixin_ImmutableListMixin, P._TransformList_Interceptor_ListMixin);
    _inherit(P.TransformList, P._TransformList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P.AudioParamMap, P._AudioParamMap_Interceptor_MapMixin);
    _inherit(P.OfflineAudioContext, P.BaseAudioContext);
    _inherit(P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin, P._SqlResultSetRowList_Interceptor_ListMixin);
    _inherit(P.SqlResultSetRowList, P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(E.HierarchicalInjector, M.Injector);
    _inheritMany(E.HierarchicalInjector, [Y._Injector$minimalApp, G._LazyInjector, G.ElementInjector, R.EmptyInjector, A.MapInjector]);
    _inherit(K.InvalidPipeArgumentException, P.FormatException);
    _inherit(Y.ApplicationRef, M.ChangeDetectionHost);
    _inherit(S.AppView, A.View);
    _inherit(O._UnscopedComponentStyles, O.ComponentStyles);
    _inherit(V.ViewContainer, M.ComponentLoader);
    _inherit(L.EmbeddedViewRef, L.ViewRef);
    _inheritMany(L.MaterialDrawerBase, [G.MaterialPersistentDrawerDirective, B.MaterialTemporaryDrawerComponent]);
    _inheritMany(E.DirectiveChangeDetector, [O.MaterialPersistentDrawerDirectiveNgCd, R.ButtonDirectiveNgCd, M.ActiveItemDirectiveNgCd, X.LanguageDirectionDirectiveNgCd]);
    _inheritMany(S.AppView, [V.ViewMaterialTemporaryDrawerComponent0, Q.ViewDynamicComponent0, M.ViewGlyphComponent0, U.ViewMaterialButtonComponent0, G.ViewMaterialCheckboxComponent0, G._ViewMaterialCheckboxComponent1, M.ViewMaterialIconComponent0, B.ViewMaterialListComponent0, A.ViewMaterialPopupComponent0, A._ViewMaterialPopupComponent1, S.ViewMaterialProgressComponent0, L.ViewMaterialRippleComponent0, Z.ViewDropdownButtonComponent0, Z._ViewDropdownButtonComponent1, Z._ViewDropdownButtonComponent2, Z._ViewDropdownButtonComponent3, Y.ViewMaterialDropdownSelectComponent0, Y._ViewMaterialDropdownSelectComponent1, Y._ViewMaterialDropdownSelectComponent2, Y._ViewMaterialDropdownSelectComponent3, Y._ViewMaterialDropdownSelectComponent4, Y._ViewMaterialDropdownSelectComponent5, Y._ViewMaterialDropdownSelectComponent6, Y._ViewMaterialDropdownSelectComponent7, Y._ViewMaterialDropdownSelectComponent8, Y._ViewMaterialDropdownSelectComponent9, Y._ViewMaterialDropdownSelectComponent10, O.ViewMaterialSelectDropdownItemComponent0, O._ViewMaterialSelectDropdownItemComponent1, O._ViewMaterialSelectDropdownItemComponent2, O._ViewMaterialSelectDropdownItemComponent3, O._ViewMaterialSelectDropdownItemComponent4, O._ViewMaterialSelectDropdownItemComponent5, O._ViewMaterialSelectDropdownItemComponent6, O._ViewMaterialSelectDropdownItemComponent7, A.ViewSkawaCkeditorComponent0, G.ViewSkawaInfobarComponent0, A.ViewSkawaMarkdownRendererComponent0, T.ViewSkawaRawMarkdownRendererComponent0, Y.ViewSkawaNavItemComponent0, K.ViewSkawaSidebarItemComponent0, K._ViewSkawaSidebarItemComponent1, V.ViewAppComponent0, V._ViewAppComponentHost0, L.ViewCardDemoComponent0, L._ViewCardDemoComponent1, L._ViewCardDemoComponent2, M.ViewCkeditorDemoComponent0, D.ViewCarTableComponent0, E.ViewDataTableDemoComponent0, V.ViewSchoolTableComponent0, U.ViewFirstDownPercentComponent0, U._ViewFirstDownPercentComponentHost0, T.ViewWrTableComponent0, T._ViewWrTableComponent1, T._ViewWrTableComponent2, S.ViewDemoHeaderComponent0, X.ViewExtendedMaterialIconDemoComponent0, S.ViewGridDemoComponent0, S._ViewGridDemoComponent1, S._ViewGridDemoComponent2, V.ViewHexColorizePipeDemoComponent0, V._ViewHexColorizePipeDemoComponent1, O.ViewInfobarDemoComponent0, Z.ViewMarkdownDemoComponent0, Z.ViewNavItemDemoComponent0, Y.ViewSidebarItemDemoComponent0, D.ViewSnackbarDemoComponent0, E.ViewSkawaCardComponent0, E.ViewSkawaCardContentComponent0, E.ViewSkawaCardHeaderComponent0, X.ViewSkawaCardActionsComponent0, N.ViewSkawaDataTableComponent0, N._ViewSkawaDataTableComponent1, N._ViewSkawaDataTableComponent2, N._ViewSkawaDataTableComponent3, N._ViewSkawaDataTableComponent4, N._ViewSkawaDataTableComponent5, N._ViewSkawaDataTableComponent6, N._ViewSkawaDataTableComponent7, N._ViewSkawaDataTableComponent8, N._ViewSkawaDataTableComponent9, N._ViewSkawaDataTableComponent10, N._ViewSkawaDataTableComponent11, N._ViewSkawaDataTableComponent12, N._ViewSkawaDataTableComponent13, Y.ViewSkawaDataTableColComponent0, Q.ViewExtendedMaterialIconComponent0, X.ViewGridComponent0, S.ViewSkawaSnackbarComponent0, S._ViewSkawaSnackbarComponent1, S._ViewSkawaSnackbarComponent2]);
    _inheritMany(E.RootFocusable, [T._ButtonDirective_RootFocusable_HasTabIndex, E.AutoFocusDirective]);
    _inherit(T.ButtonDirective, T._ButtonDirective_RootFocusable_HasTabIndex);
    _inherit(K._CustomAlignment, K.Alignment);
    _inheritMany(K._CustomAlignment, [K.BeforeCustomAlignment, K.AfterCustomAlignment]);
    _inherit(L.DomPortalHost, L.BasePortalHost);
    _inherit(K.DomRulerImpl, L.RulerBase);
    _inheritMany(T.ButtonDirective, [S.MaterialButtonBase, B.MaterialSelectItemComponent]);
    _inheritMany(S.MaterialButtonBase, [B.MaterialButtonComponent, Z._SkawaNavItemComponent_MaterialButtonBase_TextOnlyMixin]);
    _inherit(G._MaterialPopupComponent_Object_PopupBase_PopupEvents, G._MaterialPopupComponent_Object_PopupBase);
    _inherit(G._MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement, G._MaterialPopupComponent_Object_PopupBase_PopupEvents);
    _inherit(G.MaterialPopupComponent, G._MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement);
    _inherit(Q._DropdownButtonComponent_Object_FocusableMixin_MaterialButtonWrapper, Q._DropdownButtonComponent_Object_FocusableMixin);
    _inherit(Q.DropdownButtonComponent, Q._DropdownButtonComponent_Object_FocusableMixin_MaterialButtonWrapper);
    _inherit(V.MaterialSelectBase, L.SelectionContainer);
    _inherit(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase, V.MaterialSelectBase);
    _inherit(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter, M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase);
    _inherit(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper, M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter);
    _inherit(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin, M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper);
    _inherit(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin, M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin);
    _inherit(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin, M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin);
    _inherit(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin_ShiftClickSelectionMixin, M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin);
    _inherit(M.MaterialDropdownSelectComponent, M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin_ShiftClickSelectionMixin);
    _inherit(F.MaterialSelectDropdownItemComponent, B.MaterialSelectItemComponent);
    _inherit(M.DelegatingIterable, M._DelegatingIterableBase);
    _inherit(M.DelegatingList, M.DelegatingIterable);
    _inheritMany(M.DelegatingList, [G.LabeledList, Y.ChangeRecords]);
    _inheritMany(Y.ChangeRecord, [Z.SelectionChangeRecord, Z._SelectionChangeRecordImpl]);
    _inheritMany(E.Observable, [Z.__MultiSelectionModelImpl_Observable_SelectionChangeNotifier, Z.__SingleSelectionModelImpl_Observable_SelectionChangeNotifier, F.PopupState, Y.ObservableMap]);
    _inherit(Z.__MultiSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable, Z.__MultiSelectionModelImpl_Observable_SelectionChangeNotifier);
    _inherit(Z._MultiSelectionModelImpl, Z.__MultiSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable);
    _inherit(Z.__SingleSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable, Z.__SingleSelectionModelImpl_Observable_SelectionChangeNotifier);
    _inherit(Z._SingleSelectionModelImpl, Z.__SingleSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable);
    _inherit(F.OptionGroup, G.LabeledList);
    _inherit(F.SelectionOptions, F.GroupedOptions);
    _inherit(R.StringSelectionOptions, F.SelectionOptions);
    _inherit(V.ManagedZoneBase, V.ManagedZone);
    _inherit(E.ZonedFuture, E._ZoneRunner);
    _inherit(E.ZonedStream, E._ZonedStream_Stream__ZoneRunner);
    _inherit(T.Angular2ManagedZone, V.ManagedZoneBase);
    _inherit(M.DomServiceWebdriverTestability, D.AbstractTestability);
    _inherit(X.DisposableCallback, X.DisposableCallbackBase);
    _inheritMany(K.BlockSyntax, [K.EmptyBlockSyntax, K.SetextHeaderSyntax, K.HeaderSyntax, K.BlockquoteSyntax, K.CodeBlockSyntax, K.FencedCodeBlockSyntax, K.HorizontalRuleSyntax, K.BlockHtmlSyntax, K.ListSyntax, K.ParagraphSyntax]);
    _inheritMany(K.BlockHtmlSyntax, [K.BlockTagBlockHtmlSyntax, K.LongBlockHtmlSyntax]);
    _inherit(K.OtherTagBlockHtmlSyntax, K.BlockTagBlockHtmlSyntax);
    _inheritMany(K.ListSyntax, [K.UnorderedListSyntax, K.OrderedListSyntax]);
    _inheritMany(R.InlineSyntax, [R.LineBreakSyntax, R.TextSyntax, R.EscapeSyntax, R.EmailAutolinkSyntax, R.AutolinkSyntax, R.TagSyntax, R.CodeSyntax]);
    _inherit(R.InlineHtmlSyntax, R.TextSyntax);
    _inherit(R.LinkSyntax, R.TagSyntax);
    _inherit(R.ImageSyntax, R.LinkSyntax);
    _inherit(X.SkawaRawMarkdownRendererComponent, L.SkawaMarkdownRendererComponent);
    _inherit(Z.SkawaNavItemComponent, Z._SkawaNavItemComponent_MaterialButtonBase_TextOnlyMixin);
    _inherit(E.SkawaSidebarItemComponent, E._SkawaSidebarItemComponent_Object_TextOnlyMixin);
    _inheritMany(U.RowData, [K.CarRowData, G.SchoolRowData, N.WrRowData]);
    _inherit(L.FirstDownPercentComponent, G.RendersValue);
    _inherit(G.SkawaDataColRendererDirective, O.HasFactoryRenderer);
    _inherit(T.GridComponent, A.GridBase);
    _inherit(T.GridTileDirective, T._GridTileDirective_Object_DomTransformReposition);
    _mixin(H.UnmodifiableListBase, H.UnmodifiableListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(P._AsyncStreamController, P._AsyncStreamControllerDispatch);
    _mixin(P._SyncStreamController, P._SyncStreamControllerDispatch);
    _mixin(P._ListBase_Object_ListMixin, P.ListMixin);
    _mixin(P._SetBase_Object_SetMixin, P.SetMixin);
    _mixin(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P._UnmodifiableMapMixin);
    _mixin(W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.CssStyleDeclarationBase);
    _mixin(W._DomRectList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._DomRectList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._DomStringList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._DomStringList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._FileList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._FileList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._MidiInputMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._MidiOutputMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._MimeTypeArray_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._PluginArray_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._PluginArray_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._RtcStatsReport_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._SourceBufferList_EventTarget_ListMixin, P.ListMixin);
    _mixin(W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._SpeechGrammarList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._Storage_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._TextTrackCueList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._TextTrackList_EventTarget_ListMixin, P.ListMixin);
    _mixin(W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._TouchList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__CssRuleList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__GamepadList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__SpeechRecognitionResultList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__StyleSheetList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._JsArray_JsObject_ListMixin, P.ListMixin);
    _mixin(P._LengthList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._LengthList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._NumberList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._NumberList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._StringList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._StringList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._TransformList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._TransformList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._AudioParamMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(P._SqlResultSetRowList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(T._ButtonDirective_RootFocusable_HasTabIndex, B.HasTabIndex);
    _mixin(G._MaterialPopupComponent_Object_PopupBase, L.PopupBase);
    _mixin(G._MaterialPopupComponent_Object_PopupBase_PopupEvents, L.PopupEvents);
    _mixin(G._MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement, Z.PopupHierarchyElement);
    _mixin(Q._DropdownButtonComponent_Object_FocusableMixin, O.FocusableMixin);
    _mixin(Q._DropdownButtonComponent_Object_FocusableMixin_MaterialButtonWrapper, U.MaterialButtonWrapper);
    _mixin(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase, M.MaterialDropdownBase);
    _mixin(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter, K.SelectionInputAdapter);
    _mixin(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper, U.MaterialButtonWrapper);
    _mixin(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin, F.TrackLayoutChangesMixin);
    _mixin(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin, R.KeyboardHandlerMixin);
    _mixin(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin, M.ActivateItemOnKeyPressMixin);
    _mixin(M._MaterialDropdownSelectComponent_MaterialSelectBase_MaterialDropdownBase_SelectionInputAdapter_MaterialButtonWrapper_TrackLayoutChangesMixin_KeyboardHandlerMixin_ActivateItemOnKeyPressMixin_ShiftClickSelectionMixin, X.ShiftClickSelectionMixin);
    _mixin(Z.__MultiSelectionModelImpl_Observable_SelectionChangeNotifier, Z.SelectionChangeNotifier);
    _mixin(Z.__MultiSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable, Z.CastIterable);
    _mixin(Z.__SingleSelectionModelImpl_Observable_SelectionChangeNotifier, Z.SelectionChangeNotifier);
    _mixin(Z.__SingleSelectionModelImpl_Observable_SelectionChangeNotifier_CastIterable, Z.CastIterable);
    _mixin(E._ZonedStream_Stream__ZoneRunner, E._ZoneRunner);
    _mixin(Z._SkawaNavItemComponent_MaterialButtonBase_TextOnlyMixin, E.TextOnlyMixin);
    _mixin(E._SkawaSidebarItemComponent_Object_TextOnlyMixin, E.TextOnlyMixin);
    _mixin(T._GridTileDirective_Object_DomTransformReposition, A.DomTransformReposition);
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.BodyElement_methods = W.BodyElement.prototype;
    C.CssStyleDeclaration_methods = W.CssStyleDeclaration.prototype;
    C.DivElement_methods = W.DivElement.prototype;
    C.HtmlDocument_methods = W.HtmlDocument.prototype;
    C.Interceptor_methods = J.Interceptor.prototype;
    C.JSArray_methods = J.JSArray.prototype;
    C.JSBool_methods = J.JSBool.prototype;
    C.JSDouble_methods = J.JSDouble.prototype;
    C.JSInt_methods = J.JSInt.prototype;
    C.JSNull_methods = J.JSNull.prototype;
    C.JSNumber_methods = J.JSNumber.prototype;
    C.JSString_methods = J.JSString.prototype;
    C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    C.NativeUint8List_methods = H.NativeUint8List.prototype;
    C.NodeList_methods = W.NodeList.prototype;
    C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    C.Window_methods = W.Window.prototype;
    C.AfterCustomAlignment_After = new K.AfterCustomAlignment("After");
    C.Alignment_Center = new K.Alignment("Center");
    C.Alignment_End = new K.Alignment("End");
    C.Alignment_Start = new K.Alignment("Start");
    C.BeforeCustomAlignment_Before = new K.BeforeCustomAlignment("Before");
    C.C_BlockTagBlockHtmlSyntax = new K.BlockTagBlockHtmlSyntax();
    C.C_BlockquoteSyntax = new K.BlockquoteSyntax();
    C.C_Box = new S.Box();
    C.C_Clock = new V.Clock();
    C.C_CodeBlockSyntax = new K.CodeBlockSyntax();
    C.C_DefaultEquality = new U.DefaultEquality([P.Null]);
    C.C_DomSanitizationServiceImpl = new R.DomSanitizationServiceImpl();
    C.C_EmptyBlockSyntax = new K.EmptyBlockSyntax();
    C.C_EmptyIterator = new H.EmptyIterator([P.Null]);
    C.C_FencedCodeBlockSyntax = new K.FencedCodeBlockSyntax();
    C.C_HeaderSyntax = new K.HeaderSyntax();
    C.C_HorizontalRuleSyntax = new K.HorizontalRuleSyntax();
    C.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    C.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    C.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    C.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    C.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    C.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    C.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    C.C_JS_CONST3 = function(hooks) { return hooks; }
;
    C.C_ListEquality = new U.ListEquality([Y.ChangeRecord]);
    C.C_ListEquality0 = new U.ListEquality([null]);
    C.C_Object = new P.Object();
    C.C_OrderedListSyntax = new K.OrderedListSyntax();
    C.C_OtherTagBlockHtmlSyntax = new K.OtherTagBlockHtmlSyntax();
    C.C_OutOfMemoryError = new P.OutOfMemoryError();
    C.C_ParagraphSyntax = new K.ParagraphSyntax();
    C.C_SetextHeaderSyntax = new K.SetextHeaderSyntax();
    C.C_UnorderedListSyntax = new K.UnorderedListSyntax();
    C.C_Utf8Codec = new P.Utf8Codec();
    C.C_Utf8Encoder = new P.Utf8Encoder();
    C.C__DelayedDone = new P._DelayedDone();
    C.Visibility_None_display_none = new L.Visibility("None", "display", "none");
    C.C__ImmutableOverlayState = new Z._ImmutableOverlayState();
    C.C__JSRandom = new P._JSRandom();
    C.C__NoopDisposable = new R._NoopDisposable();
    C.C__RootZone = new P._RootZone();
    C.ComponentFactory_Ohe = new D.ComponentFactory("first-down-percent", U.first_down_percent_template__viewFactory_FirstDownPercentComponentHost0$closure(), [L.FirstDownPercentComponent]);
    C.ComponentFactory_iyo = new D.ComponentFactory("app-cmp", V.app_component_template__viewFactory_AppComponentHost0$closure(), [Q.AppComponent]);
    C.DomServiceState_0 = new F.DomServiceState("DomServiceState.Idle");
    C.DomServiceState_1 = new F.DomServiceState("DomServiceState.Writing");
    C.DomServiceState_2 = new F.DomServiceState("DomServiceState.Reading");
    C.Duration_0 = new P.Duration(0);
    C.Duration_100000 = new P.Duration(100000);
    C.Duration_150000 = new P.Duration(150000);
    C.Duration_500000 = new P.Duration(500000);
    C.EmptyInjector_null = new R.EmptyInjector(null);
    C.HtmlEscapeMode_0 = new P.HtmlEscapeMode("attribute", true, true, false, false);
    C.HtmlEscape_LJp = new P.HtmlEscape(C.HtmlEscapeMode_0);
    C.HtmlEscapeMode_2oY = new P.HtmlEscapeMode("element", true, false, false, false);
    C.HtmlEscape_uMl = new P.HtmlEscape(C.HtmlEscapeMode_2oY);
    C.Icon_check_box = new L.Icon("check_box");
    C.Icon_check_box_outline_blank = new L.Icon("check_box_outline_blank");
    C.List_2Zi = H.setRuntimeTypeInfo(makeConstList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::autofocus", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), [P.String]);
    C.List_3_4_6_8 = H.setRuntimeTypeInfo(makeConstList([3, 4, 6, 8]), [P.int]);
    C.Rectangle_0_0_0_0 = new P.Rectangle(0, 0, 0, 0, [P.num]);
    C.List_4YB = H.setRuntimeTypeInfo(makeConstList([C.Rectangle_0_0_0_0]), [[P.Rectangle, P.num]]);
    C.List_CX7 = H.setRuntimeTypeInfo(makeConstList(["arrow_back", "arrow_forward", "chevron_left", "chevron_right", "navigate_before", "navigate_next", "last_page", "first_page", "open_in_new", "star_half", "exit_to_app"]), [P.String]);
    C.RelativePosition_7h9 = new K.RelativePosition(C.Alignment_Start, C.Alignment_Start, "top center");
    C.RelativePosition_m3m = new K.RelativePosition(C.Alignment_End, C.Alignment_Start, "top right");
    C.RelativePosition_YbV = new K.RelativePosition(C.Alignment_Start, C.Alignment_Start, "top left");
    C.RelativePosition_G4S = new K.RelativePosition(C.Alignment_Start, C.Alignment_End, "bottom center");
    C.RelativePosition_V2g = new K.RelativePosition(C.Alignment_End, C.Alignment_End, "bottom right");
    C.RelativePosition_aJ0 = new K.RelativePosition(C.Alignment_Start, C.Alignment_End, "bottom left");
    C.List_WrT = H.setRuntimeTypeInfo(makeConstList([C.RelativePosition_7h9, C.RelativePosition_m3m, C.RelativePosition_YbV, C.RelativePosition_G4S, C.RelativePosition_V2g, C.RelativePosition_aJ0]), [K.RelativePosition]);
    C.RelativePosition_mC8 = new K.RelativePosition(C.Alignment_Center, C.Alignment_Start, "top center");
    C.RelativePosition_WjX = new K.RelativePosition(C.Alignment_Center, C.Alignment_End, "bottom center");
    C.List_adS = H.setRuntimeTypeInfo(makeConstList([C.RelativePosition_YbV, C.RelativePosition_m3m, C.RelativePosition_aJ0, C.RelativePosition_V2g, C.RelativePosition_mC8, C.RelativePosition_WjX]), [K.RelativePosition]);
    C.List_ego = H.setRuntimeTypeInfo(makeConstList(["HEAD", "AREA", "BASE", "BASEFONT", "BR", "COL", "COLGROUP", "EMBED", "FRAME", "FRAMESET", "HR", "IMAGE", "IMG", "INPUT", "ISINDEX", "LINK", "META", "PARAM", "SOURCE", "STYLE", "TITLE", "WBR"]), [P.String]);
    C.List_empty2 = H.setRuntimeTypeInfo(makeConstList([]), [P.Null]);
    C.List_empty = H.setRuntimeTypeInfo(makeConstList([]), [P.Object]);
    C.List_empty1 = H.setRuntimeTypeInfo(makeConstList([]), [P.String]);
    C.List_empty0 = makeConstList([]);
    C.List_gnE = H.setRuntimeTypeInfo(makeConstList([0, 0, 65498, 45055, 65535, 34815, 65534, 18431]), [P.int]);
    C.List_huV = H.setRuntimeTypeInfo(makeConstList(["auto", "x-small", "small", "medium", "large", "x-large"]), [P.String]);
    C.List_wSV = H.setRuntimeTypeInfo(makeConstList(["bind", "if", "ref", "repeat", "syntax"]), [P.String]);
    C.List_yrN = H.setRuntimeTypeInfo(makeConstList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), [P.String]);
    C.List_activeProgress = H.setRuntimeTypeInfo(makeConstList(["activeProgress"]), [P.String]);
    C.Map_K6aNe = new H.ConstantStringMap(1, {activeProgress: 20}, C.List_activeProgress, [P.String, P.Object]);
    C.List_activeProgress_secondaryProgress = H.setRuntimeTypeInfo(makeConstList(["activeProgress", "secondaryProgress"]), [P.String]);
    C.Map_MY6TA = new H.ConstantStringMap(2, {activeProgress: 5, secondaryProgress: 25}, C.List_activeProgress_secondaryProgress, [P.String, P.Object]);
    C.Map_empty0 = new H.ConstantStringMap(0, {}, C.List_empty1, [P.String, P.Object]);
    C.List_empty3 = H.setRuntimeTypeInfo(makeConstList([]), [P.Symbol0]);
    C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty3, [P.Symbol0, null]);
    C.List_asc_desc = H.setRuntimeTypeInfo(makeConstList(["asc", "desc"]), [P.String]);
    C.SortDirection_0 = new S.SortDirection("SortDirection.asc");
    C.SortDirection_1 = new S.SortDirection("SortDirection.desc");
    C.Map_oWjV0 = new H.ConstantStringMap(2, {asc: C.SortDirection_0, desc: C.SortDirection_1}, C.List_asc_desc, [P.String, S.SortDirection]);
    C.List_yHw = H.setRuntimeTypeInfo(makeConstList(["bottom right", "bottom left", "center right", "center left", "top right", "top left"]), [P.String]);
    C.Map_yH4ig = new H.ConstantStringMap(6, {"bottom right": "bottom left", "bottom left": "bottom right", "center right": "center left", "center left": "center right", "top right": "top left", "top left": "top right"}, C.List_yHw, [P.String, P.String]);
    C.OpaqueToken_8qt = new S.OpaqueToken("third_party.dart_src.acx.material_datepicker.datepickerClock", [null]);
    C.OpaqueToken_APP_ID = new S.OpaqueToken("APP_ID", [P.String]);
    C.OpaqueToken_acxDarkTheme = new S.OpaqueToken("acxDarkTheme", [null]);
    C.OpaqueToken_defaultPopupPositions = new S.OpaqueToken("defaultPopupPositions", [[P.List, K.RelativePosition]]);
    C.OpaqueToken_isRtl = new S.OpaqueToken("isRtl", [null]);
    C.OpaqueToken_overlayContainer = new S.OpaqueToken("overlayContainer", [null]);
    C.OpaqueToken_overlayContainerName = new S.OpaqueToken("overlayContainerName", [null]);
    C.OpaqueToken_overlayContainerParent = new S.OpaqueToken("overlayContainerParent", [null]);
    C.OpaqueToken_overlayRepositionLoop = new S.OpaqueToken("overlayRepositionLoop", [null]);
    C.OpaqueToken_overlaySyncDom = new S.OpaqueToken("overlaySyncDom", [null]);
    C.OpaqueToken_overlayViewportBoundaries = new S.OpaqueToken("overlayViewportBoundaries", [null]);
    C.SelectableOption_0 = new E.SelectableOption("SelectableOption.Selectable");
    C.SelectableOption_2 = new E.SelectableOption("SelectableOption.Hidden");
    C.Symbol_autoDismiss = new H.Symbol("autoDismiss");
    C.Symbol_call = new H.Symbol("call");
    C.Symbol_constrainToViewport = new H.Symbol("constrainToViewport");
    C.Symbol_enforceSpaceConstraints = new H.Symbol("enforceSpaceConstraints");
    C.Symbol_isEmpty = new H.Symbol("isEmpty");
    C.Symbol_isNotEmpty = new H.Symbol("isNotEmpty");
    C.Symbol_keys = new H.Symbol("keys");
    C.Symbol_length = new H.Symbol("length");
    C.Symbol_matchMinSourceWidth = new H.Symbol("matchMinSourceWidth");
    C.Symbol_offsetX = new H.Symbol("offsetX");
    C.Symbol_offsetY = new H.Symbol("offsetY");
    C.Symbol_preferredPositions = new H.Symbol("preferredPositions");
    C.Symbol_source = new H.Symbol("source");
    C.Symbol_trackLayoutChanges = new H.Symbol("trackLayoutChanges");
    C.Symbol_values = new H.Symbol("values");
    C.TextDirection_ltr = new T.TextDirection("ltr");
    C.TextDirection_ltr0 = new T.TextDirection("ltr");
    C.TextDirection_rtl = new T.TextDirection("rtl");
    C.Type_ActivationHandler_Nm5 = H.createRuntimeType([Z.ActivationHandler,,]);
    C.Type_ActiveItemModel_69t = H.createRuntimeType([O.ActiveItemModel,,]);
    C.Type_AcxDarkTheme_Tng = H.createRuntimeType(F.AcxDarkTheme);
    C.Type_AcxImperativeViewUtils_Ucj = H.createRuntimeType(O.AcxImperativeViewUtils);
    C.Type_AppViewUtils_NWH = H.createRuntimeType(Q.AppViewUtils);
    C.Type_ApplicationRef_Aij = H.createRuntimeType(Y.ApplicationRef);
    C.Type_ButtonDirective_hH0 = H.createRuntimeType(T.ButtonDirective);
    C.Type_ChangeRecord_INA = H.createRuntimeType(Y.ChangeRecord);
    C.Type_Clock_MYz = H.createRuntimeType(V.Clock);
    C.Type_ComponentLoader_7xV = H.createRuntimeType(M.ComponentLoader);
    C.Type_DeferredContentAware_BCk = H.createRuntimeType(E.DeferredContentAware);
    C.Type_Disposer_k0p = H.createRuntimeType(R.Disposer);
    C.Type_Document_woc = H.createRuntimeType(W.Document);
    C.Type_DomPopupSourceFactory_gmZ = H.createRuntimeType(K.DomPopupSourceFactory);
    C.Type_DomRuler_2Vk = H.createRuntimeType(K.DomRuler);
    C.Type_DomSanitizationService_cKo = H.createRuntimeType(Z.DomSanitizationService);
    C.Type_DomService_2jN = H.createRuntimeType(F.DomService);
    C.Type_DropdownHandle_YMM = H.createRuntimeType(M.DropdownHandle);
    C.Type_EditorRenderer_wbs = H.createRuntimeType(Q.EditorRenderer);
    C.Type_ExceptionHandler_qBE = H.createRuntimeType(U.ExceptionHandler);
    C.Type_Focusable_adc = H.createRuntimeType(O.Focusable);
    C.Type_HasDisabled_qzc = H.createRuntimeType(U.HasDisabled);
    C.Type_HasRenderer_wsa = H.createRuntimeType([G.HasRenderer,,]);
    C.Type_HtmlDocument_RWm = H.createRuntimeType(W.HtmlDocument);
    C.Type_IdGenerator_yLN = H.createRuntimeType(R.IdGenerator);
    C.Type_Injector_aJC = H.createRuntimeType(M.Injector);
    C.Type_ManagedZone_s3L = H.createRuntimeType(V.ManagedZone);
    C.Type_MaterialButtonComponent_xw8 = H.createRuntimeType(B.MaterialButtonComponent);
    C.Type_MaterialPopupComponent_OpB = H.createRuntimeType(G.MaterialPopupComponent);
    C.Type_ModalComponent_Npb = H.createRuntimeType(D.ModalComponent);
    C.Type_Modal_OjC = H.createRuntimeType(D.Modal);
    C.Type_NgZone_6ty = H.createRuntimeType(Y.NgZone);
    C.Type_OverlayDomRenderService_qUY = H.createRuntimeType(K.OverlayDomRenderService);
    C.Type_OverlayService_4iH = H.createRuntimeType(X.OverlayService);
    C.Type_OverlayStyleConfig_rp8 = H.createRuntimeType(R.OverlayStyleConfig);
    C.Type_PopupHierarchy_7R9 = H.createRuntimeType(Z.PopupHierarchy);
    C.Type_PopupRef_AWk = H.createRuntimeType(V.PopupRef);
    C.Type_PopupSizeProvider_a5y = H.createRuntimeType(F.PopupSizeProvider);
    C.Type_PropertyChangeRecord_8EM = H.createRuntimeType([Y.PropertyChangeRecord,,]);
    C.Type_Qkw = H.createRuntimeType([M.MaterialDropdownSelectComponent,,]);
    C.Type_ReferenceDirective_i58 = H.createRuntimeType(F.ReferenceDirective);
    C.Type_SanitizationService_bRS = H.createRuntimeType(E.SanitizationService);
    C.Type_SelectionContainer_yzp = H.createRuntimeType([L.SelectionContainer,,]);
    C.Type_SelectionItem_uvp = H.createRuntimeType([L.SelectionItem,,]);
    C.Type_SkawaCardComponent_sYn = H.createRuntimeType(V.SkawaCardComponent);
    C.Type_SkawaCardHeaderComponent_2jN = H.createRuntimeType(V.SkawaCardHeaderComponent);
    C.Type_SkawaDataTableColComponent_tpI = H.createRuntimeType([G.SkawaDataTableColComponent, U.RowData]);
    C.Type_SkawaDataTableComponent_qdG = H.createRuntimeType([S.SkawaDataTableComponent, U.RowData]);
    C.Type_SkawaHexColorizePipe_cNQ = H.createRuntimeType(L.SkawaHexColorizePipe);
    C.Type_SlowComponentLoader_qxe = H.createRuntimeType(L.SlowComponentLoader);
    C.Type_SnackbarService_v1z = H.createRuntimeType(T.SnackbarService);
    C.Type_TestabilityRegistry_IMm = H.createRuntimeType(D.TestabilityRegistry);
    C.Type_Testability_h8g = H.createRuntimeType(D.Testability);
    C.Type_UnskippedInFooterPipe_ENo = H.createRuntimeType(S.UnskippedInFooterPipe);
    C.Type_Window_0H0 = H.createRuntimeType(W.Window);
    C.Type_ZIndexer_ViP = H.createRuntimeType(X.ZIndexer);
    C.Type_dynamic_0Rz = H.createRuntimeType(null);
    C.Type_gap = H.createRuntimeType(B.MaterialTemporaryDrawerComponent);
    C.Type_gkc = H.createRuntimeType(G.MaterialPersistentDrawerDirective);
    C.Type_iap = H.createRuntimeType([G.SkawaDataColRendererDirective, U.RowData]);
    C.ViewType_0 = new R.ViewType("ViewType.host");
    C.ViewType_1 = new R.ViewType("ViewType.component");
    C.ViewType_2 = new R.ViewType("ViewType.embedded");
    C.Visibility_Hidden_visibility_hidden = new L.Visibility("Hidden", "visibility", "hidden");
    C.Visibility_Visible_null_null = new L.Visibility("Visible", null, null);
    C._InteractionType_0 = new O._InteractionType("_InteractionType.mouse");
    C._InteractionType_1 = new O._InteractionType("_InteractionType.keyboard");
    C._InteractionType_2 = new O._InteractionType("_InteractionType.none");
    C._IterationMarker_null_2 = new P._IterationMarker(null, 2);
    C._ZoneFunction_3bB = new P._ZoneFunction(C.C__RootZone, P.async___rootCreatePeriodicTimer$closure(), [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1, args: [P.Timer]}]}]);
    C._ZoneFunction_7G2 = new P._ZoneFunction(C.C__RootZone, P.async___rootRegisterBinaryCallback$closure(), [P.Function]);
    C._ZoneFunction_Eeh = new P._ZoneFunction(C.C__RootZone, P.async___rootRegisterUnaryCallback$closure(), [P.Function]);
    C._ZoneFunction_NMc = new P._ZoneFunction(C.C__RootZone, P.async___rootHandleUncaughtError$closure(), [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]);
    C._ZoneFunction__RootZone__rootCreateTimer = new P._ZoneFunction(C.C__RootZone, P.async___rootCreateTimer$closure(), [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}]);
    C._ZoneFunction__RootZone__rootErrorCallback = new P._ZoneFunction(C.C__RootZone, P.async___rootErrorCallback$closure(), [{func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]);
    C._ZoneFunction__RootZone__rootFork = new P._ZoneFunction(C.C__RootZone, P.async___rootFork$closure(), [{func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map,,,]]}]);
    C._ZoneFunction__RootZone__rootPrint = new P._ZoneFunction(C.C__RootZone, P.async___rootPrint$closure(), [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}]);
    C._ZoneFunction__RootZone__rootRegisterCallback = new P._ZoneFunction(C.C__RootZone, P.async___rootRegisterCallback$closure(), [P.Function]);
    C._ZoneFunction__RootZone__rootRun = new P._ZoneFunction(C.C__RootZone, P.async___rootRun$closure(), [P.Function]);
    C._ZoneFunction__RootZone__rootRunBinary = new P._ZoneFunction(C.C__RootZone, P.async___rootRunBinary$closure(), [P.Function]);
    C._ZoneFunction__RootZone__rootRunUnary = new P._ZoneFunction(C.C__RootZone, P.async___rootRunUnary$closure(), [P.Function]);
    C._ZoneFunction__RootZone__rootScheduleMicrotask = new P._ZoneFunction(C.C__RootZone, P.async___rootScheduleMicrotask$closure(), [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}]);
    C._ZoneSpecification_ALf = new P._ZoneSpecification(null, null, null, null, null, null, null, null, null, null, null, null, null);
  })();
  var init = {mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"}, mangledNames: {}, getTypeFromName: getGlobalFromName, metadata: [], types: [{func: 1, ret: P.Null}, {func: 1, ret: -1}, {func: 1, ret: -1, args: [,]}, {func: 1, ret: [S.AppView, -1], args: [[S.AppView, P.Object], P.int]}, {func: 1, ret: [S.AppView, -1], args: [[S.AppView,,], P.int]}, {func: 1, ret: -1, args: [W.KeyboardEvent]}, {func: 1, args: [,]}, {func: 1, ret: P.Null, args: [,]}, {func: 1, ret: -1, args: [P.Object]}, {func: 1, ret: P.String, args: [N.WrRowData]}, {func: 1, ret: P.Null, args: [-1]}, {func: 1, ret: P.Null, args: [,,]}, {func: 1, ret: P.bool, args: [P.String]}, {func: 1, ret: P.Null, args: [W.Event]}, {func: 1, ret: P.String, args: [P.String]}, {func: 1, ret: [P.Future,,]}, {func: 1, ret: -1, args: [P.Object], opt: [P.StackTrace]}, {func: 1, ret: P.String, args: [G.SchoolRowData]}, {func: 1, ret: -1, args: [P.String,,]}, {func: 1, ret: P.bool, args: [P.Object]}, {func: 1, ret: -1, args: [W.UIEvent]}, {func: 1, ret: -1, args: [W.MouseEvent]}, {func: 1, ret: P.Null, args: [P.Object, P.Object]}, {func: 1, ret: P.String, args: [P.int]}, {func: 1, ret: P.Null, args: [W.MouseEvent]}, {func: 1, ret: -1, args: [{func: 1, ret: -1}]}, {func: 1, ret: P.String, args: [,]}, {func: 1, ret: P.Null, args: [P.bool]}, {func: 1, ret: P.Null, args: [N.KeyValueChangeRecord]}, {func: 1, ret: P.Null, args: [R.CollectionChangeRecord]}, {func: 1, ret: P.bool}, {func: 1, ret: P.bool, args: [[P.Rectangle, P.num], [P.Rectangle, P.num]]}, {func: 1, ret: [P.Stream, [P.Rectangle, P.num]], args: [W.HtmlElement], named: {track: P.bool}}, {func: 1, ret: P.int, args: [G.SchoolRowData, G.SchoolRowData]}, {func: 1, ret: P.String, args: [K.CarRowData]}, {func: 1, ret: P.bool, args: [, P.String]}, {func: 1, ret: -1, args: [W.FocusEvent]}, {func: 1, ret: P.bool, args: [W.NodeValidator]}, {func: 1, ret: P.bool, args: [W.Element, P.String, P.String, W._Html5NodeValidator]}, {func: 1, ret: -1, args: [W.Event]}, {func: 1, ret: P.bool, args: [R.InlineSyntax]}, {func: 1, ret: -1, args: [P.bool]}, {func: 1, ret: -1, args: [[P.Set, P.String]]}, {func: 1, ret: P.bool, args: [W.Node]}, {func: 1, ret: P.bool, args: [P.int]}, {func: 1, ret: P.bool, args: [K.BlockSyntax]}, {func: 1, ret: P.String, args: [U.Node0]}, {func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone,, P.StackTrace]}, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}, 1, 2]}, {func: 1, bounds: [P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}, 1]}, {func: 1, ret: Y.NgZone}, {func: 1, bounds: [P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}, {func: 1, ret: P.Null, args: [P.String,,]}, {func: 1, ret: M.Injector, opt: [M.Injector]}, {func: 1, ret: P.int, args: [P.int]}, {func: 1, ret: [P.Stream, [P.Rectangle, P.num]]}, {func: 1, ret: P.Null, args: [R.CollectionChangeRecord, P.int, P.int]}, {func: 1, ret: -1, args: [P.Function]}, {func: 1, ret: M.Injector}, {func: 1, ret: D.Testability}, {func: 1, ret: Q.AppViewUtils}, {func: 1, ret: Y.ApplicationRef}, {func: 1, ret: P.String}, {func: 1, ret: P.JsObject, args: [,]}, {func: 1, bounds: [P.Object], ret: 0, args: [{func: 1, ret: 0}]}, {func: 1, args: [W.Element], opt: [P.bool]}, {func: 1, ret: [P.List, P.Object]}, {func: 1, ret: [P.JsArray,,], args: [,]}, {func: 1, ret: U.JsTestability, args: [W.Element]}, {func: 1, ret: [P.List, U.JsTestability]}, {func: 1, ret: U.JsTestability, args: [D.Testability]}, {func: 1, ret: P.JsFunction, args: [,]}, {func: 1, ret: W.Element, args: [W.Node]}, {func: 1, ret: P.Null, args: [[D.ComponentRef,,]]}, {func: 1, ret: P.bool, args: [[P.Set, P.String]]}, {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool, P.String]}]}, {func: 1, args: [,,]}, {func: 1, ret: -1, args: [W.Node, W.Node]}, {func: 1, ret: -1, args: [-1]}, {func: 1, ret: P.Null, args: [[P.List, [P.Rectangle, P.num]]]}, {func: 1, ret: P.bool, args: [[P.Rectangle, P.num]]}, {func: 1, ret: P.Null, args: [W.DivElement]}, {func: 1, args: [W.Event]}, {func: 1, args: [P.CssClassSetImpl]}, {func: 1, ret: -1, args: [P.CssClassSetImpl]}, {func: 1, ret: -1, args: [[D.ComponentRef,,]]}, {func: 1, ret: W.CssClassSet, args: [W.Element]}, {func: 1, ret: P.bool, args: [P.Object, P.String]}, {func: 1, ret: P.num, args: [P.num,,]}, {func: 1, ret: P.Null, args: [P.Object]}, {func: 1, ret: [P.Future,,], args: [,]}, {func: 1, ret: -1, args: [P.String, P.String]}, {func: 1, ret: [P.Future,,], args: [Z.OverlayState, W.HtmlElement]}, {func: 1, ret: [P.Rectangle, P.num], args: [,]}, {func: 1, ret: [P.Rectangle, P.num], args: [-1]}, {func: 1, ret: P.Null, args: [W.DomException]}, {func: 1, ret: P.bool, args: [P.num, P.num]}, {func: 1, ret: R._RateLimitSink, args: [[P.EventSink,,]]}, {func: 1, ret: P.Null, args: [P.num]}, {func: 1, ret: -1, args: [P.num]}, {func: 1, ret: P.bool, args: [[P.Map, P.String,,]]}, {func: 1}, {func: 1, bounds: [P.Object], ret: [P.StreamSubscription, 0], args: [[P.StreamSubscription, 0]]}, {func: 1, ret: P.Null, args: [P.Symbol0,,]}, {func: 1, ret: P.bool, args: [,]}, {func: 1, ret: -1, args: [,], opt: [P.StackTrace]}, {func: 1, ret: -1, args: [K.ListItem]}, {func: 1, ret: P.bool, args: [P.RegExp]}, {func: 1, ret: -1, args: [, P.StackTrace]}, {func: 1, ret: S.LinkReference}, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}, {func: 1, ret: P.bool, args: [R.TagState]}, {func: 1, ret: P.Null, args: [P.String], opt: [P.String]}, {func: 1, ret: P.int, args: [P.int,,]}, {func: 1, ret: P.Null, args: [W.Element]}, {func: 1, ret: [P.Map, P.String,,], args: [,,]}, {func: 1, ret: [P._Future,,], args: [,]}, {func: 1, ret: P.Null, args: [,], opt: [P.StackTrace]}, {func: 1, ret: -1, opt: [P.Object]}, {func: 1, ret: P.String, args: [P.String, P.String]}, {func: 1, ret: -1, args: [[G.SkawaDataTableColComponent, U.RowData]]}, {func: 1, ret: P.bool, args: [G.SchoolRowData]}, {func: 1, ret: P.Null, args: [P.int,,]}, {func: 1, ret: P.Null, args: [Y.NgZoneError]}, {func: 1, ret: [D.ComponentFactory, L.FirstDownPercentComponent], args: [U.RowData]}, {func: 1, ret: P.Null, args: [[P.List, [Z.SelectionChangeRecord, [G.SkawaDataTableColComponent, N.WrRowData]]]]}, {func: 1, ret: P.bool, args: [[G.SkawaDataTableColComponent, N.WrRowData]]}, {func: 1, ret: [P.List, [S.SkawaDataTableComponent, U.RowData]], args: [T._ViewWrTableComponent1]}, {func: 1, ret: [P.List, [G.SkawaDataTableColComponent, N.WrRowData]], args: [T._ViewWrTableComponent2]}, {func: 1, ret: [P.List, [G.SkawaDataTableColComponent, U.RowData]], args: [[P.List, [G.SkawaDataTableColComponent, U.RowData]]]}, {func: 1, ret: P.bool, args: [[G.SkawaDataTableColComponent, U.RowData]]}, {func: 1, ret: S.SortDirection, args: [P.String]}, {func: 1, ret: P.Null, args: [T.SnackMessage]}, {func: 1, ret: P.Null, args: [, P.StackTrace]}, {func: 1, bounds: [P.Object], ret: {func: 1, ret: 0}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}, {func: 1, bounds: [P.Object, P.Object], ret: {func: 1, ret: 0, args: [1]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}]}, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: {func: 1, ret: 0, args: [1, 2]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}]}, {func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}, {func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1, args: [P.Timer]}]}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}, {func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map,,,]]}, {func: 1, ret: P.bool, args: [,,]}, {func: 1, ret: P.int, args: [,]}, {func: 1, ret: P.int, args: [P.Object]}, {func: 1, ret: P.bool, args: [P.Object, P.Object]}, {func: 1, ret: P.Null, args: [{func: 1, ret: -1}]}, {func: 1, args: [[P.Map,,,]], opt: [{func: 1, ret: -1, args: [P.Object]}]}, {func: 1, ret: P.Object, args: [,]}, {func: 1, bounds: [P.num], ret: 0, args: [0, 0]}, {func: 1, args: [P.String]}, {func: 1, ret: P.Object, args: [P.int,,]}, {func: 1, args: [, P.String]}, {func: 1, ret: P.Object, args: [P.Object]}, {func: 1, bounds: [P.Object], ret: {func: 1, args: [0]}, args: [{func: 1, args: [0]}, P.Duration]}, {func: 1, ret: P.DateTime}, {func: 1, ret: [S.AppView, Q.AppComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, L.FirstDownPercentComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.String, args: [[G.SkawaDataTableColComponent, N.WrRowData]]}], interceptorsByTag: null, leafTags: null};
  (function staticFields() {
    $.Closure_functionCounter = 0;
    $.BoundClosure_selfFieldNameCache = null;
    $.BoundClosure_receiverFieldNameCache = null;
    $._inTypeAssertion = false;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = C.C__RootZone;
    $._RootZone__rootDelegate = null;
    $._toStringVisiting = [];
    $.Expando__keyCount = 0;
    $.Element__parseDocument = null;
    $.Element__parseRange = null;
    $.Element__defaultValidator = null;
    $.Element__defaultSanitizer = null;
    $._Html5NodeValidator__attributeValidators = P.LinkedHashMap_LinkedHashMap$_empty(P.String, P.Function);
    $.Device__isOpera = null;
    $.Device__isIE = null;
    $.Device__isFirefox = null;
    $.Device__isWebKit = null;
    $.Device__cachedCssPrefix = null;
    $.NgClass__separator = null;
    $.ChangeDetectionHost__current = null;
    $.appViewUtils = null;
    $.ComponentStyles__nextUniqueId = 0;
    $.domRootRendererIsDirty = false;
    $.styles26 = ["material-drawer._ngcontent-%ID% material-list._ngcontent-%ID%{padding:0}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;align-items:center;color:rgba(0,0,0,0.54);display:flex}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label].disabled._ngcontent-%ID%{pointer-events:none}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label].disabled._ngcontent-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.38)}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label].disabled._ngcontent-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.38)}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%  .submenu-icon{transform:rotate(-90deg)}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% material-list-item._ngcontent-%ID%,material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID%{font-weight:500;height:48px;padding:0 16px}material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% material-list-item._ngcontent-%ID% material-icon._ngcontent-%ID%,material-drawer._ngcontent-%ID% material-list._ngcontent-%ID% [label]._ngcontent-%ID% material-icon._ngcontent-%ID%{color:rgba(0,0,0,0.54);margin-right:32px}material-drawer[persistent]._ngcontent-%ID%,material-drawer[permanent]._ngcontent-%ID%{width:256px}material-drawer[persistent]:not([end])._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent]:not([end])._ngcontent-%ID% ~ .material-content._ngcontent-%ID%,material-drawer[permanent]:not([end])._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[permanent]:not([end])._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{margin-left:256px}material-drawer[persistent][end]._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent][end]._ngcontent-%ID% ~ .material-content._ngcontent-%ID%,material-drawer[permanent][end]._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[permanent][end]._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{margin-right:256px}material-drawer[persistent].mat-drawer-collapsed:not([end])._ngcontent-%ID%{transform:translateX(-100%)}material-drawer[persistent].mat-drawer-collapsed:not([end])._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent].mat-drawer-collapsed:not([end])._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{margin-left:0}material-drawer[persistent].mat-drawer-collapsed[end]._ngcontent-%ID%{transform:translateX(100%)}material-drawer[persistent].mat-drawer-collapsed[end]._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent].mat-drawer-collapsed[end]._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{margin-right:0}material-drawer[persistent]._ngcontent-%ID%,material-drawer[permanent]._ngcontent-%ID%{background-color:#fff;bottom:0;box-sizing:border-box;display:flex;flex-direction:column;flex-wrap:nowrap;overflow:hidden;position:absolute;top:0;border-right:1px solid rgba(0,0,0,0.12);left:0}material-drawer[persistent][end]._ngcontent-%ID%,material-drawer[permanent][end]._ngcontent-%ID%{border-left:1px solid rgba(0,0,0,0.12);border-right:initial;left:initial;right:0}material-drawer[persistent]._ngcontent-%ID%{transition-duration:150ms;transition-property:transform,width;transition-timing-function:cubic-bezier(0.4,0,0.2,1)}material-drawer[persistent]._ngcontent-%ID% ~ material-content._ngcontent-%ID%,material-drawer[persistent]._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{transition-duration:150ms;transition-property:margin-left,margin-right;transition-timing-function:cubic-bezier(0.4,0,0.2,1)}material-content._ngcontent-%ID%,.material-content._ngcontent-%ID%{display:block;min-height:100%;position:relative;z-index:0}.material-header._ngcontent-%ID%{background-color:#3f51b5;border:0;box-sizing:border-box;color:#fff;display:flex;flex-direction:column;flex-shrink:0;flex-wrap:nowrap;height:64px;justify-content:flex-start;overflow:hidden;padding:0;position:relative;width:100%;z-index:1}.material-header.shadow._ngcontent-%ID%{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}.material-header._ngcontent-%ID% ~ material-drawer[permanent]._ngcontent-%ID%,.material-header._ngcontent-%ID% ~ material-drawer[persistent]._ngcontent-%ID%{top:64px}.material-header._ngcontent-%ID% ~ material-content._ngcontent-%ID%,.material-header._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{min-height:calc(100% - 64px)}.material-header.dense-header._ngcontent-%ID%{height:48px}.material-header.dense-header._ngcontent-%ID% .material-header-row._ngcontent-%ID%{height:48px}.material-header.dense-header._ngcontent-%ID% ~ material-drawer[permanent]._ngcontent-%ID%,.material-header.dense-header._ngcontent-%ID% ~ material-drawer[persistent]._ngcontent-%ID%{top:48px}.material-header.dense-header._ngcontent-%ID% ~ material-content._ngcontent-%ID%,.material-header.dense-header._ngcontent-%ID% ~ .material-content._ngcontent-%ID%{min-height:calc(100% - 48px)}.material-header-row._ngcontent-%ID%{align-items:center;align-self:stretch;box-sizing:border-box;display:flex;flex-direction:row;flex-shrink:0;flex-wrap:nowrap;height:64px;margin:0 12px;position:relative}@media (max-width:599px){.material-header-row._ngcontent-%ID%{margin:0 8px}}.material-header-row._ngcontent-%ID% > .material-drawer-button._ngcontent-%ID%{cursor:pointer}.material-header-row._ngcontent-%ID% .material-header-title._ngcontent-%ID%{bottom:0;box-sizing:border-box;display:block;height:20px;left:80px;line-height:1;margin-bottom:auto;margin-top:auto;position:absolute;top:0;font-size:20px;font-weight:500}.material-header-row._ngcontent-%ID% .material-spacer._ngcontent-%ID%{flex-grow:1}.material-header-row._ngcontent-%ID% material-button._ngcontent-%ID%{margin:0 4px}@media (max-width:599px){.material-header-row._ngcontent-%ID% material-button._ngcontent-%ID%{margin:0 0px}}.material-header-row._ngcontent-%ID% .material-navigation._ngcontent-%ID%{margin:0 12px}@media (max-width:599px){.material-header-row._ngcontent-%ID% .material-navigation._ngcontent-%ID%{margin:0 8px}}.material-header-row._ngcontent-%ID% > *._ngcontent-%ID%{flex-shrink:0}.mat-drawer-spacer._ngcontent-%ID%{height:56px}"];
    $.styles4 = ["._nghost-%ID%{bottom:0;left:0;position:absolute;right:0;top:0;background-color:transparent;overflow:hidden;pointer-events:none;z-index:1}._nghost-%ID%.mat-drawer-expanded{pointer-events:auto}._nghost-%ID%[overlay].mat-drawer-expanded{background-color:rgba(0,0,0,0.38);transition-duration:225ms}._nghost-%ID%[overlay]{background-color:transparent;transition:background-color 195ms cubic-bezier(0.4,0,0.2,1)}._nghost-%ID% > .drawer-content._ngcontent-%ID%{background-color:#fff;bottom:0;box-sizing:border-box;display:flex;flex-direction:column;flex-wrap:nowrap;overflow:hidden;position:absolute;top:0;box-shadow:none;transform:translateX(0);pointer-events:auto;transition-property:box-shadow,left,right,transform,width;transition-duration:195ms;transition-timing-function:cubic-bezier(0.4,0,0.6,1)}._nghost-%ID%.mat-drawer-expanded > .drawer-content._ngcontent-%ID%{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2);transition-duration:225ms;transition-timing-function:cubic-bezier(0,0,0.2,1)}._nghost-%ID%  > .drawer-content{left:-256px;width:256px}._nghost-%ID%.mat-drawer-expanded  > .drawer-content{transform:translateX(100%)}._nghost-%ID%[end]  > .drawer-content{left:initial;right:-256px}._nghost-%ID%[end].mat-drawer-expanded  > .drawer-content{transform:translateX(-100%)}"];
    $.ViewMaterialTemporaryDrawerComponent0__componentStyles = null;
    $.styles17 = ["[buttonDecorator]._ngcontent-%ID%{cursor:pointer}[buttonDecorator].is-disabled._ngcontent-%ID%{cursor:not-allowed}"];
    $.ViewDynamicComponent0__componentStyles = null;
    $.FrameworkStabilizers__idToFrameworkStabilizer = P.LinkedHashMap_LinkedHashMap$_empty(P.int, null);
    $.FrameworkStabilizers__nextId = 0;
    $.styles12 = ['._nghost-%ID%{display:inline-flex}._nghost-%ID%[light]{opacity:0.54}._nghost-%ID%[size=x-small]  i{font-size:12px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=small]  i{font-size:13px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=medium]  i{font-size:16px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=large]  i{font-size:18px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=x-large]  i{font-size:20px;height:1em;line-height:1em;width:1em}._nghost-%ID%[flip][dir=rtl] .glyph-i._ngcontent-%ID%,[dir=rtl] [flip]._nghost-%ID% .glyph-i._ngcontent-%ID%{transform:scaleX(-1)}._nghost-%ID%[baseline]{align-items:center}._nghost-%ID%[baseline]::before{content:"-";display:inline-block;width:0;visibility:hidden}._nghost-%ID%[baseline] .glyph-i._ngcontent-%ID%{margin-bottom:0.1em}'];
    $.ViewGlyphComponent0__componentStyles = null;
    $.ZIndexer__currentInstance = null;
    $.styles30 = ['._nghost-%ID%{font-size:14px;font-weight:500;text-transform:uppercase;user-select:none;background:transparent;border-radius:inherit;box-sizing:border-box;cursor:pointer;display:inline-block;letter-spacing:0.01em;line-height:normal;outline:none;position:relative;text-align:center}._nghost-%ID%.acx-theme-dark{color:#fff}._nghost-%ID%:not([icon]){margin:0 0.29em}._nghost-%ID%[dense]:not([icon]){height:32px;font-size:13px}._nghost-%ID%[compact]:not([icon]){padding:0 8px}._nghost-%ID%[disabled]{color:rgba(0,0,0,0.26);cursor:not-allowed}._nghost-%ID%[disabled].acx-theme-dark{color:rgba(255,255,255,0.3)}._nghost-%ID%[disabled] > *._ngcontent-%ID%{pointer-events:none}@media (hover:hover){._nghost-%ID%:not([disabled]):not([icon]):hover::after,._nghost-%ID%.is-focused::after{content:"";display:block;position:absolute;top:0;left:0;right:0;bottom:0;background-color:currentColor;opacity:0.12;border-radius:inherit;pointer-events:none}}._nghost-%ID%[raised][animated]{transition:box-shadow 0.28s cubic-bezier(0.4,0,0.2,1)}._nghost-%ID%[raised][elevation="1"]{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="2"]{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="3"]{box-shadow:0 6px 10px 0 rgba(0,0,0,0.14),0 1px 18px 0 rgba(0,0,0,0.12),0 3px 5px -1px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="4"]{box-shadow:0 8px 10px 1px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="5"]{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="6"]{box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2)}._nghost-%ID%[raised].acx-theme-dark{background-color:#4285f4}._nghost-%ID%[raised][disabled]{background:rgba(0,0,0,0.12);box-shadow:none}._nghost-%ID%[raised][disabled].acx-theme-dark{background:rgba(255,255,255,0.12)}._nghost-%ID%[raised].highlighted:not([disabled]){background-color:#4285f4;color:#fff}._nghost-%ID%[no-ink] material-ripple._ngcontent-%ID%{display:none}._nghost-%ID%[clear-size]{margin:0}._nghost-%ID% .content._ngcontent-%ID%{display:inline-flex;align-items:center}._nghost-%ID%:not([icon]){border-radius:2px;min-width:64px}._nghost-%ID%:not([icon]) .content._ngcontent-%ID%{padding:0.7em 0.57em}._nghost-%ID%[icon]{border-radius:50%}._nghost-%ID%[icon] .content._ngcontent-%ID%{padding:8px}._nghost-%ID%[clear-size]{min-width:0}'];
    $.ViewMaterialButtonComponent0__componentStyles = null;
    $.styles13 = ['._nghost-%ID%{align-items:center;cursor:pointer;display:inline-flex;margin:8px}._nghost-%ID%[no-ink] material-ripple._ngcontent-%ID%{display:none}._nghost-%ID%:focus{outline:none}._nghost-%ID%.disabled{cursor:not-allowed}._nghost-%ID%.disabled > .content._ngcontent-%ID%{color:rgba(0,0,0,0.54)}._nghost-%ID%.disabled > .icon-container._ngcontent-%ID% > .icon._ngcontent-%ID%{color:rgba(0,0,0,0.26)}.icon-container._ngcontent-%ID%{display:flex;position:relative}.icon-container.focus._ngcontent-%ID%::after,.icon-container._ngcontent-%ID% .ripple._ngcontent-%ID%{color:#9e9e9e;border-radius:20px;height:40px;left:-8px;position:absolute;top:-8px;width:40px}.icon-container.focus._ngcontent-%ID%::after{content:"";display:block;background-color:currentColor;opacity:0.12}.icon._ngcontent-%ID%{opacity:0.54}.icon.filled._ngcontent-%ID%{color:#4285f4;opacity:0.87}.content._ngcontent-%ID%{align-items:center;flex-grow:1;flex-shrink:1;flex-basis:auto;margin-left:8px;overflow-x:hidden;padding:1px 0;text-overflow:ellipsis}'];
    $.ViewMaterialCheckboxComponent0__componentStyles = null;
    $.styles29 = ['._nghost-%ID%{display:inline-flex}._nghost-%ID%.flip  .material-icon-i{transform:scaleX(-1)}._nghost-%ID%[light]{opacity:0.54}._nghost-%ID% .material-icon-i._ngcontent-%ID%{font-size:24px}._nghost-%ID%[size=x-small] .material-icon-i._ngcontent-%ID%{font-size:12px}._nghost-%ID%[size=small] .material-icon-i._ngcontent-%ID%{font-size:13px}._nghost-%ID%[size=medium] .material-icon-i._ngcontent-%ID%{font-size:16px}._nghost-%ID%[size=large] .material-icon-i._ngcontent-%ID%{font-size:18px}._nghost-%ID%[size=x-large] .material-icon-i._ngcontent-%ID%{font-size:20px}.material-icon-i._ngcontent-%ID%{height:1em;line-height:1;width:1em}._nghost-%ID%[flip][dir=rtl] .material-icon-i._ngcontent-%ID%,[dir=rtl] [flip]._nghost-%ID% .material-icon-i._ngcontent-%ID%{transform:scaleX(-1)}._nghost-%ID%[baseline]{align-items:center}._nghost-%ID%[baseline]::before{content:"-";display:inline-block;width:0;visibility:hidden}._nghost-%ID%[baseline] .material-icon-i._ngcontent-%ID%{margin-bottom:0.1em}'];
    $.ViewMaterialIconComponent0__componentStyles = null;
    $.styles15 = ["._nghost-%ID%{display:block;background:#fff;margin:0;padding:16px 0;white-space:nowrap}._nghost-%ID%[size=x-small]{width:96px}._nghost-%ID%[size=small]{width:192px}._nghost-%ID%[size=medium]{width:320px}._nghost-%ID%[size=large]{width:384px}._nghost-%ID%[size=x-large]{width:448px}._nghost-%ID%[min-size=x-small]{min-width:96px}._nghost-%ID%[min-size=small]{min-width:192px}._nghost-%ID%[min-size=medium]{min-width:320px}._nghost-%ID%[min-size=large]{min-width:384px}._nghost-%ID%[min-size=x-large]{min-width:448px}._nghost-%ID%  [group]:not(.empty) + *:not(script):not(template):not(.empty),._nghost-%ID%  :not([group]):not(script):not(template):not(.empty) + [group]:not(.empty){border-top:1px solid #e0e0e0;margin-top:7px;padding-top:8px}._nghost-%ID%  [group]:not(.empty) + *:not(script):not(template):not(.empty){box-shadow:inset 0 8px 0 0 #fff}._nghost-%ID%  [separator=present]{background:#e0e0e0;cursor:default;height:1px;margin:8px 0}._nghost-%ID%  [label]{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;color:#9e9e9e;font-size:12px;font-weight:400}._nghost-%ID%  [label].disabled{pointer-events:none}._nghost-%ID%  [label]  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}._nghost-%ID%  [label].disabled  .material-list-item-primary{color:rgba(0,0,0,0.38)}._nghost-%ID%  [label]  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}._nghost-%ID%  [label].disabled  .material-list-item-secondary{color:rgba(0,0,0,0.38)}._nghost-%ID%  [label]  .submenu-icon{transform:rotate(-90deg)}._nghost-%ID%[dir=rtl]  [label]  .submenu-icon,[dir=rtl] ._nghost-%ID%  [label]  .submenu-icon{transform:rotate(90deg)}"];
    $.ViewMaterialListComponent0__componentStyles = null;
    $.styles16 = ['.shadow._ngcontent-%ID%{background:#fff;border-radius:2px;transition:transform 150ms cubic-bezier(0.4,0,1,1);transform-origin:top left;transform:scale3d(0,0,1);will-change:transform}.shadow[animated]._ngcontent-%ID%{transition:box-shadow 0.28s cubic-bezier(0.4,0,0.2,1)}.shadow[elevation="1"]._ngcontent-%ID%{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.shadow[elevation="2"]._ngcontent-%ID%{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}.shadow[elevation="3"]._ngcontent-%ID%{box-shadow:0 6px 10px 0 rgba(0,0,0,0.14),0 1px 18px 0 rgba(0,0,0,0.12),0 3px 5px -1px rgba(0,0,0,0.2)}.shadow[elevation="4"]._ngcontent-%ID%{box-shadow:0 8px 10px 1px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2)}.shadow[elevation="5"]._ngcontent-%ID%{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2)}.shadow[elevation="6"]._ngcontent-%ID%{box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2)}.shadow[slide=x]._ngcontent-%ID%{transform:scale3d(0,1,1)}.shadow[slide=y]._ngcontent-%ID%{transform:scale3d(1,0,1)}.shadow.visible._ngcontent-%ID%{transition:transform 150ms cubic-bezier(0,0,0.2,1);transform:scale3d(1,1,1)}.shadow.ink._ngcontent-%ID%{background:#616161;color:#fff}.shadow.full-width._ngcontent-%ID%{flex-grow:1;flex-shrink:1;flex-basis:auto}.shadow._ngcontent-%ID% .popup._ngcontent-%ID%{border-radius:2px;flex-grow:1;flex-shrink:1;flex-basis:auto;overflow:hidden;transition:inherit}.shadow.visible._ngcontent-%ID% .popup._ngcontent-%ID%{visibility:initial}.shadow._ngcontent-%ID% header._ngcontent-%ID%,.shadow._ngcontent-%ID% footer._ngcontent-%ID%{display:block}.shadow._ngcontent-%ID% .main._ngcontent-%ID%{display:flex;flex:1;flex-direction:column;min-width:inherit;max-height:inherit;max-width:inherit;overflow:auto;overscroll-behavior:contain}._nghost-%ID%{justify-content:flex-start;align-items:flex-start}._nghost-%ID%  ::-webkit-scrollbar{background-color:rgba(0,0,0,0);height:4px;width:4px}._nghost-%ID%  ::-webkit-scrollbar:hover{background-color:rgba(0,0,0,0.12)}._nghost-%ID%  ::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,0.26);min-height:48px;min-width:48px}._nghost-%ID%  ::-webkit-scrollbar-thumb:hover{background-color:#4285f4}._nghost-%ID%  ::-webkit-scrollbar-button{width:0;height:0}.material-popup-content._ngcontent-%ID%{min-width:inherit;min-height:inherit;max-width:inherit;max-height:inherit;position:relative;display:flex;flex-direction:column}.popup-wrapper._ngcontent-%ID%{width:100%}'];
    $.ViewMaterialPopupComponent0__componentStyles = null;
    $.styles21 = ["._nghost-%ID%{display:inline-block;width:100%;height:4px}.progress-container._ngcontent-%ID%{position:relative;height:100%;background-color:#e0e0e0;overflow:hidden}._nghost-%ID%[dir=rtl] .progress-container._ngcontent-%ID%,[dir=rtl] ._nghost-%ID% .progress-container._ngcontent-%ID%{transform:scaleX(-1)}.progress-container.indeterminate._ngcontent-%ID%{background-color:#c6dafc}.progress-container.indeterminate._ngcontent-%ID% > .secondary-progress._ngcontent-%ID%{background-color:#4285f4}.active-progress._ngcontent-%ID%,.secondary-progress._ngcontent-%ID%{transform-origin:left center;transform:scaleX(0);position:absolute;top:0;transition:transform 218ms cubic-bezier(0.4,0,0.2,1);right:0;bottom:0;left:0;will-change:transform}.active-progress._ngcontent-%ID%{background-color:#4285f4}.secondary-progress._ngcontent-%ID%{background-color:#a1c2fa}.progress-container.indeterminate.fallback._ngcontent-%ID% > .active-progress._ngcontent-%ID%{animation-name:indeterminate-active-progress;animation-duration:2000ms;animation-iteration-count:infinite;animation-timing-function:linear}.progress-container.indeterminate.fallback._ngcontent-%ID% > .secondary-progress._ngcontent-%ID%{animation-name:indeterminate-secondary-progress;animation-duration:2000ms;animation-iteration-count:infinite;animation-timing-function:linear}@keyframes indeterminate-active-progress{0%{transform:translate(0%) scaleX(0)}25%{transform:translate(0%) scaleX(0.5)}50%{transform:translate(25%) scaleX(0.75)}75%{transform:translate(100%) scaleX(0)}100%{transform:translate(100%) scaleX(0)}}@keyframes indeterminate-secondary-progress{0%{transform:translate(0%) scaleX(0)}60%{transform:translate(0%) scaleX(0)}80%{transform:translate(0%) scaleX(0.6)}100%{transform:translate(100%) scaleX(0.1)}}"];
    $.ViewMaterialProgressComponent0__componentStyles = null;
    $._numRipples = 0;
    $._rippleIndex = 0;
    $._ripplePool = null;
    $._rippleTemplate = null;
    $._opacityTiming = null;
    $._opacityKeyframes = null;
    $._transformTiming = null;
    $.styles2 = ["material-ripple {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: inherit;\n  contain: strict;\n  transform: translateX(0);\n}\n\n.__acx-ripple {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n  background-color: currentColor;\n  border-radius: 50%;\n  pointer-events: none;\n  will-change: opacity, transform;\n  opacity: 0;\n}\n.__acx-ripple.fallback {\n  animation: __acx-ripple 300ms linear;\n  transform: translateZ(0);\n}\n\n@keyframes __acx-ripple {\n  from {\n    opacity: 0;\n    transform: translateZ(0) scale(0.125);\n  }\n  25%, 50% {\n    opacity: 0.16;\n  }\n  to {\n    opacity: 0;\n    transform: translateZ(0) scale(4);\n  }\n}\n"];
    $.ViewMaterialRippleComponent0__componentStyles = null;
    $.styles18 = ["._nghost-%ID%{display:inline-flex;flex:1;flex-direction:column;max-width:100%;min-height:24px}.button._ngcontent-%ID%{display:flex;align-items:center;justify-content:space-between;flex:1 0 auto;line-height:initial;overflow:hidden}.button.border._ngcontent-%ID%{border-bottom:1px solid rgba(0,0,0,0.12);padding-bottom:8px}.button.border.is-disabled._ngcontent-%ID%{border-bottom-style:dotted}.button.border.invalid._ngcontent-%ID%{border-bottom-color:#c53929}.button.is-disabled._ngcontent-%ID%{color:rgba(0,0,0,0.38)}.button._ngcontent-%ID% .button-text._ngcontent-%ID%{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.error-text._ngcontent-%ID%{color:#d34336;font-size:12px}.icon._ngcontent-%ID%{height:12px;opacity:0.54;margin-top:-12px;margin-bottom:-12px}.icon._ngcontent-%ID%  i.glyph-i{position:relative;top:-6px}"];
    $.ViewDropdownButtonComponent0__componentStyles = null;
    $.ActivateItemOnKeyPressMixin__charCodeMap = P.LinkedHashMap_LinkedHashMap$_empty(P.int, P.String);
    $.styles20 = ["._nghost-%ID%{display:inline-flex}.options-list._ngcontent-%ID%{display:flex;flex-direction:column;flex:1 0 auto;outline:none}.options-list:focus._ngcontent-%ID%{border-bottom:solid 1px transparent;padding-bottom:15px}.options-list._ngcontent-%ID% .options-wrapper._ngcontent-%ID%{flex-direction:column}.options-list._ngcontent-%ID% .options-wrapper._ngcontent-%ID% [label]._ngcontent-%ID%{padding:0 16px}"];
    $.ViewMaterialDropdownSelectComponent0__componentStyles = null;
    $.styles14 = ["._nghost-%ID%{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;padding:0 16px;display:flex;align-items:center;transition:background;color:rgba(0,0,0,0.87);cursor:pointer}._nghost-%ID%.disabled{pointer-events:none}._nghost-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}._nghost-%ID%.disabled  .material-list-item-primary{color:rgba(0,0,0,0.38)}._nghost-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}._nghost-%ID%.disabled  .material-list-item-secondary{color:rgba(0,0,0,0.38)}._nghost-%ID%  .submenu-icon{transform:rotate(-90deg)}._nghost-%ID%:hover,._nghost-%ID%.active{background:whitesmoke}._nghost-%ID%:not(.multiselect).selected{background:#eee}._nghost-%ID% .selected-accent._ngcontent-%ID%{position:absolute;top:0;left:0;bottom:0;width:3px;background:#9e9e9e}._nghost-%ID% material-checkbox._ngcontent-%ID%{margin:0}._nghost-%ID%.disabled{color:rgba(0,0,0,0.38);cursor:default}._nghost-%ID%.hidden{display:none}.check-container._ngcontent-%ID%{display:inline-block;width:40px}.dynamic-item._ngcontent-%ID%{flex-grow:1;width:100%}._nghost-%ID%[dir=rtl]  .submenu-icon,[dir=rtl] ._nghost-%ID%  .submenu-icon{transform:rotate(90deg)}"];
    $.ViewMaterialSelectDropdownItemComponent0__componentStyles = null;
    $._singletonService = null;
    $.enableNewTriggerLogic = null;
    $.ViewSkawaCkeditorComponent0__componentStyles = null;
    $.styles6 = ["@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{font-size:12px;font-weight:400;line-height:1;letter-spacing:0;color:rgba(0,0,0,.87);display:flex;align-items:center;height:40px;box-shadow:-4px 0 0 0 lightgray,0 1px 3px rgba(0,0,0,.12);border-radius:2px;border:1px solid #e7e7e7;border-left:0;margin-bottom:16px;background-color:#fff}._nghost-%ID% .hide-without-icon._ngcontent-%ID%{display:none}._nghost-%ID% .without-url._ngcontent-%ID%{cursor:default}._nghost-%ID% .info-text._ngcontent-%ID%{display:inline-flex}._nghost-%ID% .info-text.without-icon._ngcontent-%ID%{padding-left:16px}._nghost-%ID% .info-text._ngcontent-%ID% .ws-truncate-fix._ngcontent-%ID%{display:inline-block}._nghost-%ID%  material-button{display:inline-flex}"];
    $.ViewSkawaInfobarComponent0__componentStyles = null;
    $.styles5 = ['._nghost-%ID%{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;line-height:1.5;color:#333;font-size:16px;word-wrap:break-word}._nghost-%ID% a._ngcontent-%ID%{background-color:transparent;-webkit-text-decoration-skip:objects}._nghost-%ID% a:active._ngcontent-%ID%,._nghost-%ID% a:hover._ngcontent-%ID%{outline-width:0}._nghost-%ID% strong._ngcontent-%ID%{font-weight:inherit}._nghost-%ID% strong._ngcontent-%ID%{font-weight:bolder}._nghost-%ID% em._ngcontent-%ID%{font-style:italic}._nghost-%ID% h1._ngcontent-%ID%{font-size:2em;margin:.67em 0}._nghost-%ID% img._ngcontent-%ID%{border-style:none}._nghost-%ID% svg:not(:root)._ngcontent-%ID%{overflow:hidden}._nghost-%ID% code._ngcontent-%ID%,._nghost-%ID% kbd._ngcontent-%ID%,._nghost-%ID% pre._ngcontent-%ID%{font-family:monospace,monospace;font-size:1em}._nghost-%ID% hr._ngcontent-%ID%{box-sizing:content-box;height:0;overflow:visible}._nghost-%ID% input._ngcontent-%ID%{font:inherit;margin:0}._nghost-%ID% input._ngcontent-%ID%{overflow:visible}._nghost-%ID% [type=checkbox]._ngcontent-%ID%{box-sizing:border-box;padding:0}._nghost-%ID% *._ngcontent-%ID%{box-sizing:border-box}._nghost-%ID% input._ngcontent-%ID%{font-family:inherit;font-size:inherit;line-height:inherit}._nghost-%ID% a._ngcontent-%ID%{color:#4078c0;text-decoration:none}._nghost-%ID% a:hover._ngcontent-%ID%,._nghost-%ID% a:active._ngcontent-%ID%{text-decoration:underline}._nghost-%ID% strong._ngcontent-%ID%{font-weight:600}._nghost-%ID% hr._ngcontent-%ID%{height:0;margin:15px 0;overflow:hidden;background:transparent;border:0;border-bottom:1px solid #ddd}._nghost-%ID% hr._ngcontent-%ID%::before{display:table;content:""}._nghost-%ID% hr._ngcontent-%ID%::after{display:table;clear:both;content:""}._nghost-%ID% table._ngcontent-%ID%{border-spacing:0;border-collapse:collapse}._nghost-%ID% td._ngcontent-%ID%,._nghost-%ID% th._ngcontent-%ID%{padding:0}._nghost-%ID% h1._ngcontent-%ID%,._nghost-%ID% h2._ngcontent-%ID%,._nghost-%ID% h3._ngcontent-%ID%,._nghost-%ID% h4._ngcontent-%ID%,._nghost-%ID% h5._ngcontent-%ID%,._nghost-%ID% h6._ngcontent-%ID%{margin-top:0;margin-bottom:0}._nghost-%ID% h1._ngcontent-%ID%{font-size:32px;font-weight:600}._nghost-%ID% h2._ngcontent-%ID%{font-size:24px;font-weight:600}._nghost-%ID% h3._ngcontent-%ID%{font-size:20px;font-weight:600}._nghost-%ID% h4._ngcontent-%ID%{font-size:16px;font-weight:600}._nghost-%ID% h5._ngcontent-%ID%{font-size:14px;font-weight:600}._nghost-%ID% h6._ngcontent-%ID%{font-size:12px;font-weight:600}._nghost-%ID% p._ngcontent-%ID%{margin-top:0;margin-bottom:10px}._nghost-%ID% blockquote._ngcontent-%ID%{margin:0}._nghost-%ID% ul._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID%{padding-left:0;margin-top:0;margin-bottom:0;list-style-type:disc}._nghost-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID%{list-style-type:circle}._nghost-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID%{list-style-type:lower-roman}._nghost-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID%{list-style-type:lower-alpha}._nghost-%ID% dd._ngcontent-%ID%{margin-left:0}._nghost-%ID% code._ngcontent-%ID%{font-family:Consolas,"Liberation Mono",Menlo,Courier,monospace;font-size:12px}._nghost-%ID% pre._ngcontent-%ID%{margin-top:0;margin-bottom:0;font:12px Consolas,"Liberation Mono",Menlo,Courier,monospace}._nghost-%ID% .octicon._ngcontent-%ID%{vertical-align:text-bottom}._nghost-%ID% input._ngcontent-%ID%{-webkit-font-feature-settings:"liga" 0;font-feature-settings:"liga" 0}._nghost-%ID% .markdown-body._ngcontent-%ID%::before{display:table;content:""}._nghost-%ID% .markdown-body._ngcontent-%ID%::after{display:table;clear:both;content:""}._nghost-%ID% > *:first-child._ngcontent-%ID%{margin-top:0!important}._nghost-%ID% > *:last-child._ngcontent-%ID%{margin-bottom:0!important}._nghost-%ID% a:not([href])._ngcontent-%ID%{color:inherit;text-decoration:none}._nghost-%ID% .anchor._ngcontent-%ID%{float:left;padding-right:4px;margin-left:-20px;line-height:1}._nghost-%ID% .anchor:focus._ngcontent-%ID%{outline:none}._nghost-%ID% p._ngcontent-%ID%,._nghost-%ID% blockquote._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID%,._nghost-%ID% dl._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID%,._nghost-%ID% pre._ngcontent-%ID%{margin-top:0;margin-bottom:16px}._nghost-%ID% hr._ngcontent-%ID%{height:.25em;padding:0;margin:24px 0;background-color:#e7e7e7;border:0}._nghost-%ID% blockquote._ngcontent-%ID%{padding:0 1em;color:#777;border-left:.25em solid #ddd}._nghost-%ID% blockquote._ngcontent-%ID% > :first-child._ngcontent-%ID%{margin-top:0}._nghost-%ID% blockquote._ngcontent-%ID% > :last-child._ngcontent-%ID%{margin-bottom:0}._nghost-%ID% kbd._ngcontent-%ID%{display:inline-block;padding:3px 5px;font-size:11px;line-height:10px;color:#555;vertical-align:middle;background-color:#fcfcfc;border:solid 1px #ccc;border-bottom-color:#bbb;border-radius:3px;box-shadow:inset 0 -1px 0 #bbb}._nghost-%ID% h1._ngcontent-%ID%,._nghost-%ID% h2._ngcontent-%ID%,._nghost-%ID% h3._ngcontent-%ID%,._nghost-%ID% h4._ngcontent-%ID%,._nghost-%ID% h5._ngcontent-%ID%,._nghost-%ID% h6._ngcontent-%ID%{margin-top:24px;margin-bottom:16px;font-weight:600;line-height:1.25}._nghost-%ID% h1._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h2._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h3._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h4._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h5._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h6._ngcontent-%ID% .octicon-link._ngcontent-%ID%{color:black;vertical-align:middle;visibility:hidden}._nghost-%ID% h1:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h2:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h3:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h4:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h5:hover._ngcontent-%ID% .anchor._ngcontent-%ID%,._nghost-%ID% h6:hover._ngcontent-%ID% .anchor._ngcontent-%ID%{text-decoration:none}._nghost-%ID% h1:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h2:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h3:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h4:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h5:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%,._nghost-%ID% h6:hover._ngcontent-%ID% .anchor._ngcontent-%ID% .octicon-link._ngcontent-%ID%{visibility:visible}._nghost-%ID% h1._ngcontent-%ID%{padding-bottom:.3em;font-size:2em;border-bottom:1px solid #eee}._nghost-%ID% h2._ngcontent-%ID%{padding-bottom:.3em;font-size:1.5em;border-bottom:1px solid #eee}._nghost-%ID% h3._ngcontent-%ID%{font-size:1.25em}._nghost-%ID% h4._ngcontent-%ID%{font-size:1em}._nghost-%ID% h5._ngcontent-%ID%{font-size:.875em}._nghost-%ID% h6._ngcontent-%ID%{font-size:.85em;color:#777}._nghost-%ID% ul._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID%{padding-left:2em}._nghost-%ID% ul._ngcontent-%ID% ul._ngcontent-%ID%,._nghost-%ID% ul._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID% ol._ngcontent-%ID%,._nghost-%ID% ol._ngcontent-%ID% ul._ngcontent-%ID%{margin-top:0;margin-bottom:0}._nghost-%ID% li._ngcontent-%ID% > p._ngcontent-%ID%{margin-top:16px}._nghost-%ID% li._ngcontent-%ID% + li._ngcontent-%ID%{margin-top:.25em}._nghost-%ID% dl._ngcontent-%ID%{padding:0}._nghost-%ID% dl._ngcontent-%ID% dt._ngcontent-%ID%{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:bold}._nghost-%ID% dl._ngcontent-%ID% dd._ngcontent-%ID%{padding:0 16px;margin-bottom:16px}._nghost-%ID% table._ngcontent-%ID%{display:block;width:100%;overflow:auto}._nghost-%ID% table._ngcontent-%ID% th._ngcontent-%ID%{font-weight:bold}._nghost-%ID% table._ngcontent-%ID% th._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% td._ngcontent-%ID%{padding:6px 13px;border:1px solid #ddd}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID%{background-color:#fff;border-top:1px solid #ccc}._nghost-%ID% table._ngcontent-%ID% tr:nth-child(2n)._ngcontent-%ID%{background-color:#f8f8f8}._nghost-%ID% img._ngcontent-%ID%{max-width:100%;box-sizing:content-box;background-color:#fff}._nghost-%ID% code._ngcontent-%ID%{padding:.2em 0;margin:0;font-size:85%;background-color:rgba(0,0,0,.04);border-radius:3px}._nghost-%ID% code._ngcontent-%ID%::before,._nghost-%ID% code._ngcontent-%ID%::after{letter-spacing:-0.2em;content:"\xa0"}._nghost-%ID% pre._ngcontent-%ID%{word-wrap:normal}._nghost-%ID% pre._ngcontent-%ID% > code._ngcontent-%ID%{padding:0;margin:0;font-size:100%;word-break:normal;white-space:pre;background:transparent;border:0}._nghost-%ID% .highlight._ngcontent-%ID%{margin-bottom:16px}._nghost-%ID% .highlight._ngcontent-%ID% pre._ngcontent-%ID%{margin-bottom:0;word-break:normal}._nghost-%ID% .highlight._ngcontent-%ID% pre._ngcontent-%ID%,._nghost-%ID% pre._ngcontent-%ID%{padding:16px;overflow:auto;font-size:85%;line-height:1.45;background-color:#f7f7f7;border-radius:3px}._nghost-%ID% pre._ngcontent-%ID% code._ngcontent-%ID%{display:inline;padding:0;margin:0;overflow:visible;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}._nghost-%ID% pre._ngcontent-%ID% code._ngcontent-%ID%::before,._nghost-%ID% pre._ngcontent-%ID% code._ngcontent-%ID%::after{content:normal}._nghost-%ID% .pl-0._ngcontent-%ID%{padding-left:0!important}._nghost-%ID% .pl-1._ngcontent-%ID%{padding-left:3px!important}._nghost-%ID% .pl-2._ngcontent-%ID%{padding-left:6px!important}._nghost-%ID% .pl-3._ngcontent-%ID%{padding-left:12px!important}._nghost-%ID% .pl-4._ngcontent-%ID%{padding-left:24px!important}._nghost-%ID% .pl-5._ngcontent-%ID%{padding-left:36px!important}._nghost-%ID% .pl-6._ngcontent-%ID%{padding-left:48px!important}._nghost-%ID% .full-commit._ngcontent-%ID% .btn-outline:not(:disabled):hover._ngcontent-%ID%{color:#4078c0;border:1px solid #4078c0}._nghost-%ID% kbd._ngcontent-%ID%{display:inline-block;padding:3px 5px;font:11px Consolas,"Liberation Mono",Menlo,Courier,monospace;line-height:10px;color:#555;vertical-align:middle;background-color:#fcfcfc;border:solid 1px #ccc;border-bottom-color:#bbb;border-radius:3px;box-shadow:inset 0 -1px 0 #bbb}._nghost-%ID% :checked._ngcontent-%ID% + .radio-label._ngcontent-%ID%{position:relative;z-index:1;border-color:#4078c0}._nghost-%ID% .task-list-item._ngcontent-%ID%{list-style-type:none}._nghost-%ID% .task-list-item._ngcontent-%ID% + .task-list-item._ngcontent-%ID%{margin-top:3px}._nghost-%ID% .task-list-item._ngcontent-%ID% input._ngcontent-%ID%{margin:0 .2em .25em -1.6em;vertical-align:middle}._nghost-%ID% hr._ngcontent-%ID%{border-bottom-color:#eee}'];
    $.ViewSkawaMarkdownRendererComponent0__componentStyles = null;
    $.styles$SkawaRawMarkdownRendererComponent = ["._nghost-%ID%{display:block}"];
    $.ViewSkawaRawMarkdownRendererComponent0__componentStyles = null;
    $.styles3 = ["._nghost-%ID%{display:flex;font-size:15px;font-weight:normal;position:relative;background:transparent;border-radius:inherit;box-sizing:border-box;cursor:pointer;letter-spacing:.01em;line-height:normal;outline:none;text-align:center;z-index:0;transition:color .4s linear,background-color .4s linear}._nghost-%ID%:hover{color:rgba(0,0,0,.987);background-color:rgba(0,0,0,.05)}"];
    $.ViewSkawaNavItemComponent0__componentStyles = null;
    $.styles31 = ["._nghost-%ID%{padding:6px 0;box-sizing:border-box;display:flex;align-items:center;height:44px;color:rgba(0,0,0,.654);flex-grow:1;transition:color .4s linear;flex-basis:100%}._nghost-%ID% .item-icon._ngcontent-%ID%{width:64px;justify-content:center}._nghost-%ID% .item-text._ngcontent-%ID%{flex-grow:1;line-height:24px;text-align:left}._nghost-%ID% .item-text.text-only._ngcontent-%ID%{text-transform:uppercase;font-size:12px}._nghost-%ID%:hover,._nghost-%ID%.hovering{color:rgba(0,0,0,.998)}._nghost-%ID%[textOnly]{padding-left:20px}._nghost-%ID%.icon-padding{padding-left:64px}"];
    $.ViewSkawaSidebarItemComponent0__componentStyles = null;
    $.styles32 = ["._nghost-%ID%{box-sizing:border-box}._nghost-%ID% main._ngcontent-%ID%{border-right:1px solid rgba(0,0,0,.1);border-left:1px solid rgba(0,0,0,.1);background-color:#fff;padding:24px;margin:0 auto;max-width:800px}._nghost-%ID% main._ngcontent-%ID% .demo._ngcontent-%ID%{display:block;border-bottom:1px solid lightgray;padding-bottom:2em;margin-bottom:2em}._nghost-%ID% material-content._ngcontent-%ID%{overflow:auto;position:absolute;top:0;right:0;left:0;bottom:0}._nghost-%ID% material-content._ngcontent-%ID% .material-header._ngcontent-%ID%{position:fixed;right:0;width:calc(100% - 256px);left:256px;transition-duration:150ms;transition-property:left,width;transition-timing-function:cubic-bezier(0.4,0,0.2,1);top:0;z-index:1}._nghost-%ID% material-content._ngcontent-%ID% .material-header.no-drawer._ngcontent-%ID%{left:0;width:100%}a._ngcontent-%ID%{color:var(--default-primary-color);text-decoration:none}skawa-sidebar-item._ngcontent-%ID%{flex-basis:auto;flex-grow:initial}skawa-sidebar-item:hover._ngcontent-%ID%{background-color:rgba(158,158,158,.2)!important}skawa-nav-item._ngcontent-%ID%{flex-basis:auto}"];
    $.ViewAppComponent0__componentStyles = null;
    $.styles28 = ["._nghost-%ID% .color--primary-action._ngcontent-%ID%{color:#2196f3;font-weight:700}._nghost-%ID% skawa-card._ngcontent-%ID%{margin-bottom:16px}"];
    $.ViewCardDemoComponent0__componentStyles = null;
    $.ViewCkeditorDemoComponent0__componentStyles = null;
    $.ViewCarTableComponent0__componentStyles = null;
    $.ViewDataTableDemoComponent0__componentStyles = null;
    $.ViewSchoolTableComponent0__componentStyles = null;
    $.styles22 = ["._nghost-%ID%{display:flex;align-items:center;width:100%;justify-content:space-between}"];
    $.ViewFirstDownPercentComponent0__componentStyles = null;
    $.styles23 = ["._nghost-%ID% h3._ngcontent-%ID%{display:flex}._nghost-%ID% h3._ngcontent-%ID% span._ngcontent-%ID%{display:flex;flex-grow:1}._nghost-%ID% h3._ngcontent-%ID% material-dropdown-select._ngcontent-%ID%{color:var(--default-primary-color)}"];
    $.ViewWrTableComponent0__componentStyles = null;
    $.styles0 = ["._nghost-%ID%{display:flex;flex-grow:1;align-items:center}._nghost-%ID% h2._ngcontent-%ID%{height:32px;display:flex;flex-grow:1;align-items:center;font-size:1.5em;font-weight:bold;-webkit-margin-before:.83em;-webkit-margin-after:.83em;-webkit-margin-start:0;-webkit-margin-end:0}._nghost-%ID% a._ngcontent-%ID%{color:var(--default-primary-color);text-decoration:none}"];
    $.ViewDemoHeaderComponent0__componentStyles = null;
    $.styles24 = ["._nghost-%ID% extended-material-icon:not(:first-child)._ngcontent-%ID%{margin-left:8px}._nghost-%ID% extended-material-icon:not(:last-child)._ngcontent-%ID%{margin-right:8px}"];
    $.ViewExtendedMaterialIconDemoComponent0__componentStyles = null;
    $.ViewGridDemoComponent0__componentStyles = null;
    $.styles27 = ["._nghost-%ID% div._ngcontent-%ID%{display:flex;align-items:center;justify-content:center;height:32px;width:100px}"];
    $.ViewHexColorizePipeDemoComponent0__componentStyles = null;
    $.ViewInfobarDemoComponent0__componentStyles = null;
    $.ViewMarkdownDemoComponent0__componentStyles = null;
    $.styles25 = ["._nghost-%ID% skawa-nav-item._ngcontent-%ID%{flex-basis:auto}"];
    $.ViewNavItemDemoComponent0__componentStyles = null;
    $.ViewSidebarItemDemoComponent0__componentStyles = null;
    $.ViewSnackbarDemoComponent0__componentStyles = null;
    $.styles10 = ["@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{display:block;border-radius:2px;box-sizing:border-box;background-color:#fff;box-shadow:0 2px 2px 0 rgba(0,0,0,.2),0 3px 1px -2px rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}._nghost-%ID%[no-shadow]{box-shadow:none}._nghost-%ID%.with-actions{display:flex}._nghost-%ID%.with-actions  skawa-header-title{flex-grow:1}"];
    $.ViewSkawaCardComponent0__componentStyles = null;
    $.ViewSkawaCardContentComponent0__componentStyles = null;
    $.ViewSkawaCardHeaderComponent0__componentStyles = null;
    $.styles7 = ["._nghost-%ID%{display:flex;padding:8px}._nghost-%ID%[align-right]{justify-content:flex-end}._nghost-%ID%[align-left]{justify-content:flex-start}._nghost-%ID%  [spacer],._nghost-%ID%  .spacer{display:block;flex-grow:1}._nghost-%ID%.with-actions,.with-actions ._nghost-%ID%{padding:0}._nghost-%ID%.with-actions  material-button[icon],.with-actions ._nghost-%ID%  material-button[icon]{color:#5c6bc0;margin-left:8px}"];
    $.ViewSkawaCardActionsComponent0__componentStyles = null;
    $.styles8 = ["@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{font-size:13px;font-weight:400;line-height:24px;letter-spacing:0;color:rgba(0,0,0,.87);display:block;padding:16px}._nghost-%ID%.with-header{padding-top:0}._nghost-%ID%[fullWidth],._nghost-%ID%.skawa-full-width{padding:0}._nghost-%ID%.skawa-collapsed{display:none;color:green}"];
    $.styles9 = ['@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{padding:16px;display:flex;align-items:center}._nghost-%ID%::after{content:"";display:block;clear:both}._nghost-%ID%  skawa-header-title,._nghost-%ID%  skawa-header-subhead{display:block}._nghost-%ID%  skawa-header-image{display:inline-block;float:left;box-sizing:border-box;width:40px;height:40px;margin-right:8px}._nghost-%ID%  skawa-header-title{font-size:24px;font-weight:400;line-height:32px;-moz-osx-font-smoothing:grayscale;color:rgba(0,0,0,.87)}._nghost-%ID%  skawa-header-subhead{font-size:14px;color:rgba(0,0,0,.54)}._nghost-%ID%.with-title-image  skawa-header-subhead{font-size:14px;color:rgba(0,0,0,.54)}._nghost-%ID%.with-title-image.with-subhead{display:block}._nghost-%ID%.with-title-image.with-subhead  skawa-header-title{font-size:20px;font-weight:500;font-family:"Roboto","Helvetica","Arial",sans-serif;line-height:1;letter-spacing:.02em;color:rgba(0,0,0,.87);font-size:15px;line-height:20px;padding-top:0;font-weight:700}._nghost-%ID%.with-actions{display:flex;padding-right:8px}._nghost-%ID%.with-actions  skawa-header-title{flex-grow:1}._nghost-%ID%.with-subhead{flex-direction:column;align-items:flex-start}._nghost-%ID%.with-data-table,.with-data-table ._nghost-%ID%{padding:12px 6px 12px 16px}'];
    $.styles19 = ['@import url(https://fonts.googleapis.com/css?family=Roboto);._ngcontent-%ID%::-webkit-scrollbar{width:12px;height:12px}._ngcontent-%ID%::-webkit-scrollbar-button{height:0;width:0}._ngcontent-%ID%::-webkit-scrollbar-track{background-color:#fafafa}._ngcontent-%ID%::-webkit-scrollbar-button:start{display:none}._ngcontent-%ID%::-webkit-scrollbar-button:end{display:none}._ngcontent-%ID%::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1);background-clip:border-box;border:none;min-height:28px;padding:0 0 0;box-shadow:inset 1px 1px 0 rgba(0,0,0,.1),inset 0 -1px 0 rgba(0,0,0,.07)}._ngcontent-%ID%::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.15);box-shadow:inset 1px 1px 1px rgba(0,0,0,.25)}._ngcontent-%ID%::-webkit-scrollbar-thumb:active{box-shadow:inset 1px 1px 3px rgba(0,0,0,.35);background-color:rgba(0,0,0,.2)}._nghost-%ID%{display:block;background-color:#fff}._nghost-%ID% table._ngcontent-%ID%{width:100%;box-sizing:border-box}._nghost-%ID% table.selectable._ngcontent-%ID% th:nth-child(2)._ngcontent-%ID%,._nghost-%ID% table.selectable._ngcontent-%ID% td:nth-child(2)._ngcontent-%ID%{padding-left:0}._nghost-%ID% table.selectable._ngcontent-%ID% th:first-of-type._ngcontent-%ID%,._nghost-%ID% table.selectable._ngcontent-%ID% td:first-of-type._ngcontent-%ID%{text-align:center;color:black;width:72px}._nghost-%ID% table.selectable._ngcontent-%ID% th:first-of-type._ngcontent-%ID% material_checkbox._ngcontent-%ID%,._nghost-%ID% table.selectable._ngcontent-%ID% td:first-of-type._ngcontent-%ID% material_checkbox._ngcontent-%ID%{margin:0;width:24px;height:24px;vertical-align:middle}._nghost-%ID% table.selectable._ngcontent-%ID% tfoot._ngcontent-%ID% tr._ngcontent-%ID% td:first-of-type._ngcontent-%ID%{text-align:right;padding-left:72px!important}._nghost-%ID% table.non-selectable._ngcontent-%ID% th:first-of-type._ngcontent-%ID%,._nghost-%ID% table.non-selectable._ngcontent-%ID% td:first-of-type._ngcontent-%ID%{padding-left:24px!important}._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr._ngcontent-%ID%{transition-duration:.28s;transition-timing-function:cubic-bezier(0.4,0,0.2,1);transition-property:background-color}._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr:hover._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr.highlighted._ngcontent-%ID%{background-color:rgba(158,158,158,.2)!important}._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr.selected._ngcontent-%ID%{background-color:rgba(158,158,158,.3)}._nghost-%ID% table._ngcontent-%ID% tbody._ngcontent-%ID% tr.odd-row._ngcontent-%ID%{background-color:rgba(158,158,158,.1)}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID%{border-bottom:1px solid #d0d0d0}._nghost-%ID% table._ngcontent-%ID% tr:first-of-type._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tr:last-of-type._ngcontent-%ID%{height:56px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% td._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th._ngcontent-%ID%{padding-left:56px;text-align:right;vertical-align:middle;font-size:13px;font-weight:400;line-height:24px;letter-spacing:0;color:rgba(0,0,0,.87);height:48px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% td:first-of-type._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th:first-of-type._ngcontent-%ID%{padding-left:0}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% td:last-of-type._ngcontent-%ID%,._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th:last-of-type._ngcontent-%ID%{padding-right:24px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% td._ngcontent-%ID%{font-size:13px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th._ngcontent-%ID%{font-size:12px}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort-enabled._ngcontent-%ID% a._ngcontent-%ID%{cursor:pointer}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort-enabled._ngcontent-%ID% a._ngcontent-%ID%:before{font-family:"Material Icons";content:"arrow_downwards";opacity:0}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort-enabled._ngcontent-%ID% a:hover._ngcontent-%ID%{font-weight:bold}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort-enabled._ngcontent-%ID% a:hover._ngcontent-%ID%:before{opacity:.38}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort._ngcontent-%ID%{font-weight:bold}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort._ngcontent-%ID% a._ngcontent-%ID%{cursor:pointer}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort._ngcontent-%ID% a._ngcontent-%ID%:before{font-family:"Material Icons";content:"arrow_upwards";opacity:.87}._nghost-%ID% table._ngcontent-%ID% tr._ngcontent-%ID% th.sort.desc._ngcontent-%ID% a._ngcontent-%ID%:before{content:"arrow_downwards"}._nghost-%ID% .text-column._ngcontent-%ID%,._nghost-%ID% .text-column--header._ngcontent-%ID%,._nghost-%ID% .text-column--footer._ngcontent-%ID%{text-align:left!important}._nghost-%ID% .numeric-column._ngcontent-%ID%,._nghost-%ID% .numeric-column--header._ngcontent-%ID%,._nghost-%ID% .numeric-column--footer._ngcontent-%ID%{text-align:right}'];
    $.ViewSkawaDataTableComponent0__componentStyles = null;
    $.ViewSkawaDataTableColComponent0__componentStyles = null;
    $.styles = ["._nghost-%ID%{display:inline-flex}._nghost-%ID% .mdi._ngcontent-%ID%{font-size:24px}._nghost-%ID%[size=x-small] .mdi._ngcontent-%ID%{font-size:12px}._nghost-%ID%[size=small] .mdi._ngcontent-%ID%{font-size:13px}._nghost-%ID%[size=medium] .mdi._ngcontent-%ID%{font-size:16px}._nghost-%ID%[size=large] .mdi._ngcontent-%ID%{font-size:18px}._nghost-%ID%[size=x-large] .mdi._ngcontent-%ID%{font-size:20px}"];
    $.ViewExtendedMaterialIconComponent0__componentStyles = null;
    $.styles11 = ["._nghost-%ID%{display:block}._nghost-%ID% .grid-container._ngcontent-%ID%{position:relative}._nghost-%ID% .grid-container._ngcontent-%ID%  [gridTile]{position:absolute;width:280px;margin:16px;transition:transform .3s ease-out}"];
    $.ViewGridComponent0__componentStyles = null;
    $.styles1 = [".snackbar-container._ngcontent-%ID%{box-shadow:0 2px 2px 0 rgba(0,0,0,.2),0 3px 1px -2px rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);position:fixed;left:50%;bottom:0px;transform:translate(-50%,100%);font-size:14px;z-index:10000;height:48px;color:#fff;background-color:#323232;display:flex;padding:0 24px;box-sizing:border-box;border-radius:2px;transition:transform .5s ease}.snackbar-container._ngcontent-%ID% material-button._ngcontent-%ID%{align-self:center}.snackbar-container.show._ngcontent-%ID%{transform:translate(-50%,0)}.snackbar-container._ngcontent-%ID% .message._ngcontent-%ID%,.snackbar-container._ngcontent-%ID% .action._ngcontent-%ID%{align-self:center}._nghost-%ID%.touch-enabled .snackbar-container._ngcontent-%ID%,.touch-enabled ._nghost-%ID% .snackbar-container._ngcontent-%ID%{height:96px}"];
    $.ViewSkawaSnackbarComponent0__componentStyles = null;
    $.styles$MaterialTemporaryDrawerComponent = [$.styles4];
    $.styles$GlyphComponent = [$.styles12];
    $.styles$MaterialButtonComponent = [$.styles30];
    $.styles$MaterialCheckboxComponent = [$.styles13];
    $.styles$MaterialIconComponent = [$.styles29];
    $.styles$MaterialListComponent = [$.styles15];
    $.styles$MaterialPopupComponent = [$.styles16];
    $.styles$MaterialProgressComponent = [$.styles21];
    $.styles$MaterialRippleComponent = [$.styles2];
    $.styles$DropdownButtonComponent = [$.styles17, $.styles18];
    $.styles$MaterialDropdownSelectComponent = [$.styles20];
    $.styles$MaterialSelectDropdownItemComponent = [$.styles14];
    $.styles$SkawaInfobarComponent = [$.styles6];
    $.styles$SkawaMarkdownRendererComponent = [$.styles5];
    $.styles$SkawaNavItemComponent = [$.styles3];
    $.styles$SkawaSidebarItemComponent = [$.styles31];
    $.styles$AppComponent = [$.styles32, $.styles26];
    $.styles$CardDemoComponent = [$.styles28];
    $.styles$FirstDownPercentComponent = [$.styles22];
    $.styles$WrTableComponent = [$.styles23];
    $.styles$DemoHeaderComponent = [$.styles0];
    $.styles$ExtendedMaterialIconDemoComponent = [$.styles24];
    $.styles$HexColorizePipeDemoComponent = [$.styles27];
    $.styles$NavItemDemoComponent = [$.styles25, $.styles26];
    $.styles$SkawaCardComponent = [$.styles10];
    $.styles$SkawaCardContentComponent = [$.styles8];
    $.styles$SkawaCardHeaderComponent = [$.styles9];
    $.styles$SkawaCardActionsComponent = [$.styles7];
    $.styles$SkawaDataTableComponent = [$.styles19];
    $.styles$ExtendedMaterialIconComponent = [$.styles];
    $.styles$GridComponent = [$.styles11];
    $.styles$SkawaSnackbarComponent = [$.styles1];
  })();
  (function lazyInitializers() {
    var _lazy = hunkHelpers.lazy;
    _lazy($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartClosure");
    });
    _lazy($, "JS_INTEROP_INTERCEPTOR_TAG", "$get$JS_INTEROP_INTERCEPTOR_TAG", function() {
      return H.getIsolateAffinityTag("_$dart_js");
    });
    _lazy($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazy($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazy($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
    });
    _lazy($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          null.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          (void 0).$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
    });
    _lazy($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          null.$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
    });
    _lazy($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          (void 0).$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazy($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", function() {
      return P._AsyncRun__initializeScheduleImmediate();
    });
    _lazy($, "Future__nullFuture", "$get$Future__nullFuture", function() {
      return P._Future$zoneValue(null, C.C__RootZone, P.Null);
    });
    _lazy($, "_DistinctStream__SENTINEL", "$get$_DistinctStream__SENTINEL", function() {
      return new P.Object();
    });
    _lazy($, "_RootZone__rootMap", "$get$_RootZone__rootMap", function() {
      return P.HashMap_HashMap(null, null);
    });
    _lazy($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", function() {
      return P.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", true, false);
    });
    _lazy($, "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", function() {
      return {};
    });
    _lazy($, "_Html5NodeValidator__allowedElements", "$get$_Html5NodeValidator__allowedElements", function() {
      return P.LinkedHashSet_LinkedHashSet$from(["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"], P.String);
    });
    _lazy($, "CssClassSetImpl__validTokenRE", "$get$CssClassSetImpl__validTokenRE", function() {
      return P.RegExp_RegExp("^\\S+$", true, false);
    });
    _lazy($, "context", "$get$context", function() {
      return H.interceptedTypeCheck(P._wrapToDart(self), "$isJsObject");
    });
    _lazy($, "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartObject");
    });
    _lazy($, "_dartProxyCtor", "$get$_dartProxyCtor", function() {
      return function DartObject(o) {
        this.o = o;
      };
    });
    _lazy($, "appGlobals", "$get$appGlobals", function() {
      var registry = new D.TestabilityRegistry(H.JsLinkedHashMap_JsLinkedHashMap$es6(null, D.Testability), new D._NoopGetTestability()),
        t1 = new K.BrowserGetTestability();
      registry._testabilityGetter = t1;
      t1.addToWindow$1(registry);
      t1 = P.Object;
      t1 = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_TestabilityRegistry_IMm, registry], t1, t1);
      return new K.TransitionalAppHost(new A.MapInjector(t1, C.EmptyInjector_null));
    });
    _lazy($, "_idPlaceholder", "$get$_idPlaceholder", function() {
      return P.RegExp_RegExp("%ID%", true, false);
    });
    _lazy($, "NgZone__anyZoneKey", "$get$NgZone__anyZoneKey", function() {
      return new P.Object();
    });
    _lazy($, "_safeUrlPattern", "$get$_safeUrlPattern", function() {
      return P.RegExp_RegExp("^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))", false, false);
    });
    _lazy($, "_dataUrlPattern", "$get$_dataUrlPattern", function() {
      return P.RegExp_RegExp("^data:(?:image/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video/(?:mpeg|mp4|ogg|webm));base64,[a-z0-9+/]+=*$", false, false);
    });
    _lazy($, "testabilitiesEnabled", "$get$testabilitiesEnabled", function() {
      return J.contains$1$asx(self.window.location.href, "enableTestabilities");
    });
    _lazy($, "MaterialPopupComponent__idGenerator", "$get$MaterialPopupComponent__idGenerator", function() {
      return R.SequentialIdGenerator$fromUUID();
    });
    _lazy($, "indexIdentityFn", "$get$indexIdentityFn", function() {
      return new T.closure();
    });
    _lazy($, "DomPopupSource__isRtl", "$get$DomPopupSource__isRtl", function() {
      var t1 = W.document();
      return t1.documentElement.dir === "rtl" || t1.body.dir === "rtl";
    });
    _lazy($, "supportsAnimationApi", "$get$supportsAnimationApi", function() {
      if (P.hasProperty(W.DivElement_DivElement(), "animate")) {
        var t1 = $.$get$context();
        t1 = !("__acxDisableWebAnimationsApi" in t1._js$_jsObject);
      } else
        t1 = false;
      return t1;
    });
    _lazy($, "SequentialIdGenerator__rnd", "$get$SequentialIdGenerator__rnd", function() {
      return P.Random_Random();
    });
    _lazy($, "messageLookup", "$get$messageLookup", function() {
      return new X.UninitializedLocaleData("initializeMessages(<locale>)", null, H.setRuntimeTypeInfo([], [P.String]), [P.Null]);
    });
    _lazy($, "_emptyPattern", "$get$_emptyPattern", function() {
      return P.RegExp_RegExp("^(?:[ \\t]*)$", true, false);
    });
    _lazy($, "_setextPattern", "$get$_setextPattern", function() {
      return P.RegExp_RegExp("^[ ]{0,3}(=+|-+)\\s*$", true, false);
    });
    _lazy($, "_headerPattern", "$get$_headerPattern", function() {
      return P.RegExp_RegExp("^ {0,3}(#{1,6})[ \\x09\\x0b\\x0c](.*?)#*$", true, false);
    });
    _lazy($, "_blockquotePattern", "$get$_blockquotePattern", function() {
      return P.RegExp_RegExp("^[ ]{0,3}>[ ]?(.*)$", true, false);
    });
    _lazy($, "_indentPattern", "$get$_indentPattern", function() {
      return P.RegExp_RegExp("^(?:    | {0,3}\\t)(.*)$", true, false);
    });
    _lazy($, "_codePattern", "$get$_codePattern", function() {
      return P.RegExp_RegExp("^[ ]{0,3}(`{3,}|~{3,})(.*)$", true, false);
    });
    _lazy($, "_hrPattern", "$get$_hrPattern", function() {
      return P.RegExp_RegExp("^ {0,3}([-*_])[ \\t]*\\1[ \\t]*\\1(?:\\1|[ \\t])*$", true, false);
    });
    _lazy($, "_oneOrMoreWhitespacePattern", "$get$_oneOrMoreWhitespacePattern", function() {
      return P.RegExp_RegExp("[ \n\r\t]+", true, false);
    });
    _lazy($, "_ulPattern", "$get$_ulPattern", function() {
      return P.RegExp_RegExp("^([ ]{0,3})()([*+-])(([ \\t])([ \\t]*)(.*))?$", true, false);
    });
    _lazy($, "_olPattern", "$get$_olPattern", function() {
      return P.RegExp_RegExp("^([ ]{0,3})(\\d{1,9})([\\.)])(([ \\t])([ \\t]*)(.*))?$", true, false);
    });
    _lazy($, "BlockTagBlockHtmlSyntax__pattern", "$get$BlockTagBlockHtmlSyntax__pattern", function() {
      return P.RegExp_RegExp("^ {0,3}</?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|>|/>|$)", true, false);
    });
    _lazy($, "ListSyntax__whitespaceRe", "$get$ListSyntax__whitespaceRe", function() {
      return P.RegExp_RegExp("[ \t]*", true, false);
    });
    _lazy($, "ParagraphSyntax__reflinkDefinitionStart", "$get$ParagraphSyntax__reflinkDefinitionStart", function() {
      return P.RegExp_RegExp("[ ]{0,3}\\[", true, false);
    });
    _lazy($, "ParagraphSyntax__whitespacePattern", "$get$ParagraphSyntax__whitespacePattern", function() {
      return P.RegExp_RegExp("^\\s*$", true, false);
    });
    _lazy($, "ExtensionSet_commonMark", "$get$ExtensionSet_commonMark", function() {
      return new E.ExtensionSet(H.setRuntimeTypeInfo([C.C_FencedCodeBlockSyntax], [K.BlockSyntax]), H.setRuntimeTypeInfo([new R.InlineHtmlSyntax(null, P.RegExp_RegExp("<[/!?]?[A-Za-z][A-Za-z0-9-]*(?:\\s[^>]*)?>", true, true))], [R.InlineSyntax]));
    });
    _lazy($, "HtmlRenderer__blockTags", "$get$HtmlRenderer__blockTags", function() {
      return P.RegExp_RegExp("blockquote|h1|h2|h3|h4|h5|h6|hr|p|pre", true, false);
    });
    _lazy($, "InlineParser__defaultSyntaxes", "$get$InlineParser__defaultSyntaxes", function() {
      var _null = null,
        t1 = R.InlineSyntax;
      return P.List_List$unmodifiable(H.setRuntimeTypeInfo([new R.EmailAutolinkSyntax(P.RegExp_RegExp("<([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>", true, true)), new R.AutolinkSyntax(P.RegExp_RegExp("<(([a-zA-Z][a-zA-Z\\-\\+\\.]+):(?://)?[^\\s>]*)>", true, true)), new R.LineBreakSyntax(P.RegExp_RegExp("(?:\\\\|  +)\\n", true, true)), R.LinkSyntax$(_null, "\\["), R.ImageSyntax$(_null), new R.EscapeSyntax(P.RegExp_RegExp("\\\\[!\"#$%&'()*+,\\-./:;<=>?@\\[\\\\\\]^_`{|}~]", true, true)), R.TextSyntax$(" \\* ", _null), R.TextSyntax$(" _ ", _null), R.TagSyntax$("\\*+", _null, true), R.TagSyntax$("_+", _null, true), new R.CodeSyntax(P.RegExp_RegExp("(`+(?!`))((?:.|\\n)*?[^`])\\1(?!`)", true, true))], [t1]), t1);
    });
    _lazy($, "InlineParser__htmlSyntaxes", "$get$InlineParser__htmlSyntaxes", function() {
      var t1 = R.InlineSyntax;
      return P.List_List$unmodifiable(H.setRuntimeTypeInfo([R.TextSyntax$("&[#a-zA-Z0-9]*;", null), R.TextSyntax$("&", "&amp;"), R.TextSyntax$("<", "&lt;")], [t1]), t1);
    });
    _lazy($, "LinkSyntax__entirelyWhitespacePattern", "$get$LinkSyntax__entirelyWhitespacePattern", function() {
      return P.RegExp_RegExp("^\\s*$", true, false);
    });
    _lazy($, "WrTableComponent_firstDownPercentRenderer", "$get$WrTableComponent_firstDownPercentRenderer", function() {
      return new N.WrTableComponent_closure();
    });
    _lazy($, "WrTableComponent__columns", "$get$WrTableComponent__columns", function() {
      var t3, t4, t5, t6, t7, t8, t9, _null = null,
        _s11_ = "text-column",
        t1 = N.WrRowData,
        t2 = G.SkawaDataTableColComponent$(_null, t1);
      t2.header = "Player";
      t2.set$accessor(N.wr_table_WrTableComponent_nameAccessor$closure());
      t2.classString = _s11_;
      t3 = G.SkawaDataTableColComponent$(_null, t1);
      t3.header = "Team";
      t3.set$accessor(N.wr_table_WrTableComponent_teamAccessor$closure());
      t3.classString = _s11_;
      t4 = G.SkawaDataTableColComponent$(_null, t1);
      t4.header = "Rec";
      t4.set$accessor(N.wr_table_WrTableComponent_recAccessor$closure());
      t5 = G.SkawaDataTableColComponent$(_null, t1);
      t5.header = "Yards";
      t5.set$accessor(N.wr_table_WrTableComponent_yardsAccessor$closure());
      t6 = G.SkawaDataTableColComponent$(_null, t1);
      t6.header = "Avg";
      t6.set$accessor(N.wr_table_WrTableComponent_avgAccessor$closure());
      t7 = G.SkawaDataTableColComponent$(_null, t1);
      t7.header = "Yds/G";
      t7.set$accessor(N.wr_table_WrTableComponent_yardPerGameAccessor$closure());
      t8 = G.SkawaDataTableColComponent$(_null, t1);
      t8.header = "1st";
      t8.set$accessor(N.wr_table_WrTableComponent_firstDownAccessor$closure());
      t9 = G.SkawaDataColRendererDirective$(t1);
      t9.set$factoryRenderer($.$get$WrTableComponent_firstDownPercentRenderer());
      t1 = G.SkawaDataTableColComponent$(t9, t1);
      t1.header = "1st%";
      return H.setRuntimeTypeInfo([t2, t3, t4, t5, t6, t7, t8, t1], [[G.SkawaDataTableColComponent, N.WrRowData]]);
    });
    _lazy($, "SkawaCardHeaderComponent__rgbaRegexp", "$get$SkawaCardHeaderComponent__rgbaRegexp", function() {
      return P.RegExp_RegExp("rgba?\\s*\\((?:\\d+(?:\\.[\\d]+)?,?\\s*){3,4}\\)", true, false);
    });
    _lazy($, "SnackbarService__defaultDuration", "$get$SnackbarService__defaultDuration", function() {
      return P.Duration$(0, 3);
    });
    _lazy($, "SkawaSnackbarComponent__minimumSlideInDelay", "$get$SkawaSnackbarComponent__minimumSlideInDelay", function() {
      return P.Duration$(100, 0);
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({AnimationEffectReadOnly: J.Interceptor, AnimationEffectTiming: J.Interceptor, AnimationEffectTimingReadOnly: J.Interceptor, AnimationTimeline: J.Interceptor, AnimationWorkletGlobalScope: J.Interceptor, AuthenticatorAssertionResponse: J.Interceptor, AuthenticatorAttestationResponse: J.Interceptor, AuthenticatorResponse: J.Interceptor, BackgroundFetchFetch: J.Interceptor, BackgroundFetchManager: J.Interceptor, BackgroundFetchSettledFetch: J.Interceptor, BarProp: J.Interceptor, BarcodeDetector: J.Interceptor, BluetoothRemoteGATTDescriptor: J.Interceptor, Body: J.Interceptor, BudgetState: J.Interceptor, CacheStorage: J.Interceptor, CanvasGradient: J.Interceptor, CanvasPattern: J.Interceptor, CanvasRenderingContext2D: J.Interceptor, Client: J.Interceptor, Clients: J.Interceptor, CookieStore: J.Interceptor, Coordinates: J.Interceptor, Credential: J.Interceptor, CredentialUserData: J.Interceptor, CredentialsContainer: J.Interceptor, Crypto: J.Interceptor, CryptoKey: J.Interceptor, CSS: J.Interceptor, CSSVariableReferenceValue: J.Interceptor, CustomElementRegistry: J.Interceptor, DataTransfer: J.Interceptor, DataTransferItem: J.Interceptor, DeprecatedStorageInfo: J.Interceptor, DeprecatedStorageQuota: J.Interceptor, DeprecationReport: J.Interceptor, DetectedBarcode: J.Interceptor, DetectedFace: J.Interceptor, DetectedText: J.Interceptor, DeviceAcceleration: J.Interceptor, DeviceRotationRate: J.Interceptor, DirectoryReader: J.Interceptor, DocumentOrShadowRoot: J.Interceptor, DocumentTimeline: J.Interceptor, DOMError: J.Interceptor, DOMImplementation: J.Interceptor, Iterator: J.Interceptor, DOMMatrix: J.Interceptor, DOMMatrixReadOnly: J.Interceptor, DOMParser: J.Interceptor, DOMPoint: J.Interceptor, DOMPointReadOnly: J.Interceptor, DOMQuad: J.Interceptor, DOMStringMap: J.Interceptor, External: J.Interceptor, FaceDetector: J.Interceptor, FederatedCredential: J.Interceptor, DOMFileSystem: J.Interceptor, FontFaceSource: J.Interceptor, FormData: J.Interceptor, GamepadButton: J.Interceptor, GamepadPose: J.Interceptor, Geolocation: J.Interceptor, Position: J.Interceptor, Headers: J.Interceptor, HTMLHyperlinkElementUtils: J.Interceptor, IdleDeadline: J.Interceptor, ImageBitmap: J.Interceptor, ImageBitmapRenderingContext: J.Interceptor, ImageCapture: J.Interceptor, InputDeviceCapabilities: J.Interceptor, IntersectionObserver: J.Interceptor, IntersectionObserverEntry: J.Interceptor, InterventionReport: J.Interceptor, KeyframeEffect: J.Interceptor, KeyframeEffectReadOnly: J.Interceptor, MediaCapabilities: J.Interceptor, MediaCapabilitiesInfo: J.Interceptor, MediaDeviceInfo: J.Interceptor, MediaError: J.Interceptor, MediaKeyStatusMap: J.Interceptor, MediaKeySystemAccess: J.Interceptor, MediaKeys: J.Interceptor, MediaKeysPolicy: J.Interceptor, MediaMetadata: J.Interceptor, MediaSession: J.Interceptor, MediaSettingsRange: J.Interceptor, MemoryInfo: J.Interceptor, MessageChannel: J.Interceptor, Metadata: J.Interceptor, MutationObserver: J.Interceptor, WebKitMutationObserver: J.Interceptor, MutationRecord: J.Interceptor, NavigationPreloadManager: J.Interceptor, Navigator: J.Interceptor, NavigatorAutomationInformation: J.Interceptor, NavigatorConcurrentHardware: J.Interceptor, NavigatorCookies: J.Interceptor, NavigatorUserMediaError: J.Interceptor, NodeFilter: J.Interceptor, NodeIterator: J.Interceptor, NonDocumentTypeChildNode: J.Interceptor, NonElementParentNode: J.Interceptor, NoncedElement: J.Interceptor, OffscreenCanvasRenderingContext2D: J.Interceptor, OverconstrainedError: J.Interceptor, PaintRenderingContext2D: J.Interceptor, PaintSize: J.Interceptor, PaintWorkletGlobalScope: J.Interceptor, PasswordCredential: J.Interceptor, Path2D: J.Interceptor, PaymentAddress: J.Interceptor, PaymentInstruments: J.Interceptor, PaymentManager: J.Interceptor, PaymentResponse: J.Interceptor, PerformanceEntry: J.Interceptor, PerformanceLongTaskTiming: J.Interceptor, PerformanceMark: J.Interceptor, PerformanceMeasure: J.Interceptor, PerformanceNavigation: J.Interceptor, PerformanceNavigationTiming: J.Interceptor, PerformanceObserver: J.Interceptor, PerformanceObserverEntryList: J.Interceptor, PerformancePaintTiming: J.Interceptor, PerformanceResourceTiming: J.Interceptor, PerformanceServerTiming: J.Interceptor, PerformanceTiming: J.Interceptor, Permissions: J.Interceptor, PhotoCapabilities: J.Interceptor, PositionError: J.Interceptor, Presentation: J.Interceptor, PresentationReceiver: J.Interceptor, PublicKeyCredential: J.Interceptor, PushManager: J.Interceptor, PushMessageData: J.Interceptor, PushSubscription: J.Interceptor, PushSubscriptionOptions: J.Interceptor, Range: J.Interceptor, RelatedApplication: J.Interceptor, ReportBody: J.Interceptor, ReportingObserver: J.Interceptor, ResizeObserver: J.Interceptor, ResizeObserverEntry: J.Interceptor, RTCCertificate: J.Interceptor, RTCIceCandidate: J.Interceptor, mozRTCIceCandidate: J.Interceptor, RTCLegacyStatsReport: J.Interceptor, RTCRtpContributingSource: J.Interceptor, RTCRtpReceiver: J.Interceptor, RTCRtpSender: J.Interceptor, RTCSessionDescription: J.Interceptor, mozRTCSessionDescription: J.Interceptor, RTCStatsResponse: J.Interceptor, Screen: J.Interceptor, ScrollState: J.Interceptor, ScrollTimeline: J.Interceptor, Selection: J.Interceptor, SharedArrayBuffer: J.Interceptor, SpeechRecognitionAlternative: J.Interceptor, SpeechSynthesisVoice: J.Interceptor, StaticRange: J.Interceptor, StorageManager: J.Interceptor, StyleMedia: J.Interceptor, StylePropertyMap: J.Interceptor, StylePropertyMapReadonly: J.Interceptor, SyncManager: J.Interceptor, TaskAttributionTiming: J.Interceptor, TextDetector: J.Interceptor, TextMetrics: J.Interceptor, TrackDefault: J.Interceptor, TreeWalker: J.Interceptor, TrustedHTML: J.Interceptor, TrustedScriptURL: J.Interceptor, TrustedURL: J.Interceptor, UnderlyingSourceBase: J.Interceptor, URLSearchParams: J.Interceptor, VRCoordinateSystem: J.Interceptor, VRDisplayCapabilities: J.Interceptor, VREyeParameters: J.Interceptor, VRFrameData: J.Interceptor, VRFrameOfReference: J.Interceptor, VRPose: J.Interceptor, VRStageBounds: J.Interceptor, VRStageBoundsPoint: J.Interceptor, VRStageParameters: J.Interceptor, ValidityState: J.Interceptor, VideoPlaybackQuality: J.Interceptor, VideoTrack: J.Interceptor, VTTRegion: J.Interceptor, WindowClient: J.Interceptor, WorkletAnimation: J.Interceptor, WorkletGlobalScope: J.Interceptor, XPathEvaluator: J.Interceptor, XPathExpression: J.Interceptor, XPathNSResolver: J.Interceptor, XPathResult: J.Interceptor, XMLSerializer: J.Interceptor, XSLTProcessor: J.Interceptor, Bluetooth: J.Interceptor, BluetoothCharacteristicProperties: J.Interceptor, BluetoothRemoteGATTServer: J.Interceptor, BluetoothRemoteGATTService: J.Interceptor, BluetoothUUID: J.Interceptor, BudgetService: J.Interceptor, Cache: J.Interceptor, DOMFileSystemSync: J.Interceptor, DirectoryEntrySync: J.Interceptor, DirectoryReaderSync: J.Interceptor, EntrySync: J.Interceptor, FileEntrySync: J.Interceptor, FileReaderSync: J.Interceptor, FileWriterSync: J.Interceptor, HTMLAllCollection: J.Interceptor, Mojo: J.Interceptor, MojoHandle: J.Interceptor, MojoWatcher: J.Interceptor, NFC: J.Interceptor, PagePopupController: J.Interceptor, Report: J.Interceptor, Request: J.Interceptor, Response: J.Interceptor, SubtleCrypto: J.Interceptor, USBAlternateInterface: J.Interceptor, USBConfiguration: J.Interceptor, USBDevice: J.Interceptor, USBEndpoint: J.Interceptor, USBInTransferResult: J.Interceptor, USBInterface: J.Interceptor, USBIsochronousInTransferPacket: J.Interceptor, USBIsochronousInTransferResult: J.Interceptor, USBIsochronousOutTransferPacket: J.Interceptor, USBIsochronousOutTransferResult: J.Interceptor, USBOutTransferResult: J.Interceptor, WorkerLocation: J.Interceptor, WorkerNavigator: J.Interceptor, Worklet: J.Interceptor, IDBCursor: J.Interceptor, IDBCursorWithValue: J.Interceptor, IDBFactory: J.Interceptor, IDBIndex: J.Interceptor, IDBObservation: J.Interceptor, IDBObserver: J.Interceptor, IDBObserverChanges: J.Interceptor, SVGAngle: J.Interceptor, SVGAnimatedAngle: J.Interceptor, SVGAnimatedBoolean: J.Interceptor, SVGAnimatedEnumeration: J.Interceptor, SVGAnimatedInteger: J.Interceptor, SVGAnimatedLength: J.Interceptor, SVGAnimatedLengthList: J.Interceptor, SVGAnimatedNumber: J.Interceptor, SVGAnimatedNumberList: J.Interceptor, SVGAnimatedPreserveAspectRatio: J.Interceptor, SVGAnimatedRect: J.Interceptor, SVGAnimatedString: J.Interceptor, SVGAnimatedTransformList: J.Interceptor, SVGMatrix: J.Interceptor, SVGPoint: J.Interceptor, SVGPreserveAspectRatio: J.Interceptor, SVGRect: J.Interceptor, SVGUnitTypes: J.Interceptor, AudioListener: J.Interceptor, AudioParam: J.Interceptor, AudioTrack: J.Interceptor, AudioWorkletGlobalScope: J.Interceptor, AudioWorkletProcessor: J.Interceptor, PeriodicWave: J.Interceptor, WebGLActiveInfo: J.Interceptor, ANGLEInstancedArrays: J.Interceptor, ANGLE_instanced_arrays: J.Interceptor, WebGLBuffer: J.Interceptor, WebGLCanvas: J.Interceptor, WebGLColorBufferFloat: J.Interceptor, WebGLCompressedTextureASTC: J.Interceptor, WebGLCompressedTextureATC: J.Interceptor, WEBGL_compressed_texture_atc: J.Interceptor, WebGLCompressedTextureETC1: J.Interceptor, WEBGL_compressed_texture_etc1: J.Interceptor, WebGLCompressedTextureETC: J.Interceptor, WebGLCompressedTexturePVRTC: J.Interceptor, WEBGL_compressed_texture_pvrtc: J.Interceptor, WebGLCompressedTextureS3TC: J.Interceptor, WEBGL_compressed_texture_s3tc: J.Interceptor, WebGLCompressedTextureS3TCsRGB: J.Interceptor, WebGLDebugRendererInfo: J.Interceptor, WEBGL_debug_renderer_info: J.Interceptor, WebGLDebugShaders: J.Interceptor, WEBGL_debug_shaders: J.Interceptor, WebGLDepthTexture: J.Interceptor, WEBGL_depth_texture: J.Interceptor, WebGLDrawBuffers: J.Interceptor, WEBGL_draw_buffers: J.Interceptor, EXTsRGB: J.Interceptor, EXT_sRGB: J.Interceptor, EXTBlendMinMax: J.Interceptor, EXT_blend_minmax: J.Interceptor, EXTColorBufferFloat: J.Interceptor, EXTColorBufferHalfFloat: J.Interceptor, EXTDisjointTimerQuery: J.Interceptor, EXTDisjointTimerQueryWebGL2: J.Interceptor, EXTFragDepth: J.Interceptor, EXT_frag_depth: J.Interceptor, EXTShaderTextureLOD: J.Interceptor, EXT_shader_texture_lod: J.Interceptor, EXTTextureFilterAnisotropic: J.Interceptor, EXT_texture_filter_anisotropic: J.Interceptor, WebGLFramebuffer: J.Interceptor, WebGLGetBufferSubDataAsync: J.Interceptor, WebGLLoseContext: J.Interceptor, WebGLExtensionLoseContext: J.Interceptor, WEBGL_lose_context: J.Interceptor, OESElementIndexUint: J.Interceptor, OES_element_index_uint: J.Interceptor, OESStandardDerivatives: J.Interceptor, OES_standard_derivatives: J.Interceptor, OESTextureFloat: J.Interceptor, OES_texture_float: J.Interceptor, OESTextureFloatLinear: J.Interceptor, OES_texture_float_linear: J.Interceptor, OESTextureHalfFloat: J.Interceptor, OES_texture_half_float: J.Interceptor, OESTextureHalfFloatLinear: J.Interceptor, OES_texture_half_float_linear: J.Interceptor, OESVertexArrayObject: J.Interceptor, OES_vertex_array_object: J.Interceptor, WebGLProgram: J.Interceptor, WebGLQuery: J.Interceptor, WebGLRenderbuffer: J.Interceptor, WebGLRenderingContext: J.Interceptor, WebGL2RenderingContext: J.Interceptor, WebGLSampler: J.Interceptor, WebGLShader: J.Interceptor, WebGLShaderPrecisionFormat: J.Interceptor, WebGLSync: J.Interceptor, WebGLTexture: J.Interceptor, WebGLTimerQueryEXT: J.Interceptor, WebGLTransformFeedback: J.Interceptor, WebGLUniformLocation: J.Interceptor, WebGLVertexArrayObject: J.Interceptor, WebGLVertexArrayObjectOES: J.Interceptor, WebGL: J.Interceptor, WebGL2RenderingContextBase: J.Interceptor, Database: J.Interceptor, SQLError: J.Interceptor, SQLResultSet: J.Interceptor, SQLTransaction: J.Interceptor, ArrayBuffer: H.NativeByteBuffer, DataView: H.NativeTypedData, ArrayBufferView: H.NativeTypedData, Float32Array: H.NativeTypedArrayOfDouble, Float64Array: H.NativeTypedArrayOfDouble, Int16Array: H.NativeInt16List, Int32Array: H.NativeInt32List, Int8Array: H.NativeInt8List, Uint16Array: H.NativeUint16List, Uint32Array: H.NativeUint32List, Uint8ClampedArray: H.NativeUint8ClampedList, CanvasPixelArray: H.NativeUint8ClampedList, Uint8Array: H.NativeUint8List, HTMLAudioElement: W.HtmlElement, HTMLBRElement: W.HtmlElement, HTMLButtonElement: W.HtmlElement, HTMLCanvasElement: W.HtmlElement, HTMLContentElement: W.HtmlElement, HTMLDListElement: W.HtmlElement, HTMLDataElement: W.HtmlElement, HTMLDataListElement: W.HtmlElement, HTMLDetailsElement: W.HtmlElement, HTMLDialogElement: W.HtmlElement, HTMLEmbedElement: W.HtmlElement, HTMLFieldSetElement: W.HtmlElement, HTMLHRElement: W.HtmlElement, HTMLHeadingElement: W.HtmlElement, HTMLHtmlElement: W.HtmlElement, HTMLIFrameElement: W.HtmlElement, HTMLImageElement: W.HtmlElement, HTMLLIElement: W.HtmlElement, HTMLLabelElement: W.HtmlElement, HTMLLegendElement: W.HtmlElement, HTMLLinkElement: W.HtmlElement, HTMLMapElement: W.HtmlElement, HTMLMediaElement: W.HtmlElement, HTMLMenuElement: W.HtmlElement, HTMLMetaElement: W.HtmlElement, HTMLMeterElement: W.HtmlElement, HTMLModElement: W.HtmlElement, HTMLOListElement: W.HtmlElement, HTMLObjectElement: W.HtmlElement, HTMLOptGroupElement: W.HtmlElement, HTMLOptionElement: W.HtmlElement, HTMLOutputElement: W.HtmlElement, HTMLParagraphElement: W.HtmlElement, HTMLParamElement: W.HtmlElement, HTMLPictureElement: W.HtmlElement, HTMLPreElement: W.HtmlElement, HTMLProgressElement: W.HtmlElement, HTMLQuoteElement: W.HtmlElement, HTMLScriptElement: W.HtmlElement, HTMLShadowElement: W.HtmlElement, HTMLSlotElement: W.HtmlElement, HTMLSourceElement: W.HtmlElement, HTMLStyleElement: W.HtmlElement, HTMLTableCaptionElement: W.HtmlElement, HTMLTableCellElement: W.HtmlElement, HTMLTableDataCellElement: W.HtmlElement, HTMLTableHeaderCellElement: W.HtmlElement, HTMLTableColElement: W.HtmlElement, HTMLTableRowElement: W.HtmlElement, HTMLTableSectionElement: W.HtmlElement, HTMLTimeElement: W.HtmlElement, HTMLTitleElement: W.HtmlElement, HTMLTrackElement: W.HtmlElement, HTMLUListElement: W.HtmlElement, HTMLUnknownElement: W.HtmlElement, HTMLVideoElement: W.HtmlElement, HTMLDirectoryElement: W.HtmlElement, HTMLFontElement: W.HtmlElement, HTMLFrameElement: W.HtmlElement, HTMLFrameSetElement: W.HtmlElement, HTMLMarqueeElement: W.HtmlElement, HTMLElement: W.HtmlElement, AccessibleNode: W.AccessibleNode, AccessibleNodeList: W.AccessibleNodeList, HTMLAnchorElement: W.AnchorElement, Animation: W.Animation, AnimationEvent: W.AnimationEvent, HTMLAreaElement: W.AreaElement, HTMLBaseElement: W.BaseElement, Blob: W.Blob, HTMLBodyElement: W.BodyElement, ProcessingInstruction: W.CharacterData, CharacterData: W.CharacterData, Comment: W.Comment, CSSNumericValue: W.CssNumericValue, CSSUnitValue: W.CssNumericValue, CSSPerspective: W.CssPerspective, CSSCharsetRule: W.CssRule, CSSConditionRule: W.CssRule, CSSFontFaceRule: W.CssRule, CSSGroupingRule: W.CssRule, CSSImportRule: W.CssRule, CSSKeyframeRule: W.CssRule, MozCSSKeyframeRule: W.CssRule, WebKitCSSKeyframeRule: W.CssRule, CSSKeyframesRule: W.CssRule, MozCSSKeyframesRule: W.CssRule, WebKitCSSKeyframesRule: W.CssRule, CSSMediaRule: W.CssRule, CSSNamespaceRule: W.CssRule, CSSPageRule: W.CssRule, CSSRule: W.CssRule, CSSStyleRule: W.CssRule, CSSSupportsRule: W.CssRule, CSSViewportRule: W.CssRule, CSSStyleDeclaration: W.CssStyleDeclaration, MSStyleCSSProperties: W.CssStyleDeclaration, CSS2Properties: W.CssStyleDeclaration, CSSImageValue: W.CssStyleValue, CSSKeywordValue: W.CssStyleValue, CSSPositionValue: W.CssStyleValue, CSSResourceValue: W.CssStyleValue, CSSURLImageValue: W.CssStyleValue, CSSStyleValue: W.CssStyleValue, CSSMatrixComponent: W.CssTransformComponent, CSSRotation: W.CssTransformComponent, CSSScale: W.CssTransformComponent, CSSSkew: W.CssTransformComponent, CSSTranslation: W.CssTransformComponent, CSSTransformComponent: W.CssTransformComponent, CSSTransformValue: W.CssTransformValue, CSSUnparsedValue: W.CssUnparsedValue, DataTransferItemList: W.DataTransferItemList, HTMLDivElement: W.DivElement, XMLDocument: W.Document, Document: W.Document, DOMException: W.DomException, ClientRectList: W.DomRectList, DOMRectList: W.DomRectList, DOMRectReadOnly: W.DomRectReadOnly, DOMStringList: W.DomStringList, DOMTokenList: W.DomTokenList, Element: W.Element, DirectoryEntry: W.Entry, Entry: W.Entry, FileEntry: W.Entry, AbortPaymentEvent: W.Event, AnimationPlaybackEvent: W.Event, ApplicationCacheErrorEvent: W.Event, BackgroundFetchClickEvent: W.Event, BackgroundFetchEvent: W.Event, BackgroundFetchFailEvent: W.Event, BackgroundFetchedEvent: W.Event, BeforeInstallPromptEvent: W.Event, BeforeUnloadEvent: W.Event, BlobEvent: W.Event, CanMakePaymentEvent: W.Event, ClipboardEvent: W.Event, CloseEvent: W.Event, CustomEvent: W.Event, DeviceMotionEvent: W.Event, DeviceOrientationEvent: W.Event, ErrorEvent: W.Event, ExtendableEvent: W.Event, ExtendableMessageEvent: W.Event, FetchEvent: W.Event, FontFaceSetLoadEvent: W.Event, ForeignFetchEvent: W.Event, GamepadEvent: W.Event, HashChangeEvent: W.Event, InstallEvent: W.Event, MediaEncryptedEvent: W.Event, MediaKeyMessageEvent: W.Event, MediaQueryListEvent: W.Event, MediaStreamEvent: W.Event, MediaStreamTrackEvent: W.Event, MessageEvent: W.Event, MIDIConnectionEvent: W.Event, MIDIMessageEvent: W.Event, MutationEvent: W.Event, NotificationEvent: W.Event, PageTransitionEvent: W.Event, PaymentRequestEvent: W.Event, PaymentRequestUpdateEvent: W.Event, PopStateEvent: W.Event, PresentationConnectionAvailableEvent: W.Event, PresentationConnectionCloseEvent: W.Event, ProgressEvent: W.Event, PromiseRejectionEvent: W.Event, PushEvent: W.Event, RTCDataChannelEvent: W.Event, RTCDTMFToneChangeEvent: W.Event, RTCPeerConnectionIceEvent: W.Event, RTCTrackEvent: W.Event, SecurityPolicyViolationEvent: W.Event, SensorErrorEvent: W.Event, SpeechRecognitionError: W.Event, SpeechRecognitionEvent: W.Event, SpeechSynthesisEvent: W.Event, StorageEvent: W.Event, SyncEvent: W.Event, TrackEvent: W.Event, VRDeviceEvent: W.Event, VRDisplayEvent: W.Event, VRSessionEvent: W.Event, MojoInterfaceRequestEvent: W.Event, ResourceProgressEvent: W.Event, USBConnectionEvent: W.Event, AudioProcessingEvent: W.Event, OfflineAudioCompletionEvent: W.Event, WebGLContextEvent: W.Event, Event: W.Event, InputEvent: W.Event, AbsoluteOrientationSensor: W.EventTarget, Accelerometer: W.EventTarget, AmbientLightSensor: W.EventTarget, ApplicationCache: W.EventTarget, DOMApplicationCache: W.EventTarget, OfflineResourceList: W.EventTarget, BackgroundFetchRegistration: W.EventTarget, BatteryManager: W.EventTarget, BroadcastChannel: W.EventTarget, CanvasCaptureMediaStreamTrack: W.EventTarget, EventSource: W.EventTarget, FileReader: W.EventTarget, Gyroscope: W.EventTarget, XMLHttpRequest: W.EventTarget, XMLHttpRequestEventTarget: W.EventTarget, XMLHttpRequestUpload: W.EventTarget, LinearAccelerationSensor: W.EventTarget, Magnetometer: W.EventTarget, MediaDevices: W.EventTarget, MediaQueryList: W.EventTarget, MediaRecorder: W.EventTarget, MediaSource: W.EventTarget, MediaStream: W.EventTarget, MediaStreamTrack: W.EventTarget, MIDIAccess: W.EventTarget, MIDIInput: W.EventTarget, MIDIOutput: W.EventTarget, MIDIPort: W.EventTarget, NetworkInformation: W.EventTarget, Notification: W.EventTarget, OffscreenCanvas: W.EventTarget, OrientationSensor: W.EventTarget, PaymentRequest: W.EventTarget, Performance: W.EventTarget, PermissionStatus: W.EventTarget, PresentationAvailability: W.EventTarget, PresentationConnection: W.EventTarget, PresentationConnectionList: W.EventTarget, PresentationRequest: W.EventTarget, RelativeOrientationSensor: W.EventTarget, RemotePlayback: W.EventTarget, RTCDataChannel: W.EventTarget, DataChannel: W.EventTarget, RTCDTMFSender: W.EventTarget, RTCPeerConnection: W.EventTarget, webkitRTCPeerConnection: W.EventTarget, mozRTCPeerConnection: W.EventTarget, ScreenOrientation: W.EventTarget, Sensor: W.EventTarget, ServiceWorker: W.EventTarget, ServiceWorkerContainer: W.EventTarget, ServiceWorkerRegistration: W.EventTarget, SharedWorker: W.EventTarget, SpeechRecognition: W.EventTarget, SpeechSynthesis: W.EventTarget, SpeechSynthesisUtterance: W.EventTarget, VR: W.EventTarget, VRDevice: W.EventTarget, VRDisplay: W.EventTarget, VRSession: W.EventTarget, VisualViewport: W.EventTarget, WebSocket: W.EventTarget, Worker: W.EventTarget, WorkerPerformance: W.EventTarget, BluetoothDevice: W.EventTarget, BluetoothRemoteGATTCharacteristic: W.EventTarget, Clipboard: W.EventTarget, MojoInterfaceInterceptor: W.EventTarget, USB: W.EventTarget, IDBDatabase: W.EventTarget, IDBTransaction: W.EventTarget, AnalyserNode: W.EventTarget, RealtimeAnalyserNode: W.EventTarget, AudioBufferSourceNode: W.EventTarget, AudioDestinationNode: W.EventTarget, AudioNode: W.EventTarget, AudioScheduledSourceNode: W.EventTarget, AudioWorkletNode: W.EventTarget, BiquadFilterNode: W.EventTarget, ChannelMergerNode: W.EventTarget, AudioChannelMerger: W.EventTarget, ChannelSplitterNode: W.EventTarget, AudioChannelSplitter: W.EventTarget, ConstantSourceNode: W.EventTarget, ConvolverNode: W.EventTarget, DelayNode: W.EventTarget, DynamicsCompressorNode: W.EventTarget, GainNode: W.EventTarget, AudioGainNode: W.EventTarget, IIRFilterNode: W.EventTarget, MediaElementAudioSourceNode: W.EventTarget, MediaStreamAudioDestinationNode: W.EventTarget, MediaStreamAudioSourceNode: W.EventTarget, OscillatorNode: W.EventTarget, Oscillator: W.EventTarget, PannerNode: W.EventTarget, AudioPannerNode: W.EventTarget, webkitAudioPannerNode: W.EventTarget, ScriptProcessorNode: W.EventTarget, JavaScriptAudioNode: W.EventTarget, StereoPannerNode: W.EventTarget, WaveShaperNode: W.EventTarget, EventTarget: W.EventTarget, File: W.File, FileList: W.FileList, FileWriter: W.FileWriter, FocusEvent: W.FocusEvent, FontFace: W.FontFace, FontFaceSet: W.FontFaceSet, HTMLFormElement: W.FormElement, Gamepad: W.Gamepad, HTMLHeadElement: W.HeadElement, History: W.History, HTMLCollection: W.HtmlCollection, HTMLFormControlsCollection: W.HtmlCollection, HTMLOptionsCollection: W.HtmlCollection, HTMLDocument: W.HtmlDocument, ImageData: W.ImageData, HTMLInputElement: W.InputElement, KeyboardEvent: W.KeyboardEvent, Location: W.Location, MediaKeySession: W.MediaKeySession, MediaList: W.MediaList, MessagePort: W.MessagePort, MIDIInputMap: W.MidiInputMap, MIDIOutputMap: W.MidiOutputMap, MimeType: W.MimeType, MimeTypeArray: W.MimeTypeArray, MouseEvent: W.MouseEvent, DragEvent: W.MouseEvent, PointerEvent: W.MouseEvent, WheelEvent: W.MouseEvent, DocumentFragment: W.Node, ShadowRoot: W.Node, DocumentType: W.Node, Node: W.Node, NodeList: W.NodeList, RadioNodeList: W.NodeList, Plugin: W.Plugin, PluginArray: W.PluginArray, RTCStatsReport: W.RtcStatsReport, HTMLSelectElement: W.SelectElement, SourceBuffer: W.SourceBuffer, SourceBufferList: W.SourceBufferList, HTMLSpanElement: W.SpanElement, SpeechGrammar: W.SpeechGrammar, SpeechGrammarList: W.SpeechGrammarList, SpeechRecognitionResult: W.SpeechRecognitionResult, Storage: W.Storage, CSSStyleSheet: W.StyleSheet, StyleSheet: W.StyleSheet, HTMLTableElement: W.TableElement, HTMLTemplateElement: W.TemplateElement, CDATASection: W.Text, Text: W.Text, HTMLTextAreaElement: W.TextAreaElement, TextTrack: W.TextTrack, TextTrackCue: W.TextTrackCue, VTTCue: W.TextTrackCue, TextTrackCueList: W.TextTrackCueList, TextTrackList: W.TextTrackList, TimeRanges: W.TimeRanges, Touch: W.Touch, TouchList: W.TouchList, TrackDefaultList: W.TrackDefaultList, TransitionEvent: W.TransitionEvent, WebKitTransitionEvent: W.TransitionEvent, CompositionEvent: W.UIEvent, TextEvent: W.UIEvent, TouchEvent: W.UIEvent, UIEvent: W.UIEvent, URL: W.Url, VideoTrackList: W.VideoTrackList, Window: W.Window, DOMWindow: W.Window, DedicatedWorkerGlobalScope: W.WorkerGlobalScope, ServiceWorkerGlobalScope: W.WorkerGlobalScope, SharedWorkerGlobalScope: W.WorkerGlobalScope, WorkerGlobalScope: W.WorkerGlobalScope, Attr: W._Attr, CSSRuleList: W._CssRuleList, ClientRect: W._DomRect, DOMRect: W._DomRect, GamepadList: W._GamepadList, NamedNodeMap: W._NamedNodeMap, MozNamedAttrMap: W._NamedNodeMap, SpeechRecognitionResultList: W._SpeechRecognitionResultList, StyleSheetList: W._StyleSheetList, IDBKeyRange: P.KeyRange, IDBObjectStore: P.ObjectStore, IDBOpenDBRequest: P.OpenDBRequest, IDBVersionChangeRequest: P.OpenDBRequest, IDBRequest: P.Request, IDBVersionChangeEvent: P.VersionChangeEvent, SVGLength: P.Length, SVGLengthList: P.LengthList, SVGNumber: P.Number, SVGNumberList: P.NumberList, SVGPointList: P.PointList, SVGStringList: P.StringList, SVGAElement: P.SvgElement, SVGAnimateElement: P.SvgElement, SVGAnimateMotionElement: P.SvgElement, SVGAnimateTransformElement: P.SvgElement, SVGAnimationElement: P.SvgElement, SVGCircleElement: P.SvgElement, SVGClipPathElement: P.SvgElement, SVGDefsElement: P.SvgElement, SVGDescElement: P.SvgElement, SVGDiscardElement: P.SvgElement, SVGEllipseElement: P.SvgElement, SVGFEBlendElement: P.SvgElement, SVGFEColorMatrixElement: P.SvgElement, SVGFEComponentTransferElement: P.SvgElement, SVGFECompositeElement: P.SvgElement, SVGFEConvolveMatrixElement: P.SvgElement, SVGFEDiffuseLightingElement: P.SvgElement, SVGFEDisplacementMapElement: P.SvgElement, SVGFEDistantLightElement: P.SvgElement, SVGFEFloodElement: P.SvgElement, SVGFEFuncAElement: P.SvgElement, SVGFEFuncBElement: P.SvgElement, SVGFEFuncGElement: P.SvgElement, SVGFEFuncRElement: P.SvgElement, SVGFEGaussianBlurElement: P.SvgElement, SVGFEImageElement: P.SvgElement, SVGFEMergeElement: P.SvgElement, SVGFEMergeNodeElement: P.SvgElement, SVGFEMorphologyElement: P.SvgElement, SVGFEOffsetElement: P.SvgElement, SVGFEPointLightElement: P.SvgElement, SVGFESpecularLightingElement: P.SvgElement, SVGFESpotLightElement: P.SvgElement, SVGFETileElement: P.SvgElement, SVGFETurbulenceElement: P.SvgElement, SVGFilterElement: P.SvgElement, SVGForeignObjectElement: P.SvgElement, SVGGElement: P.SvgElement, SVGGeometryElement: P.SvgElement, SVGGraphicsElement: P.SvgElement, SVGImageElement: P.SvgElement, SVGLineElement: P.SvgElement, SVGLinearGradientElement: P.SvgElement, SVGMarkerElement: P.SvgElement, SVGMaskElement: P.SvgElement, SVGMetadataElement: P.SvgElement, SVGPathElement: P.SvgElement, SVGPatternElement: P.SvgElement, SVGPolygonElement: P.SvgElement, SVGPolylineElement: P.SvgElement, SVGRadialGradientElement: P.SvgElement, SVGRectElement: P.SvgElement, SVGScriptElement: P.SvgElement, SVGSetElement: P.SvgElement, SVGStopElement: P.SvgElement, SVGStyleElement: P.SvgElement, SVGElement: P.SvgElement, SVGSVGElement: P.SvgElement, SVGSwitchElement: P.SvgElement, SVGSymbolElement: P.SvgElement, SVGTSpanElement: P.SvgElement, SVGTextContentElement: P.SvgElement, SVGTextElement: P.SvgElement, SVGTextPathElement: P.SvgElement, SVGTextPositioningElement: P.SvgElement, SVGTitleElement: P.SvgElement, SVGUseElement: P.SvgElement, SVGViewElement: P.SvgElement, SVGGradientElement: P.SvgElement, SVGComponentTransferFunctionElement: P.SvgElement, SVGFEDropShadowElement: P.SvgElement, SVGMPathElement: P.SvgElement, SVGTransform: P.Transform, SVGTransformList: P.TransformList, AudioBuffer: P.AudioBuffer, AudioParamMap: P.AudioParamMap, AudioTrackList: P.AudioTrackList, AudioContext: P.BaseAudioContext, webkitAudioContext: P.BaseAudioContext, BaseAudioContext: P.BaseAudioContext, OfflineAudioContext: P.OfflineAudioContext, SQLResultSetRowList: P.SqlResultSetRowList});
    hunkHelpers.setOrUpdateLeafTags({AnimationEffectReadOnly: true, AnimationEffectTiming: true, AnimationEffectTimingReadOnly: true, AnimationTimeline: true, AnimationWorkletGlobalScope: true, AuthenticatorAssertionResponse: true, AuthenticatorAttestationResponse: true, AuthenticatorResponse: true, BackgroundFetchFetch: true, BackgroundFetchManager: true, BackgroundFetchSettledFetch: true, BarProp: true, BarcodeDetector: true, BluetoothRemoteGATTDescriptor: true, Body: true, BudgetState: true, CacheStorage: true, CanvasGradient: true, CanvasPattern: true, CanvasRenderingContext2D: true, Client: true, Clients: true, CookieStore: true, Coordinates: true, Credential: true, CredentialUserData: true, CredentialsContainer: true, Crypto: true, CryptoKey: true, CSS: true, CSSVariableReferenceValue: true, CustomElementRegistry: true, DataTransfer: true, DataTransferItem: true, DeprecatedStorageInfo: true, DeprecatedStorageQuota: true, DeprecationReport: true, DetectedBarcode: true, DetectedFace: true, DetectedText: true, DeviceAcceleration: true, DeviceRotationRate: true, DirectoryReader: true, DocumentOrShadowRoot: true, DocumentTimeline: true, DOMError: true, DOMImplementation: true, Iterator: true, DOMMatrix: true, DOMMatrixReadOnly: true, DOMParser: true, DOMPoint: true, DOMPointReadOnly: true, DOMQuad: true, DOMStringMap: true, External: true, FaceDetector: true, FederatedCredential: true, DOMFileSystem: true, FontFaceSource: true, FormData: true, GamepadButton: true, GamepadPose: true, Geolocation: true, Position: true, Headers: true, HTMLHyperlinkElementUtils: true, IdleDeadline: true, ImageBitmap: true, ImageBitmapRenderingContext: true, ImageCapture: true, InputDeviceCapabilities: true, IntersectionObserver: true, IntersectionObserverEntry: true, InterventionReport: true, KeyframeEffect: true, KeyframeEffectReadOnly: true, MediaCapabilities: true, MediaCapabilitiesInfo: true, MediaDeviceInfo: true, MediaError: true, MediaKeyStatusMap: true, MediaKeySystemAccess: true, MediaKeys: true, MediaKeysPolicy: true, MediaMetadata: true, MediaSession: true, MediaSettingsRange: true, MemoryInfo: true, MessageChannel: true, Metadata: true, MutationObserver: true, WebKitMutationObserver: true, MutationRecord: true, NavigationPreloadManager: true, Navigator: true, NavigatorAutomationInformation: true, NavigatorConcurrentHardware: true, NavigatorCookies: true, NavigatorUserMediaError: true, NodeFilter: true, NodeIterator: true, NonDocumentTypeChildNode: true, NonElementParentNode: true, NoncedElement: true, OffscreenCanvasRenderingContext2D: true, OverconstrainedError: true, PaintRenderingContext2D: true, PaintSize: true, PaintWorkletGlobalScope: true, PasswordCredential: true, Path2D: true, PaymentAddress: true, PaymentInstruments: true, PaymentManager: true, PaymentResponse: true, PerformanceEntry: true, PerformanceLongTaskTiming: true, PerformanceMark: true, PerformanceMeasure: true, PerformanceNavigation: true, PerformanceNavigationTiming: true, PerformanceObserver: true, PerformanceObserverEntryList: true, PerformancePaintTiming: true, PerformanceResourceTiming: true, PerformanceServerTiming: true, PerformanceTiming: true, Permissions: true, PhotoCapabilities: true, PositionError: true, Presentation: true, PresentationReceiver: true, PublicKeyCredential: true, PushManager: true, PushMessageData: true, PushSubscription: true, PushSubscriptionOptions: true, Range: true, RelatedApplication: true, ReportBody: true, ReportingObserver: true, ResizeObserver: true, ResizeObserverEntry: true, RTCCertificate: true, RTCIceCandidate: true, mozRTCIceCandidate: true, RTCLegacyStatsReport: true, RTCRtpContributingSource: true, RTCRtpReceiver: true, RTCRtpSender: true, RTCSessionDescription: true, mozRTCSessionDescription: true, RTCStatsResponse: true, Screen: true, ScrollState: true, ScrollTimeline: true, Selection: true, SharedArrayBuffer: true, SpeechRecognitionAlternative: true, SpeechSynthesisVoice: true, StaticRange: true, StorageManager: true, StyleMedia: true, StylePropertyMap: true, StylePropertyMapReadonly: true, SyncManager: true, TaskAttributionTiming: true, TextDetector: true, TextMetrics: true, TrackDefault: true, TreeWalker: true, TrustedHTML: true, TrustedScriptURL: true, TrustedURL: true, UnderlyingSourceBase: true, URLSearchParams: true, VRCoordinateSystem: true, VRDisplayCapabilities: true, VREyeParameters: true, VRFrameData: true, VRFrameOfReference: true, VRPose: true, VRStageBounds: true, VRStageBoundsPoint: true, VRStageParameters: true, ValidityState: true, VideoPlaybackQuality: true, VideoTrack: true, VTTRegion: true, WindowClient: true, WorkletAnimation: true, WorkletGlobalScope: true, XPathEvaluator: true, XPathExpression: true, XPathNSResolver: true, XPathResult: true, XMLSerializer: true, XSLTProcessor: true, Bluetooth: true, BluetoothCharacteristicProperties: true, BluetoothRemoteGATTServer: true, BluetoothRemoteGATTService: true, BluetoothUUID: true, BudgetService: true, Cache: true, DOMFileSystemSync: true, DirectoryEntrySync: true, DirectoryReaderSync: true, EntrySync: true, FileEntrySync: true, FileReaderSync: true, FileWriterSync: true, HTMLAllCollection: true, Mojo: true, MojoHandle: true, MojoWatcher: true, NFC: true, PagePopupController: true, Report: true, Request: true, Response: true, SubtleCrypto: true, USBAlternateInterface: true, USBConfiguration: true, USBDevice: true, USBEndpoint: true, USBInTransferResult: true, USBInterface: true, USBIsochronousInTransferPacket: true, USBIsochronousInTransferResult: true, USBIsochronousOutTransferPacket: true, USBIsochronousOutTransferResult: true, USBOutTransferResult: true, WorkerLocation: true, WorkerNavigator: true, Worklet: true, IDBCursor: true, IDBCursorWithValue: true, IDBFactory: true, IDBIndex: true, IDBObservation: true, IDBObserver: true, IDBObserverChanges: true, SVGAngle: true, SVGAnimatedAngle: true, SVGAnimatedBoolean: true, SVGAnimatedEnumeration: true, SVGAnimatedInteger: true, SVGAnimatedLength: true, SVGAnimatedLengthList: true, SVGAnimatedNumber: true, SVGAnimatedNumberList: true, SVGAnimatedPreserveAspectRatio: true, SVGAnimatedRect: true, SVGAnimatedString: true, SVGAnimatedTransformList: true, SVGMatrix: true, SVGPoint: true, SVGPreserveAspectRatio: true, SVGRect: true, SVGUnitTypes: true, AudioListener: true, AudioParam: true, AudioTrack: true, AudioWorkletGlobalScope: true, AudioWorkletProcessor: true, PeriodicWave: true, WebGLActiveInfo: true, ANGLEInstancedArrays: true, ANGLE_instanced_arrays: true, WebGLBuffer: true, WebGLCanvas: true, WebGLColorBufferFloat: true, WebGLCompressedTextureASTC: true, WebGLCompressedTextureATC: true, WEBGL_compressed_texture_atc: true, WebGLCompressedTextureETC1: true, WEBGL_compressed_texture_etc1: true, WebGLCompressedTextureETC: true, WebGLCompressedTexturePVRTC: true, WEBGL_compressed_texture_pvrtc: true, WebGLCompressedTextureS3TC: true, WEBGL_compressed_texture_s3tc: true, WebGLCompressedTextureS3TCsRGB: true, WebGLDebugRendererInfo: true, WEBGL_debug_renderer_info: true, WebGLDebugShaders: true, WEBGL_debug_shaders: true, WebGLDepthTexture: true, WEBGL_depth_texture: true, WebGLDrawBuffers: true, WEBGL_draw_buffers: true, EXTsRGB: true, EXT_sRGB: true, EXTBlendMinMax: true, EXT_blend_minmax: true, EXTColorBufferFloat: true, EXTColorBufferHalfFloat: true, EXTDisjointTimerQuery: true, EXTDisjointTimerQueryWebGL2: true, EXTFragDepth: true, EXT_frag_depth: true, EXTShaderTextureLOD: true, EXT_shader_texture_lod: true, EXTTextureFilterAnisotropic: true, EXT_texture_filter_anisotropic: true, WebGLFramebuffer: true, WebGLGetBufferSubDataAsync: true, WebGLLoseContext: true, WebGLExtensionLoseContext: true, WEBGL_lose_context: true, OESElementIndexUint: true, OES_element_index_uint: true, OESStandardDerivatives: true, OES_standard_derivatives: true, OESTextureFloat: true, OES_texture_float: true, OESTextureFloatLinear: true, OES_texture_float_linear: true, OESTextureHalfFloat: true, OES_texture_half_float: true, OESTextureHalfFloatLinear: true, OES_texture_half_float_linear: true, OESVertexArrayObject: true, OES_vertex_array_object: true, WebGLProgram: true, WebGLQuery: true, WebGLRenderbuffer: true, WebGLRenderingContext: true, WebGL2RenderingContext: true, WebGLSampler: true, WebGLShader: true, WebGLShaderPrecisionFormat: true, WebGLSync: true, WebGLTexture: true, WebGLTimerQueryEXT: true, WebGLTransformFeedback: true, WebGLUniformLocation: true, WebGLVertexArrayObject: true, WebGLVertexArrayObjectOES: true, WebGL: true, WebGL2RenderingContextBase: true, Database: true, SQLError: true, SQLResultSet: true, SQLTransaction: true, ArrayBuffer: true, DataView: true, ArrayBufferView: false, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLButtonElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLEmbedElement: true, HTMLFieldSetElement: true, HTMLHRElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLImageElement: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLOutputElement: true, HTMLParagraphElement: true, HTMLParamElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLScriptElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLStyleElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, AccessibleNode: true, AccessibleNodeList: true, HTMLAnchorElement: true, Animation: true, AnimationEvent: true, HTMLAreaElement: true, HTMLBaseElement: true, Blob: false, HTMLBodyElement: true, ProcessingInstruction: true, CharacterData: false, Comment: true, CSSNumericValue: true, CSSUnitValue: true, CSSPerspective: true, CSSCharsetRule: true, CSSConditionRule: true, CSSFontFaceRule: true, CSSGroupingRule: true, CSSImportRule: true, CSSKeyframeRule: true, MozCSSKeyframeRule: true, WebKitCSSKeyframeRule: true, CSSKeyframesRule: true, MozCSSKeyframesRule: true, WebKitCSSKeyframesRule: true, CSSMediaRule: true, CSSNamespaceRule: true, CSSPageRule: true, CSSRule: true, CSSStyleRule: true, CSSSupportsRule: true, CSSViewportRule: true, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, CSSImageValue: true, CSSKeywordValue: true, CSSPositionValue: true, CSSResourceValue: true, CSSURLImageValue: true, CSSStyleValue: false, CSSMatrixComponent: true, CSSRotation: true, CSSScale: true, CSSSkew: true, CSSTranslation: true, CSSTransformComponent: false, CSSTransformValue: true, CSSUnparsedValue: true, DataTransferItemList: true, HTMLDivElement: true, XMLDocument: true, Document: false, DOMException: true, ClientRectList: true, DOMRectList: true, DOMRectReadOnly: false, DOMStringList: true, DOMTokenList: true, Element: false, DirectoryEntry: true, Entry: true, FileEntry: true, AbortPaymentEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MessageEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, ProgressEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, SyncEvent: true, TrackEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, MojoInterfaceRequestEvent: true, ResourceProgressEvent: true, USBConnectionEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, AbsoluteOrientationSensor: true, Accelerometer: true, AmbientLightSensor: true, ApplicationCache: true, DOMApplicationCache: true, OfflineResourceList: true, BackgroundFetchRegistration: true, BatteryManager: true, BroadcastChannel: true, CanvasCaptureMediaStreamTrack: true, EventSource: true, FileReader: true, Gyroscope: true, XMLHttpRequest: true, XMLHttpRequestEventTarget: true, XMLHttpRequestUpload: true, LinearAccelerationSensor: true, Magnetometer: true, MediaDevices: true, MediaQueryList: true, MediaRecorder: true, MediaSource: true, MediaStream: true, MediaStreamTrack: true, MIDIAccess: true, MIDIInput: true, MIDIOutput: true, MIDIPort: true, NetworkInformation: true, Notification: true, OffscreenCanvas: true, OrientationSensor: true, PaymentRequest: true, Performance: true, PermissionStatus: true, PresentationAvailability: true, PresentationConnection: true, PresentationConnectionList: true, PresentationRequest: true, RelativeOrientationSensor: true, RemotePlayback: true, RTCDataChannel: true, DataChannel: true, RTCDTMFSender: true, RTCPeerConnection: true, webkitRTCPeerConnection: true, mozRTCPeerConnection: true, ScreenOrientation: true, Sensor: true, ServiceWorker: true, ServiceWorkerContainer: true, ServiceWorkerRegistration: true, SharedWorker: true, SpeechRecognition: true, SpeechSynthesis: true, SpeechSynthesisUtterance: true, VR: true, VRDevice: true, VRDisplay: true, VRSession: true, VisualViewport: true, WebSocket: true, Worker: true, WorkerPerformance: true, BluetoothDevice: true, BluetoothRemoteGATTCharacteristic: true, Clipboard: true, MojoInterfaceInterceptor: true, USB: true, IDBDatabase: true, IDBTransaction: true, AnalyserNode: true, RealtimeAnalyserNode: true, AudioBufferSourceNode: true, AudioDestinationNode: true, AudioNode: true, AudioScheduledSourceNode: true, AudioWorkletNode: true, BiquadFilterNode: true, ChannelMergerNode: true, AudioChannelMerger: true, ChannelSplitterNode: true, AudioChannelSplitter: true, ConstantSourceNode: true, ConvolverNode: true, DelayNode: true, DynamicsCompressorNode: true, GainNode: true, AudioGainNode: true, IIRFilterNode: true, MediaElementAudioSourceNode: true, MediaStreamAudioDestinationNode: true, MediaStreamAudioSourceNode: true, OscillatorNode: true, Oscillator: true, PannerNode: true, AudioPannerNode: true, webkitAudioPannerNode: true, ScriptProcessorNode: true, JavaScriptAudioNode: true, StereoPannerNode: true, WaveShaperNode: true, EventTarget: false, File: true, FileList: true, FileWriter: true, FocusEvent: true, FontFace: true, FontFaceSet: true, HTMLFormElement: true, Gamepad: true, HTMLHeadElement: true, History: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, HTMLDocument: true, ImageData: true, HTMLInputElement: true, KeyboardEvent: true, Location: true, MediaKeySession: true, MediaList: true, MessagePort: true, MIDIInputMap: true, MIDIOutputMap: true, MimeType: true, MimeTypeArray: true, MouseEvent: true, DragEvent: true, PointerEvent: true, WheelEvent: true, DocumentFragment: true, ShadowRoot: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, Plugin: true, PluginArray: true, RTCStatsReport: true, HTMLSelectElement: true, SourceBuffer: true, SourceBufferList: true, HTMLSpanElement: true, SpeechGrammar: true, SpeechGrammarList: true, SpeechRecognitionResult: true, Storage: true, CSSStyleSheet: true, StyleSheet: true, HTMLTableElement: true, HTMLTemplateElement: true, CDATASection: true, Text: true, HTMLTextAreaElement: true, TextTrack: true, TextTrackCue: true, VTTCue: true, TextTrackCueList: true, TextTrackList: true, TimeRanges: true, Touch: true, TouchList: true, TrackDefaultList: true, TransitionEvent: true, WebKitTransitionEvent: true, CompositionEvent: true, TextEvent: true, TouchEvent: true, UIEvent: false, URL: true, VideoTrackList: true, Window: true, DOMWindow: true, DedicatedWorkerGlobalScope: true, ServiceWorkerGlobalScope: true, SharedWorkerGlobalScope: true, WorkerGlobalScope: true, Attr: true, CSSRuleList: true, ClientRect: true, DOMRect: true, GamepadList: true, NamedNodeMap: true, MozNamedAttrMap: true, SpeechRecognitionResultList: true, StyleSheetList: true, IDBKeyRange: true, IDBObjectStore: true, IDBOpenDBRequest: true, IDBVersionChangeRequest: true, IDBRequest: false, IDBVersionChangeEvent: true, SVGLength: true, SVGLengthList: true, SVGNumber: true, SVGNumberList: true, SVGPointList: true, SVGStringList: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGScriptElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, SVGTransform: true, SVGTransformList: true, AudioBuffer: true, AudioParamMap: true, AudioTrackList: true, AudioContext: true, webkitAudioContext: true, BaseAudioContext: false, OfflineAudioContext: true, SQLResultSetRowList: true});
    H.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
    W._SourceBufferList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
    W._TextTrackList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
  })();
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$3$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$2$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$3$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$2$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$5 = function(a, b, c, d, e) {
    return this(a, b, c, d, e);
  };
  Function.prototype.call$3$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$2$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$3$6 = function(a, b, c, d, e, f) {
    return this(a, b, c, d, e, f);
  };
  Function.prototype.call$2$5 = function(a, b, c, d, e) {
    return this(a, b, c, d, e);
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != 'undefined') {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(F.main, []);
    else
      F.main([]);
  });
})();

//# sourceMappingURL=main.dart.js.map
